'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dsListadoCarteraPrestamoXTipoGarantia
    Inherits DataSet
    
    Private tablePRPrestamos As PRPrestamosDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PRPrestamos")) Is Nothing) Then
                Me.Tables.Add(New PRPrestamosDataTable(ds.Tables("PRPrestamos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRPrestamos As PRPrestamosDataTable
        Get
            Return Me.tablePRPrestamos
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dsListadoCarteraPrestamoXTipoGarantia = CType(MyBase.Clone,dsListadoCarteraPrestamoXTipoGarantia)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("PRPrestamos")) Is Nothing) Then
            Me.Tables.Add(New PRPrestamosDataTable(ds.Tables("PRPrestamos")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tablePRPrestamos = CType(Me.Tables("PRPrestamos"),PRPrestamosDataTable)
        If (Not (Me.tablePRPrestamos) Is Nothing) Then
            Me.tablePRPrestamos.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dsListadoCarteraPrestamoXTipoGarantia"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsListadoCarteraPrestamoXTipoGarantia.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tablePRPrestamos = New PRPrestamosDataTable
        Me.Tables.Add(Me.tablePRPrestamos)
    End Sub
    
    Private Function ShouldSerializePRPrestamos() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub PRPrestamosRowChangeEventHandler(ByVal sender As Object, ByVal e As PRPrestamosRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRPrestamosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnNoSocio As DataColumn
        
        Private columnDUI As DataColumn
        
        Private columnNombres As DataColumn
        
        Private columnApellido1 As DataColumn
        
        Private columnApellido2 As DataColumn
        
        Private columnApellidoCas As DataColumn
        
        Private columnCategoria As DataColumn
        
        Private columnCodPrestamo As DataColumn
        
        Private columnMonto As DataColumn
        
        Private columnSaldoCapital As DataColumn
        
        Private columnFechaOtorgamiento As DataColumn
        
        Private columnFechaVencimiento As DataColumn
        
        Private columnFechaUltimoPago As DataColumn
        
        Private columnTasaInteres As DataColumn
        
        Private columnPorcentajeRiesgo As DataColumn
        
        Private columnValorReserva As DataColumn
        
        Private columnDescTipoCredito As DataColumn
        
        Private columnCodTipoCredito As DataColumn
        
        Private columnDescCodGarantia As DataColumn
        
        Private columnCodTipoGarantia As DataColumn
        
        Private columnDescCodTipoGarantia As DataColumn
        
        Private columnCuota As DataColumn
        
        Private columnMonto_Garantia As DataColumn
        
        Friend Sub New()
            MyBase.New("PRPrestamos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property NoSocioColumn As DataColumn
            Get
                Return Me.columnNoSocio
            End Get
        End Property
        
        Friend ReadOnly Property DUIColumn As DataColumn
            Get
                Return Me.columnDUI
            End Get
        End Property
        
        Friend ReadOnly Property NombresColumn As DataColumn
            Get
                Return Me.columnNombres
            End Get
        End Property
        
        Friend ReadOnly Property Apellido1Column As DataColumn
            Get
                Return Me.columnApellido1
            End Get
        End Property
        
        Friend ReadOnly Property Apellido2Column As DataColumn
            Get
                Return Me.columnApellido2
            End Get
        End Property
        
        Friend ReadOnly Property ApellidoCasColumn As DataColumn
            Get
                Return Me.columnApellidoCas
            End Get
        End Property
        
        Friend ReadOnly Property CategoriaColumn As DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        Friend ReadOnly Property CodPrestamoColumn As DataColumn
            Get
                Return Me.columnCodPrestamo
            End Get
        End Property
        
        Friend ReadOnly Property MontoColumn As DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        Friend ReadOnly Property SaldoCapitalColumn As DataColumn
            Get
                Return Me.columnSaldoCapital
            End Get
        End Property
        
        Friend ReadOnly Property FechaOtorgamientoColumn As DataColumn
            Get
                Return Me.columnFechaOtorgamiento
            End Get
        End Property
        
        Friend ReadOnly Property FechaVencimientoColumn As DataColumn
            Get
                Return Me.columnFechaVencimiento
            End Get
        End Property
        
        Friend ReadOnly Property FechaUltimoPagoColumn As DataColumn
            Get
                Return Me.columnFechaUltimoPago
            End Get
        End Property
        
        Friend ReadOnly Property TasaInteresColumn As DataColumn
            Get
                Return Me.columnTasaInteres
            End Get
        End Property
        
        Friend ReadOnly Property PorcentajeRiesgoColumn As DataColumn
            Get
                Return Me.columnPorcentajeRiesgo
            End Get
        End Property
        
        Friend ReadOnly Property ValorReservaColumn As DataColumn
            Get
                Return Me.columnValorReserva
            End Get
        End Property
        
        Friend ReadOnly Property DescTipoCreditoColumn As DataColumn
            Get
                Return Me.columnDescTipoCredito
            End Get
        End Property
        
        Friend ReadOnly Property CodTipoCreditoColumn As DataColumn
            Get
                Return Me.columnCodTipoCredito
            End Get
        End Property
        
        Friend ReadOnly Property DescCodGarantiaColumn As DataColumn
            Get
                Return Me.columnDescCodGarantia
            End Get
        End Property
        
        Friend ReadOnly Property CodTipoGarantiaColumn As DataColumn
            Get
                Return Me.columnCodTipoGarantia
            End Get
        End Property
        
        Friend ReadOnly Property DescCodTipoGarantiaColumn As DataColumn
            Get
                Return Me.columnDescCodTipoGarantia
            End Get
        End Property
        
        Friend ReadOnly Property CuotaColumn As DataColumn
            Get
                Return Me.columnCuota
            End Get
        End Property
        
        Friend ReadOnly Property Monto_GarantiaColumn As DataColumn
            Get
                Return Me.columnMonto_Garantia
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRPrestamosRow
            Get
                Return CType(Me.Rows(index),PRPrestamosRow)
            End Get
        End Property
        
        Public Event PRPrestamosRowChanged As PRPrestamosRowChangeEventHandler
        
        Public Event PRPrestamosRowChanging As PRPrestamosRowChangeEventHandler
        
        Public Event PRPrestamosRowDeleted As PRPrestamosRowChangeEventHandler
        
        Public Event PRPrestamosRowDeleting As PRPrestamosRowChangeEventHandler
        
        Public Overloads Sub AddPRPrestamosRow(ByVal row As PRPrestamosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddPRPrestamosRow( _
                    ByVal NoSocio As String,  _
                    ByVal DUI As String,  _
                    ByVal Nombres As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Categoria As String,  _
                    ByVal CodPrestamo As String,  _
                    ByVal Monto As String,  _
                    ByVal SaldoCapital As Double,  _
                    ByVal FechaOtorgamiento As Date,  _
                    ByVal FechaVencimiento As Date,  _
                    ByVal FechaUltimoPago As Date,  _
                    ByVal TasaInteres As Double,  _
                    ByVal PorcentajeRiesgo As Double,  _
                    ByVal ValorReserva As Double,  _
                    ByVal DescTipoCredito As String,  _
                    ByVal CodTipoCredito As String,  _
                    ByVal DescCodGarantia As String,  _
                    ByVal CodTipoGarantia As String,  _
                    ByVal DescCodTipoGarantia As String,  _
                    ByVal Cuota As Single,  _
                    ByVal Monto_Garantia As Single) As PRPrestamosRow
            Dim rowPRPrestamosRow As PRPrestamosRow = CType(Me.NewRow,PRPrestamosRow)
            rowPRPrestamosRow.ItemArray = New Object() {NoSocio, DUI, Nombres, Apellido1, Apellido2, ApellidoCas, Categoria, CodPrestamo, Monto, SaldoCapital, FechaOtorgamiento, FechaVencimiento, FechaUltimoPago, TasaInteres, PorcentajeRiesgo, ValorReserva, DescTipoCredito, CodTipoCredito, DescCodGarantia, CodTipoGarantia, DescCodTipoGarantia, Cuota, Monto_Garantia}
            Me.Rows.Add(rowPRPrestamosRow)
            Return rowPRPrestamosRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As PRPrestamosDataTable = CType(MyBase.Clone,PRPrestamosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New PRPrestamosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnNoSocio = Me.Columns("NoSocio")
            Me.columnDUI = Me.Columns("DUI")
            Me.columnNombres = Me.Columns("Nombres")
            Me.columnApellido1 = Me.Columns("Apellido1")
            Me.columnApellido2 = Me.Columns("Apellido2")
            Me.columnApellidoCas = Me.Columns("ApellidoCas")
            Me.columnCategoria = Me.Columns("Categoria")
            Me.columnCodPrestamo = Me.Columns("CodPrestamo")
            Me.columnMonto = Me.Columns("Monto")
            Me.columnSaldoCapital = Me.Columns("SaldoCapital")
            Me.columnFechaOtorgamiento = Me.Columns("FechaOtorgamiento")
            Me.columnFechaVencimiento = Me.Columns("FechaVencimiento")
            Me.columnFechaUltimoPago = Me.Columns("FechaUltimoPago")
            Me.columnTasaInteres = Me.Columns("TasaInteres")
            Me.columnPorcentajeRiesgo = Me.Columns("PorcentajeRiesgo")
            Me.columnValorReserva = Me.Columns("ValorReserva")
            Me.columnDescTipoCredito = Me.Columns("DescTipoCredito")
            Me.columnCodTipoCredito = Me.Columns("CodTipoCredito")
            Me.columnDescCodGarantia = Me.Columns("DescCodGarantia")
            Me.columnCodTipoGarantia = Me.Columns("CodTipoGarantia")
            Me.columnDescCodTipoGarantia = Me.Columns("DescCodTipoGarantia")
            Me.columnCuota = Me.Columns("Cuota")
            Me.columnMonto_Garantia = Me.Columns("Monto_Garantia")
        End Sub
        
        Private Sub InitClass()
            Me.columnNoSocio = New DataColumn("NoSocio", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNoSocio)
            Me.columnDUI = New DataColumn("DUI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDUI)
            Me.columnNombres = New DataColumn("Nombres", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNombres)
            Me.columnApellido1 = New DataColumn("Apellido1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnApellido1)
            Me.columnApellido2 = New DataColumn("Apellido2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnApellido2)
            Me.columnApellidoCas = New DataColumn("ApellidoCas", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnApellidoCas)
            Me.columnCategoria = New DataColumn("Categoria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCategoria)
            Me.columnCodPrestamo = New DataColumn("CodPrestamo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodPrestamo)
            Me.columnMonto = New DataColumn("Monto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto)
            Me.columnSaldoCapital = New DataColumn("SaldoCapital", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoCapital)
            Me.columnFechaOtorgamiento = New DataColumn("FechaOtorgamiento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaOtorgamiento)
            Me.columnFechaVencimiento = New DataColumn("FechaVencimiento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaVencimiento)
            Me.columnFechaUltimoPago = New DataColumn("FechaUltimoPago", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaUltimoPago)
            Me.columnTasaInteres = New DataColumn("TasaInteres", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTasaInteres)
            Me.columnPorcentajeRiesgo = New DataColumn("PorcentajeRiesgo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPorcentajeRiesgo)
            Me.columnValorReserva = New DataColumn("ValorReserva", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnValorReserva)
            Me.columnDescTipoCredito = New DataColumn("DescTipoCredito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescTipoCredito)
            Me.columnCodTipoCredito = New DataColumn("CodTipoCredito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodTipoCredito)
            Me.columnDescCodGarantia = New DataColumn("DescCodGarantia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescCodGarantia)
            Me.columnCodTipoGarantia = New DataColumn("CodTipoGarantia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodTipoGarantia)
            Me.columnDescCodTipoGarantia = New DataColumn("DescCodTipoGarantia", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescCodTipoGarantia)
            Me.columnCuota = New DataColumn("Cuota", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuota)
            Me.columnMonto_Garantia = New DataColumn("Monto_Garantia", GetType(System.Single), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto_Garantia)
        End Sub
        
        Public Function NewPRPrestamosRow() As PRPrestamosRow
            Return CType(Me.NewRow,PRPrestamosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New PRPrestamosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(PRPrestamosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRPrestamosRowChangedEvent) Is Nothing) Then
                RaiseEvent PRPrestamosRowChanged(Me, New PRPrestamosRowChangeEvent(CType(e.Row,PRPrestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRPrestamosRowChangingEvent) Is Nothing) Then
                RaiseEvent PRPrestamosRowChanging(Me, New PRPrestamosRowChangeEvent(CType(e.Row,PRPrestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRPrestamosRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRPrestamosRowDeleted(Me, New PRPrestamosRowChangeEvent(CType(e.Row,PRPrestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRPrestamosRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRPrestamosRowDeleting(Me, New PRPrestamosRowChangeEvent(CType(e.Row,PRPrestamosRow), e.Action))
            End If
        End Sub
        
        Public Sub RemovePRPrestamosRow(ByVal row As PRPrestamosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRPrestamosRow
        Inherits DataRow
        
        Private tablePRPrestamos As PRPrestamosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRPrestamos = CType(Me.Table,PRPrestamosDataTable)
        End Sub
        
        Public Property NoSocio As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.NoSocioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.NoSocioColumn) = value
            End Set
        End Property
        
        Public Property DUI As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.DUIColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.DUIColumn) = value
            End Set
        End Property
        
        Public Property Nombres As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.NombresColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.NombresColumn) = value
            End Set
        End Property
        
        Public Property Apellido1 As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Apellido1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Apellido1Column) = value
            End Set
        End Property
        
        Public Property Apellido2 As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Apellido2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Apellido2Column) = value
            End Set
        End Property
        
        Public Property ApellidoCas As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.ApellidoCasColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.ApellidoCasColumn) = value
            End Set
        End Property
        
        Public Property Categoria As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CategoriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CategoriaColumn) = value
            End Set
        End Property
        
        Public Property CodPrestamo As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodPrestamoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodPrestamoColumn) = value
            End Set
        End Property
        
        Public Property Monto As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.MontoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.MontoColumn) = value
            End Set
        End Property
        
        Public Property SaldoCapital As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoCapitalColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoCapitalColumn) = value
            End Set
        End Property
        
        Public Property FechaOtorgamiento As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaOtorgamientoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaOtorgamientoColumn) = value
            End Set
        End Property
        
        Public Property FechaVencimiento As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaVencimientoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaVencimientoColumn) = value
            End Set
        End Property
        
        Public Property FechaUltimoPago As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaUltimoPagoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaUltimoPagoColumn) = value
            End Set
        End Property
        
        Public Property TasaInteres As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.TasaInteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.TasaInteresColumn) = value
            End Set
        End Property
        
        Public Property PorcentajeRiesgo As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.PorcentajeRiesgoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.PorcentajeRiesgoColumn) = value
            End Set
        End Property
        
        Public Property ValorReserva As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.ValorReservaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.ValorReservaColumn) = value
            End Set
        End Property
        
        Public Property DescTipoCredito As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.DescTipoCreditoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.DescTipoCreditoColumn) = value
            End Set
        End Property
        
        Public Property CodTipoCredito As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodTipoCreditoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodTipoCreditoColumn) = value
            End Set
        End Property
        
        Public Property DescCodGarantia As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.DescCodGarantiaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.DescCodGarantiaColumn) = value
            End Set
        End Property
        
        Public Property CodTipoGarantia As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodTipoGarantiaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodTipoGarantiaColumn) = value
            End Set
        End Property
        
        Public Property DescCodTipoGarantia As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.DescCodTipoGarantiaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.DescCodTipoGarantiaColumn) = value
            End Set
        End Property
        
        Public Property Cuota As Single
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CuotaColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CuotaColumn) = value
            End Set
        End Property
        
        Public Property Monto_Garantia As Single
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Monto_GarantiaColumn),Single)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Monto_GarantiaColumn) = value
            End Set
        End Property
        
        Public Function IsNoSocioNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.NoSocioColumn)
        End Function
        
        Public Sub SetNoSocioNull()
            Me(Me.tablePRPrestamos.NoSocioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDUINull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.DUIColumn)
        End Function
        
        Public Sub SetDUINull()
            Me(Me.tablePRPrestamos.DUIColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNombresNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.NombresColumn)
        End Function
        
        Public Sub SetNombresNull()
            Me(Me.tablePRPrestamos.NombresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsApellido1Null() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Apellido1Column)
        End Function
        
        Public Sub SetApellido1Null()
            Me(Me.tablePRPrestamos.Apellido1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsApellido2Null() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Apellido2Column)
        End Function
        
        Public Sub SetApellido2Null()
            Me(Me.tablePRPrestamos.Apellido2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsApellidoCasNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.ApellidoCasColumn)
        End Function
        
        Public Sub SetApellidoCasNull()
            Me(Me.tablePRPrestamos.ApellidoCasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCategoriaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CategoriaColumn)
        End Function
        
        Public Sub SetCategoriaNull()
            Me(Me.tablePRPrestamos.CategoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodPrestamoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodPrestamoColumn)
        End Function
        
        Public Sub SetCodPrestamoNull()
            Me(Me.tablePRPrestamos.CodPrestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.MontoColumn)
        End Function
        
        Public Sub SetMontoNull()
            Me(Me.tablePRPrestamos.MontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoCapitalNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoCapitalColumn)
        End Function
        
        Public Sub SetSaldoCapitalNull()
            Me(Me.tablePRPrestamos.SaldoCapitalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaOtorgamientoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaOtorgamientoColumn)
        End Function
        
        Public Sub SetFechaOtorgamientoNull()
            Me(Me.tablePRPrestamos.FechaOtorgamientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaVencimientoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaVencimientoColumn)
        End Function
        
        Public Sub SetFechaVencimientoNull()
            Me(Me.tablePRPrestamos.FechaVencimientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaUltimoPagoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaUltimoPagoColumn)
        End Function
        
        Public Sub SetFechaUltimoPagoNull()
            Me(Me.tablePRPrestamos.FechaUltimoPagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTasaInteresNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.TasaInteresColumn)
        End Function
        
        Public Sub SetTasaInteresNull()
            Me(Me.tablePRPrestamos.TasaInteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPorcentajeRiesgoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.PorcentajeRiesgoColumn)
        End Function
        
        Public Sub SetPorcentajeRiesgoNull()
            Me(Me.tablePRPrestamos.PorcentajeRiesgoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsValorReservaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.ValorReservaColumn)
        End Function
        
        Public Sub SetValorReservaNull()
            Me(Me.tablePRPrestamos.ValorReservaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescTipoCreditoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.DescTipoCreditoColumn)
        End Function
        
        Public Sub SetDescTipoCreditoNull()
            Me(Me.tablePRPrestamos.DescTipoCreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodTipoCreditoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodTipoCreditoColumn)
        End Function
        
        Public Sub SetCodTipoCreditoNull()
            Me(Me.tablePRPrestamos.CodTipoCreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescCodGarantiaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.DescCodGarantiaColumn)
        End Function
        
        Public Sub SetDescCodGarantiaNull()
            Me(Me.tablePRPrestamos.DescCodGarantiaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodTipoGarantiaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodTipoGarantiaColumn)
        End Function
        
        Public Sub SetCodTipoGarantiaNull()
            Me(Me.tablePRPrestamos.CodTipoGarantiaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescCodTipoGarantiaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.DescCodTipoGarantiaColumn)
        End Function
        
        Public Sub SetDescCodTipoGarantiaNull()
            Me(Me.tablePRPrestamos.DescCodTipoGarantiaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuotaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CuotaColumn)
        End Function
        
        Public Sub SetCuotaNull()
            Me(Me.tablePRPrestamos.CuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMonto_GarantiaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Monto_GarantiaColumn)
        End Function
        
        Public Sub SetMonto_GarantiaNull()
            Me(Me.tablePRPrestamos.Monto_GarantiaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRPrestamosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As PRPrestamosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As PRPrestamosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As PRPrestamosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
