'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dsTablaAmortiza
    Inherits DataSet
    
    Private tablePRDetTablaAmortiza As PRDetTablaAmortizaDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PRDetTablaAmortiza")) Is Nothing) Then
                Me.Tables.Add(New PRDetTablaAmortizaDataTable(ds.Tables("PRDetTablaAmortiza")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRDetTablaAmortiza As PRDetTablaAmortizaDataTable
        Get
            Return Me.tablePRDetTablaAmortiza
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dsTablaAmortiza = CType(MyBase.Clone,dsTablaAmortiza)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("PRDetTablaAmortiza")) Is Nothing) Then
            Me.Tables.Add(New PRDetTablaAmortizaDataTable(ds.Tables("PRDetTablaAmortiza")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tablePRDetTablaAmortiza = CType(Me.Tables("PRDetTablaAmortiza"),PRDetTablaAmortizaDataTable)
        If (Not (Me.tablePRDetTablaAmortiza) Is Nothing) Then
            Me.tablePRDetTablaAmortiza.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dsTablaAmortiza"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTablaAmortiza.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tablePRDetTablaAmortiza = New PRDetTablaAmortizaDataTable
        Me.Tables.Add(Me.tablePRDetTablaAmortiza)
    End Sub
    
    Private Function ShouldSerializePRDetTablaAmortiza() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub PRDetTablaAmortizaRowChangeEventHandler(ByVal sender As Object, ByVal e As PRDetTablaAmortizaRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRDetTablaAmortizaDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnCorrelativo As DataColumn
        
        Private columnCodTablaAmortiza As DataColumn
        
        Private columnFechaCuota As DataColumn
        
        Private columnMontoCuota As DataColumn
        
        Private columnAbonoCapital As DataColumn
        
        Private columnSaldoCapital As DataColumn
        
        Private columnInteres As DataColumn
        
        Private columnTasaInteres As DataColumn
        
        Private columnDias As DataColumn
        
        Private columnSeguroDeuda As DataColumn
        
        Private columnSeguroDaniosyLA As DataColumn
        
        Private columnSeguroVida As DataColumn
        
        Private columnSeguroDesempleo As DataColumn
        
        Private columnAportacion As DataColumn
        
        Private columnAhorro As DataColumn
        
        Private columnComisionManejo As DataColumn
        
        Private columnOtros As DataColumn
        
        Private columnCancelada As DataColumn
        
        Private columnCodPrestamo As DataColumn
        
        Friend Sub New()
            MyBase.New("PRDetTablaAmortiza")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property CorrelativoColumn As DataColumn
            Get
                Return Me.columnCorrelativo
            End Get
        End Property
        
        Friend ReadOnly Property CodTablaAmortizaColumn As DataColumn
            Get
                Return Me.columnCodTablaAmortiza
            End Get
        End Property
        
        Friend ReadOnly Property FechaCuotaColumn As DataColumn
            Get
                Return Me.columnFechaCuota
            End Get
        End Property
        
        Friend ReadOnly Property MontoCuotaColumn As DataColumn
            Get
                Return Me.columnMontoCuota
            End Get
        End Property
        
        Friend ReadOnly Property AbonoCapitalColumn As DataColumn
            Get
                Return Me.columnAbonoCapital
            End Get
        End Property
        
        Friend ReadOnly Property SaldoCapitalColumn As DataColumn
            Get
                Return Me.columnSaldoCapital
            End Get
        End Property
        
        Friend ReadOnly Property InteresColumn As DataColumn
            Get
                Return Me.columnInteres
            End Get
        End Property
        
        Friend ReadOnly Property TasaInteresColumn As DataColumn
            Get
                Return Me.columnTasaInteres
            End Get
        End Property
        
        Friend ReadOnly Property DiasColumn As DataColumn
            Get
                Return Me.columnDias
            End Get
        End Property
        
        Friend ReadOnly Property SeguroDeudaColumn As DataColumn
            Get
                Return Me.columnSeguroDeuda
            End Get
        End Property
        
        Friend ReadOnly Property SeguroDaniosyLAColumn As DataColumn
            Get
                Return Me.columnSeguroDaniosyLA
            End Get
        End Property
        
        Friend ReadOnly Property SeguroVidaColumn As DataColumn
            Get
                Return Me.columnSeguroVida
            End Get
        End Property
        
        Friend ReadOnly Property SeguroDesempleoColumn As DataColumn
            Get
                Return Me.columnSeguroDesempleo
            End Get
        End Property
        
        Friend ReadOnly Property AportacionColumn As DataColumn
            Get
                Return Me.columnAportacion
            End Get
        End Property
        
        Friend ReadOnly Property AhorroColumn As DataColumn
            Get
                Return Me.columnAhorro
            End Get
        End Property
        
        Friend ReadOnly Property ComisionManejoColumn As DataColumn
            Get
                Return Me.columnComisionManejo
            End Get
        End Property
        
        Friend ReadOnly Property OtrosColumn As DataColumn
            Get
                Return Me.columnOtros
            End Get
        End Property
        
        Friend ReadOnly Property CanceladaColumn As DataColumn
            Get
                Return Me.columnCancelada
            End Get
        End Property
        
        Friend ReadOnly Property CodPrestamoColumn As DataColumn
            Get
                Return Me.columnCodPrestamo
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRDetTablaAmortizaRow
            Get
                Return CType(Me.Rows(index),PRDetTablaAmortizaRow)
            End Get
        End Property
        
        Public Event PRDetTablaAmortizaRowChanged As PRDetTablaAmortizaRowChangeEventHandler
        
        Public Event PRDetTablaAmortizaRowChanging As PRDetTablaAmortizaRowChangeEventHandler
        
        Public Event PRDetTablaAmortizaRowDeleted As PRDetTablaAmortizaRowChangeEventHandler
        
        Public Event PRDetTablaAmortizaRowDeleting As PRDetTablaAmortizaRowChangeEventHandler
        
        Public Overloads Sub AddPRDetTablaAmortizaRow(ByVal row As PRDetTablaAmortizaRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddPRDetTablaAmortizaRow( _
                    ByVal Correlativo As Integer,  _
                    ByVal CodTablaAmortiza As String,  _
                    ByVal FechaCuota As Date,  _
                    ByVal MontoCuota As Double,  _
                    ByVal AbonoCapital As Double,  _
                    ByVal SaldoCapital As Double,  _
                    ByVal Interes As Double,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Dias As Integer,  _
                    ByVal SeguroDeuda As Double,  _
                    ByVal SeguroDaniosyLA As Double,  _
                    ByVal SeguroVida As Double,  _
                    ByVal SeguroDesempleo As Double,  _
                    ByVal Aportacion As Double,  _
                    ByVal Ahorro As Double,  _
                    ByVal ComisionManejo As Double,  _
                    ByVal Otros As Double,  _
                    ByVal Cancelada As String,  _
                    ByVal CodPrestamo As String) As PRDetTablaAmortizaRow
            Dim rowPRDetTablaAmortizaRow As PRDetTablaAmortizaRow = CType(Me.NewRow,PRDetTablaAmortizaRow)
            rowPRDetTablaAmortizaRow.ItemArray = New Object() {Correlativo, CodTablaAmortiza, FechaCuota, MontoCuota, AbonoCapital, SaldoCapital, Interes, TasaInteres, Dias, SeguroDeuda, SeguroDaniosyLA, SeguroVida, SeguroDesempleo, Aportacion, Ahorro, ComisionManejo, Otros, Cancelada, CodPrestamo}
            Me.Rows.Add(rowPRDetTablaAmortizaRow)
            Return rowPRDetTablaAmortizaRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As PRDetTablaAmortizaDataTable = CType(MyBase.Clone,PRDetTablaAmortizaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New PRDetTablaAmortizaDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnCorrelativo = Me.Columns("Correlativo")
            Me.columnCodTablaAmortiza = Me.Columns("CodTablaAmortiza")
            Me.columnFechaCuota = Me.Columns("FechaCuota")
            Me.columnMontoCuota = Me.Columns("MontoCuota")
            Me.columnAbonoCapital = Me.Columns("AbonoCapital")
            Me.columnSaldoCapital = Me.Columns("SaldoCapital")
            Me.columnInteres = Me.Columns("Interes")
            Me.columnTasaInteres = Me.Columns("TasaInteres")
            Me.columnDias = Me.Columns("Dias")
            Me.columnSeguroDeuda = Me.Columns("SeguroDeuda")
            Me.columnSeguroDaniosyLA = Me.Columns("SeguroDaniosyLA")
            Me.columnSeguroVida = Me.Columns("SeguroVida")
            Me.columnSeguroDesempleo = Me.Columns("SeguroDesempleo")
            Me.columnAportacion = Me.Columns("Aportacion")
            Me.columnAhorro = Me.Columns("Ahorro")
            Me.columnComisionManejo = Me.Columns("ComisionManejo")
            Me.columnOtros = Me.Columns("Otros")
            Me.columnCancelada = Me.Columns("Cancelada")
            Me.columnCodPrestamo = Me.Columns("CodPrestamo")
        End Sub
        
        Private Sub InitClass()
            Me.columnCorrelativo = New DataColumn("Correlativo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCorrelativo)
            Me.columnCodTablaAmortiza = New DataColumn("CodTablaAmortiza", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodTablaAmortiza)
            Me.columnFechaCuota = New DataColumn("FechaCuota", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaCuota)
            Me.columnMontoCuota = New DataColumn("MontoCuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMontoCuota)
            Me.columnAbonoCapital = New DataColumn("AbonoCapital", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAbonoCapital)
            Me.columnSaldoCapital = New DataColumn("SaldoCapital", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoCapital)
            Me.columnInteres = New DataColumn("Interes", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnInteres)
            Me.columnTasaInteres = New DataColumn("TasaInteres", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTasaInteres)
            Me.columnDias = New DataColumn("Dias", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDias)
            Me.columnSeguroDeuda = New DataColumn("SeguroDeuda", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSeguroDeuda)
            Me.columnSeguroDaniosyLA = New DataColumn("SeguroDaniosyLA", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSeguroDaniosyLA)
            Me.columnSeguroVida = New DataColumn("SeguroVida", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSeguroVida)
            Me.columnSeguroDesempleo = New DataColumn("SeguroDesempleo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSeguroDesempleo)
            Me.columnAportacion = New DataColumn("Aportacion", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAportacion)
            Me.columnAhorro = New DataColumn("Ahorro", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnAhorro)
            Me.columnComisionManejo = New DataColumn("ComisionManejo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnComisionManejo)
            Me.columnOtros = New DataColumn("Otros", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnOtros)
            Me.columnCancelada = New DataColumn("Cancelada", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCancelada)
            Me.columnCodPrestamo = New DataColumn("CodPrestamo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodPrestamo)
            Me.columnCorrelativo.AllowDBNull = false
            Me.columnCodTablaAmortiza.AllowDBNull = false
        End Sub
        
        Public Function NewPRDetTablaAmortizaRow() As PRDetTablaAmortizaRow
            Return CType(Me.NewRow,PRDetTablaAmortizaRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New PRDetTablaAmortizaRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(PRDetTablaAmortizaRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRDetTablaAmortizaRowChangedEvent) Is Nothing) Then
                RaiseEvent PRDetTablaAmortizaRowChanged(Me, New PRDetTablaAmortizaRowChangeEvent(CType(e.Row,PRDetTablaAmortizaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRDetTablaAmortizaRowChangingEvent) Is Nothing) Then
                RaiseEvent PRDetTablaAmortizaRowChanging(Me, New PRDetTablaAmortizaRowChangeEvent(CType(e.Row,PRDetTablaAmortizaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRDetTablaAmortizaRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRDetTablaAmortizaRowDeleted(Me, New PRDetTablaAmortizaRowChangeEvent(CType(e.Row,PRDetTablaAmortizaRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRDetTablaAmortizaRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRDetTablaAmortizaRowDeleting(Me, New PRDetTablaAmortizaRowChangeEvent(CType(e.Row,PRDetTablaAmortizaRow), e.Action))
            End If
        End Sub
        
        Public Sub RemovePRDetTablaAmortizaRow(ByVal row As PRDetTablaAmortizaRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRDetTablaAmortizaRow
        Inherits DataRow
        
        Private tablePRDetTablaAmortiza As PRDetTablaAmortizaDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRDetTablaAmortiza = CType(Me.Table,PRDetTablaAmortizaDataTable)
        End Sub
        
        Public Property Correlativo As Integer
            Get
                Return CType(Me(Me.tablePRDetTablaAmortiza.CorrelativoColumn),Integer)
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.CorrelativoColumn) = value
            End Set
        End Property
        
        Public Property CodTablaAmortiza As String
            Get
                Return CType(Me(Me.tablePRDetTablaAmortiza.CodTablaAmortizaColumn),String)
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.CodTablaAmortizaColumn) = value
            End Set
        End Property
        
        Public Property FechaCuota As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.FechaCuotaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.FechaCuotaColumn) = value
            End Set
        End Property
        
        Public Property MontoCuota As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.MontoCuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.MontoCuotaColumn) = value
            End Set
        End Property
        
        Public Property AbonoCapital As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.AbonoCapitalColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.AbonoCapitalColumn) = value
            End Set
        End Property
        
        Public Property SaldoCapital As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.SaldoCapitalColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.SaldoCapitalColumn) = value
            End Set
        End Property
        
        Public Property Interes As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.InteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.InteresColumn) = value
            End Set
        End Property
        
        Public Property TasaInteres As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.TasaInteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.TasaInteresColumn) = value
            End Set
        End Property
        
        Public Property Dias As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.DiasColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.DiasColumn) = value
            End Set
        End Property
        
        Public Property SeguroDeuda As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.SeguroDeudaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.SeguroDeudaColumn) = value
            End Set
        End Property
        
        Public Property SeguroDaniosyLA As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.SeguroDaniosyLAColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.SeguroDaniosyLAColumn) = value
            End Set
        End Property
        
        Public Property SeguroVida As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.SeguroVidaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.SeguroVidaColumn) = value
            End Set
        End Property
        
        Public Property SeguroDesempleo As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.SeguroDesempleoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.SeguroDesempleoColumn) = value
            End Set
        End Property
        
        Public Property Aportacion As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.AportacionColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.AportacionColumn) = value
            End Set
        End Property
        
        Public Property Ahorro As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.AhorroColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.AhorroColumn) = value
            End Set
        End Property
        
        Public Property ComisionManejo As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.ComisionManejoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.ComisionManejoColumn) = value
            End Set
        End Property
        
        Public Property Otros As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.OtrosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.OtrosColumn) = value
            End Set
        End Property
        
        Public Property Cancelada As String
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.CanceladaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.CanceladaColumn) = value
            End Set
        End Property
        
        Public Property CodPrestamo As String
            Get
                Try 
                    Return CType(Me(Me.tablePRDetTablaAmortiza.CodPrestamoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRDetTablaAmortiza.CodPrestamoColumn) = value
            End Set
        End Property
        
        Public Function IsFechaCuotaNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.FechaCuotaColumn)
        End Function
        
        Public Sub SetFechaCuotaNull()
            Me(Me.tablePRDetTablaAmortiza.FechaCuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoCuotaNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.MontoCuotaColumn)
        End Function
        
        Public Sub SetMontoCuotaNull()
            Me(Me.tablePRDetTablaAmortiza.MontoCuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAbonoCapitalNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.AbonoCapitalColumn)
        End Function
        
        Public Sub SetAbonoCapitalNull()
            Me(Me.tablePRDetTablaAmortiza.AbonoCapitalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoCapitalNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.SaldoCapitalColumn)
        End Function
        
        Public Sub SetSaldoCapitalNull()
            Me(Me.tablePRDetTablaAmortiza.SaldoCapitalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsInteresNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.InteresColumn)
        End Function
        
        Public Sub SetInteresNull()
            Me(Me.tablePRDetTablaAmortiza.InteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTasaInteresNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.TasaInteresColumn)
        End Function
        
        Public Sub SetTasaInteresNull()
            Me(Me.tablePRDetTablaAmortiza.TasaInteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDiasNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.DiasColumn)
        End Function
        
        Public Sub SetDiasNull()
            Me(Me.tablePRDetTablaAmortiza.DiasColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSeguroDeudaNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.SeguroDeudaColumn)
        End Function
        
        Public Sub SetSeguroDeudaNull()
            Me(Me.tablePRDetTablaAmortiza.SeguroDeudaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSeguroDaniosyLANull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.SeguroDaniosyLAColumn)
        End Function
        
        Public Sub SetSeguroDaniosyLANull()
            Me(Me.tablePRDetTablaAmortiza.SeguroDaniosyLAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSeguroVidaNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.SeguroVidaColumn)
        End Function
        
        Public Sub SetSeguroVidaNull()
            Me(Me.tablePRDetTablaAmortiza.SeguroVidaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSeguroDesempleoNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.SeguroDesempleoColumn)
        End Function
        
        Public Sub SetSeguroDesempleoNull()
            Me(Me.tablePRDetTablaAmortiza.SeguroDesempleoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAportacionNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.AportacionColumn)
        End Function
        
        Public Sub SetAportacionNull()
            Me(Me.tablePRDetTablaAmortiza.AportacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsAhorroNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.AhorroColumn)
        End Function
        
        Public Sub SetAhorroNull()
            Me(Me.tablePRDetTablaAmortiza.AhorroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsComisionManejoNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.ComisionManejoColumn)
        End Function
        
        Public Sub SetComisionManejoNull()
            Me(Me.tablePRDetTablaAmortiza.ComisionManejoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsOtrosNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.OtrosColumn)
        End Function
        
        Public Sub SetOtrosNull()
            Me(Me.tablePRDetTablaAmortiza.OtrosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCanceladaNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.CanceladaColumn)
        End Function
        
        Public Sub SetCanceladaNull()
            Me(Me.tablePRDetTablaAmortiza.CanceladaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodPrestamoNull() As Boolean
            Return Me.IsNull(Me.tablePRDetTablaAmortiza.CodPrestamoColumn)
        End Function
        
        Public Sub SetCodPrestamoNull()
            Me(Me.tablePRDetTablaAmortiza.CodPrestamoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRDetTablaAmortizaRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As PRDetTablaAmortizaRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As PRDetTablaAmortizaRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As PRDetTablaAmortizaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
