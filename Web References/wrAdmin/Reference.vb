'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrAdmin
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibAdminSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibAdmin")>  _
    Partial Public Class wsLibAdmin
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private VerificarCambioContraseñaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPermisoProcesosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRolesUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPermisosProcesoRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_CentroCostos_SucursalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CoNsultar_ADMTipoMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_ADMTipoMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Actualizar_ADMTipoMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_ADMTipoMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_ADMMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_ADMMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Actualizar_ADMMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_ADMMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_ADMEnvioMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_ADMEnvioMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Actualizar_ADMEnvioMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_ADMEnvioMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_ADMDet_EnvioMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_ADMDet_EnvioMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Actualizar_ADMDet_EnvioMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_ADMDet_EnvioMensajesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CaptacionDPF_AcumuladoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaMenuPrivilegiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaMenuProcesosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarAppOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CierraSesionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAccesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAccesoProcesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAppOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBitacoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBitacoraxFiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarUsuarioxRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DEEncriptaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarAccesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarAccesoProcesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarUsuarioxRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EscribeLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraMatrizProgramasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarAccesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarAccesoProcesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarUsuarioxRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAccesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAccesoProcesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarClaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarUsariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarUsariosxRolOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerAplicacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PorcentajeIVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_Prestamos_GerencialesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerficaDerechosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaSesionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrAdmin_wsLibAdmin
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event VerificarCambioContraseñaCompleted As VerificarCambioContraseñaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPermisoProcesosCompleted As ConsultarPermisoProcesosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRolesUsuarioCompleted As ConsultarRolesUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPermisosProcesoRolCompleted As consultarPermisosProcesoRolCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_CentroCostos_SucursalCompleted As Consultar_CentroCostos_SucursalCompletedEventHandler
        
        '''<remarks/>
        Public Event CoNsultar_ADMTipoMensajesCompleted As CoNsultar_ADMTipoMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_ADMTipoMensajesCompleted As Insertar_ADMTipoMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Actualizar_ADMTipoMensajesCompleted As Actualizar_ADMTipoMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_ADMTipoMensajesCompleted As Eliminar_ADMTipoMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_ADMMensajesCompleted As Consultar_ADMMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_ADMMensajesCompleted As Insertar_ADMMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Actualizar_ADMMensajesCompleted As Actualizar_ADMMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_ADMMensajesCompleted As Eliminar_ADMMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_ADMEnvioMensajesCompleted As Consultar_ADMEnvioMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_ADMEnvioMensajesCompleted As Insertar_ADMEnvioMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Actualizar_ADMEnvioMensajesCompleted As Actualizar_ADMEnvioMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_ADMEnvioMensajesCompleted As Eliminar_ADMEnvioMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_ADMDet_EnvioMensajesCompleted As Consultar_ADMDet_EnvioMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_ADMDet_EnvioMensajesCompleted As Insertar_ADMDet_EnvioMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Actualizar_ADMDet_EnvioMensajesCompleted As Actualizar_ADMDet_EnvioMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_ADMDet_EnvioMensajesCompleted As Eliminar_ADMDet_EnvioMensajesCompletedEventHandler
        
        '''<remarks/>
        Public Event CaptacionDPF_AcumuladoCompleted As CaptacionDPF_AcumuladoCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaMenuPrivilegiosCompleted As CargaMenuPrivilegiosCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaMenuProcesosCompleted As CargaMenuProcesosCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarAppCompleted As CargarAppCompletedEventHandler
        
        '''<remarks/>
        Public Event CierraSesionCompleted As CierraSesionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAccesoCompleted As ConsultarAccesoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAccesoProcesoCompleted As ConsultarAccesoProcesoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAppCompleted As ConsultarAppCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBitacoraCompleted As ConsultarBitacoraCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBitacoraxFiltroCompleted As ConsultarBitacoraxFiltroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRolCompleted As ConsultarRolCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarUsuarioCompleted As ConsultarUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarUsuarioxRolCompleted As ConsultarUsuarioxRolCompletedEventHandler
        
        '''<remarks/>
        Public Event DEEncriptaCompleted As DEEncriptaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarAccesoCompleted As EliminarAccesoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarAccesoProcesoCompleted As EliminarAccesoProcesoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarRolCompleted As EliminarRolCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarUsuarioCompleted As EliminarUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarUsuarioxRolCompleted As EliminarUsuarioxRolCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpresaCompleted As EmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event EscribeLogCompleted As EscribeLogCompletedEventHandler
        
        '''<remarks/>
        Public Event FechaCompleted As FechaCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraMatrizProgramasCompleted As GeneraMatrizProgramasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarAccesoCompleted As InsertarAccesoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarAccesoProcesoCompleted As InsertarAccesoProcesoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarRolCompleted As InsertarRolCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarUsuarioCompleted As InsertarUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarUsuarioxRolCompleted As InsertarUsuarioxRolCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAccesoCompleted As ModificarAccesoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAccesoProcesoCompleted As ModificarAccesoProcesoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarClaveCompleted As ModificarClaveCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRolCompleted As ModificarRolCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarUsariosCompleted As ModificarUsariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarUsariosxRolCompleted As ModificarUsariosxRolCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerAplicacionesCompleted As ObtenerAplicacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event PorcentajeIVACompleted As PorcentajeIVACompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_Prestamos_GerencialesCompleted As Reporte_Prestamos_GerencialesCompletedEventHandler
        
        '''<remarks/>
        Public Event VerficaDerechosCompleted As VerficaDerechosCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaSesionCompleted As VerificaSesionCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaUsuarioCompleted As VerificaUsuarioCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/VerificarCambioContraseña", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarCambioContraseña(ByVal usuario As String) As Boolean
            Dim results() As Object = Me.Invoke("VerificarCambioContraseña", New Object() {usuario})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarCambioContraseña(ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarCambioContraseña", New Object() {usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarCambioContraseña(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarCambioContraseñaAsync(ByVal usuario As String)
            Me.VerificarCambioContraseñaAsync(usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarCambioContraseñaAsync(ByVal usuario As String, ByVal userState As Object)
            If (Me.VerificarCambioContraseñaOperationCompleted Is Nothing) Then
                Me.VerificarCambioContraseñaOperationCompleted = AddressOf Me.OnVerificarCambioContraseñaOperationCompleted
            End If
            Me.InvokeAsync("VerificarCambioContraseña", New Object() {usuario}, Me.VerificarCambioContraseñaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarCambioContraseñaOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarCambioContraseñaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarCambioContraseñaCompleted(Me, New VerificarCambioContraseñaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarPermisoProcesos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPermisoProcesos(ByVal idProceso As String, ByVal codRol As String, ByVal opcion As Integer) As Boolean
            Dim results() As Object = Me.Invoke("ConsultarPermisoProcesos", New Object() {idProceso, codRol, opcion})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPermisoProcesos(ByVal idProceso As String, ByVal codRol As String, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPermisoProcesos", New Object() {idProceso, codRol, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPermisoProcesos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPermisoProcesosAsync(ByVal idProceso As String, ByVal codRol As String, ByVal opcion As Integer)
            Me.ConsultarPermisoProcesosAsync(idProceso, codRol, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPermisoProcesosAsync(ByVal idProceso As String, ByVal codRol As String, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.ConsultarPermisoProcesosOperationCompleted Is Nothing) Then
                Me.ConsultarPermisoProcesosOperationCompleted = AddressOf Me.OnConsultarPermisoProcesosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPermisoProcesos", New Object() {idProceso, codRol, opcion}, Me.ConsultarPermisoProcesosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPermisoProcesosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPermisoProcesosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPermisoProcesosCompleted(Me, New ConsultarPermisoProcesosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarRolesUsuario", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRolesUsuario(ByVal usuario As String, ByVal codRol As String, ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRolesUsuario", New Object() {usuario, codRol, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRolesUsuario(ByVal usuario As String, ByVal codRol As String, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRolesUsuario", New Object() {usuario, codRol, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRolesUsuario(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRolesUsuarioAsync(ByVal usuario As String, ByVal codRol As String, ByVal opcion As Integer)
            Me.ConsultarRolesUsuarioAsync(usuario, codRol, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRolesUsuarioAsync(ByVal usuario As String, ByVal codRol As String, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.ConsultarRolesUsuarioOperationCompleted Is Nothing) Then
                Me.ConsultarRolesUsuarioOperationCompleted = AddressOf Me.OnConsultarRolesUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRolesUsuario", New Object() {usuario, codRol, opcion}, Me.ConsultarRolesUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRolesUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRolesUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRolesUsuarioCompleted(Me, New ConsultarRolesUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/consultarPermisosProcesoRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPermisosProcesoRol(ByVal usuario As String, ByVal idProceso As String) As Boolean
            Dim results() As Object = Me.Invoke("consultarPermisosProcesoRol", New Object() {usuario, idProceso})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPermisosProcesoRol(ByVal usuario As String, ByVal idProceso As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPermisosProcesoRol", New Object() {usuario, idProceso}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPermisosProcesoRol(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPermisosProcesoRolAsync(ByVal usuario As String, ByVal idProceso As String)
            Me.consultarPermisosProcesoRolAsync(usuario, idProceso, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPermisosProcesoRolAsync(ByVal usuario As String, ByVal idProceso As String, ByVal userState As Object)
            If (Me.consultarPermisosProcesoRolOperationCompleted Is Nothing) Then
                Me.consultarPermisosProcesoRolOperationCompleted = AddressOf Me.OnconsultarPermisosProcesoRolOperationCompleted
            End If
            Me.InvokeAsync("consultarPermisosProcesoRol", New Object() {usuario, idProceso}, Me.consultarPermisosProcesoRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPermisosProcesoRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPermisosProcesoRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPermisosProcesoRolCompleted(Me, New consultarPermisosProcesoRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Consultar_CentroCostos_Sucursal", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_CentroCostos_Sucursal(ByVal CodSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_CentroCostos_Sucursal", New Object() {CodSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_CentroCostos_Sucursal(ByVal CodSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_CentroCostos_Sucursal", New Object() {CodSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_CentroCostos_Sucursal(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_CentroCostos_SucursalAsync(ByVal CodSucursal As String)
            Me.Consultar_CentroCostos_SucursalAsync(CodSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_CentroCostos_SucursalAsync(ByVal CodSucursal As String, ByVal userState As Object)
            If (Me.Consultar_CentroCostos_SucursalOperationCompleted Is Nothing) Then
                Me.Consultar_CentroCostos_SucursalOperationCompleted = AddressOf Me.OnConsultar_CentroCostos_SucursalOperationCompleted
            End If
            Me.InvokeAsync("Consultar_CentroCostos_Sucursal", New Object() {CodSucursal}, Me.Consultar_CentroCostos_SucursalOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_CentroCostos_SucursalOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_CentroCostos_SucursalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_CentroCostos_SucursalCompleted(Me, New Consultar_CentroCostos_SucursalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/CoNsultar_ADMTipoMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CoNsultar_ADMTipoMensajes(ByVal IdTipoMsj As Integer, ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CoNsultar_ADMTipoMensajes", New Object() {IdTipoMsj, Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCoNsultar_ADMTipoMensajes(ByVal IdTipoMsj As Integer, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CoNsultar_ADMTipoMensajes", New Object() {IdTipoMsj, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCoNsultar_ADMTipoMensajes(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CoNsultar_ADMTipoMensajesAsync(ByVal IdTipoMsj As Integer, ByVal Opcion As Integer)
            Me.CoNsultar_ADMTipoMensajesAsync(IdTipoMsj, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CoNsultar_ADMTipoMensajesAsync(ByVal IdTipoMsj As Integer, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.CoNsultar_ADMTipoMensajesOperationCompleted Is Nothing) Then
                Me.CoNsultar_ADMTipoMensajesOperationCompleted = AddressOf Me.OnCoNsultar_ADMTipoMensajesOperationCompleted
            End If
            Me.InvokeAsync("CoNsultar_ADMTipoMensajes", New Object() {IdTipoMsj, Opcion}, Me.CoNsultar_ADMTipoMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCoNsultar_ADMTipoMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CoNsultar_ADMTipoMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CoNsultar_ADMTipoMensajesCompleted(Me, New CoNsultar_ADMTipoMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Insertar_ADMTipoMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_ADMTipoMensajes(ByVal Descripcion As String) As Integer
            Dim results() As Object = Me.Invoke("Insertar_ADMTipoMensajes", New Object() {Descripcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_ADMTipoMensajes(ByVal Descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_ADMTipoMensajes", New Object() {Descripcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_ADMTipoMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_ADMTipoMensajesAsync(ByVal Descripcion As String)
            Me.Insertar_ADMTipoMensajesAsync(Descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_ADMTipoMensajesAsync(ByVal Descripcion As String, ByVal userState As Object)
            If (Me.Insertar_ADMTipoMensajesOperationCompleted Is Nothing) Then
                Me.Insertar_ADMTipoMensajesOperationCompleted = AddressOf Me.OnInsertar_ADMTipoMensajesOperationCompleted
            End If
            Me.InvokeAsync("Insertar_ADMTipoMensajes", New Object() {Descripcion}, Me.Insertar_ADMTipoMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_ADMTipoMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_ADMTipoMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_ADMTipoMensajesCompleted(Me, New Insertar_ADMTipoMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Actualizar_ADMTipoMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Actualizar_ADMTipoMensajes(ByVal Descripcion As String, ByVal IdTipoMsj As Integer) As Integer
            Dim results() As Object = Me.Invoke("Actualizar_ADMTipoMensajes", New Object() {Descripcion, IdTipoMsj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizar_ADMTipoMensajes(ByVal Descripcion As String, ByVal IdTipoMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Actualizar_ADMTipoMensajes", New Object() {Descripcion, IdTipoMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizar_ADMTipoMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Actualizar_ADMTipoMensajesAsync(ByVal Descripcion As String, ByVal IdTipoMsj As Integer)
            Me.Actualizar_ADMTipoMensajesAsync(Descripcion, IdTipoMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Actualizar_ADMTipoMensajesAsync(ByVal Descripcion As String, ByVal IdTipoMsj As Integer, ByVal userState As Object)
            If (Me.Actualizar_ADMTipoMensajesOperationCompleted Is Nothing) Then
                Me.Actualizar_ADMTipoMensajesOperationCompleted = AddressOf Me.OnActualizar_ADMTipoMensajesOperationCompleted
            End If
            Me.InvokeAsync("Actualizar_ADMTipoMensajes", New Object() {Descripcion, IdTipoMsj}, Me.Actualizar_ADMTipoMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizar_ADMTipoMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Actualizar_ADMTipoMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Actualizar_ADMTipoMensajesCompleted(Me, New Actualizar_ADMTipoMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Eliminar_ADMTipoMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_ADMTipoMensajes(ByVal IdTipoMsj As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_ADMTipoMensajes", New Object() {IdTipoMsj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_ADMTipoMensajes(ByVal IdTipoMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_ADMTipoMensajes", New Object() {IdTipoMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_ADMTipoMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_ADMTipoMensajesAsync(ByVal IdTipoMsj As Integer)
            Me.Eliminar_ADMTipoMensajesAsync(IdTipoMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_ADMTipoMensajesAsync(ByVal IdTipoMsj As Integer, ByVal userState As Object)
            If (Me.Eliminar_ADMTipoMensajesOperationCompleted Is Nothing) Then
                Me.Eliminar_ADMTipoMensajesOperationCompleted = AddressOf Me.OnEliminar_ADMTipoMensajesOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_ADMTipoMensajes", New Object() {IdTipoMsj}, Me.Eliminar_ADMTipoMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_ADMTipoMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_ADMTipoMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_ADMTipoMensajesCompleted(Me, New Eliminar_ADMTipoMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Consultar_ADMMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_ADMMensajes(ByVal IdTipoMsj As Integer, ByVal IdMsj As Integer, ByVal Mensaje As String, ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_ADMMensajes", New Object() {IdTipoMsj, IdMsj, Mensaje, Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_ADMMensajes(ByVal IdTipoMsj As Integer, ByVal IdMsj As Integer, ByVal Mensaje As String, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_ADMMensajes", New Object() {IdTipoMsj, IdMsj, Mensaje, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_ADMMensajes(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_ADMMensajesAsync(ByVal IdTipoMsj As Integer, ByVal IdMsj As Integer, ByVal Mensaje As String, ByVal Opcion As Integer)
            Me.Consultar_ADMMensajesAsync(IdTipoMsj, IdMsj, Mensaje, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_ADMMensajesAsync(ByVal IdTipoMsj As Integer, ByVal IdMsj As Integer, ByVal Mensaje As String, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.Consultar_ADMMensajesOperationCompleted Is Nothing) Then
                Me.Consultar_ADMMensajesOperationCompleted = AddressOf Me.OnConsultar_ADMMensajesOperationCompleted
            End If
            Me.InvokeAsync("Consultar_ADMMensajes", New Object() {IdTipoMsj, IdMsj, Mensaje, Opcion}, Me.Consultar_ADMMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_ADMMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_ADMMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_ADMMensajesCompleted(Me, New Consultar_ADMMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Insertar_ADMMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_ADMMensajes(ByVal IdTipoMsj As Integer, ByVal Mensaje As String, ByVal Asunto As String) As Integer
            Dim results() As Object = Me.Invoke("Insertar_ADMMensajes", New Object() {IdTipoMsj, Mensaje, Asunto})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_ADMMensajes(ByVal IdTipoMsj As Integer, ByVal Mensaje As String, ByVal Asunto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_ADMMensajes", New Object() {IdTipoMsj, Mensaje, Asunto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_ADMMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_ADMMensajesAsync(ByVal IdTipoMsj As Integer, ByVal Mensaje As String, ByVal Asunto As String)
            Me.Insertar_ADMMensajesAsync(IdTipoMsj, Mensaje, Asunto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_ADMMensajesAsync(ByVal IdTipoMsj As Integer, ByVal Mensaje As String, ByVal Asunto As String, ByVal userState As Object)
            If (Me.Insertar_ADMMensajesOperationCompleted Is Nothing) Then
                Me.Insertar_ADMMensajesOperationCompleted = AddressOf Me.OnInsertar_ADMMensajesOperationCompleted
            End If
            Me.InvokeAsync("Insertar_ADMMensajes", New Object() {IdTipoMsj, Mensaje, Asunto}, Me.Insertar_ADMMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_ADMMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_ADMMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_ADMMensajesCompleted(Me, New Insertar_ADMMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Actualizar_ADMMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Actualizar_ADMMensajes(ByVal IdTipoMsj As Integer, ByVal IdMsj As Integer, ByVal Mensaje As String, ByVal Asunto As String) As Integer
            Dim results() As Object = Me.Invoke("Actualizar_ADMMensajes", New Object() {IdTipoMsj, IdMsj, Mensaje, Asunto})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizar_ADMMensajes(ByVal IdTipoMsj As Integer, ByVal IdMsj As Integer, ByVal Mensaje As String, ByVal Asunto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Actualizar_ADMMensajes", New Object() {IdTipoMsj, IdMsj, Mensaje, Asunto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizar_ADMMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Actualizar_ADMMensajesAsync(ByVal IdTipoMsj As Integer, ByVal IdMsj As Integer, ByVal Mensaje As String, ByVal Asunto As String)
            Me.Actualizar_ADMMensajesAsync(IdTipoMsj, IdMsj, Mensaje, Asunto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Actualizar_ADMMensajesAsync(ByVal IdTipoMsj As Integer, ByVal IdMsj As Integer, ByVal Mensaje As String, ByVal Asunto As String, ByVal userState As Object)
            If (Me.Actualizar_ADMMensajesOperationCompleted Is Nothing) Then
                Me.Actualizar_ADMMensajesOperationCompleted = AddressOf Me.OnActualizar_ADMMensajesOperationCompleted
            End If
            Me.InvokeAsync("Actualizar_ADMMensajes", New Object() {IdTipoMsj, IdMsj, Mensaje, Asunto}, Me.Actualizar_ADMMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizar_ADMMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Actualizar_ADMMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Actualizar_ADMMensajesCompleted(Me, New Actualizar_ADMMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Eliminar_ADMMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_ADMMensajes(ByVal IdMsj As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_ADMMensajes", New Object() {IdMsj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_ADMMensajes(ByVal IdMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_ADMMensajes", New Object() {IdMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_ADMMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_ADMMensajesAsync(ByVal IdMsj As Integer)
            Me.Eliminar_ADMMensajesAsync(IdMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_ADMMensajesAsync(ByVal IdMsj As Integer, ByVal userState As Object)
            If (Me.Eliminar_ADMMensajesOperationCompleted Is Nothing) Then
                Me.Eliminar_ADMMensajesOperationCompleted = AddressOf Me.OnEliminar_ADMMensajesOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_ADMMensajes", New Object() {IdMsj}, Me.Eliminar_ADMMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_ADMMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_ADMMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_ADMMensajesCompleted(Me, New Eliminar_ADMMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Consultar_ADMEnvioMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_ADMEnvioMensajes(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario, IdEnvioMsj, Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_ADMEnvioMensajes(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario, IdEnvioMsj, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_ADMEnvioMensajes(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_ADMEnvioMensajesAsync(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal Opcion As Integer)
            Me.Consultar_ADMEnvioMensajesAsync(IdMsj, Fecha, Usuario, IdEnvioMsj, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_ADMEnvioMensajesAsync(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.Consultar_ADMEnvioMensajesOperationCompleted Is Nothing) Then
                Me.Consultar_ADMEnvioMensajesOperationCompleted = AddressOf Me.OnConsultar_ADMEnvioMensajesOperationCompleted
            End If
            Me.InvokeAsync("Consultar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario, IdEnvioMsj, Opcion}, Me.Consultar_ADMEnvioMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_ADMEnvioMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_ADMEnvioMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_ADMEnvioMensajesCompleted(Me, New Consultar_ADMEnvioMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Insertar_ADMEnvioMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_ADMEnvioMensajes(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String) As Integer
            Dim results() As Object = Me.Invoke("Insertar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_ADMEnvioMensajes(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_ADMEnvioMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_ADMEnvioMensajesAsync(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String)
            Me.Insertar_ADMEnvioMensajesAsync(IdMsj, Fecha, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_ADMEnvioMensajesAsync(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal userState As Object)
            If (Me.Insertar_ADMEnvioMensajesOperationCompleted Is Nothing) Then
                Me.Insertar_ADMEnvioMensajesOperationCompleted = AddressOf Me.OnInsertar_ADMEnvioMensajesOperationCompleted
            End If
            Me.InvokeAsync("Insertar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario}, Me.Insertar_ADMEnvioMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_ADMEnvioMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_ADMEnvioMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_ADMEnvioMensajesCompleted(Me, New Insertar_ADMEnvioMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Actualizar_ADMEnvioMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Actualizar_ADMEnvioMensajes(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer) As Integer
            Dim results() As Object = Me.Invoke("Actualizar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario, IdEnvioMsj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizar_ADMEnvioMensajes(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Actualizar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario, IdEnvioMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizar_ADMEnvioMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Actualizar_ADMEnvioMensajesAsync(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer)
            Me.Actualizar_ADMEnvioMensajesAsync(IdMsj, Fecha, Usuario, IdEnvioMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Actualizar_ADMEnvioMensajesAsync(ByVal IdMsj As Integer, ByVal Fecha As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal userState As Object)
            If (Me.Actualizar_ADMEnvioMensajesOperationCompleted Is Nothing) Then
                Me.Actualizar_ADMEnvioMensajesOperationCompleted = AddressOf Me.OnActualizar_ADMEnvioMensajesOperationCompleted
            End If
            Me.InvokeAsync("Actualizar_ADMEnvioMensajes", New Object() {IdMsj, Fecha, Usuario, IdEnvioMsj}, Me.Actualizar_ADMEnvioMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizar_ADMEnvioMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Actualizar_ADMEnvioMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Actualizar_ADMEnvioMensajesCompleted(Me, New Actualizar_ADMEnvioMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Eliminar_ADMEnvioMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_ADMEnvioMensajes(ByVal IdEnvioMsj As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_ADMEnvioMensajes", New Object() {IdEnvioMsj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_ADMEnvioMensajes(ByVal IdEnvioMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_ADMEnvioMensajes", New Object() {IdEnvioMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_ADMEnvioMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_ADMEnvioMensajesAsync(ByVal IdEnvioMsj As Integer)
            Me.Eliminar_ADMEnvioMensajesAsync(IdEnvioMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_ADMEnvioMensajesAsync(ByVal IdEnvioMsj As Integer, ByVal userState As Object)
            If (Me.Eliminar_ADMEnvioMensajesOperationCompleted Is Nothing) Then
                Me.Eliminar_ADMEnvioMensajesOperationCompleted = AddressOf Me.OnEliminar_ADMEnvioMensajesOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_ADMEnvioMensajes", New Object() {IdEnvioMsj}, Me.Eliminar_ADMEnvioMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_ADMEnvioMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_ADMEnvioMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_ADMEnvioMensajesCompleted(Me, New Eliminar_ADMEnvioMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Consultar_ADMDet_EnvioMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_ADMDet_EnvioMensajes(ByVal Opcion As Integer, ByVal IdDet_EnvioMsj As Integer, ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_ADMDet_EnvioMensajes", New Object() {Opcion, IdDet_EnvioMsj, Destinatario, Remitente, Hora, Usuario, IdEnvioMsj})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_ADMDet_EnvioMensajes(ByVal Opcion As Integer, ByVal IdDet_EnvioMsj As Integer, ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_ADMDet_EnvioMensajes", New Object() {Opcion, IdDet_EnvioMsj, Destinatario, Remitente, Hora, Usuario, IdEnvioMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_ADMDet_EnvioMensajes(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_ADMDet_EnvioMensajesAsync(ByVal Opcion As Integer, ByVal IdDet_EnvioMsj As Integer, ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer)
            Me.Consultar_ADMDet_EnvioMensajesAsync(Opcion, IdDet_EnvioMsj, Destinatario, Remitente, Hora, Usuario, IdEnvioMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_ADMDet_EnvioMensajesAsync(ByVal Opcion As Integer, ByVal IdDet_EnvioMsj As Integer, ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal userState As Object)
            If (Me.Consultar_ADMDet_EnvioMensajesOperationCompleted Is Nothing) Then
                Me.Consultar_ADMDet_EnvioMensajesOperationCompleted = AddressOf Me.OnConsultar_ADMDet_EnvioMensajesOperationCompleted
            End If
            Me.InvokeAsync("Consultar_ADMDet_EnvioMensajes", New Object() {Opcion, IdDet_EnvioMsj, Destinatario, Remitente, Hora, Usuario, IdEnvioMsj}, Me.Consultar_ADMDet_EnvioMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_ADMDet_EnvioMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_ADMDet_EnvioMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_ADMDet_EnvioMensajesCompleted(Me, New Consultar_ADMDet_EnvioMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Insertar_ADMDet_EnvioMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_ADMDet_EnvioMensajes(ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As String, ByVal Usuario As String, ByVal IdEnvioMsj As Integer) As Integer
            Dim results() As Object = Me.Invoke("Insertar_ADMDet_EnvioMensajes", New Object() {Destinatario, Remitente, Hora, Usuario, IdEnvioMsj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_ADMDet_EnvioMensajes(ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As String, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_ADMDet_EnvioMensajes", New Object() {Destinatario, Remitente, Hora, Usuario, IdEnvioMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_ADMDet_EnvioMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_ADMDet_EnvioMensajesAsync(ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As String, ByVal Usuario As String, ByVal IdEnvioMsj As Integer)
            Me.Insertar_ADMDet_EnvioMensajesAsync(Destinatario, Remitente, Hora, Usuario, IdEnvioMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_ADMDet_EnvioMensajesAsync(ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As String, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal userState As Object)
            If (Me.Insertar_ADMDet_EnvioMensajesOperationCompleted Is Nothing) Then
                Me.Insertar_ADMDet_EnvioMensajesOperationCompleted = AddressOf Me.OnInsertar_ADMDet_EnvioMensajesOperationCompleted
            End If
            Me.InvokeAsync("Insertar_ADMDet_EnvioMensajes", New Object() {Destinatario, Remitente, Hora, Usuario, IdEnvioMsj}, Me.Insertar_ADMDet_EnvioMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_ADMDet_EnvioMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_ADMDet_EnvioMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_ADMDet_EnvioMensajesCompleted(Me, New Insertar_ADMDet_EnvioMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Actualizar_ADMDet_EnvioMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Actualizar_ADMDet_EnvioMensajes(ByVal IdDet_EnvioMsj As Integer, ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer) As Integer
            Dim results() As Object = Me.Invoke("Actualizar_ADMDet_EnvioMensajes", New Object() {IdDet_EnvioMsj, Destinatario, Remitente, Hora, Usuario, IdEnvioMsj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizar_ADMDet_EnvioMensajes(ByVal IdDet_EnvioMsj As Integer, ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Actualizar_ADMDet_EnvioMensajes", New Object() {IdDet_EnvioMsj, Destinatario, Remitente, Hora, Usuario, IdEnvioMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizar_ADMDet_EnvioMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Actualizar_ADMDet_EnvioMensajesAsync(ByVal IdDet_EnvioMsj As Integer, ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer)
            Me.Actualizar_ADMDet_EnvioMensajesAsync(IdDet_EnvioMsj, Destinatario, Remitente, Hora, Usuario, IdEnvioMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Actualizar_ADMDet_EnvioMensajesAsync(ByVal IdDet_EnvioMsj As Integer, ByVal Destinatario As String, ByVal Remitente As String, ByVal Hora As Date, ByVal Usuario As String, ByVal IdEnvioMsj As Integer, ByVal userState As Object)
            If (Me.Actualizar_ADMDet_EnvioMensajesOperationCompleted Is Nothing) Then
                Me.Actualizar_ADMDet_EnvioMensajesOperationCompleted = AddressOf Me.OnActualizar_ADMDet_EnvioMensajesOperationCompleted
            End If
            Me.InvokeAsync("Actualizar_ADMDet_EnvioMensajes", New Object() {IdDet_EnvioMsj, Destinatario, Remitente, Hora, Usuario, IdEnvioMsj}, Me.Actualizar_ADMDet_EnvioMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizar_ADMDet_EnvioMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Actualizar_ADMDet_EnvioMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Actualizar_ADMDet_EnvioMensajesCompleted(Me, New Actualizar_ADMDet_EnvioMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Eliminar_ADMDet_EnvioMensajes", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_ADMDet_EnvioMensajes(ByVal IdDet_EnvioMsj As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_ADMDet_EnvioMensajes", New Object() {IdDet_EnvioMsj})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_ADMDet_EnvioMensajes(ByVal IdDet_EnvioMsj As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_ADMDet_EnvioMensajes", New Object() {IdDet_EnvioMsj}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_ADMDet_EnvioMensajes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_ADMDet_EnvioMensajesAsync(ByVal IdDet_EnvioMsj As Integer)
            Me.Eliminar_ADMDet_EnvioMensajesAsync(IdDet_EnvioMsj, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_ADMDet_EnvioMensajesAsync(ByVal IdDet_EnvioMsj As Integer, ByVal userState As Object)
            If (Me.Eliminar_ADMDet_EnvioMensajesOperationCompleted Is Nothing) Then
                Me.Eliminar_ADMDet_EnvioMensajesOperationCompleted = AddressOf Me.OnEliminar_ADMDet_EnvioMensajesOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_ADMDet_EnvioMensajes", New Object() {IdDet_EnvioMsj}, Me.Eliminar_ADMDet_EnvioMensajesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_ADMDet_EnvioMensajesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_ADMDet_EnvioMensajesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_ADMDet_EnvioMensajesCompleted(Me, New Eliminar_ADMDet_EnvioMensajesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/CaptacionDPF_Acumulado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CaptacionDPF_Acumulado(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CaptacionDPF_Acumulado", New Object() {pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCaptacionDPF_Acumulado(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CaptacionDPF_Acumulado", New Object() {pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCaptacionDPF_Acumulado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CaptacionDPF_AcumuladoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CaptacionDPF_AcumuladoAsync(pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CaptacionDPF_AcumuladoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CaptacionDPF_AcumuladoOperationCompleted Is Nothing) Then
                Me.CaptacionDPF_AcumuladoOperationCompleted = AddressOf Me.OnCaptacionDPF_AcumuladoOperationCompleted
            End If
            Me.InvokeAsync("CaptacionDPF_Acumulado", New Object() {pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.CaptacionDPF_AcumuladoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCaptacionDPF_AcumuladoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CaptacionDPF_AcumuladoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CaptacionDPF_AcumuladoCompleted(Me, New CaptacionDPF_AcumuladoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/CargaMenuPrivilegios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaMenuPrivilegios(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaMenuPrivilegios", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaMenuPrivilegios(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaMenuPrivilegios", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaMenuPrivilegios(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaMenuPrivilegiosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaMenuPrivilegiosAsync(pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaMenuPrivilegiosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaMenuPrivilegiosOperationCompleted Is Nothing) Then
                Me.CargaMenuPrivilegiosOperationCompleted = AddressOf Me.OnCargaMenuPrivilegiosOperationCompleted
            End If
            Me.InvokeAsync("CargaMenuPrivilegios", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.CargaMenuPrivilegiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaMenuPrivilegiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaMenuPrivilegiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaMenuPrivilegiosCompleted(Me, New CargaMenuPrivilegiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/CargaMenuProcesos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaMenuProcesos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaMenuProcesos", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaMenuProcesos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaMenuProcesos", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaMenuProcesos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaMenuProcesosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaMenuProcesosAsync(pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaMenuProcesosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaMenuProcesosOperationCompleted Is Nothing) Then
                Me.CargaMenuProcesosOperationCompleted = AddressOf Me.OnCargaMenuProcesosOperationCompleted
            End If
            Me.InvokeAsync("CargaMenuProcesos", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.CargaMenuProcesosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaMenuProcesosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaMenuProcesosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaMenuProcesosCompleted(Me, New CargaMenuProcesosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/CargarApp", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarApp(ByVal pModulo As Modulos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("CargarApp", New Object() {pModulo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCargarApp(ByVal pModulo As Modulos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargarApp", New Object() {pModulo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargarApp(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarAppAsync(ByVal pModulo As Modulos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.CargarAppAsync(pModulo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarAppAsync(ByVal pModulo As Modulos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargarAppOperationCompleted Is Nothing) Then
                Me.CargarAppOperationCompleted = AddressOf Me.OnCargarAppOperationCompleted
            End If
            Me.InvokeAsync("CargarApp", New Object() {pModulo, pUs, pPa, pSucursal}, Me.CargarAppOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarAppOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarAppCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarAppCompleted(Me, New CargarAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/CierraSesion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CierraSesion(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("CierraSesion", New Object() {pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCierraSesion(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CierraSesion", New Object() {pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCierraSesion(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CierraSesionAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.CierraSesionAsync(pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CierraSesionAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CierraSesionOperationCompleted Is Nothing) Then
                Me.CierraSesionOperationCompleted = AddressOf Me.OnCierraSesionOperationCompleted
            End If
            Me.InvokeAsync("CierraSesion", New Object() {pUs, pPa, pSucursal}, Me.CierraSesionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCierraSesionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CierraSesionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CierraSesionCompleted(Me, New CierraSesionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarAcceso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAcceso(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAcceso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAcceso(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAcceso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAcceso(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAccesoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarAccesoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAccesoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarAccesoOperationCompleted Is Nothing) Then
                Me.ConsultarAccesoOperationCompleted = AddressOf Me.OnConsultarAccesoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAcceso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarAccesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAccesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAccesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAccesoCompleted(Me, New ConsultarAccesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarAccesoProceso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAccesoProceso(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAccesoProceso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAccesoProceso(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAccesoProceso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAccesoProceso(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAccesoProcesoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarAccesoProcesoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAccesoProcesoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarAccesoProcesoOperationCompleted Is Nothing) Then
                Me.ConsultarAccesoProcesoOperationCompleted = AddressOf Me.OnConsultarAccesoProcesoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAccesoProceso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarAccesoProcesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAccesoProcesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAccesoProcesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAccesoProcesoCompleted(Me, New ConsultarAccesoProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarApp", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarApp(ByVal pcampos As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarApp", New Object() {pcampos})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarApp(ByVal pcampos As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarApp", New Object() {pcampos}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarApp(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAppAsync(ByVal pcampos As String)
            Me.ConsultarAppAsync(pcampos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAppAsync(ByVal pcampos As String, ByVal userState As Object)
            If (Me.ConsultarAppOperationCompleted Is Nothing) Then
                Me.ConsultarAppOperationCompleted = AddressOf Me.OnConsultarAppOperationCompleted
            End If
            Me.InvokeAsync("ConsultarApp", New Object() {pcampos}, Me.ConsultarAppOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAppOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAppCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAppCompleted(Me, New ConsultarAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarBitacora", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBitacora(ByVal pTipoBusqueda As TipoBusquedaBitacora, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pModulo As Modulos, ByVal pTabla As String, ByVal pUsuario As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBitacora", New Object() {pTipoBusqueda, pFechaIni, pFechaFin, pModulo, pTabla, pUsuario, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBitacora(ByVal pTipoBusqueda As TipoBusquedaBitacora, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pModulo As Modulos, ByVal pTabla As String, ByVal pUsuario As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBitacora", New Object() {pTipoBusqueda, pFechaIni, pFechaFin, pModulo, pTabla, pUsuario, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBitacora(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBitacoraAsync(ByVal pTipoBusqueda As TipoBusquedaBitacora, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pModulo As Modulos, ByVal pTabla As String, ByVal pUsuario As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarBitacoraAsync(pTipoBusqueda, pFechaIni, pFechaFin, pModulo, pTabla, pUsuario, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBitacoraAsync(ByVal pTipoBusqueda As TipoBusquedaBitacora, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pModulo As Modulos, ByVal pTabla As String, ByVal pUsuario As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarBitacoraOperationCompleted Is Nothing) Then
                Me.ConsultarBitacoraOperationCompleted = AddressOf Me.OnConsultarBitacoraOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBitacora", New Object() {pTipoBusqueda, pFechaIni, pFechaFin, pModulo, pTabla, pUsuario, pUs, pPa, pSucursal}, Me.ConsultarBitacoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBitacoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBitacoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBitacoraCompleted(Me, New ConsultarBitacoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarBitacoraxFiltro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBitacoraxFiltro(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBitacoraxFiltro", New Object() {pFiltro, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBitacoraxFiltro(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBitacoraxFiltro", New Object() {pFiltro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBitacoraxFiltro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBitacoraxFiltroAsync(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarBitacoraxFiltroAsync(pFiltro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBitacoraxFiltroAsync(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarBitacoraxFiltroOperationCompleted Is Nothing) Then
                Me.ConsultarBitacoraxFiltroOperationCompleted = AddressOf Me.OnConsultarBitacoraxFiltroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBitacoraxFiltro", New Object() {pFiltro, pUs, pPa, pSucursal}, Me.ConsultarBitacoraxFiltroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBitacoraxFiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBitacoraxFiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBitacoraxFiltroCompleted(Me, New ConsultarBitacoraxFiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRol(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRol", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRol(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRol", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRol(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRolAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarRolAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRolAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRolOperationCompleted Is Nothing) Then
                Me.ConsultarRolOperationCompleted = AddressOf Me.OnConsultarRolOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRol", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRolCompleted(Me, New ConsultarRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarUsuario", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarUsuario(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarUsuario", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarUsuario(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarUsuario", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarUsuario(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarUsuarioAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarUsuarioAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarUsuarioAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarUsuarioOperationCompleted Is Nothing) Then
                Me.ConsultarUsuarioOperationCompleted = AddressOf Me.OnConsultarUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ConsultarUsuario", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarUsuarioCompleted(Me, New ConsultarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ConsultarUsuarioxRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarUsuarioxRol(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarUsuarioxRol", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarUsuarioxRol(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarUsuarioxRol", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarUsuarioxRol(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarUsuarioxRolAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarUsuarioxRolAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarUsuarioxRolAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarUsuarioxRolOperationCompleted Is Nothing) Then
                Me.ConsultarUsuarioxRolOperationCompleted = AddressOf Me.OnConsultarUsuarioxRolOperationCompleted
            End If
            Me.InvokeAsync("ConsultarUsuarioxRol", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarUsuarioxRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarUsuarioxRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarUsuarioxRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarUsuarioxRolCompleted(Me, New ConsultarUsuarioxRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/DEEncripta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DEEncripta(ByVal pDato As String) As String
            Dim results() As Object = Me.Invoke("DEEncripta", New Object() {pDato})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDEEncripta(ByVal pDato As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DEEncripta", New Object() {pDato}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDEEncripta(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DEEncriptaAsync(ByVal pDato As String)
            Me.DEEncriptaAsync(pDato, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DEEncriptaAsync(ByVal pDato As String, ByVal userState As Object)
            If (Me.DEEncriptaOperationCompleted Is Nothing) Then
                Me.DEEncriptaOperationCompleted = AddressOf Me.OnDEEncriptaOperationCompleted
            End If
            Me.InvokeAsync("DEEncripta", New Object() {pDato}, Me.DEEncriptaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDEEncriptaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DEEncriptaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DEEncriptaCompleted(Me, New DEEncriptaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/EliminarAcceso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarAcceso(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarAcceso", New Object() {filtro, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarAcceso(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarAcceso", New Object() {filtro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarAcceso(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarAccesoAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarAccesoAsync(filtro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarAccesoAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarAccesoOperationCompleted Is Nothing) Then
                Me.EliminarAccesoOperationCompleted = AddressOf Me.OnEliminarAccesoOperationCompleted
            End If
            Me.InvokeAsync("EliminarAcceso", New Object() {filtro, pUs, pPa, pSucursal}, Me.EliminarAccesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarAccesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarAccesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarAccesoCompleted(Me, New EliminarAccesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/EliminarAccesoProceso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarAccesoProceso(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarAccesoProceso", New Object() {filtro, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarAccesoProceso(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarAccesoProceso", New Object() {filtro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarAccesoProceso(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarAccesoProcesoAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarAccesoProcesoAsync(filtro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarAccesoProcesoAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarAccesoProcesoOperationCompleted Is Nothing) Then
                Me.EliminarAccesoProcesoOperationCompleted = AddressOf Me.OnEliminarAccesoProcesoOperationCompleted
            End If
            Me.InvokeAsync("EliminarAccesoProceso", New Object() {filtro, pUs, pPa, pSucursal}, Me.EliminarAccesoProcesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarAccesoProcesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarAccesoProcesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarAccesoProcesoCompleted(Me, New EliminarAccesoProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/EliminarRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarRol(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarRol", New Object() {filtro, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarRol(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarRol", New Object() {filtro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarRol(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarRolAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarRolAsync(filtro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarRolAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarRolOperationCompleted Is Nothing) Then
                Me.EliminarRolOperationCompleted = AddressOf Me.OnEliminarRolOperationCompleted
            End If
            Me.InvokeAsync("EliminarRol", New Object() {filtro, pUs, pPa, pSucursal}, Me.EliminarRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarRolCompleted(Me, New EliminarRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/EliminarUsuario", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarUsuario(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarUsuario", New Object() {filtro, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarUsuario(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarUsuario", New Object() {filtro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarUsuario(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarUsuarioAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarUsuarioAsync(filtro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarUsuarioAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarUsuarioOperationCompleted Is Nothing) Then
                Me.EliminarUsuarioOperationCompleted = AddressOf Me.OnEliminarUsuarioOperationCompleted
            End If
            Me.InvokeAsync("EliminarUsuario", New Object() {filtro, pUs, pPa, pSucursal}, Me.EliminarUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarUsuarioCompleted(Me, New EliminarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/EliminarUsuarioxRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarUsuarioxRol(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarUsuarioxRol", New Object() {filtro, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarUsuarioxRol(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarUsuarioxRol", New Object() {filtro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarUsuarioxRol(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarUsuarioxRolAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarUsuarioxRolAsync(filtro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarUsuarioxRolAsync(ByVal filtro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarUsuarioxRolOperationCompleted Is Nothing) Then
                Me.EliminarUsuarioxRolOperationCompleted = AddressOf Me.OnEliminarUsuarioxRolOperationCompleted
            End If
            Me.InvokeAsync("EliminarUsuarioxRol", New Object() {filtro, pUs, pPa, pSucursal}, Me.EliminarUsuarioxRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarUsuarioxRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarUsuarioxRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarUsuarioxRolCompleted(Me, New EliminarUsuarioxRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Empresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Empresa() As String
            Dim results() As Object = Me.Invoke("Empresa", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginEmpresa(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Empresa", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEmpresa(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpresaAsync()
            Me.EmpresaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpresaAsync(ByVal userState As Object)
            If (Me.EmpresaOperationCompleted Is Nothing) Then
                Me.EmpresaOperationCompleted = AddressOf Me.OnEmpresaOperationCompleted
            End If
            Me.InvokeAsync("Empresa", New Object(-1) {}, Me.EmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpresaCompleted(Me, New EmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/EscribeLog", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EscribeLog(ByVal sTexto As String) As String
            Dim results() As Object = Me.Invoke("EscribeLog", New Object() {sTexto})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginEscribeLog(ByVal sTexto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EscribeLog", New Object() {sTexto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEscribeLog(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EscribeLogAsync(ByVal sTexto As String)
            Me.EscribeLogAsync(sTexto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EscribeLogAsync(ByVal sTexto As String, ByVal userState As Object)
            If (Me.EscribeLogOperationCompleted Is Nothing) Then
                Me.EscribeLogOperationCompleted = AddressOf Me.OnEscribeLogOperationCompleted
            End If
            Me.InvokeAsync("EscribeLog", New Object() {sTexto}, Me.EscribeLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnEscribeLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.EscribeLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EscribeLogCompleted(Me, New EscribeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Fecha", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Fecha() As Date
            Dim results() As Object = Me.Invoke("Fecha", New Object(-1) {})
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Function BeginFecha(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Fecha", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndFecha(ByVal asyncResult As System.IAsyncResult) As Date
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FechaAsync()
            Me.FechaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FechaAsync(ByVal userState As Object)
            If (Me.FechaOperationCompleted Is Nothing) Then
                Me.FechaOperationCompleted = AddressOf Me.OnFechaOperationCompleted
            End If
            Me.InvokeAsync("Fecha", New Object(-1) {}, Me.FechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.FechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FechaCompleted(Me, New FechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/GeneraMatrizProgramas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraMatrizProgramas(ByVal Usuario As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GeneraMatrizProgramas", New Object() {Usuario, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraMatrizProgramas(ByVal Usuario As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraMatrizProgramas", New Object() {Usuario, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraMatrizProgramas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraMatrizProgramasAsync(ByVal Usuario As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.GeneraMatrizProgramasAsync(Usuario, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraMatrizProgramasAsync(ByVal Usuario As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.GeneraMatrizProgramasOperationCompleted Is Nothing) Then
                Me.GeneraMatrizProgramasOperationCompleted = AddressOf Me.OnGeneraMatrizProgramasOperationCompleted
            End If
            Me.InvokeAsync("GeneraMatrizProgramas", New Object() {Usuario, pUsuario, pPassword, pSucursal}, Me.GeneraMatrizProgramasOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraMatrizProgramasOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraMatrizProgramasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraMatrizProgramasCompleted(Me, New GeneraMatrizProgramasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/InsertarAcceso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarAcceso(ByVal pCodRol As String, ByVal pNumPrograma As String, ByVal pFechaAcceso As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("InsertarAcceso", New Object() {pCodRol, pNumPrograma, pFechaAcceso, pUsuarioAcceso, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarAcceso(ByVal pCodRol As String, ByVal pNumPrograma As String, ByVal pFechaAcceso As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarAcceso", New Object() {pCodRol, pNumPrograma, pFechaAcceso, pUsuarioAcceso, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarAcceso(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarAccesoAsync(ByVal pCodRol As String, ByVal pNumPrograma As String, ByVal pFechaAcceso As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarAccesoAsync(pCodRol, pNumPrograma, pFechaAcceso, pUsuarioAcceso, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarAccesoAsync(ByVal pCodRol As String, ByVal pNumPrograma As String, ByVal pFechaAcceso As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarAccesoOperationCompleted Is Nothing) Then
                Me.InsertarAccesoOperationCompleted = AddressOf Me.OnInsertarAccesoOperationCompleted
            End If
            Me.InvokeAsync("InsertarAcceso", New Object() {pCodRol, pNumPrograma, pFechaAcceso, pUsuarioAcceso, pUs, pPa, pSucursal}, Me.InsertarAccesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarAccesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarAccesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarAccesoCompleted(Me, New InsertarAccesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/InsertarAccesoProceso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarAccesoProceso(ByVal pCodRol As String, ByVal pIdProceso As String, ByVal pFechaAcceso As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("InsertarAccesoProceso", New Object() {pCodRol, pIdProceso, pFechaAcceso, pUsuarioAcceso, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarAccesoProceso(ByVal pCodRol As String, ByVal pIdProceso As String, ByVal pFechaAcceso As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarAccesoProceso", New Object() {pCodRol, pIdProceso, pFechaAcceso, pUsuarioAcceso, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarAccesoProceso(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarAccesoProcesoAsync(ByVal pCodRol As String, ByVal pIdProceso As String, ByVal pFechaAcceso As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarAccesoProcesoAsync(pCodRol, pIdProceso, pFechaAcceso, pUsuarioAcceso, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarAccesoProcesoAsync(ByVal pCodRol As String, ByVal pIdProceso As String, ByVal pFechaAcceso As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarAccesoProcesoOperationCompleted Is Nothing) Then
                Me.InsertarAccesoProcesoOperationCompleted = AddressOf Me.OnInsertarAccesoProcesoOperationCompleted
            End If
            Me.InvokeAsync("InsertarAccesoProceso", New Object() {pCodRol, pIdProceso, pFechaAcceso, pUsuarioAcceso, pUs, pPa, pSucursal}, Me.InsertarAccesoProcesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarAccesoProcesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarAccesoProcesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarAccesoProcesoCompleted(Me, New InsertarAccesoProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/InsertarRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRol(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarRol", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarRol(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarRol", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarRol(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRolAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarRolAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRolAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarRolOperationCompleted Is Nothing) Then
                Me.InsertarRolOperationCompleted = AddressOf Me.OnInsertarRolOperationCompleted
            End If
            Me.InvokeAsync("InsertarRol", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRolCompleted(Me, New InsertarRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/InsertarUsuario", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarUsuario(ByVal pLogin As String, ByVal pClave As String, ByVal pNombre As String, ByVal pFecValDesde As Date, ByVal pFecValHasta As Date, ByVal pCodSucursal As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarUsuario", New Object() {pLogin, pClave, pNombre, pFecValDesde, pFecValHasta, pCodSucursal, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarUsuario(ByVal pLogin As String, ByVal pClave As String, ByVal pNombre As String, ByVal pFecValDesde As Date, ByVal pFecValHasta As Date, ByVal pCodSucursal As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarUsuario", New Object() {pLogin, pClave, pNombre, pFecValDesde, pFecValHasta, pCodSucursal, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarUsuario(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarUsuarioAsync(ByVal pLogin As String, ByVal pClave As String, ByVal pNombre As String, ByVal pFecValDesde As Date, ByVal pFecValHasta As Date, ByVal pCodSucursal As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarUsuarioAsync(pLogin, pClave, pNombre, pFecValDesde, pFecValHasta, pCodSucursal, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarUsuarioAsync(ByVal pLogin As String, ByVal pClave As String, ByVal pNombre As String, ByVal pFecValDesde As Date, ByVal pFecValHasta As Date, ByVal pCodSucursal As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarUsuarioOperationCompleted Is Nothing) Then
                Me.InsertarUsuarioOperationCompleted = AddressOf Me.OnInsertarUsuarioOperationCompleted
            End If
            Me.InvokeAsync("InsertarUsuario", New Object() {pLogin, pClave, pNombre, pFecValDesde, pFecValHasta, pCodSucursal, pUs, pPa, pSucursal}, Me.InsertarUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarUsuarioCompleted(Me, New InsertarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/InsertarUsuarioxRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarUsuarioxRol(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("InsertarUsuarioxRol", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarUsuarioxRol(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarUsuarioxRol", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarUsuarioxRol(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarUsuarioxRolAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarUsuarioxRolAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarUsuarioxRolAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarUsuarioxRolOperationCompleted Is Nothing) Then
                Me.InsertarUsuarioxRolOperationCompleted = AddressOf Me.OnInsertarUsuarioxRolOperationCompleted
            End If
            Me.InvokeAsync("InsertarUsuarioxRol", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarUsuarioxRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarUsuarioxRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarUsuarioxRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarUsuarioxRolCompleted(Me, New InsertarUsuarioxRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ModificarAcceso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAcceso(ByVal filtro As String, ByVal pFecha As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAcceso", New Object() {filtro, pFecha, pUsuarioAcceso, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAcceso(ByVal filtro As String, ByVal pFecha As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAcceso", New Object() {filtro, pFecha, pUsuarioAcceso, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAcceso(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAccesoAsync(ByVal filtro As String, ByVal pFecha As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarAccesoAsync(filtro, pFecha, pUsuarioAcceso, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAccesoAsync(ByVal filtro As String, ByVal pFecha As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAccesoOperationCompleted Is Nothing) Then
                Me.ModificarAccesoOperationCompleted = AddressOf Me.OnModificarAccesoOperationCompleted
            End If
            Me.InvokeAsync("ModificarAcceso", New Object() {filtro, pFecha, pUsuarioAcceso, pUs, pPa, pSucursal}, Me.ModificarAccesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAccesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAccesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAccesoCompleted(Me, New ModificarAccesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ModificarAccesoProceso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAccesoProceso(ByVal filtro As String, ByVal pFecha As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAccesoProceso", New Object() {filtro, pFecha, pUsuarioAcceso, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAccesoProceso(ByVal filtro As String, ByVal pFecha As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAccesoProceso", New Object() {filtro, pFecha, pUsuarioAcceso, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAccesoProceso(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAccesoProcesoAsync(ByVal filtro As String, ByVal pFecha As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarAccesoProcesoAsync(filtro, pFecha, pUsuarioAcceso, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAccesoProcesoAsync(ByVal filtro As String, ByVal pFecha As Date, ByVal pUsuarioAcceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAccesoProcesoOperationCompleted Is Nothing) Then
                Me.ModificarAccesoProcesoOperationCompleted = AddressOf Me.OnModificarAccesoProcesoOperationCompleted
            End If
            Me.InvokeAsync("ModificarAccesoProceso", New Object() {filtro, pFecha, pUsuarioAcceso, pUs, pPa, pSucursal}, Me.ModificarAccesoProcesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAccesoProcesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAccesoProcesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAccesoProcesoCompleted(Me, New ModificarAccesoProcesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ModificarClave", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarClave(ByVal filtro As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal isReset As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("ModificarClave", New Object() {filtro, pClave, pUs, pPa, pSucursal, isReset})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarClave(ByVal filtro As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal isReset As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarClave", New Object() {filtro, pClave, pUs, pPa, pSucursal, isReset}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarClave(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarClaveAsync(ByVal filtro As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal isReset As Boolean)
            Me.ModificarClaveAsync(filtro, pClave, pUs, pPa, pSucursal, isReset, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarClaveAsync(ByVal filtro As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal isReset As Boolean, ByVal userState As Object)
            If (Me.ModificarClaveOperationCompleted Is Nothing) Then
                Me.ModificarClaveOperationCompleted = AddressOf Me.OnModificarClaveOperationCompleted
            End If
            Me.InvokeAsync("ModificarClave", New Object() {filtro, pClave, pUs, pPa, pSucursal, isReset}, Me.ModificarClaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarClaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarClaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarClaveCompleted(Me, New ModificarClaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ModificarRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRol(ByVal filtro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRol", New Object() {filtro, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRol(ByVal filtro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRol", New Object() {filtro, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRol(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRolAsync(ByVal filtro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarRolAsync(filtro, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRolAsync(ByVal filtro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRolOperationCompleted Is Nothing) Then
                Me.ModificarRolOperationCompleted = AddressOf Me.OnModificarRolOperationCompleted
            End If
            Me.InvokeAsync("ModificarRol", New Object() {filtro, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRolCompleted(Me, New ModificarRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ModificarUsarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarUsarios(ByVal filtro As String, ByVal pNombre As String, ByVal pFecValDesde As Date, ByVal pFecValHasta As Date, ByVal pCodSucursal As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarUsarios", New Object() {filtro, pNombre, pFecValDesde, pFecValHasta, pCodSucursal, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarUsarios(ByVal filtro As String, ByVal pNombre As String, ByVal pFecValDesde As Date, ByVal pFecValHasta As Date, ByVal pCodSucursal As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarUsarios", New Object() {filtro, pNombre, pFecValDesde, pFecValHasta, pCodSucursal, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarUsarios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarUsariosAsync(ByVal filtro As String, ByVal pNombre As String, ByVal pFecValDesde As Date, ByVal pFecValHasta As Date, ByVal pCodSucursal As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarUsariosAsync(filtro, pNombre, pFecValDesde, pFecValHasta, pCodSucursal, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarUsariosAsync(ByVal filtro As String, ByVal pNombre As String, ByVal pFecValDesde As Date, ByVal pFecValHasta As Date, ByVal pCodSucursal As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarUsariosOperationCompleted Is Nothing) Then
                Me.ModificarUsariosOperationCompleted = AddressOf Me.OnModificarUsariosOperationCompleted
            End If
            Me.InvokeAsync("ModificarUsarios", New Object() {filtro, pNombre, pFecValDesde, pFecValHasta, pCodSucursal, pUs, pPa, pSucursal}, Me.ModificarUsariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarUsariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarUsariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarUsariosCompleted(Me, New ModificarUsariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ModificarUsariosxRol", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarUsariosxRol(ByVal filtro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ModificarUsariosxRol", New Object() {filtro, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarUsariosxRol(ByVal filtro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarUsariosxRol", New Object() {filtro, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarUsariosxRol(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarUsariosxRolAsync(ByVal filtro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarUsariosxRolAsync(filtro, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarUsariosxRolAsync(ByVal filtro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarUsariosxRolOperationCompleted Is Nothing) Then
                Me.ModificarUsariosxRolOperationCompleted = AddressOf Me.OnModificarUsariosxRolOperationCompleted
            End If
            Me.InvokeAsync("ModificarUsariosxRol", New Object() {filtro, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarUsariosxRolOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarUsariosxRolOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarUsariosxRolCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarUsariosxRolCompleted(Me, New ModificarUsariosxRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/ObtenerAplicaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerAplicaciones(ByVal pTipos As TipoApp) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerAplicaciones", New Object() {pTipos})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerAplicaciones(ByVal pTipos As TipoApp, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerAplicaciones", New Object() {pTipos}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerAplicaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerAplicacionesAsync(ByVal pTipos As TipoApp)
            Me.ObtenerAplicacionesAsync(pTipos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerAplicacionesAsync(ByVal pTipos As TipoApp, ByVal userState As Object)
            If (Me.ObtenerAplicacionesOperationCompleted Is Nothing) Then
                Me.ObtenerAplicacionesOperationCompleted = AddressOf Me.OnObtenerAplicacionesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerAplicaciones", New Object() {pTipos}, Me.ObtenerAplicacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerAplicacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerAplicacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerAplicacionesCompleted(Me, New ObtenerAplicacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/PorcentajeIVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PorcentajeIVA() As Double
            Dim results() As Object = Me.Invoke("PorcentajeIVA", New Object(-1) {})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Function BeginPorcentajeIVA(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PorcentajeIVA", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPorcentajeIVA(ByVal asyncResult As System.IAsyncResult) As Double
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PorcentajeIVAAsync()
            Me.PorcentajeIVAAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PorcentajeIVAAsync(ByVal userState As Object)
            If (Me.PorcentajeIVAOperationCompleted Is Nothing) Then
                Me.PorcentajeIVAOperationCompleted = AddressOf Me.OnPorcentajeIVAOperationCompleted
            End If
            Me.InvokeAsync("PorcentajeIVA", New Object(-1) {}, Me.PorcentajeIVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnPorcentajeIVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.PorcentajeIVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PorcentajeIVACompleted(Me, New PorcentajeIVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/Reporte_Prestamos_Gerenciales", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_Prestamos_Gerenciales(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTodos As Boolean, ByVal pCodTipoCredito As String, ByVal pTodosGt As Boolean, ByVal pCodGestor As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_Prestamos_Gerenciales", New Object() {pFechaIni, pFechaFin, pTodos, pCodTipoCredito, pTodosGt, pCodGestor, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_Prestamos_Gerenciales(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTodos As Boolean, ByVal pCodTipoCredito As String, ByVal pTodosGt As Boolean, ByVal pCodGestor As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_Prestamos_Gerenciales", New Object() {pFechaIni, pFechaFin, pTodos, pCodTipoCredito, pTodosGt, pCodGestor, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_Prestamos_Gerenciales(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_Prestamos_GerencialesAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTodos As Boolean, ByVal pCodTipoCredito As String, ByVal pTodosGt As Boolean, ByVal pCodGestor As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_Prestamos_GerencialesAsync(pFechaIni, pFechaFin, pTodos, pCodTipoCredito, pTodosGt, pCodGestor, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_Prestamos_GerencialesAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTodos As Boolean, ByVal pCodTipoCredito As String, ByVal pTodosGt As Boolean, ByVal pCodGestor As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_Prestamos_GerencialesOperationCompleted Is Nothing) Then
                Me.Reporte_Prestamos_GerencialesOperationCompleted = AddressOf Me.OnReporte_Prestamos_GerencialesOperationCompleted
            End If
            Me.InvokeAsync("Reporte_Prestamos_Gerenciales", New Object() {pFechaIni, pFechaFin, pTodos, pCodTipoCredito, pTodosGt, pCodGestor, pUsuario, pPassword, pSucursal}, Me.Reporte_Prestamos_GerencialesOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_Prestamos_GerencialesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_Prestamos_GerencialesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_Prestamos_GerencialesCompleted(Me, New Reporte_Prestamos_GerencialesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/VerficaDerechos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerficaDerechos(ByVal pIdProceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("VerficaDerechos", New Object() {pIdProceso, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginVerficaDerechos(ByVal pIdProceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerficaDerechos", New Object() {pIdProceso, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerficaDerechos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerficaDerechosAsync(ByVal pIdProceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.VerficaDerechosAsync(pIdProceso, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerficaDerechosAsync(ByVal pIdProceso As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerficaDerechosOperationCompleted Is Nothing) Then
                Me.VerficaDerechosOperationCompleted = AddressOf Me.OnVerficaDerechosOperationCompleted
            End If
            Me.InvokeAsync("VerficaDerechos", New Object() {pIdProceso, pUs, pPa, pSucursal}, Me.VerficaDerechosOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerficaDerechosOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerficaDerechosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerficaDerechosCompleted(Me, New VerficaDerechosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/VerificaSesion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaSesion(ByVal pUserName As String, ByVal pDomain As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("VerificaSesion", New Object() {pUserName, pDomain, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaSesion(ByVal pUserName As String, ByVal pDomain As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaSesion", New Object() {pUserName, pDomain, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaSesion(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaSesionAsync(ByVal pUserName As String, ByVal pDomain As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.VerificaSesionAsync(pUserName, pDomain, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaSesionAsync(ByVal pUserName As String, ByVal pDomain As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaSesionOperationCompleted Is Nothing) Then
                Me.VerificaSesionOperationCompleted = AddressOf Me.OnVerificaSesionOperationCompleted
            End If
            Me.InvokeAsync("VerificaSesion", New Object() {pUserName, pDomain, pUs, pPa, pSucursal}, Me.VerificaSesionOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaSesionOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaSesionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaSesionCompleted(Me, New VerificaSesionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAdmin/VerificaUsuario", RequestNamespace:="http://tempuri.org/wsSif/wsLibAdmin", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAdmin", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaUsuario(ByVal sUsuario As String, ByVal sClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("VerificaUsuario", New Object() {sUsuario, sClave, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaUsuario(ByVal sUsuario As String, ByVal sClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaUsuario", New Object() {sUsuario, sClave, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaUsuario(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaUsuarioAsync(ByVal sUsuario As String, ByVal sClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.VerificaUsuarioAsync(sUsuario, sClave, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaUsuarioAsync(ByVal sUsuario As String, ByVal sClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaUsuarioOperationCompleted Is Nothing) Then
                Me.VerificaUsuarioOperationCompleted = AddressOf Me.OnVerificaUsuarioOperationCompleted
            End If
            Me.InvokeAsync("VerificaUsuario", New Object() {sUsuario, sClave, pUs, pPa, pSucursal}, Me.VerificaUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaUsuarioCompleted(Me, New VerificaUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAdmin")>  _
    Public Enum Modulos
        
        '''<remarks/>
        ActivoFijo
        
        '''<remarks/>
        Administrativo
        
        '''<remarks/>
        Ahorros
        
        '''<remarks/>
        Aportaciones
        
        '''<remarks/>
        Asociados
        
        '''<remarks/>
        Bancos
        
        '''<remarks/>
        Caja
        
        '''<remarks/>
        Cobranza
        
        '''<remarks/>
        Contabilidad
        
        '''<remarks/>
        Creditos
        
        '''<remarks/>
        Garantias
        
        '''<remarks/>
        General
        
        '''<remarks/>
        Gerencial
        
        '''<remarks/>
        Planillas
        
        '''<remarks/>
        Todos
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAdmin")>  _
    Public Enum TipoBusquedaBitacora
        
        '''<remarks/>
        porModulo
        
        '''<remarks/>
        porRangoFechas
        
        '''<remarks/>
        porRangoFechasyModulo
        
        '''<remarks/>
        porTabla
        
        '''<remarks/>
        porUsuario
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAdmin")>  _
    Public Enum TipoApp
        
        '''<remarks/>
        Final
        
        '''<remarks/>
        Prueba
        
        '''<remarks/>
        Todos
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarCambioContraseñaCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarCambioContraseñaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarCambioContraseñaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPermisoProcesosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPermisoProcesosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPermisoProcesosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarRolesUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRolesUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRolesUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarPermisosProcesoRolCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPermisosProcesoRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPermisosProcesoRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_CentroCostos_SucursalCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_CentroCostos_SucursalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_CentroCostos_SucursalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CoNsultar_ADMTipoMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As CoNsultar_ADMTipoMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CoNsultar_ADMTipoMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_ADMTipoMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_ADMTipoMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_ADMTipoMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Actualizar_ADMTipoMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Actualizar_ADMTipoMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Actualizar_ADMTipoMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_ADMTipoMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_ADMTipoMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_ADMTipoMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_ADMMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_ADMMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_ADMMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_ADMMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_ADMMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_ADMMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Actualizar_ADMMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Actualizar_ADMMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Actualizar_ADMMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_ADMMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_ADMMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_ADMMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_ADMEnvioMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_ADMEnvioMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_ADMEnvioMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_ADMEnvioMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_ADMEnvioMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_ADMEnvioMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Actualizar_ADMEnvioMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Actualizar_ADMEnvioMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Actualizar_ADMEnvioMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_ADMEnvioMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_ADMEnvioMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_ADMEnvioMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_ADMDet_EnvioMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_ADMDet_EnvioMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_ADMDet_EnvioMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_ADMDet_EnvioMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_ADMDet_EnvioMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_ADMDet_EnvioMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Actualizar_ADMDet_EnvioMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Actualizar_ADMDet_EnvioMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Actualizar_ADMDet_EnvioMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_ADMDet_EnvioMensajesCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_ADMDet_EnvioMensajesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_ADMDet_EnvioMensajesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CaptacionDPF_AcumuladoCompletedEventHandler(ByVal sender As Object, ByVal e As CaptacionDPF_AcumuladoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CaptacionDPF_AcumuladoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaMenuPrivilegiosCompletedEventHandler(ByVal sender As Object, ByVal e As CargaMenuPrivilegiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaMenuPrivilegiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaMenuProcesosCompletedEventHandler(ByVal sender As Object, ByVal e As CargaMenuProcesosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaMenuProcesosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargarAppCompletedEventHandler(ByVal sender As Object, ByVal e As CargarAppCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarAppCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CierraSesionCompletedEventHandler(ByVal sender As Object, ByVal e As CierraSesionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CierraSesionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAccesoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAccesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAccesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAccesoProcesoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAccesoProcesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAccesoProcesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAppCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAppCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAppCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarBitacoraCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBitacoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBitacoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarBitacoraxFiltroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBitacoraxFiltroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBitacoraxFiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarRolCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarUsuarioxRolCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarUsuarioxRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarUsuarioxRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DEEncriptaCompletedEventHandler(ByVal sender As Object, ByVal e As DEEncriptaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DEEncriptaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarAccesoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarAccesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarAccesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarAccesoProcesoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarAccesoProcesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarAccesoProcesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarRolCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarUsuarioxRolCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarUsuarioxRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarUsuarioxRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EscribeLogCompletedEventHandler(ByVal sender As Object, ByVal e As EscribeLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EscribeLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub FechaCompletedEventHandler(ByVal sender As Object, ByVal e As FechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GeneraMatrizProgramasCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraMatrizProgramasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraMatrizProgramasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarAccesoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarAccesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarAccesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarAccesoProcesoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarAccesoProcesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarAccesoProcesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarRolCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarUsuarioxRolCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarUsuarioxRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarUsuarioxRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarAccesoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAccesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAccesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarAccesoProcesoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAccesoProcesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAccesoProcesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarClaveCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarClaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarClaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarRolCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarUsariosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarUsariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarUsariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarUsariosxRolCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarUsariosxRolCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarUsariosxRolCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerAplicacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerAplicacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerAplicacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub PorcentajeIVACompletedEventHandler(ByVal sender As Object, ByVal e As PorcentajeIVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PorcentajeIVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_Prestamos_GerencialesCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_Prestamos_GerencialesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_Prestamos_GerencialesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerficaDerechosCompletedEventHandler(ByVal sender As Object, ByVal e As VerficaDerechosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerficaDerechosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaSesionCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaSesionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaSesionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
