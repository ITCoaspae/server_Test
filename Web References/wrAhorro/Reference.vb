'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrAhorro
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibAhorroSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibAhorro")>  _
    Partial Public Class wsLibAhorro
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RepValorFecha_AhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepVencimientosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReversionAhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReversionAportacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReversionMovimientosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReversionMovimientosxTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaldosAhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaldosAhorros_RangoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferenciaAutomaticaCuentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferenciaCuentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Vencimientos_DPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VencimientosDiarios_DPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VencimientosDiarios_DPF_ProyectadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaSumaMontoDetalleTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCuentaAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCuentaPignoradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDestinoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDet_PlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDetalleTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarFechasCapitalizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarReposicionCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarReposicionLibretaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarTipoAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaRutasCobroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaTasasInteresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExportacionDatos_AhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExportacionDatos_DPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraNoCuentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gerencial_Cartera_DPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gerencial_MovCuentasAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InicializacionLibretaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarAutorizadoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarComisionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCuentaAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCuentaPignoradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDestinoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDet_PlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarFechasCapitalizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarReposicionCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarReposicionLibretaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarRutasCobroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarTipoAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaTasasInteresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaComisionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAhCuentasAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAutorizadoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCuentaAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCuentaPignoradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDestinoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDet_PlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDetalleTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarFechasCapitalizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPRPrestamosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarReposicionCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarReposicionLibretaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRutasCobroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarTipoAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaTasasInteresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MostrarMovimientosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MovimientosAhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoAutorizadoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoCuentaAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoDestinoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoDet_PlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoPlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoReposicionCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoReposicionLibretaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoTipoAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDetalleTransferenciaVacioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerEstructuraSeleccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtieneDigitoVerificadorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Orden_DescuentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PignoracionCuentasAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PosteoMovimientosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesoProrrogaCuentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Provisiones_AhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepCancelacion_TransfOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepCobroInactividadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepCtasAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_CuentasInactivasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_Datos_DPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteEstadoCuentaAhorroAportacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteImpresionLibretaAhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReportePagoInteresDiariaDPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteTasasPasivasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteTodasCuentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarAsocTransferenciasAutomaticasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarAsocTransferenciasAutomaticasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocTransferenciasAutomaticasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private recuperarHojaLibreataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private postearMovimientosAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private movimientosPendientesPostearOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RptContratoDepositoPlazoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RptContratoAhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private generarNoCuentaTipoAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private procesarProvisionAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAhCuentasInactivasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private activarCuentasInactivasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAhContratos_AhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarDatosLibretaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QuitarPosteosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AsociadosISROperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAhAutorizacionTasasDpfOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarAhAutorizacionTasasDpfOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarAhAutorizacionTasasDpfOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarAhAutorizacionTasasDpfOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarTiposAhorrosActivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetiroAhorrosChequeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Temp_Consultar_CtasInactivasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAhMovimientosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarMov_AportacionesDifOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarMov_AhorrosDifOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Transferencia_IntDpf_CuotaAportacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cargar_PlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RptTransferenciasAutoAhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCtasTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrasnferenciasAutomaticas_AhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AsignarPrestamo_TransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidarCtas_TransferenciasAutomaticasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_TASAPASIVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SALDO_CUENTASAHORROOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SALDO_CUENTASAPORTACIONESOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SALDO_CUENTASDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizaCuentasInactivasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizaEstructuraCuentasInactivasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizaListadoCuentasInactivasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AgregarDetalleTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlmacenaEstructuraSeleccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutorizaDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CalculoProvisionInteresesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelarCuentaAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargarDatosPrestamosPignoradosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cartera_DPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Comp_Reversiones_AhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaPosteoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAutorizadoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarComisionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCtasAhorroDUIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCuentaAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCuentaAhorroAgrupadaParametroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCuentaAhorroTipoAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCuentaPignoradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDestinoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDet_PlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarFechaCuotaPlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarFechasCapitalizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarFechasCapitalizacionTipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarParametrosxTipoAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPignoracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPlanAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarProvisionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarReposicionCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarReposicionLibretaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRutasCobroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTasasInteresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipoAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CorrelativoAhReversionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cuentas_CanceladasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cuentas_PignoradasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DPF_AnuladosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaComisionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarAutorizadoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCertificadosDPFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrAhorro_wsLibAhorro
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RepValorFecha_AhorrosCompleted As RepValorFecha_AhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event RepVencimientosCompleted As RepVencimientosCompletedEventHandler
        
        '''<remarks/>
        Public Event ReversionAhorrosCompleted As ReversionAhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ReversionAportacionesCompleted As ReversionAportacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ReversionMovimientosCompleted As ReversionMovimientosCompletedEventHandler
        
        '''<remarks/>
        Public Event ReversionMovimientosxTransferenciaCompleted As ReversionMovimientosxTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event SaldosAhorrosCompleted As SaldosAhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event SaldosAhorros_RangoCompleted As SaldosAhorros_RangoCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferenciaAutomaticaCuentasCompleted As TransferenciaAutomaticaCuentasCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferenciaCuentasCompleted As TransferenciaCuentasCompletedEventHandler
        
        '''<remarks/>
        Public Event Vencimientos_DPFCompleted As Vencimientos_DPFCompletedEventHandler
        
        '''<remarks/>
        Public Event VencimientosDiarios_DPFCompleted As VencimientosDiarios_DPFCompletedEventHandler
        
        '''<remarks/>
        Public Event VencimientosDiarios_DPF_ProyectadosCompleted As VencimientosDiarios_DPF_ProyectadosCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaSumaMontoDetalleTransferenciaCompleted As VerificaSumaMontoDetalleTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCuentaAhorroCompleted As EliminarCuentaAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCuentaPignoradaCompleted As EliminarCuentaPignoradaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDestinoCompleted As EliminarDestinoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDet_PlanAhorroCompleted As EliminarDet_PlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDetalleTransferenciaCompleted As EliminarDetalleTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarFechasCapitalizacionCompleted As EliminarFechasCapitalizacionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPlanAhorroCompleted As EliminarPlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarReposicionCertificadosDPFCompleted As EliminarReposicionCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarReposicionLibretaCompleted As EliminarReposicionLibretaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarTipoAhorroCompleted As EliminarTipoAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaRutasCobroCompleted As EliminaRutasCobroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaTasasInteresCompleted As EliminaTasasInteresCompletedEventHandler
        
        '''<remarks/>
        Public Event ExportacionDatos_AhorrosCompleted As ExportacionDatos_AhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ExportacionDatos_DPFCompleted As ExportacionDatos_DPFCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraNoCuentaCompleted As GeneraNoCuentaCompletedEventHandler
        
        '''<remarks/>
        Public Event Gerencial_Cartera_DPFCompleted As Gerencial_Cartera_DPFCompletedEventHandler
        
        '''<remarks/>
        Public Event Gerencial_MovCuentasAhorroCompleted As Gerencial_MovCuentasAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event InicializacionLibretaCompleted As InicializacionLibretaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaParametrosCompleted As InsertaParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarAutorizadoRetiroCompleted As InsertarAutorizadoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBeneficiariosCompleted As InsertarBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCertificadosDPFCompleted As InsertarCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarComisionesCompleted As InsertarComisionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCuentaAhorroCompleted As InsertarCuentaAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCuentaPignoradaCompleted As InsertarCuentaPignoradaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDestinoCompleted As InsertarDestinoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDet_PlanAhorroCompleted As InsertarDet_PlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarFechasCapitalizacionCompleted As InsertarFechasCapitalizacionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPlanAhorroCompleted As InsertarPlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarReposicionCertificadosDPFCompleted As InsertarReposicionCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarReposicionLibretaCompleted As InsertarReposicionLibretaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarRutasCobroCompleted As InsertarRutasCobroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarTipoAhorroCompleted As InsertarTipoAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaTasasInteresCompleted As InsertaTasasInteresCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaComisionesCompleted As ModificaComisionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaParametrosCompleted As ModificaParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAhCuentasAhorroCompleted As ModificarAhCuentasAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAutorizadoRetiroCompleted As ModificarAutorizadoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarBeneficiariosCompleted As ModificarBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCertificadosDPFCompleted As ModificarCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCuentaAhorroCompleted As ModificarCuentaAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCuentaPignoradaCompleted As ModificarCuentaPignoradaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDestinoCompleted As ModificarDestinoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDet_PlanAhorroCompleted As ModificarDet_PlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDetalleTransferenciaCompleted As ModificarDetalleTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarFechasCapitalizacionCompleted As ModificarFechasCapitalizacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPlanAhorroCompleted As ModificarPlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPRPrestamosCompleted As ModificarPRPrestamosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarReposicionCertificadosDPFCompleted As ModificarReposicionCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarReposicionLibretaCompleted As ModificarReposicionLibretaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRutasCobroCompleted As ModificarRutasCobroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarTipoAhorroCompleted As ModificarTipoAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaTasasInteresCompleted As ModificaTasasInteresCompletedEventHandler
        
        '''<remarks/>
        Public Event MostrarMovimientosCompleted As MostrarMovimientosCompletedEventHandler
        
        '''<remarks/>
        Public Event MovimientosAhorrosCompleted As MovimientosAhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoAutorizadoRetiroCompleted As ObtenerCorrelativoAutorizadoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoBeneficiariosCompleted As ObtenerCorrelativoBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoCertificadosDPFCompleted As ObtenerCorrelativoCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoCuentaAhorroCompleted As ObtenerCorrelativoCuentaAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoDestinoCompleted As ObtenerCorrelativoDestinoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoDet_PlanAhorroCompleted As ObtenerCorrelativoDet_PlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoPlanAhorroCompleted As ObtenerCorrelativoPlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoReposicionCertificadosDPFCompleted As ObtenerCorrelativoReposicionCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoReposicionLibretaCompleted As ObtenerCorrelativoReposicionLibretaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoTipoAhorroCompleted As ObtenerCorrelativoTipoAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoTransferenciaCompleted As ObtenerCorrelativoTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDetalleTransferenciaVacioCompleted As ObtenerDetalleTransferenciaVacioCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerEstructuraSeleccionCompleted As ObtenerEstructuraSeleccionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtieneDigitoVerificadorCompleted As ObtieneDigitoVerificadorCompletedEventHandler
        
        '''<remarks/>
        Public Event Orden_DescuentoCompleted As Orden_DescuentoCompletedEventHandler
        
        '''<remarks/>
        Public Event PignoracionCuentasAhorroCompleted As PignoracionCuentasAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event PlanAhorroCompleted As PlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event PosteoMovimientosCompleted As PosteoMovimientosCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesoProrrogaCuentasCompleted As ProcesoProrrogaCuentasCompletedEventHandler
        
        '''<remarks/>
        Public Event Provisiones_AhorrosCompleted As Provisiones_AhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event RepCancelacion_TransfCompleted As RepCancelacion_TransfCompletedEventHandler
        
        '''<remarks/>
        Public Event RepCobroInactividadCompleted As RepCobroInactividadCompletedEventHandler
        
        '''<remarks/>
        Public Event RepCtasAhorroCompleted As RepCtasAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_CuentasInactivasCompleted As Reporte_CuentasInactivasCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_Datos_DPFCompleted As Reporte_Datos_DPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteEstadoCuentaAhorroAportacionesCompleted As ReporteEstadoCuentaAhorroAportacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteImpresionLibretaAhorrosCompleted As ReporteImpresionLibretaAhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ReportePagoInteresDiariaDPCompleted As ReportePagoInteresDiariaDPCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteTasasPasivasCompleted As ReporteTasasPasivasCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteTodasCuentasCompleted As ReporteTodasCuentasCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarAsocTransferenciasAutomaticasCompleted As insertarAsocTransferenciasAutomaticasCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarAsocTransferenciasAutomaticasCompleted As modificarAsocTransferenciasAutomaticasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocTransferenciasAutomaticasCompleted As consultarAsocTransferenciasAutomaticasCompletedEventHandler
        
        '''<remarks/>
        Public Event recuperarHojaLibreataCompleted As recuperarHojaLibreataCompletedEventHandler
        
        '''<remarks/>
        Public Event postearMovimientosAhorroCompleted As postearMovimientosAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event movimientosPendientesPostearCompleted As movimientosPendientesPostearCompletedEventHandler
        
        '''<remarks/>
        Public Event RptContratoDepositoPlazoCompleted As RptContratoDepositoPlazoCompletedEventHandler
        
        '''<remarks/>
        Public Event RptContratoAhorrosCompleted As RptContratoAhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event generarNoCuentaTipoAhorroCompleted As generarNoCuentaTipoAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event procesarProvisionAhorroCompleted As procesarProvisionAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAhCuentasInactivasCompleted As consultarAhCuentasInactivasCompletedEventHandler
        
        '''<remarks/>
        Public Event activarCuentasInactivasCompleted As activarCuentasInactivasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAhContratos_AhorroCompleted As consultarAhContratos_AhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarDatosLibretaCompleted As consultarDatosLibretaCompletedEventHandler
        
        '''<remarks/>
        Public Event QuitarPosteosCompleted As QuitarPosteosCompletedEventHandler
        
        '''<remarks/>
        Public Event AsociadosISRCompleted As AsociadosISRCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAhAutorizacionTasasDpfCompleted As consultarAhAutorizacionTasasDpfCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarAhAutorizacionTasasDpfCompleted As eliminarAhAutorizacionTasasDpfCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarAhAutorizacionTasasDpfCompleted As modificarAhAutorizacionTasasDpfCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarAhAutorizacionTasasDpfCompleted As insertarAhAutorizacionTasasDpfCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarTiposAhorrosActivosCompleted As consultarTiposAhorrosActivosCompletedEventHandler
        
        '''<remarks/>
        Public Event RetiroAhorrosChequeCompleted As RetiroAhorrosChequeCompletedEventHandler
        
        '''<remarks/>
        Public Event Temp_Consultar_CtasInactivasCompleted As Temp_Consultar_CtasInactivasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAhMovimientosCompleted As ConsultarAhMovimientosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarMov_AportacionesDifCompleted As ConsultarMov_AportacionesDifCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarMov_AhorrosDifCompleted As ConsultarMov_AhorrosDifCompletedEventHandler
        
        '''<remarks/>
        Public Event Transferencia_IntDpf_CuotaAportacionesCompleted As Transferencia_IntDpf_CuotaAportacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Cargar_PlanillaCompleted As Cargar_PlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event RptTransferenciasAutoAhorrosCompleted As RptTransferenciasAutoAhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCtasTransferenciaCompleted As ConsultarCtasTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event TrasnferenciasAutomaticas_AhorrosCompleted As TrasnferenciasAutomaticas_AhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event AsignarPrestamo_TransferenciaCompleted As AsignarPrestamo_TransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidarCtas_TransferenciasAutomaticasCompleted As ValidarCtas_TransferenciasAutomaticasCompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_TASAPASIVACompleted As RPT_TASAPASIVACompletedEventHandler
        
        '''<remarks/>
        Public Event SALDO_CUENTASAHORROCompleted As SALDO_CUENTASAHORROCompletedEventHandler
        
        '''<remarks/>
        Public Event SALDO_CUENTASAPORTACIONESCompleted As SALDO_CUENTASAPORTACIONESCompletedEventHandler
        
        '''<remarks/>
        Public Event SALDO_CUENTASDPFCompleted As SALDO_CUENTASDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizaCuentasInactivasCompleted As ActualizaCuentasInactivasCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizaEstructuraCuentasInactivasCompleted As ActualizaEstructuraCuentasInactivasCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizaListadoCuentasInactivasCompleted As ActualizaListadoCuentasInactivasCompletedEventHandler
        
        '''<remarks/>
        Public Event AgregarDetalleTransferenciaCompleted As AgregarDetalleTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event AlmacenaEstructuraSeleccionCompleted As AlmacenaEstructuraSeleccionCompletedEventHandler
        
        '''<remarks/>
        Public Event AutorizaDatosCompleted As AutorizaDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event CalculoProvisionInteresesCompleted As CalculoProvisionInteresesCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelarCuentaAhorroCompleted As CancelarCuentaAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event CargarDatosPrestamosPignoradosCompleted As CargarDatosPrestamosPignoradosCompletedEventHandler
        
        '''<remarks/>
        Public Event Cartera_DPFCompleted As Cartera_DPFCompletedEventHandler
        
        '''<remarks/>
        Public Event Comp_Reversiones_AhorrosCompleted As Comp_Reversiones_AhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaPosteoCompleted As ConsultaPosteoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAutorizadoRetiroCompleted As ConsultarAutorizadoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBeneficiariosCompleted As ConsultarBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCertificadosDPFCompleted As ConsultarCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarComisionesCompleted As ConsultarComisionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCtasAhorroDUICompleted As ConsultarCtasAhorroDUICompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCuentaAhorroCompleted As ConsultarCuentaAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCuentaAhorroAgrupadaParametroCompleted As ConsultarCuentaAhorroAgrupadaParametroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCuentaAhorroTipoAhorroCompleted As ConsultarCuentaAhorroTipoAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCuentaPignoradaCompleted As ConsultarCuentaPignoradaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDestinoCompleted As ConsultarDestinoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDet_PlanAhorroCompleted As ConsultarDet_PlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarFechaCuotaPlanAhorroCompleted As ConsultarFechaCuotaPlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarFechasCapitalizacionCompleted As ConsultarFechasCapitalizacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarFechasCapitalizacionTipoCompleted As ConsultarFechasCapitalizacionTipoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarParametrosCompleted As ConsultarParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarParametrosxTipoAhorroCompleted As ConsultarParametrosxTipoAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPignoracionCompleted As ConsultarPignoracionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPlanAhorroCompleted As ConsultarPlanAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarProvisionesCompleted As ConsultarProvisionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarReposicionCertificadosDPFCompleted As ConsultarReposicionCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarReposicionLibretaCompleted As ConsultarReposicionLibretaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRutasCobroCompleted As ConsultarRutasCobroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTasasInteresCompleted As ConsultarTasasInteresCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipoAhorroCompleted As ConsultarTipoAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTransferenciaCompleted As ConsultarTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event CorrelativoAhReversionCompleted As CorrelativoAhReversionCompletedEventHandler
        
        '''<remarks/>
        Public Event Cuentas_CanceladasCompleted As Cuentas_CanceladasCompletedEventHandler
        
        '''<remarks/>
        Public Event Cuentas_PignoradasCompleted As Cuentas_PignoradasCompletedEventHandler
        
        '''<remarks/>
        Public Event DPF_AnuladosCompleted As DPF_AnuladosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaComisionesCompleted As EliminaComisionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaParametrosCompleted As EliminaParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarAutorizadoRetiroCompleted As EliminarAutorizadoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBeneficiariosCompleted As EliminarBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCertificadosDPFCompleted As EliminarCertificadosDPFCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RepValorFecha_Ahorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepValorFecha_Ahorros(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepValorFecha_Ahorros", New Object() {pFecha, pFecha2, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepValorFecha_Ahorros(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepValorFecha_Ahorros", New Object() {pFecha, pFecha2, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepValorFecha_Ahorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepValorFecha_AhorrosAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepValorFecha_AhorrosAsync(pFecha, pFecha2, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepValorFecha_AhorrosAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepValorFecha_AhorrosOperationCompleted Is Nothing) Then
                Me.RepValorFecha_AhorrosOperationCompleted = AddressOf Me.OnRepValorFecha_AhorrosOperationCompleted
            End If
            Me.InvokeAsync("RepValorFecha_Ahorros", New Object() {pFecha, pFecha2, pUs, pPa, pSucursal}, Me.RepValorFecha_AhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepValorFecha_AhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepValorFecha_AhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepValorFecha_AhorrosCompleted(Me, New RepValorFecha_AhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RepVencimientos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepVencimientos(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pCodTipoAhorro As String, ByVal pTodosTiposAhorro As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepVencimientos", New Object() {pFecIni, pFecFin, pCodTipoAhorro, pTodosTiposAhorro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepVencimientos(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pCodTipoAhorro As String, ByVal pTodosTiposAhorro As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepVencimientos", New Object() {pFecIni, pFecFin, pCodTipoAhorro, pTodosTiposAhorro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepVencimientos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepVencimientosAsync(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pCodTipoAhorro As String, ByVal pTodosTiposAhorro As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RepVencimientosAsync(pFecIni, pFecFin, pCodTipoAhorro, pTodosTiposAhorro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepVencimientosAsync(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pCodTipoAhorro As String, ByVal pTodosTiposAhorro As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepVencimientosOperationCompleted Is Nothing) Then
                Me.RepVencimientosOperationCompleted = AddressOf Me.OnRepVencimientosOperationCompleted
            End If
            Me.InvokeAsync("RepVencimientos", New Object() {pFecIni, pFecFin, pCodTipoAhorro, pTodosTiposAhorro, pUsuario, pPassword, pSucursal}, Me.RepVencimientosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepVencimientosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepVencimientosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepVencimientosCompleted(Me, New RepVencimientosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReversionAhorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReversionAhorros(ByVal pCodReversion As String, ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pFecha As Date, ByVal pTipoMov As String, ByVal pMonto As Double, ByVal pNoDocumento As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pOrigen As String, ByVal pObs As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ReversionAhorros", New Object() {pCodReversion, pNoCuenta, pCodTipoAhorro, pFecha, pTipoMov, pMonto, pNoDocumento, pAnnio, pTipo, pOrigen, pObs, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginReversionAhorros( _
                    ByVal pCodReversion As String,  _
                    ByVal pNoCuenta As String,  _
                    ByVal pCodTipoAhorro As String,  _
                    ByVal pFecha As Date,  _
                    ByVal pTipoMov As String,  _
                    ByVal pMonto As Double,  _
                    ByVal pNoDocumento As String,  _
                    ByVal pAnnio As Integer,  _
                    ByVal pTipo As String,  _
                    ByVal pOrigen As String,  _
                    ByVal pObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReversionAhorros", New Object() {pCodReversion, pNoCuenta, pCodTipoAhorro, pFecha, pTipoMov, pMonto, pNoDocumento, pAnnio, pTipo, pOrigen, pObs, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReversionAhorros(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReversionAhorrosAsync(ByVal pCodReversion As String, ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pFecha As Date, ByVal pTipoMov As String, ByVal pMonto As Double, ByVal pNoDocumento As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pOrigen As String, ByVal pObs As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReversionAhorrosAsync(pCodReversion, pNoCuenta, pCodTipoAhorro, pFecha, pTipoMov, pMonto, pNoDocumento, pAnnio, pTipo, pOrigen, pObs, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReversionAhorrosAsync(ByVal pCodReversion As String, ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pFecha As Date, ByVal pTipoMov As String, ByVal pMonto As Double, ByVal pNoDocumento As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pOrigen As String, ByVal pObs As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReversionAhorrosOperationCompleted Is Nothing) Then
                Me.ReversionAhorrosOperationCompleted = AddressOf Me.OnReversionAhorrosOperationCompleted
            End If
            Me.InvokeAsync("ReversionAhorros", New Object() {pCodReversion, pNoCuenta, pCodTipoAhorro, pFecha, pTipoMov, pMonto, pNoDocumento, pAnnio, pTipo, pOrigen, pObs, pUsuario, pPassword, pSucursal}, Me.ReversionAhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReversionAhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReversionAhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReversionAhorrosCompleted(Me, New ReversionAhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReversionAportaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReversionAportaciones(ByVal pCodReversion As String, ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pFecha As Date, ByVal pTipoMov As String, ByVal pMonto As Double, ByVal pNoDocumento As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pOrigen As String, ByVal pObs As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ReversionAportaciones", New Object() {pCodReversion, pNoCuenta, pCodTipoAhorro, pFecha, pTipoMov, pMonto, pNoDocumento, pAnnio, pTipo, pOrigen, pObs, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginReversionAportaciones( _
                    ByVal pCodReversion As String,  _
                    ByVal pNoCuenta As String,  _
                    ByVal pCodTipoAhorro As String,  _
                    ByVal pFecha As Date,  _
                    ByVal pTipoMov As String,  _
                    ByVal pMonto As Double,  _
                    ByVal pNoDocumento As String,  _
                    ByVal pAnnio As Integer,  _
                    ByVal pTipo As String,  _
                    ByVal pOrigen As String,  _
                    ByVal pObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReversionAportaciones", New Object() {pCodReversion, pNoCuenta, pCodTipoAhorro, pFecha, pTipoMov, pMonto, pNoDocumento, pAnnio, pTipo, pOrigen, pObs, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReversionAportaciones(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReversionAportacionesAsync(ByVal pCodReversion As String, ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pFecha As Date, ByVal pTipoMov As String, ByVal pMonto As Double, ByVal pNoDocumento As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pOrigen As String, ByVal pObs As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReversionAportacionesAsync(pCodReversion, pNoCuenta, pCodTipoAhorro, pFecha, pTipoMov, pMonto, pNoDocumento, pAnnio, pTipo, pOrigen, pObs, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReversionAportacionesAsync(ByVal pCodReversion As String, ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pFecha As Date, ByVal pTipoMov As String, ByVal pMonto As Double, ByVal pNoDocumento As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pOrigen As String, ByVal pObs As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReversionAportacionesOperationCompleted Is Nothing) Then
                Me.ReversionAportacionesOperationCompleted = AddressOf Me.OnReversionAportacionesOperationCompleted
            End If
            Me.InvokeAsync("ReversionAportaciones", New Object() {pCodReversion, pNoCuenta, pCodTipoAhorro, pFecha, pTipoMov, pMonto, pNoDocumento, pAnnio, pTipo, pOrigen, pObs, pUsuario, pPassword, pSucursal}, Me.ReversionAportacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnReversionAportacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReversionAportacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReversionAportacionesCompleted(Me, New ReversionAportacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReversionMovimientos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReversionMovimientos(ByVal pNoDoc As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pFecha As Date, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ReversionMovimientos", New Object() {pNoDoc, pAnnio, pTipo, pFecha, pNoCaja, pCodCajero, pObservacion, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginReversionMovimientos(ByVal pNoDoc As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pFecha As Date, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReversionMovimientos", New Object() {pNoDoc, pAnnio, pTipo, pFecha, pNoCaja, pCodCajero, pObservacion, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReversionMovimientos(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReversionMovimientosAsync(ByVal pNoDoc As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pFecha As Date, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReversionMovimientosAsync(pNoDoc, pAnnio, pTipo, pFecha, pNoCaja, pCodCajero, pObservacion, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReversionMovimientosAsync(ByVal pNoDoc As String, ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pFecha As Date, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReversionMovimientosOperationCompleted Is Nothing) Then
                Me.ReversionMovimientosOperationCompleted = AddressOf Me.OnReversionMovimientosOperationCompleted
            End If
            Me.InvokeAsync("ReversionMovimientos", New Object() {pNoDoc, pAnnio, pTipo, pFecha, pNoCaja, pCodCajero, pObservacion, pUsuario, pPassword, pSucursal}, Me.ReversionMovimientosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReversionMovimientosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReversionMovimientosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReversionMovimientosCompleted(Me, New ReversionMovimientosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReversionMovimientosxTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReversionMovimientosxTransferencia(ByVal pNoDoc As String, ByVal pFecTransf As Date, ByVal pFecha As Date, ByVal pNoReversion As String, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ReversionMovimientosxTransferencia", New Object() {pNoDoc, pFecTransf, pFecha, pNoReversion, pNoCaja, pCodCajero, pObservacion, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginReversionMovimientosxTransferencia(ByVal pNoDoc As String, ByVal pFecTransf As Date, ByVal pFecha As Date, ByVal pNoReversion As String, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReversionMovimientosxTransferencia", New Object() {pNoDoc, pFecTransf, pFecha, pNoReversion, pNoCaja, pCodCajero, pObservacion, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReversionMovimientosxTransferencia(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReversionMovimientosxTransferenciaAsync(ByVal pNoDoc As String, ByVal pFecTransf As Date, ByVal pFecha As Date, ByVal pNoReversion As String, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReversionMovimientosxTransferenciaAsync(pNoDoc, pFecTransf, pFecha, pNoReversion, pNoCaja, pCodCajero, pObservacion, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReversionMovimientosxTransferenciaAsync(ByVal pNoDoc As String, ByVal pFecTransf As Date, ByVal pFecha As Date, ByVal pNoReversion As String, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReversionMovimientosxTransferenciaOperationCompleted Is Nothing) Then
                Me.ReversionMovimientosxTransferenciaOperationCompleted = AddressOf Me.OnReversionMovimientosxTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("ReversionMovimientosxTransferencia", New Object() {pNoDoc, pFecTransf, pFecha, pNoReversion, pNoCaja, pCodCajero, pObservacion, pUsuario, pPassword, pSucursal}, Me.ReversionMovimientosxTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnReversionMovimientosxTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReversionMovimientosxTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReversionMovimientosxTransferenciaCompleted(Me, New ReversionMovimientosxTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/SaldosAhorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaldosAhorros(ByVal pFechaIni As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pFiltrarCanceladas As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SaldosAhorros", New Object() {pFechaIni, pTipoAhorro, pFiltrarCanceladas, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSaldosAhorros(ByVal pFechaIni As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pFiltrarCanceladas As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SaldosAhorros", New Object() {pFechaIni, pTipoAhorro, pFiltrarCanceladas, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSaldosAhorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaldosAhorrosAsync(ByVal pFechaIni As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pFiltrarCanceladas As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.SaldosAhorrosAsync(pFechaIni, pTipoAhorro, pFiltrarCanceladas, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaldosAhorrosAsync(ByVal pFechaIni As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pFiltrarCanceladas As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.SaldosAhorrosOperationCompleted Is Nothing) Then
                Me.SaldosAhorrosOperationCompleted = AddressOf Me.OnSaldosAhorrosOperationCompleted
            End If
            Me.InvokeAsync("SaldosAhorros", New Object() {pFechaIni, pTipoAhorro, pFiltrarCanceladas, pUs, pPa, pSucursal}, Me.SaldosAhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaldosAhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaldosAhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaldosAhorrosCompleted(Me, New SaldosAhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/SaldosAhorros_Rango", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaldosAhorros_Rango(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pFiltrarCanceladas As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SaldosAhorros_Rango", New Object() {pFechaIni, pFechaFin, pTipoAhorro, pFiltrarCanceladas, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSaldosAhorros_Rango(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pFiltrarCanceladas As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SaldosAhorros_Rango", New Object() {pFechaIni, pFechaFin, pTipoAhorro, pFiltrarCanceladas, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSaldosAhorros_Rango(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaldosAhorros_RangoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pFiltrarCanceladas As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.SaldosAhorros_RangoAsync(pFechaIni, pFechaFin, pTipoAhorro, pFiltrarCanceladas, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaldosAhorros_RangoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pFiltrarCanceladas As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.SaldosAhorros_RangoOperationCompleted Is Nothing) Then
                Me.SaldosAhorros_RangoOperationCompleted = AddressOf Me.OnSaldosAhorros_RangoOperationCompleted
            End If
            Me.InvokeAsync("SaldosAhorros_Rango", New Object() {pFechaIni, pFechaFin, pTipoAhorro, pFiltrarCanceladas, pUs, pPa, pSucursal}, Me.SaldosAhorros_RangoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaldosAhorros_RangoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaldosAhorros_RangoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaldosAhorros_RangoCompleted(Me, New SaldosAhorros_RangoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/TransferenciaAutomaticaCuentas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferenciaAutomaticaCuentas(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal codCosto As String) As String
            Dim results() As Object = Me.Invoke("TransferenciaAutomaticaCuentas", New Object() {pFecha, pUsuario, pPassword, pSucursal, codCosto})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginTransferenciaAutomaticaCuentas(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal codCosto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TransferenciaAutomaticaCuentas", New Object() {pFecha, pUsuario, pPassword, pSucursal, codCosto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTransferenciaAutomaticaCuentas(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferenciaAutomaticaCuentasAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal codCosto As String)
            Me.TransferenciaAutomaticaCuentasAsync(pFecha, pUsuario, pPassword, pSucursal, codCosto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferenciaAutomaticaCuentasAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal codCosto As String, ByVal userState As Object)
            If (Me.TransferenciaAutomaticaCuentasOperationCompleted Is Nothing) Then
                Me.TransferenciaAutomaticaCuentasOperationCompleted = AddressOf Me.OnTransferenciaAutomaticaCuentasOperationCompleted
            End If
            Me.InvokeAsync("TransferenciaAutomaticaCuentas", New Object() {pFecha, pUsuario, pPassword, pSucursal, codCosto}, Me.TransferenciaAutomaticaCuentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferenciaAutomaticaCuentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferenciaAutomaticaCuentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferenciaAutomaticaCuentasCompleted(Me, New TransferenciaAutomaticaCuentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/TransferenciaCuentas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferenciaCuentas( _
                    ByVal pNoDoc As String,  _
                    ByVal pTipoTransferencia As String,  _
                    ByVal pFecha As Date,  _
                    ByVal pDui As String,  _
                    ByVal pNoSocio As String,  _
                    ByVal pResponsable As String,  _
                    ByVal pMonto As Double,  _
                    ByVal pObservacion As String,  _
                    ByVal pNoCuentaOrigen As String,  _
                    ByVal pCodTransferencia As String,  _
                    ByVal pIdCuenta As String,  _
                    ByVal pTipoMovimiento As String,  _
                    ByVal dsDetalle As System.Data.DataSet,  _
                    ByVal pCodTransaccion As String,  _
                    ByVal pOrigen As String,  _
                    ByVal pNombreAsociado As String,  _
                    ByVal pMembresia As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CodCosto As String) As String
            Dim results() As Object = Me.Invoke("TransferenciaCuentas", New Object() {pNoDoc, pTipoTransferencia, pFecha, pDui, pNoSocio, pResponsable, pMonto, pObservacion, pNoCuentaOrigen, pCodTransferencia, pIdCuenta, pTipoMovimiento, dsDetalle, pCodTransaccion, pOrigen, pNombreAsociado, pMembresia, pUsuario, pPassword, pSucursal, CodCosto})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginTransferenciaCuentas( _
                    ByVal pNoDoc As String,  _
                    ByVal pTipoTransferencia As String,  _
                    ByVal pFecha As Date,  _
                    ByVal pDui As String,  _
                    ByVal pNoSocio As String,  _
                    ByVal pResponsable As String,  _
                    ByVal pMonto As Double,  _
                    ByVal pObservacion As String,  _
                    ByVal pNoCuentaOrigen As String,  _
                    ByVal pCodTransferencia As String,  _
                    ByVal pIdCuenta As String,  _
                    ByVal pTipoMovimiento As String,  _
                    ByVal dsDetalle As System.Data.DataSet,  _
                    ByVal pCodTransaccion As String,  _
                    ByVal pOrigen As String,  _
                    ByVal pNombreAsociado As String,  _
                    ByVal pMembresia As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CodCosto As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TransferenciaCuentas", New Object() {pNoDoc, pTipoTransferencia, pFecha, pDui, pNoSocio, pResponsable, pMonto, pObservacion, pNoCuentaOrigen, pCodTransferencia, pIdCuenta, pTipoMovimiento, dsDetalle, pCodTransaccion, pOrigen, pNombreAsociado, pMembresia, pUsuario, pPassword, pSucursal, CodCosto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTransferenciaCuentas(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferenciaCuentasAsync( _
                    ByVal pNoDoc As String,  _
                    ByVal pTipoTransferencia As String,  _
                    ByVal pFecha As Date,  _
                    ByVal pDui As String,  _
                    ByVal pNoSocio As String,  _
                    ByVal pResponsable As String,  _
                    ByVal pMonto As Double,  _
                    ByVal pObservacion As String,  _
                    ByVal pNoCuentaOrigen As String,  _
                    ByVal pCodTransferencia As String,  _
                    ByVal pIdCuenta As String,  _
                    ByVal pTipoMovimiento As String,  _
                    ByVal dsDetalle As System.Data.DataSet,  _
                    ByVal pCodTransaccion As String,  _
                    ByVal pOrigen As String,  _
                    ByVal pNombreAsociado As String,  _
                    ByVal pMembresia As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CodCosto As String)
            Me.TransferenciaCuentasAsync(pNoDoc, pTipoTransferencia, pFecha, pDui, pNoSocio, pResponsable, pMonto, pObservacion, pNoCuentaOrigen, pCodTransferencia, pIdCuenta, pTipoMovimiento, dsDetalle, pCodTransaccion, pOrigen, pNombreAsociado, pMembresia, pUsuario, pPassword, pSucursal, CodCosto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferenciaCuentasAsync( _
                    ByVal pNoDoc As String,  _
                    ByVal pTipoTransferencia As String,  _
                    ByVal pFecha As Date,  _
                    ByVal pDui As String,  _
                    ByVal pNoSocio As String,  _
                    ByVal pResponsable As String,  _
                    ByVal pMonto As Double,  _
                    ByVal pObservacion As String,  _
                    ByVal pNoCuentaOrigen As String,  _
                    ByVal pCodTransferencia As String,  _
                    ByVal pIdCuenta As String,  _
                    ByVal pTipoMovimiento As String,  _
                    ByVal dsDetalle As System.Data.DataSet,  _
                    ByVal pCodTransaccion As String,  _
                    ByVal pOrigen As String,  _
                    ByVal pNombreAsociado As String,  _
                    ByVal pMembresia As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CodCosto As String,  _
                    ByVal userState As Object)
            If (Me.TransferenciaCuentasOperationCompleted Is Nothing) Then
                Me.TransferenciaCuentasOperationCompleted = AddressOf Me.OnTransferenciaCuentasOperationCompleted
            End If
            Me.InvokeAsync("TransferenciaCuentas", New Object() {pNoDoc, pTipoTransferencia, pFecha, pDui, pNoSocio, pResponsable, pMonto, pObservacion, pNoCuentaOrigen, pCodTransferencia, pIdCuenta, pTipoMovimiento, dsDetalle, pCodTransaccion, pOrigen, pNombreAsociado, pMembresia, pUsuario, pPassword, pSucursal, CodCosto}, Me.TransferenciaCuentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferenciaCuentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferenciaCuentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferenciaCuentasCompleted(Me, New TransferenciaCuentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Vencimientos_DPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Vencimientos_DPF(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Vencimientos_DPF", New Object() {pFechaIni, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginVencimientos_DPF(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Vencimientos_DPF", New Object() {pFechaIni, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVencimientos_DPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Vencimientos_DPFAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Vencimientos_DPFAsync(pFechaIni, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Vencimientos_DPFAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Vencimientos_DPFOperationCompleted Is Nothing) Then
                Me.Vencimientos_DPFOperationCompleted = AddressOf Me.OnVencimientos_DPFOperationCompleted
            End If
            Me.InvokeAsync("Vencimientos_DPF", New Object() {pFechaIni, pUs, pPa, pSucursal}, Me.Vencimientos_DPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnVencimientos_DPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.Vencimientos_DPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Vencimientos_DPFCompleted(Me, New Vencimientos_DPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/VencimientosDiarios_DPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VencimientosDiarios_DPF(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("VencimientosDiarios_DPF", New Object() {pFechaIni, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginVencimientosDiarios_DPF(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VencimientosDiarios_DPF", New Object() {pFechaIni, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVencimientosDiarios_DPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VencimientosDiarios_DPFAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.VencimientosDiarios_DPFAsync(pFechaIni, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VencimientosDiarios_DPFAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VencimientosDiarios_DPFOperationCompleted Is Nothing) Then
                Me.VencimientosDiarios_DPFOperationCompleted = AddressOf Me.OnVencimientosDiarios_DPFOperationCompleted
            End If
            Me.InvokeAsync("VencimientosDiarios_DPF", New Object() {pFechaIni, pUs, pPa, pSucursal}, Me.VencimientosDiarios_DPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnVencimientosDiarios_DPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.VencimientosDiarios_DPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VencimientosDiarios_DPFCompleted(Me, New VencimientosDiarios_DPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/VencimientosDiarios_DPF_Proyectados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VencimientosDiarios_DPF_Proyectados(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("VencimientosDiarios_DPF_Proyectados", New Object() {pFechaIni, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginVencimientosDiarios_DPF_Proyectados(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VencimientosDiarios_DPF_Proyectados", New Object() {pFechaIni, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVencimientosDiarios_DPF_Proyectados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VencimientosDiarios_DPF_ProyectadosAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.VencimientosDiarios_DPF_ProyectadosAsync(pFechaIni, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VencimientosDiarios_DPF_ProyectadosAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VencimientosDiarios_DPF_ProyectadosOperationCompleted Is Nothing) Then
                Me.VencimientosDiarios_DPF_ProyectadosOperationCompleted = AddressOf Me.OnVencimientosDiarios_DPF_ProyectadosOperationCompleted
            End If
            Me.InvokeAsync("VencimientosDiarios_DPF_Proyectados", New Object() {pFechaIni, pUs, pPa, pSucursal}, Me.VencimientosDiarios_DPF_ProyectadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnVencimientosDiarios_DPF_ProyectadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.VencimientosDiarios_DPF_ProyectadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VencimientosDiarios_DPF_ProyectadosCompleted(Me, New VencimientosDiarios_DPF_ProyectadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/VerificaSumaMontoDetalleTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaSumaMontoDetalleTransferencia(ByVal dsDetalle As System.Data.DataSet) As Double
            Dim results() As Object = Me.Invoke("VerificaSumaMontoDetalleTransferencia", New Object() {dsDetalle})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaSumaMontoDetalleTransferencia(ByVal dsDetalle As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaSumaMontoDetalleTransferencia", New Object() {dsDetalle}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaSumaMontoDetalleTransferencia(ByVal asyncResult As System.IAsyncResult) As Double
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaSumaMontoDetalleTransferenciaAsync(ByVal dsDetalle As System.Data.DataSet)
            Me.VerificaSumaMontoDetalleTransferenciaAsync(dsDetalle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaSumaMontoDetalleTransferenciaAsync(ByVal dsDetalle As System.Data.DataSet, ByVal userState As Object)
            If (Me.VerificaSumaMontoDetalleTransferenciaOperationCompleted Is Nothing) Then
                Me.VerificaSumaMontoDetalleTransferenciaOperationCompleted = AddressOf Me.OnVerificaSumaMontoDetalleTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("VerificaSumaMontoDetalleTransferencia", New Object() {dsDetalle}, Me.VerificaSumaMontoDetalleTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaSumaMontoDetalleTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaSumaMontoDetalleTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaSumaMontoDetalleTransferenciaCompleted(Me, New VerificaSumaMontoDetalleTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarCuentaAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCuentaAhorro(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCuentaAhorro", New Object() {pCorrelativo, pKey, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCuentaAhorro(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCuentaAhorro", New Object() {pCorrelativo, pKey, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCuentaAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCuentaAhorroAsync(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarCuentaAhorroAsync(pCorrelativo, pKey, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCuentaAhorroAsync(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCuentaAhorroOperationCompleted Is Nothing) Then
                Me.EliminarCuentaAhorroOperationCompleted = AddressOf Me.OnEliminarCuentaAhorroOperationCompleted
            End If
            Me.InvokeAsync("EliminarCuentaAhorro", New Object() {pCorrelativo, pKey, pUs, pPa, pSucursal}, Me.EliminarCuentaAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCuentaAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCuentaAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCuentaAhorroCompleted(Me, New EliminarCuentaAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarCuentaPignorada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCuentaPignorada(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCuentaPignorada", New Object() {pCorrelativo, pKey, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCuentaPignorada(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCuentaPignorada", New Object() {pCorrelativo, pKey, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCuentaPignorada(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCuentaPignoradaAsync(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarCuentaPignoradaAsync(pCorrelativo, pKey, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCuentaPignoradaAsync(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCuentaPignoradaOperationCompleted Is Nothing) Then
                Me.EliminarCuentaPignoradaOperationCompleted = AddressOf Me.OnEliminarCuentaPignoradaOperationCompleted
            End If
            Me.InvokeAsync("EliminarCuentaPignorada", New Object() {pCorrelativo, pKey, pUs, pPa, pSucursal}, Me.EliminarCuentaPignoradaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCuentaPignoradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCuentaPignoradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCuentaPignoradaCompleted(Me, New EliminarCuentaPignoradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarDestino", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDestino(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDestino", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDestino(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDestino", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDestino(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDestinoAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDestinoAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDestinoAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDestinoOperationCompleted Is Nothing) Then
                Me.EliminarDestinoOperationCompleted = AddressOf Me.OnEliminarDestinoOperationCompleted
            End If
            Me.InvokeAsync("EliminarDestino", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarDestinoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDestinoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDestinoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDestinoCompleted(Me, New EliminarDestinoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarDet_PlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDet_PlanAhorro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDet_PlanAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDet_PlanAhorro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDet_PlanAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDet_PlanAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDet_PlanAhorroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDet_PlanAhorroAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDet_PlanAhorroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDet_PlanAhorroOperationCompleted Is Nothing) Then
                Me.EliminarDet_PlanAhorroOperationCompleted = AddressOf Me.OnEliminarDet_PlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("EliminarDet_PlanAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarDet_PlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDet_PlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDet_PlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDet_PlanAhorroCompleted(Me, New EliminarDet_PlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarDetalleTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDetalleTransferencia(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EliminarDetalleTransferencia", New Object() {dsDetalle, pNumero})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDetalleTransferencia(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDetalleTransferencia", New Object() {dsDetalle, pNumero}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDetalleTransferencia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDetalleTransferenciaAsync(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer)
            Me.EliminarDetalleTransferenciaAsync(dsDetalle, pNumero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDetalleTransferenciaAsync(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal userState As Object)
            If (Me.EliminarDetalleTransferenciaOperationCompleted Is Nothing) Then
                Me.EliminarDetalleTransferenciaOperationCompleted = AddressOf Me.OnEliminarDetalleTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("EliminarDetalleTransferencia", New Object() {dsDetalle, pNumero}, Me.EliminarDetalleTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDetalleTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDetalleTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDetalleTransferenciaCompleted(Me, New EliminarDetalleTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarFechasCapitalizacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarFechasCapitalizacion(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarFechasCapitalizacion", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarFechasCapitalizacion(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarFechasCapitalizacion", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarFechasCapitalizacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarFechasCapitalizacionAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarFechasCapitalizacionAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarFechasCapitalizacionAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarFechasCapitalizacionOperationCompleted Is Nothing) Then
                Me.EliminarFechasCapitalizacionOperationCompleted = AddressOf Me.OnEliminarFechasCapitalizacionOperationCompleted
            End If
            Me.InvokeAsync("EliminarFechasCapitalizacion", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarFechasCapitalizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarFechasCapitalizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarFechasCapitalizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarFechasCapitalizacionCompleted(Me, New EliminarFechasCapitalizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarPlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPlanAhorro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPlanAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPlanAhorro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPlanAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPlanAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPlanAhorroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarPlanAhorroAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPlanAhorroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPlanAhorroOperationCompleted Is Nothing) Then
                Me.EliminarPlanAhorroOperationCompleted = AddressOf Me.OnEliminarPlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("EliminarPlanAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarPlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPlanAhorroCompleted(Me, New EliminarPlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarReposicionCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarReposicionCertificadosDPF(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarReposicionCertificadosDPF", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarReposicionCertificadosDPF(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarReposicionCertificadosDPF", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarReposicionCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarReposicionCertificadosDPFAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarReposicionCertificadosDPFAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarReposicionCertificadosDPFAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarReposicionCertificadosDPFOperationCompleted Is Nothing) Then
                Me.EliminarReposicionCertificadosDPFOperationCompleted = AddressOf Me.OnEliminarReposicionCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("EliminarReposicionCertificadosDPF", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarReposicionCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarReposicionCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarReposicionCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarReposicionCertificadosDPFCompleted(Me, New EliminarReposicionCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarReposicionLibreta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarReposicionLibreta(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarReposicionLibreta", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarReposicionLibreta(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarReposicionLibreta", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarReposicionLibreta(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarReposicionLibretaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarReposicionLibretaAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarReposicionLibretaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarReposicionLibretaOperationCompleted Is Nothing) Then
                Me.EliminarReposicionLibretaOperationCompleted = AddressOf Me.OnEliminarReposicionLibretaOperationCompleted
            End If
            Me.InvokeAsync("EliminarReposicionLibreta", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarReposicionLibretaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarReposicionLibretaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarReposicionLibretaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarReposicionLibretaCompleted(Me, New EliminarReposicionLibretaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarTipoAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarTipoAhorro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarTipoAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarTipoAhorro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarTipoAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarTipoAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoAhorroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarTipoAhorroAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoAhorroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarTipoAhorroOperationCompleted Is Nothing) Then
                Me.EliminarTipoAhorroOperationCompleted = AddressOf Me.OnEliminarTipoAhorroOperationCompleted
            End If
            Me.InvokeAsync("EliminarTipoAhorro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarTipoAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarTipoAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarTipoAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarTipoAhorroCompleted(Me, New EliminarTipoAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminaRutasCobro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaRutasCobro(ByVal pCodRutaCobro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaRutasCobro", New Object() {pCodRutaCobro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaRutasCobro(ByVal pCodRutaCobro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaRutasCobro", New Object() {pCodRutaCobro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaRutasCobro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaRutasCobroAsync(ByVal pCodRutaCobro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminaRutasCobroAsync(pCodRutaCobro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaRutasCobroAsync(ByVal pCodRutaCobro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaRutasCobroOperationCompleted Is Nothing) Then
                Me.EliminaRutasCobroOperationCompleted = AddressOf Me.OnEliminaRutasCobroOperationCompleted
            End If
            Me.InvokeAsync("EliminaRutasCobro", New Object() {pCodRutaCobro, pUsuario, pPassword, pSucursal}, Me.EliminaRutasCobroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaRutasCobroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaRutasCobroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaRutasCobroCompleted(Me, New EliminaRutasCobroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminaTasasInteres", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaTasasInteres(ByVal pCorrelativo As Long, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaTasasInteres", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaTasasInteres(ByVal pCorrelativo As Long, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaTasasInteres", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaTasasInteres(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaTasasInteresAsync(ByVal pCorrelativo As Long, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminaTasasInteresAsync(pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaTasasInteresAsync(ByVal pCorrelativo As Long, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaTasasInteresOperationCompleted Is Nothing) Then
                Me.EliminaTasasInteresOperationCompleted = AddressOf Me.OnEliminaTasasInteresOperationCompleted
            End If
            Me.InvokeAsync("EliminaTasasInteres", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, Me.EliminaTasasInteresOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaTasasInteresOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaTasasInteresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaTasasInteresCompleted(Me, New EliminaTasasInteresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ExportacionDatos_Ahorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExportacionDatos_Ahorros(ByVal pTodos As Boolean, ByVal pFiltro As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ExportacionDatos_Ahorros", New Object() {pTodos, pFiltro, pR1, pR2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginExportacionDatos_Ahorros(ByVal pTodos As Boolean, ByVal pFiltro As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExportacionDatos_Ahorros", New Object() {pTodos, pFiltro, pR1, pR2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndExportacionDatos_Ahorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExportacionDatos_AhorrosAsync(ByVal pTodos As Boolean, ByVal pFiltro As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ExportacionDatos_AhorrosAsync(pTodos, pFiltro, pR1, pR2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportacionDatos_AhorrosAsync(ByVal pTodos As Boolean, ByVal pFiltro As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ExportacionDatos_AhorrosOperationCompleted Is Nothing) Then
                Me.ExportacionDatos_AhorrosOperationCompleted = AddressOf Me.OnExportacionDatos_AhorrosOperationCompleted
            End If
            Me.InvokeAsync("ExportacionDatos_Ahorros", New Object() {pTodos, pFiltro, pR1, pR2, pUsuario, pPassword, pSucursal}, Me.ExportacionDatos_AhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnExportacionDatos_AhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExportacionDatos_AhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExportacionDatos_AhorrosCompleted(Me, New ExportacionDatos_AhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ExportacionDatos_DPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExportacionDatos_DPF(ByVal pTodos As Boolean, ByVal pContrato As Boolean, ByVal pNoCuenta As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ExportacionDatos_DPF", New Object() {pTodos, pContrato, pNoCuenta, pR1, pR2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginExportacionDatos_DPF(ByVal pTodos As Boolean, ByVal pContrato As Boolean, ByVal pNoCuenta As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExportacionDatos_DPF", New Object() {pTodos, pContrato, pNoCuenta, pR1, pR2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndExportacionDatos_DPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExportacionDatos_DPFAsync(ByVal pTodos As Boolean, ByVal pContrato As Boolean, ByVal pNoCuenta As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ExportacionDatos_DPFAsync(pTodos, pContrato, pNoCuenta, pR1, pR2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportacionDatos_DPFAsync(ByVal pTodos As Boolean, ByVal pContrato As Boolean, ByVal pNoCuenta As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ExportacionDatos_DPFOperationCompleted Is Nothing) Then
                Me.ExportacionDatos_DPFOperationCompleted = AddressOf Me.OnExportacionDatos_DPFOperationCompleted
            End If
            Me.InvokeAsync("ExportacionDatos_DPF", New Object() {pTodos, pContrato, pNoCuenta, pR1, pR2, pUsuario, pPassword, pSucursal}, Me.ExportacionDatos_DPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnExportacionDatos_DPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExportacionDatos_DPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExportacionDatos_DPFCompleted(Me, New ExportacionDatos_DPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/GeneraNoCuenta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraNoCuenta(ByVal pTipo As String, ByVal pSucursal As String, ByVal pTipoProducto As String, ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSuc As String) As String
            Dim results() As Object = Me.Invoke("GeneraNoCuenta", New Object() {pTipo, pSucursal, pTipoProducto, pMes, pAnio, pUs, pPa, pSuc})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraNoCuenta(ByVal pTipo As String, ByVal pSucursal As String, ByVal pTipoProducto As String, ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSuc As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraNoCuenta", New Object() {pTipo, pSucursal, pTipoProducto, pMes, pAnio, pUs, pPa, pSuc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraNoCuenta(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraNoCuentaAsync(ByVal pTipo As String, ByVal pSucursal As String, ByVal pTipoProducto As String, ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSuc As String)
            Me.GeneraNoCuentaAsync(pTipo, pSucursal, pTipoProducto, pMes, pAnio, pUs, pPa, pSuc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraNoCuentaAsync(ByVal pTipo As String, ByVal pSucursal As String, ByVal pTipoProducto As String, ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSuc As String, ByVal userState As Object)
            If (Me.GeneraNoCuentaOperationCompleted Is Nothing) Then
                Me.GeneraNoCuentaOperationCompleted = AddressOf Me.OnGeneraNoCuentaOperationCompleted
            End If
            Me.InvokeAsync("GeneraNoCuenta", New Object() {pTipo, pSucursal, pTipoProducto, pMes, pAnio, pUs, pPa, pSuc}, Me.GeneraNoCuentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraNoCuentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraNoCuentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraNoCuentaCompleted(Me, New GeneraNoCuentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Gerencial_Cartera_DPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gerencial_Cartera_DPF(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gerencial_Cartera_DPF", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGerencial_Cartera_DPF(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Gerencial_Cartera_DPF", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGerencial_Cartera_DPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gerencial_Cartera_DPFAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Gerencial_Cartera_DPFAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gerencial_Cartera_DPFAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Gerencial_Cartera_DPFOperationCompleted Is Nothing) Then
                Me.Gerencial_Cartera_DPFOperationCompleted = AddressOf Me.OnGerencial_Cartera_DPFOperationCompleted
            End If
            Me.InvokeAsync("Gerencial_Cartera_DPF", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.Gerencial_Cartera_DPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnGerencial_Cartera_DPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gerencial_Cartera_DPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gerencial_Cartera_DPFCompleted(Me, New Gerencial_Cartera_DPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Gerencial_MovCuentasAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gerencial_MovCuentasAhorro(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gerencial_MovCuentasAhorro", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGerencial_MovCuentasAhorro(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Gerencial_MovCuentasAhorro", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGerencial_MovCuentasAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gerencial_MovCuentasAhorroAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Gerencial_MovCuentasAhorroAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gerencial_MovCuentasAhorroAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Gerencial_MovCuentasAhorroOperationCompleted Is Nothing) Then
                Me.Gerencial_MovCuentasAhorroOperationCompleted = AddressOf Me.OnGerencial_MovCuentasAhorroOperationCompleted
            End If
            Me.InvokeAsync("Gerencial_MovCuentasAhorro", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.Gerencial_MovCuentasAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnGerencial_MovCuentasAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gerencial_MovCuentasAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gerencial_MovCuentasAhorroCompleted(Me, New Gerencial_MovCuentasAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InicializacionLibreta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InicializacionLibreta(ByVal pDui As String, ByVal pNoCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("InicializacionLibreta", New Object() {pDui, pNoCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginInicializacionLibreta(ByVal pDui As String, ByVal pNoCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InicializacionLibreta", New Object() {pDui, pNoCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInicializacionLibreta(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InicializacionLibretaAsync(ByVal pDui As String, ByVal pNoCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InicializacionLibretaAsync(pDui, pNoCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InicializacionLibretaAsync(ByVal pDui As String, ByVal pNoCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InicializacionLibretaOperationCompleted Is Nothing) Then
                Me.InicializacionLibretaOperationCompleted = AddressOf Me.OnInicializacionLibretaOperationCompleted
            End If
            Me.InvokeAsync("InicializacionLibreta", New Object() {pDui, pNoCuenta, pUs, pPa, pSucursal}, Me.InicializacionLibretaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInicializacionLibretaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InicializacionLibretaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InicializacionLibretaCompleted(Me, New InicializacionLibretaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertaParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaParametros(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaParametros", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaParametros(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaParametros", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaParametros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaParametrosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertaParametrosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaParametrosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaParametrosOperationCompleted Is Nothing) Then
                Me.InsertaParametrosOperationCompleted = AddressOf Me.OnInsertaParametrosOperationCompleted
            End If
            Me.InvokeAsync("InsertaParametros", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertaParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaParametrosCompleted(Me, New InsertaParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarAutorizadoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarAutorizadoRetiro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarAutorizadoRetiro", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarAutorizadoRetiro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarAutorizadoRetiro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarAutorizadoRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarAutorizadoRetiroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarAutorizadoRetiroAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarAutorizadoRetiroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarAutorizadoRetiroOperationCompleted Is Nothing) Then
                Me.InsertarAutorizadoRetiroOperationCompleted = AddressOf Me.OnInsertarAutorizadoRetiroOperationCompleted
            End If
            Me.InvokeAsync("InsertarAutorizadoRetiro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarAutorizadoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarAutorizadoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarAutorizadoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarAutorizadoRetiroCompleted(Me, New InsertarAutorizadoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBeneficiarios(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarBeneficiarios", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBeneficiarios(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBeneficiarios", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBeneficiarios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBeneficiariosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarBeneficiariosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBeneficiariosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarBeneficiariosOperationCompleted Is Nothing) Then
                Me.InsertarBeneficiariosOperationCompleted = AddressOf Me.OnInsertarBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("InsertarBeneficiarios", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBeneficiariosCompleted(Me, New InsertarBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCertificadosDPF(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCertificadosDPF", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCertificadosDPF(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCertificadosDPF", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCertificadosDPFAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarCertificadosDPFAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCertificadosDPFAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCertificadosDPFOperationCompleted Is Nothing) Then
                Me.InsertarCertificadosDPFOperationCompleted = AddressOf Me.OnInsertarCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("InsertarCertificadosDPF", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCertificadosDPFCompleted(Me, New InsertarCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarComisiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarComisiones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarComisiones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarComisiones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarComisiones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarComisiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarComisionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarComisionesAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarComisionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarComisionesOperationCompleted Is Nothing) Then
                Me.InsertarComisionesOperationCompleted = AddressOf Me.OnInsertarComisionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarComisiones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarComisionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarComisionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarComisionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarComisionesCompleted(Me, New InsertarComisionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarCuentaAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCuentaAhorro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCuentaAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCuentaAhorro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCuentaAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCuentaAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCuentaAhorroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarCuentaAhorroAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCuentaAhorroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCuentaAhorroOperationCompleted Is Nothing) Then
                Me.InsertarCuentaAhorroOperationCompleted = AddressOf Me.OnInsertarCuentaAhorroOperationCompleted
            End If
            Me.InvokeAsync("InsertarCuentaAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarCuentaAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCuentaAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCuentaAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCuentaAhorroCompleted(Me, New InsertarCuentaAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarCuentaPignorada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCuentaPignorada(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCuentaPignorada", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCuentaPignorada(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCuentaPignorada", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCuentaPignorada(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCuentaPignoradaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarCuentaPignoradaAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCuentaPignoradaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCuentaPignoradaOperationCompleted Is Nothing) Then
                Me.InsertarCuentaPignoradaOperationCompleted = AddressOf Me.OnInsertarCuentaPignoradaOperationCompleted
            End If
            Me.InvokeAsync("InsertarCuentaPignorada", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarCuentaPignoradaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCuentaPignoradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCuentaPignoradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCuentaPignoradaCompleted(Me, New InsertarCuentaPignoradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarDestino", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDestino(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDestino", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDestino(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDestino", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDestino(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDestinoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDestinoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDestinoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDestinoOperationCompleted Is Nothing) Then
                Me.InsertarDestinoOperationCompleted = AddressOf Me.OnInsertarDestinoOperationCompleted
            End If
            Me.InvokeAsync("InsertarDestino", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDestinoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDestinoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDestinoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDestinoCompleted(Me, New InsertarDestinoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarDet_PlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDet_PlanAhorro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDet_PlanAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDet_PlanAhorro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDet_PlanAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDet_PlanAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDet_PlanAhorroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDet_PlanAhorroAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDet_PlanAhorroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDet_PlanAhorroOperationCompleted Is Nothing) Then
                Me.InsertarDet_PlanAhorroOperationCompleted = AddressOf Me.OnInsertarDet_PlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("InsertarDet_PlanAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDet_PlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDet_PlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDet_PlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDet_PlanAhorroCompleted(Me, New InsertarDet_PlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarFechasCapitalizacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarFechasCapitalizacion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarFechasCapitalizacion", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarFechasCapitalizacion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarFechasCapitalizacion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarFechasCapitalizacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarFechasCapitalizacionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarFechasCapitalizacionAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarFechasCapitalizacionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarFechasCapitalizacionOperationCompleted Is Nothing) Then
                Me.InsertarFechasCapitalizacionOperationCompleted = AddressOf Me.OnInsertarFechasCapitalizacionOperationCompleted
            End If
            Me.InvokeAsync("InsertarFechasCapitalizacion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarFechasCapitalizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarFechasCapitalizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarFechasCapitalizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarFechasCapitalizacionCompleted(Me, New InsertarFechasCapitalizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarPlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPlanAhorro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPlanAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPlanAhorro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPlanAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPlanAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPlanAhorroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarPlanAhorroAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPlanAhorroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPlanAhorroOperationCompleted Is Nothing) Then
                Me.InsertarPlanAhorroOperationCompleted = AddressOf Me.OnInsertarPlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("InsertarPlanAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarPlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPlanAhorroCompleted(Me, New InsertarPlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarReposicionCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarReposicionCertificadosDPF(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarReposicionCertificadosDPF", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarReposicionCertificadosDPF(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarReposicionCertificadosDPF", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarReposicionCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarReposicionCertificadosDPFAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarReposicionCertificadosDPFAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarReposicionCertificadosDPFAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarReposicionCertificadosDPFOperationCompleted Is Nothing) Then
                Me.InsertarReposicionCertificadosDPFOperationCompleted = AddressOf Me.OnInsertarReposicionCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("InsertarReposicionCertificadosDPF", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarReposicionCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarReposicionCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarReposicionCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarReposicionCertificadosDPFCompleted(Me, New InsertarReposicionCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarReposicionLibreta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarReposicionLibreta(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarReposicionLibreta", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarReposicionLibreta(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarReposicionLibreta", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarReposicionLibreta(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarReposicionLibretaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarReposicionLibretaAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarReposicionLibretaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarReposicionLibretaOperationCompleted Is Nothing) Then
                Me.InsertarReposicionLibretaOperationCompleted = AddressOf Me.OnInsertarReposicionLibretaOperationCompleted
            End If
            Me.InvokeAsync("InsertarReposicionLibreta", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarReposicionLibretaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarReposicionLibretaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarReposicionLibretaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarReposicionLibretaCompleted(Me, New InsertarReposicionLibretaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarRutasCobro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRutasCobro(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarRutasCobro", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarRutasCobro(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarRutasCobro", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarRutasCobro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRutasCobroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarRutasCobroAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRutasCobroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarRutasCobroOperationCompleted Is Nothing) Then
                Me.InsertarRutasCobroOperationCompleted = AddressOf Me.OnInsertarRutasCobroOperationCompleted
            End If
            Me.InvokeAsync("InsertarRutasCobro", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarRutasCobroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRutasCobroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRutasCobroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRutasCobroCompleted(Me, New InsertarRutasCobroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertarTipoAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarTipoAhorro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarTipoAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarTipoAhorro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarTipoAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarTipoAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoAhorroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarTipoAhorroAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoAhorroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarTipoAhorroOperationCompleted Is Nothing) Then
                Me.InsertarTipoAhorroOperationCompleted = AddressOf Me.OnInsertarTipoAhorroOperationCompleted
            End If
            Me.InvokeAsync("InsertarTipoAhorro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarTipoAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarTipoAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarTipoAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarTipoAhorroCompleted(Me, New InsertarTipoAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/InsertaTasasInteres", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaTasasInteres(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaTasasInteres", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaTasasInteres(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaTasasInteres", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaTasasInteres(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaTasasInteresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertaTasasInteresAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaTasasInteresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaTasasInteresOperationCompleted Is Nothing) Then
                Me.InsertaTasasInteresOperationCompleted = AddressOf Me.OnInsertaTasasInteresOperationCompleted
            End If
            Me.InvokeAsync("InsertaTasasInteres", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertaTasasInteresOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaTasasInteresOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaTasasInteresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaTasasInteresCompleted(Me, New InsertaTasasInteresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificaComisiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaComisiones(ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaComisiones", New Object() {pCamposyValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaComisiones(ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaComisiones", New Object() {pCamposyValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaComisiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaComisionesAsync(ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaComisionesAsync(pCamposyValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaComisionesAsync(ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaComisionesOperationCompleted Is Nothing) Then
                Me.ModificaComisionesOperationCompleted = AddressOf Me.OnModificaComisionesOperationCompleted
            End If
            Me.InvokeAsync("ModificaComisiones", New Object() {pCamposyValores, pUsuario, pPassword, pSucursal}, Me.ModificaComisionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaComisionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaComisionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaComisionesCompleted(Me, New ModificaComisionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificaParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaParametros(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaParametros", New Object() {pCorrelativo, pCamposyValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaParametros(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaParametros", New Object() {pCorrelativo, pCamposyValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaParametros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaParametrosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaParametrosAsync(pCorrelativo, pCamposyValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaParametrosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaParametrosOperationCompleted Is Nothing) Then
                Me.ModificaParametrosOperationCompleted = AddressOf Me.OnModificaParametrosOperationCompleted
            End If
            Me.InvokeAsync("ModificaParametros", New Object() {pCorrelativo, pCamposyValores, pUsuario, pPassword, pSucursal}, Me.ModificaParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaParametrosCompleted(Me, New ModificaParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarAhCuentasAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAhCuentasAhorro(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAhCuentasAhorro", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAhCuentasAhorro(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAhCuentasAhorro", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAhCuentasAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAhCuentasAhorroAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarAhCuentasAhorroAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAhCuentasAhorroAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAhCuentasAhorroOperationCompleted Is Nothing) Then
                Me.ModificarAhCuentasAhorroOperationCompleted = AddressOf Me.OnModificarAhCuentasAhorroOperationCompleted
            End If
            Me.InvokeAsync("ModificarAhCuentasAhorro", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarAhCuentasAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAhCuentasAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAhCuentasAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAhCuentasAhorroCompleted(Me, New ModificarAhCuentasAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarAutorizadoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAutorizadoRetiro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAutorizadoRetiro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAutorizadoRetiro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAutorizadoRetiro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAutorizadoRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAutorizadoRetiroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarAutorizadoRetiroAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAutorizadoRetiroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAutorizadoRetiroOperationCompleted Is Nothing) Then
                Me.ModificarAutorizadoRetiroOperationCompleted = AddressOf Me.OnModificarAutorizadoRetiroOperationCompleted
            End If
            Me.InvokeAsync("ModificarAutorizadoRetiro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarAutorizadoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAutorizadoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAutorizadoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAutorizadoRetiroCompleted(Me, New ModificarAutorizadoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarBeneficiarios(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarBeneficiarios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarBeneficiarios(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBeneficiarios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarBeneficiarios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarBeneficiariosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarBeneficiariosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarBeneficiariosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarBeneficiariosOperationCompleted Is Nothing) Then
                Me.ModificarBeneficiariosOperationCompleted = AddressOf Me.OnModificarBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("ModificarBeneficiarios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBeneficiariosCompleted(Me, New ModificarBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCertificadosDPF(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCertificadosDPF", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCertificadosDPF(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCertificadosDPF", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCertificadosDPFAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarCertificadosDPFAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCertificadosDPFAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCertificadosDPFOperationCompleted Is Nothing) Then
                Me.ModificarCertificadosDPFOperationCompleted = AddressOf Me.OnModificarCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("ModificarCertificadosDPF", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCertificadosDPFCompleted(Me, New ModificarCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarCuentaAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCuentaAhorro(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCuentaAhorro", New Object() {pCorrelativo, pKey, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCuentaAhorro(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCuentaAhorro", New Object() {pCorrelativo, pKey, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCuentaAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCuentaAhorroAsync(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarCuentaAhorroAsync(pCorrelativo, pKey, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCuentaAhorroAsync(ByVal pCorrelativo As String, ByVal pKey As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCuentaAhorroOperationCompleted Is Nothing) Then
                Me.ModificarCuentaAhorroOperationCompleted = AddressOf Me.OnModificarCuentaAhorroOperationCompleted
            End If
            Me.InvokeAsync("ModificarCuentaAhorro", New Object() {pCorrelativo, pKey, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarCuentaAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCuentaAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCuentaAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCuentaAhorroCompleted(Me, New ModificarCuentaAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarCuentaPignorada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCuentaPignorada(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCuentaPignorada", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCuentaPignorada(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCuentaPignorada", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCuentaPignorada(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCuentaPignoradaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarCuentaPignoradaAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCuentaPignoradaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCuentaPignoradaOperationCompleted Is Nothing) Then
                Me.ModificarCuentaPignoradaOperationCompleted = AddressOf Me.OnModificarCuentaPignoradaOperationCompleted
            End If
            Me.InvokeAsync("ModificarCuentaPignorada", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarCuentaPignoradaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCuentaPignoradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCuentaPignoradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCuentaPignoradaCompleted(Me, New ModificarCuentaPignoradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarDestino", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDestino(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDestino", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDestino(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDestino", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDestino(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDestinoAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDestinoAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDestinoAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDestinoOperationCompleted Is Nothing) Then
                Me.ModificarDestinoOperationCompleted = AddressOf Me.OnModificarDestinoOperationCompleted
            End If
            Me.InvokeAsync("ModificarDestino", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDestinoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDestinoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDestinoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDestinoCompleted(Me, New ModificarDestinoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarDet_PlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDet_PlanAhorro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDet_PlanAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDet_PlanAhorro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDet_PlanAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDet_PlanAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDet_PlanAhorroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDet_PlanAhorroAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDet_PlanAhorroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDet_PlanAhorroOperationCompleted Is Nothing) Then
                Me.ModificarDet_PlanAhorroOperationCompleted = AddressOf Me.OnModificarDet_PlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("ModificarDet_PlanAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDet_PlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDet_PlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDet_PlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDet_PlanAhorroCompleted(Me, New ModificarDet_PlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarDetalleTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDetalleTransferencia(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal pNoCuenta As String, ByVal pValor As Double, ByVal pTipoMovimiento As String, ByVal pTipoCuenta As String, ByVal pIdCuenta As String, ByVal pFecha As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ModificarDetalleTransferencia", New Object() {dsDetalle, pNumero, pNoCuenta, pValor, pTipoMovimiento, pTipoCuenta, pIdCuenta, pFecha})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDetalleTransferencia(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal pNoCuenta As String, ByVal pValor As Double, ByVal pTipoMovimiento As String, ByVal pTipoCuenta As String, ByVal pIdCuenta As String, ByVal pFecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDetalleTransferencia", New Object() {dsDetalle, pNumero, pNoCuenta, pValor, pTipoMovimiento, pTipoCuenta, pIdCuenta, pFecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDetalleTransferencia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDetalleTransferenciaAsync(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal pNoCuenta As String, ByVal pValor As Double, ByVal pTipoMovimiento As String, ByVal pTipoCuenta As String, ByVal pIdCuenta As String, ByVal pFecha As Date)
            Me.ModificarDetalleTransferenciaAsync(dsDetalle, pNumero, pNoCuenta, pValor, pTipoMovimiento, pTipoCuenta, pIdCuenta, pFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDetalleTransferenciaAsync(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal pNoCuenta As String, ByVal pValor As Double, ByVal pTipoMovimiento As String, ByVal pTipoCuenta As String, ByVal pIdCuenta As String, ByVal pFecha As Date, ByVal userState As Object)
            If (Me.ModificarDetalleTransferenciaOperationCompleted Is Nothing) Then
                Me.ModificarDetalleTransferenciaOperationCompleted = AddressOf Me.OnModificarDetalleTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("ModificarDetalleTransferencia", New Object() {dsDetalle, pNumero, pNoCuenta, pValor, pTipoMovimiento, pTipoCuenta, pIdCuenta, pFecha}, Me.ModificarDetalleTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDetalleTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDetalleTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDetalleTransferenciaCompleted(Me, New ModificarDetalleTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarFechasCapitalizacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarFechasCapitalizacion(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarFechasCapitalizacion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarFechasCapitalizacion(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarFechasCapitalizacion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarFechasCapitalizacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarFechasCapitalizacionAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarFechasCapitalizacionAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarFechasCapitalizacionAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarFechasCapitalizacionOperationCompleted Is Nothing) Then
                Me.ModificarFechasCapitalizacionOperationCompleted = AddressOf Me.OnModificarFechasCapitalizacionOperationCompleted
            End If
            Me.InvokeAsync("ModificarFechasCapitalizacion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarFechasCapitalizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarFechasCapitalizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarFechasCapitalizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarFechasCapitalizacionCompleted(Me, New ModificarFechasCapitalizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarPlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPlanAhorro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPlanAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPlanAhorro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPlanAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPlanAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPlanAhorroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarPlanAhorroAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPlanAhorroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPlanAhorroOperationCompleted Is Nothing) Then
                Me.ModificarPlanAhorroOperationCompleted = AddressOf Me.OnModificarPlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("ModificarPlanAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarPlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPlanAhorroCompleted(Me, New ModificarPlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarPRPrestamos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPRPrestamos(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPRPrestamos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPRPrestamos(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPRPrestamos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPRPrestamos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPRPrestamosAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPRPrestamosAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPRPrestamosAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPRPrestamosOperationCompleted Is Nothing) Then
                Me.ModificarPRPrestamosOperationCompleted = AddressOf Me.OnModificarPRPrestamosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPRPrestamos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarPRPrestamosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPRPrestamosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPRPrestamosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPRPrestamosCompleted(Me, New ModificarPRPrestamosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarReposicionCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarReposicionCertificadosDPF(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarReposicionCertificadosDPF", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarReposicionCertificadosDPF(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarReposicionCertificadosDPF", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarReposicionCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarReposicionCertificadosDPFAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarReposicionCertificadosDPFAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarReposicionCertificadosDPFAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarReposicionCertificadosDPFOperationCompleted Is Nothing) Then
                Me.ModificarReposicionCertificadosDPFOperationCompleted = AddressOf Me.OnModificarReposicionCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("ModificarReposicionCertificadosDPF", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarReposicionCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarReposicionCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarReposicionCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarReposicionCertificadosDPFCompleted(Me, New ModificarReposicionCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarReposicionLibreta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarReposicionLibreta(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarReposicionLibreta", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarReposicionLibreta(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarReposicionLibreta", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarReposicionLibreta(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarReposicionLibretaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarReposicionLibretaAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarReposicionLibretaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarReposicionLibretaOperationCompleted Is Nothing) Then
                Me.ModificarReposicionLibretaOperationCompleted = AddressOf Me.OnModificarReposicionLibretaOperationCompleted
            End If
            Me.InvokeAsync("ModificarReposicionLibreta", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarReposicionLibretaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarReposicionLibretaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarReposicionLibretaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarReposicionLibretaCompleted(Me, New ModificarReposicionLibretaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarRutasCobro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRutasCobro(ByVal pCamposValores As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRutasCobro", New Object() {pCamposValores, pNoCuenta, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRutasCobro(ByVal pCamposValores As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRutasCobro", New Object() {pCamposValores, pNoCuenta, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRutasCobro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRutasCobroAsync(ByVal pCamposValores As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarRutasCobroAsync(pCamposValores, pNoCuenta, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRutasCobroAsync(ByVal pCamposValores As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRutasCobroOperationCompleted Is Nothing) Then
                Me.ModificarRutasCobroOperationCompleted = AddressOf Me.OnModificarRutasCobroOperationCompleted
            End If
            Me.InvokeAsync("ModificarRutasCobro", New Object() {pCamposValores, pNoCuenta, pUsuario, pPassword, pSucursal}, Me.ModificarRutasCobroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRutasCobroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRutasCobroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRutasCobroCompleted(Me, New ModificarRutasCobroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificarTipoAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarTipoAhorro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarTipoAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarTipoAhorro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarTipoAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarTipoAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoAhorroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarTipoAhorroAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoAhorroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarTipoAhorroOperationCompleted Is Nothing) Then
                Me.ModificarTipoAhorroOperationCompleted = AddressOf Me.OnModificarTipoAhorroOperationCompleted
            End If
            Me.InvokeAsync("ModificarTipoAhorro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarTipoAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarTipoAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarTipoAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarTipoAhorroCompleted(Me, New ModificarTipoAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ModificaTasasInteres", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaTasasInteres(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaTasasInteres", New Object() {pCorrelativo, pCamposyValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaTasasInteres(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaTasasInteres", New Object() {pCorrelativo, pCamposyValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaTasasInteres(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaTasasInteresAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaTasasInteresAsync(pCorrelativo, pCamposyValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaTasasInteresAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaTasasInteresOperationCompleted Is Nothing) Then
                Me.ModificaTasasInteresOperationCompleted = AddressOf Me.OnModificaTasasInteresOperationCompleted
            End If
            Me.InvokeAsync("ModificaTasasInteres", New Object() {pCorrelativo, pCamposyValores, pUsuario, pPassword, pSucursal}, Me.ModificaTasasInteresOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaTasasInteresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaTasasInteresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaTasasInteresCompleted(Me, New ModificaTasasInteresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/MostrarMovimientos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MostrarMovimientos(ByVal pCampos As String, ByVal pOrden As String, ByVal pNoCuenta As String, ByVal pDUI As String, ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pTipoCuenta As TipoCuenta, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("MostrarMovimientos", New Object() {pCampos, pOrden, pNoCuenta, pDUI, pFechaInicio, pFechaFin, pTipoCuenta, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginMostrarMovimientos(ByVal pCampos As String, ByVal pOrden As String, ByVal pNoCuenta As String, ByVal pDUI As String, ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pTipoCuenta As TipoCuenta, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MostrarMovimientos", New Object() {pCampos, pOrden, pNoCuenta, pDUI, pFechaInicio, pFechaFin, pTipoCuenta, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMostrarMovimientos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MostrarMovimientosAsync(ByVal pCampos As String, ByVal pOrden As String, ByVal pNoCuenta As String, ByVal pDUI As String, ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pTipoCuenta As TipoCuenta, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.MostrarMovimientosAsync(pCampos, pOrden, pNoCuenta, pDUI, pFechaInicio, pFechaFin, pTipoCuenta, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MostrarMovimientosAsync(ByVal pCampos As String, ByVal pOrden As String, ByVal pNoCuenta As String, ByVal pDUI As String, ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pTipoCuenta As TipoCuenta, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.MostrarMovimientosOperationCompleted Is Nothing) Then
                Me.MostrarMovimientosOperationCompleted = AddressOf Me.OnMostrarMovimientosOperationCompleted
            End If
            Me.InvokeAsync("MostrarMovimientos", New Object() {pCampos, pOrden, pNoCuenta, pDUI, pFechaInicio, pFechaFin, pTipoCuenta, pUsuario, pPassword, pSucursal}, Me.MostrarMovimientosOperationCompleted, userState)
        End Sub
        
        Private Sub OnMostrarMovimientosOperationCompleted(ByVal arg As Object)
            If (Not (Me.MostrarMovimientosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MostrarMovimientosCompleted(Me, New MostrarMovimientosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/MovimientosAhorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MovimientosAhorros(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("MovimientosAhorros", New Object() {pFechaIni, pFechaFin, pTipoAhorro, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginMovimientosAhorros(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MovimientosAhorros", New Object() {pFechaIni, pFechaFin, pTipoAhorro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMovimientosAhorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MovimientosAhorrosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.MovimientosAhorrosAsync(pFechaIni, pFechaFin, pTipoAhorro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MovimientosAhorrosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.MovimientosAhorrosOperationCompleted Is Nothing) Then
                Me.MovimientosAhorrosOperationCompleted = AddressOf Me.OnMovimientosAhorrosOperationCompleted
            End If
            Me.InvokeAsync("MovimientosAhorros", New Object() {pFechaIni, pFechaFin, pTipoAhorro, pUs, pPa, pSucursal}, Me.MovimientosAhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnMovimientosAhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.MovimientosAhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MovimientosAhorrosCompleted(Me, New MovimientosAhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoAutorizadoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoAutorizadoRetiro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoAutorizadoRetiro", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoAutorizadoRetiro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoAutorizadoRetiro", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoAutorizadoRetiro(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoAutorizadoRetiroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoAutorizadoRetiroAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoAutorizadoRetiroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoAutorizadoRetiroOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoAutorizadoRetiroOperationCompleted = AddressOf Me.OnObtenerCorrelativoAutorizadoRetiroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoAutorizadoRetiro", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoAutorizadoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoAutorizadoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoAutorizadoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoAutorizadoRetiroCompleted(Me, New ObtenerCorrelativoAutorizadoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoBeneficiarios(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoBeneficiarios", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoBeneficiarios(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoBeneficiarios", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoBeneficiarios(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoBeneficiariosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoBeneficiariosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoBeneficiariosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoBeneficiariosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoBeneficiariosOperationCompleted = AddressOf Me.OnObtenerCorrelativoBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoBeneficiarios", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoBeneficiariosCompleted(Me, New ObtenerCorrelativoBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoCertificadosDPF(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoCertificadosDPF", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoCertificadosDPF(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoCertificadosDPF", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoCertificadosDPFAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoCertificadosDPFAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoCertificadosDPFAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoCertificadosDPFOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoCertificadosDPFOperationCompleted = AddressOf Me.OnObtenerCorrelativoCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoCertificadosDPF", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoCertificadosDPFCompleted(Me, New ObtenerCorrelativoCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoCuentaAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoCuentaAhorro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoCuentaAhorro", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoCuentaAhorro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoCuentaAhorro", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoCuentaAhorro(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoCuentaAhorroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoCuentaAhorroAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoCuentaAhorroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoCuentaAhorroOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoCuentaAhorroOperationCompleted = AddressOf Me.OnObtenerCorrelativoCuentaAhorroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoCuentaAhorro", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoCuentaAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoCuentaAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoCuentaAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoCuentaAhorroCompleted(Me, New ObtenerCorrelativoCuentaAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoDestino", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoDestino(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoDestino", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoDestino(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoDestino", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoDestino(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDestinoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoDestinoAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDestinoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoDestinoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoDestinoOperationCompleted = AddressOf Me.OnObtenerCorrelativoDestinoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoDestino", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoDestinoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoDestinoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoDestinoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoDestinoCompleted(Me, New ObtenerCorrelativoDestinoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoDet_PlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoDet_PlanAhorro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoDet_PlanAhorro", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoDet_PlanAhorro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoDet_PlanAhorro", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoDet_PlanAhorro(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDet_PlanAhorroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoDet_PlanAhorroAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDet_PlanAhorroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoDet_PlanAhorroOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoDet_PlanAhorroOperationCompleted = AddressOf Me.OnObtenerCorrelativoDet_PlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoDet_PlanAhorro", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoDet_PlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoDet_PlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoDet_PlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoDet_PlanAhorroCompleted(Me, New ObtenerCorrelativoDet_PlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoPlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoPlanAhorro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoPlanAhorro", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoPlanAhorro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoPlanAhorro", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoPlanAhorro(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoPlanAhorroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoPlanAhorroAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoPlanAhorroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoPlanAhorroOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoPlanAhorroOperationCompleted = AddressOf Me.OnObtenerCorrelativoPlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoPlanAhorro", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoPlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoPlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoPlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoPlanAhorroCompleted(Me, New ObtenerCorrelativoPlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoReposicionCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoReposicionCertificadosDPF(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoReposicionCertificadosDPF", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoReposicionCertificadosDPF(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoReposicionCertificadosDPF", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoReposicionCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoReposicionCertificadosDPFAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoReposicionCertificadosDPFAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoReposicionCertificadosDPFAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoReposicionCertificadosDPFOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoReposicionCertificadosDPFOperationCompleted = AddressOf Me.OnObtenerCorrelativoReposicionCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoReposicionCertificadosDPF", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoReposicionCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoReposicionCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoReposicionCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoReposicionCertificadosDPFCompleted(Me, New ObtenerCorrelativoReposicionCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoReposicionLibreta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoReposicionLibreta(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoReposicionLibreta", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoReposicionLibreta(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoReposicionLibreta", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoReposicionLibreta(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoReposicionLibretaAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoReposicionLibretaAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoReposicionLibretaAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoReposicionLibretaOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoReposicionLibretaOperationCompleted = AddressOf Me.OnObtenerCorrelativoReposicionLibretaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoReposicionLibreta", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoReposicionLibretaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoReposicionLibretaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoReposicionLibretaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoReposicionLibretaCompleted(Me, New ObtenerCorrelativoReposicionLibretaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoTipoAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoTipoAhorro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoTipoAhorro", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoTipoAhorro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoTipoAhorro", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoTipoAhorro(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoAhorroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoTipoAhorroAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoAhorroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoTipoAhorroOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoTipoAhorroOperationCompleted = AddressOf Me.OnObtenerCorrelativoTipoAhorroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoTipoAhorro", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoTipoAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoTipoAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoTipoAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoTipoAhorroCompleted(Me, New ObtenerCorrelativoTipoAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerCorrelativoTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoTransferencia(ByVal pCampo As String, ByVal pTipo As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Double
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoTransferencia", New Object() {pCampo, pTipo, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoTransferencia(ByVal pCampo As String, ByVal pTipo As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoTransferencia", New Object() {pCampo, pTipo, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoTransferencia(ByVal asyncResult As System.IAsyncResult) As Double
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTransferenciaAsync(ByVal pCampo As String, ByVal pTipo As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoTransferenciaAsync(pCampo, pTipo, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTransferenciaAsync(ByVal pCampo As String, ByVal pTipo As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoTransferenciaOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoTransferenciaOperationCompleted = AddressOf Me.OnObtenerCorrelativoTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoTransferencia", New Object() {pCampo, pTipo, pFiltro, pUsuario, pPassword, pSucursal}, Me.ObtenerCorrelativoTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoTransferenciaCompleted(Me, New ObtenerCorrelativoTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerDetalleTransferenciaVacio", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDetalleTransferenciaVacio() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDetalleTransferenciaVacio", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerDetalleTransferenciaVacio(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerDetalleTransferenciaVacio", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerDetalleTransferenciaVacio(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDetalleTransferenciaVacioAsync()
            Me.ObtenerDetalleTransferenciaVacioAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDetalleTransferenciaVacioAsync(ByVal userState As Object)
            If (Me.ObtenerDetalleTransferenciaVacioOperationCompleted Is Nothing) Then
                Me.ObtenerDetalleTransferenciaVacioOperationCompleted = AddressOf Me.OnObtenerDetalleTransferenciaVacioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDetalleTransferenciaVacio", New Object(-1) {}, Me.ObtenerDetalleTransferenciaVacioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDetalleTransferenciaVacioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDetalleTransferenciaVacioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDetalleTransferenciaVacioCompleted(Me, New ObtenerDetalleTransferenciaVacioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtenerEstructuraSeleccion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerEstructuraSeleccion(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerEstructuraSeleccion", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerEstructuraSeleccion(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerEstructuraSeleccion", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerEstructuraSeleccion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerEstructuraSeleccionAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerEstructuraSeleccionAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerEstructuraSeleccionAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerEstructuraSeleccionOperationCompleted Is Nothing) Then
                Me.ObtenerEstructuraSeleccionOperationCompleted = AddressOf Me.OnObtenerEstructuraSeleccionOperationCompleted
            End If
            Me.InvokeAsync("ObtenerEstructuraSeleccion", New Object() {pUsuario, pPassword, pSucursal}, Me.ObtenerEstructuraSeleccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerEstructuraSeleccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerEstructuraSeleccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerEstructuraSeleccionCompleted(Me, New ObtenerEstructuraSeleccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ObtieneDigitoVerificador", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtieneDigitoVerificador(ByVal pNoCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ObtieneDigitoVerificador", New Object() {pNoCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginObtieneDigitoVerificador(ByVal pNoCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtieneDigitoVerificador", New Object() {pNoCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtieneDigitoVerificador(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtieneDigitoVerificadorAsync(ByVal pNoCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtieneDigitoVerificadorAsync(pNoCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtieneDigitoVerificadorAsync(ByVal pNoCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtieneDigitoVerificadorOperationCompleted Is Nothing) Then
                Me.ObtieneDigitoVerificadorOperationCompleted = AddressOf Me.OnObtieneDigitoVerificadorOperationCompleted
            End If
            Me.InvokeAsync("ObtieneDigitoVerificador", New Object() {pNoCuenta, pUs, pPa, pSucursal}, Me.ObtieneDigitoVerificadorOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtieneDigitoVerificadorOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtieneDigitoVerificadorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtieneDigitoVerificadorCompleted(Me, New ObtieneDigitoVerificadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Orden_Descuento", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Orden_Descuento(ByVal pDui As String, ByVal pCuota As Double, ByVal pCopiaA As String, ByVal pCargoCopiaA As String, ByVal pDirigidoA As String, ByVal pFecha As Date, ByVal pCargoFirma As String, ByVal pEfectivo As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Orden_Descuento", New Object() {pDui, pCuota, pCopiaA, pCargoCopiaA, pDirigidoA, pFecha, pCargoFirma, pEfectivo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginOrden_Descuento(ByVal pDui As String, ByVal pCuota As Double, ByVal pCopiaA As String, ByVal pCargoCopiaA As String, ByVal pDirigidoA As String, ByVal pFecha As Date, ByVal pCargoFirma As String, ByVal pEfectivo As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Orden_Descuento", New Object() {pDui, pCuota, pCopiaA, pCargoCopiaA, pDirigidoA, pFecha, pCargoFirma, pEfectivo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndOrden_Descuento(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Orden_DescuentoAsync(ByVal pDui As String, ByVal pCuota As Double, ByVal pCopiaA As String, ByVal pCargoCopiaA As String, ByVal pDirigidoA As String, ByVal pFecha As Date, ByVal pCargoFirma As String, ByVal pEfectivo As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Orden_DescuentoAsync(pDui, pCuota, pCopiaA, pCargoCopiaA, pDirigidoA, pFecha, pCargoFirma, pEfectivo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Orden_DescuentoAsync(ByVal pDui As String, ByVal pCuota As Double, ByVal pCopiaA As String, ByVal pCargoCopiaA As String, ByVal pDirigidoA As String, ByVal pFecha As Date, ByVal pCargoFirma As String, ByVal pEfectivo As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Orden_DescuentoOperationCompleted Is Nothing) Then
                Me.Orden_DescuentoOperationCompleted = AddressOf Me.OnOrden_DescuentoOperationCompleted
            End If
            Me.InvokeAsync("Orden_Descuento", New Object() {pDui, pCuota, pCopiaA, pCargoCopiaA, pDirigidoA, pFecha, pCargoFirma, pEfectivo, pUsuario, pPassword, pSucursal}, Me.Orden_DescuentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnOrden_DescuentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Orden_DescuentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Orden_DescuentoCompleted(Me, New Orden_DescuentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/PignoracionCuentasAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PignoracionCuentasAhorro(ByVal pNocuenta As Integer, ByVal pCodPrestamo As String, ByVal pFechaVencimiento As Date, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("PignoracionCuentasAhorro", New Object() {pNocuenta, pCodPrestamo, pFechaVencimiento, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginPignoracionCuentasAhorro(ByVal pNocuenta As Integer, ByVal pCodPrestamo As String, ByVal pFechaVencimiento As Date, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PignoracionCuentasAhorro", New Object() {pNocuenta, pCodPrestamo, pFechaVencimiento, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPignoracionCuentasAhorro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PignoracionCuentasAhorroAsync(ByVal pNocuenta As Integer, ByVal pCodPrestamo As String, ByVal pFechaVencimiento As Date, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.PignoracionCuentasAhorroAsync(pNocuenta, pCodPrestamo, pFechaVencimiento, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PignoracionCuentasAhorroAsync(ByVal pNocuenta As Integer, ByVal pCodPrestamo As String, ByVal pFechaVencimiento As Date, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.PignoracionCuentasAhorroOperationCompleted Is Nothing) Then
                Me.PignoracionCuentasAhorroOperationCompleted = AddressOf Me.OnPignoracionCuentasAhorroOperationCompleted
            End If
            Me.InvokeAsync("PignoracionCuentasAhorro", New Object() {pNocuenta, pCodPrestamo, pFechaVencimiento, pTodos, pUsuario, pPassword, pSucursal}, Me.PignoracionCuentasAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnPignoracionCuentasAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.PignoracionCuentasAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PignoracionCuentasAhorroCompleted(Me, New PignoracionCuentasAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/PlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PlanAhorro(ByVal pMontoApertura As Double, ByVal pTasa As Double, ByVal pMonto As Double, ByVal pNumCuotas As Integer, ByVal pFec1Cuota As Date, ByVal pCodTipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("PlanAhorro", New Object() {pMontoApertura, pTasa, pMonto, pNumCuotas, pFec1Cuota, pCodTipoAhorro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginPlanAhorro(ByVal pMontoApertura As Double, ByVal pTasa As Double, ByVal pMonto As Double, ByVal pNumCuotas As Integer, ByVal pFec1Cuota As Date, ByVal pCodTipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PlanAhorro", New Object() {pMontoApertura, pTasa, pMonto, pNumCuotas, pFec1Cuota, pCodTipoAhorro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPlanAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PlanAhorroAsync(ByVal pMontoApertura As Double, ByVal pTasa As Double, ByVal pMonto As Double, ByVal pNumCuotas As Integer, ByVal pFec1Cuota As Date, ByVal pCodTipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.PlanAhorroAsync(pMontoApertura, pTasa, pMonto, pNumCuotas, pFec1Cuota, pCodTipoAhorro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PlanAhorroAsync(ByVal pMontoApertura As Double, ByVal pTasa As Double, ByVal pMonto As Double, ByVal pNumCuotas As Integer, ByVal pFec1Cuota As Date, ByVal pCodTipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.PlanAhorroOperationCompleted Is Nothing) Then
                Me.PlanAhorroOperationCompleted = AddressOf Me.OnPlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("PlanAhorro", New Object() {pMontoApertura, pTasa, pMonto, pNumCuotas, pFec1Cuota, pCodTipoAhorro, pUsuario, pPassword, pSucursal}, Me.PlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.PlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PlanAhorroCompleted(Me, New PlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/PosteoMovimientos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PosteoMovimientos(ByVal pInicializa As Boolean, ByVal pDui As String, ByVal pNoCuenta As String, ByVal pNoLibreta As String, ByVal pNoUltLineaImpresa As Integer, ByVal pSaldo As Double, ByVal pAutorizaReimpresion As Boolean, ByVal pIdLibreta As Integer, ByVal pImpresionPie As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("PosteoMovimientos", New Object() {pInicializa, pDui, pNoCuenta, pNoLibreta, pNoUltLineaImpresa, pSaldo, pAutorizaReimpresion, pIdLibreta, pImpresionPie, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginPosteoMovimientos(ByVal pInicializa As Boolean, ByVal pDui As String, ByVal pNoCuenta As String, ByVal pNoLibreta As String, ByVal pNoUltLineaImpresa As Integer, ByVal pSaldo As Double, ByVal pAutorizaReimpresion As Boolean, ByVal pIdLibreta As Integer, ByVal pImpresionPie As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PosteoMovimientos", New Object() {pInicializa, pDui, pNoCuenta, pNoLibreta, pNoUltLineaImpresa, pSaldo, pAutorizaReimpresion, pIdLibreta, pImpresionPie, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPosteoMovimientos(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PosteoMovimientosAsync(ByVal pInicializa As Boolean, ByVal pDui As String, ByVal pNoCuenta As String, ByVal pNoLibreta As String, ByVal pNoUltLineaImpresa As Integer, ByVal pSaldo As Double, ByVal pAutorizaReimpresion As Boolean, ByVal pIdLibreta As Integer, ByVal pImpresionPie As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.PosteoMovimientosAsync(pInicializa, pDui, pNoCuenta, pNoLibreta, pNoUltLineaImpresa, pSaldo, pAutorizaReimpresion, pIdLibreta, pImpresionPie, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PosteoMovimientosAsync(ByVal pInicializa As Boolean, ByVal pDui As String, ByVal pNoCuenta As String, ByVal pNoLibreta As String, ByVal pNoUltLineaImpresa As Integer, ByVal pSaldo As Double, ByVal pAutorizaReimpresion As Boolean, ByVal pIdLibreta As Integer, ByVal pImpresionPie As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.PosteoMovimientosOperationCompleted Is Nothing) Then
                Me.PosteoMovimientosOperationCompleted = AddressOf Me.OnPosteoMovimientosOperationCompleted
            End If
            Me.InvokeAsync("PosteoMovimientos", New Object() {pInicializa, pDui, pNoCuenta, pNoLibreta, pNoUltLineaImpresa, pSaldo, pAutorizaReimpresion, pIdLibreta, pImpresionPie, pUs, pPa, pSucursal}, Me.PosteoMovimientosOperationCompleted, userState)
        End Sub
        
        Private Sub OnPosteoMovimientosOperationCompleted(ByVal arg As Object)
            If (Not (Me.PosteoMovimientosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PosteoMovimientosCompleted(Me, New PosteoMovimientosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ProcesoProrrogaCuentas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesoProrrogaCuentas(ByVal pTodos As Boolean, ByVal pCodTipoAhorro As String, ByVal pNocuenta As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ProcesoProrrogaCuentas", New Object() {pTodos, pCodTipoAhorro, pNocuenta, pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesoProrrogaCuentas(ByVal pTodos As Boolean, ByVal pCodTipoAhorro As String, ByVal pNocuenta As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesoProrrogaCuentas", New Object() {pTodos, pCodTipoAhorro, pNocuenta, pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesoProrrogaCuentas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesoProrrogaCuentasAsync(ByVal pTodos As Boolean, ByVal pCodTipoAhorro As String, ByVal pNocuenta As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ProcesoProrrogaCuentasAsync(pTodos, pCodTipoAhorro, pNocuenta, pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesoProrrogaCuentasAsync(ByVal pTodos As Boolean, ByVal pCodTipoAhorro As String, ByVal pNocuenta As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ProcesoProrrogaCuentasOperationCompleted Is Nothing) Then
                Me.ProcesoProrrogaCuentasOperationCompleted = AddressOf Me.OnProcesoProrrogaCuentasOperationCompleted
            End If
            Me.InvokeAsync("ProcesoProrrogaCuentas", New Object() {pTodos, pCodTipoAhorro, pNocuenta, pFecha, pUsuario, pPassword, pSucursal}, Me.ProcesoProrrogaCuentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesoProrrogaCuentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesoProrrogaCuentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesoProrrogaCuentasCompleted(Me, New ProcesoProrrogaCuentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Provisiones_Ahorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Provisiones_Ahorros(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pTodos As Boolean, ByVal pProvisionados As Boolean, ByVal pCodTipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Provisiones_Ahorros", New Object() {pFechaInicio, pFechaFin, pTipoAhorro, pTodos, pProvisionados, pCodTipoAhorro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginProvisiones_Ahorros(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pTodos As Boolean, ByVal pProvisionados As Boolean, ByVal pCodTipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Provisiones_Ahorros", New Object() {pFechaInicio, pFechaFin, pTipoAhorro, pTodos, pProvisionados, pCodTipoAhorro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProvisiones_Ahorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Provisiones_AhorrosAsync(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pTodos As Boolean, ByVal pProvisionados As Boolean, ByVal pCodTipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Provisiones_AhorrosAsync(pFechaInicio, pFechaFin, pTipoAhorro, pTodos, pProvisionados, pCodTipoAhorro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Provisiones_AhorrosAsync(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pTodos As Boolean, ByVal pProvisionados As Boolean, ByVal pCodTipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Provisiones_AhorrosOperationCompleted Is Nothing) Then
                Me.Provisiones_AhorrosOperationCompleted = AddressOf Me.OnProvisiones_AhorrosOperationCompleted
            End If
            Me.InvokeAsync("Provisiones_Ahorros", New Object() {pFechaInicio, pFechaFin, pTipoAhorro, pTodos, pProvisionados, pCodTipoAhorro, pUsuario, pPassword, pSucursal}, Me.Provisiones_AhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnProvisiones_AhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Provisiones_AhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Provisiones_AhorrosCompleted(Me, New Provisiones_AhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RepCancelacion_Transf", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepCancelacion_Transf(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pCodTipoAhorro As String, ByVal pTodos As Boolean, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepCancelacion_Transf", New Object() {pFecha, pFecha2, pCodTipoAhorro, pTodos, pTipo, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepCancelacion_Transf(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pCodTipoAhorro As String, ByVal pTodos As Boolean, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepCancelacion_Transf", New Object() {pFecha, pFecha2, pCodTipoAhorro, pTodos, pTipo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepCancelacion_Transf(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepCancelacion_TransfAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pCodTipoAhorro As String, ByVal pTodos As Boolean, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepCancelacion_TransfAsync(pFecha, pFecha2, pCodTipoAhorro, pTodos, pTipo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepCancelacion_TransfAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pCodTipoAhorro As String, ByVal pTodos As Boolean, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepCancelacion_TransfOperationCompleted Is Nothing) Then
                Me.RepCancelacion_TransfOperationCompleted = AddressOf Me.OnRepCancelacion_TransfOperationCompleted
            End If
            Me.InvokeAsync("RepCancelacion_Transf", New Object() {pFecha, pFecha2, pCodTipoAhorro, pTodos, pTipo, pUs, pPa, pSucursal}, Me.RepCancelacion_TransfOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepCancelacion_TransfOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepCancelacion_TransfCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepCancelacion_TransfCompleted(Me, New RepCancelacion_TransfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RepCobroInactividad", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepCobroInactividad(ByVal pDias As Integer, ByVal tipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepCobroInactividad", New Object() {pDias, tipoAhorro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepCobroInactividad(ByVal pDias As Integer, ByVal tipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepCobroInactividad", New Object() {pDias, tipoAhorro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepCobroInactividad(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepCobroInactividadAsync(ByVal pDias As Integer, ByVal tipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RepCobroInactividadAsync(pDias, tipoAhorro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepCobroInactividadAsync(ByVal pDias As Integer, ByVal tipoAhorro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepCobroInactividadOperationCompleted Is Nothing) Then
                Me.RepCobroInactividadOperationCompleted = AddressOf Me.OnRepCobroInactividadOperationCompleted
            End If
            Me.InvokeAsync("RepCobroInactividad", New Object() {pDias, tipoAhorro, pUsuario, pPassword, pSucursal}, Me.RepCobroInactividadOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepCobroInactividadOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepCobroInactividadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepCobroInactividadCompleted(Me, New RepCobroInactividadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RepCtasAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepCtasAhorro(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pTipo As TipoReporte, ByVal pCodTipoAhorro As String, ByVal pTodosTiposAhorro As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepCtasAhorro", New Object() {pFecIni, pFecFin, pTipo, pCodTipoAhorro, pTodosTiposAhorro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepCtasAhorro(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pTipo As TipoReporte, ByVal pCodTipoAhorro As String, ByVal pTodosTiposAhorro As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepCtasAhorro", New Object() {pFecIni, pFecFin, pTipo, pCodTipoAhorro, pTodosTiposAhorro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepCtasAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepCtasAhorroAsync(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pTipo As TipoReporte, ByVal pCodTipoAhorro As String, ByVal pTodosTiposAhorro As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RepCtasAhorroAsync(pFecIni, pFecFin, pTipo, pCodTipoAhorro, pTodosTiposAhorro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepCtasAhorroAsync(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pTipo As TipoReporte, ByVal pCodTipoAhorro As String, ByVal pTodosTiposAhorro As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepCtasAhorroOperationCompleted Is Nothing) Then
                Me.RepCtasAhorroOperationCompleted = AddressOf Me.OnRepCtasAhorroOperationCompleted
            End If
            Me.InvokeAsync("RepCtasAhorro", New Object() {pFecIni, pFecFin, pTipo, pCodTipoAhorro, pTodosTiposAhorro, pUsuario, pPassword, pSucursal}, Me.RepCtasAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepCtasAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepCtasAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepCtasAhorroCompleted(Me, New RepCtasAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Reporte_CuentasInactivas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_CuentasInactivas(ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_CuentasInactivas", New Object() {ds, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_CuentasInactivas(ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_CuentasInactivas", New Object() {ds, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_CuentasInactivas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_CuentasInactivasAsync(ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_CuentasInactivasAsync(ds, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_CuentasInactivasAsync(ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_CuentasInactivasOperationCompleted Is Nothing) Then
                Me.Reporte_CuentasInactivasOperationCompleted = AddressOf Me.OnReporte_CuentasInactivasOperationCompleted
            End If
            Me.InvokeAsync("Reporte_CuentasInactivas", New Object() {ds, pUsuario, pPassword, pSucursal}, Me.Reporte_CuentasInactivasOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_CuentasInactivasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_CuentasInactivasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_CuentasInactivasCompleted(Me, New Reporte_CuentasInactivasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Reporte_Datos_DPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_Datos_DPF(ByVal pTodos As Boolean, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_Datos_DPF", New Object() {pTodos, pR1, pR2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_Datos_DPF(ByVal pTodos As Boolean, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_Datos_DPF", New Object() {pTodos, pR1, pR2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_Datos_DPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_Datos_DPFAsync(ByVal pTodos As Boolean, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_Datos_DPFAsync(pTodos, pR1, pR2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_Datos_DPFAsync(ByVal pTodos As Boolean, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_Datos_DPFOperationCompleted Is Nothing) Then
                Me.Reporte_Datos_DPFOperationCompleted = AddressOf Me.OnReporte_Datos_DPFOperationCompleted
            End If
            Me.InvokeAsync("Reporte_Datos_DPF", New Object() {pTodos, pR1, pR2, pUsuario, pPassword, pSucursal}, Me.Reporte_Datos_DPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_Datos_DPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_Datos_DPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_Datos_DPFCompleted(Me, New Reporte_Datos_DPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReporteEstadoCuentaAhorroAportaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteEstadoCuentaAhorroAportaciones(ByVal pDUI As String, ByVal pNoCuenta As String, ByVal pTipoAhorro As String, ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteEstadoCuentaAhorroAportaciones", New Object() {pDUI, pNoCuenta, pTipoAhorro, pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteEstadoCuentaAhorroAportaciones(ByVal pDUI As String, ByVal pNoCuenta As String, ByVal pTipoAhorro As String, ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteEstadoCuentaAhorroAportaciones", New Object() {pDUI, pNoCuenta, pTipoAhorro, pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteEstadoCuentaAhorroAportaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteEstadoCuentaAhorroAportacionesAsync(ByVal pDUI As String, ByVal pNoCuenta As String, ByVal pTipoAhorro As String, ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteEstadoCuentaAhorroAportacionesAsync(pDUI, pNoCuenta, pTipoAhorro, pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteEstadoCuentaAhorroAportacionesAsync(ByVal pDUI As String, ByVal pNoCuenta As String, ByVal pTipoAhorro As String, ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteEstadoCuentaAhorroAportacionesOperationCompleted Is Nothing) Then
                Me.ReporteEstadoCuentaAhorroAportacionesOperationCompleted = AddressOf Me.OnReporteEstadoCuentaAhorroAportacionesOperationCompleted
            End If
            Me.InvokeAsync("ReporteEstadoCuentaAhorroAportaciones", New Object() {pDUI, pNoCuenta, pTipoAhorro, pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal}, Me.ReporteEstadoCuentaAhorroAportacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteEstadoCuentaAhorroAportacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteEstadoCuentaAhorroAportacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteEstadoCuentaAhorroAportacionesCompleted(Me, New ReporteEstadoCuentaAhorroAportacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReporteImpresionLibretaAhorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteImpresionLibretaAhorros(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteImpresionLibretaAhorros", New Object() {pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteImpresionLibretaAhorros(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteImpresionLibretaAhorros", New Object() {pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteImpresionLibretaAhorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteImpresionLibretaAhorrosAsync(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteImpresionLibretaAhorrosAsync(pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteImpresionLibretaAhorrosAsync(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteImpresionLibretaAhorrosOperationCompleted Is Nothing) Then
                Me.ReporteImpresionLibretaAhorrosOperationCompleted = AddressOf Me.OnReporteImpresionLibretaAhorrosOperationCompleted
            End If
            Me.InvokeAsync("ReporteImpresionLibretaAhorros", New Object() {pFiltro, pUsuario, pPassword, pSucursal}, Me.ReporteImpresionLibretaAhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteImpresionLibretaAhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteImpresionLibretaAhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteImpresionLibretaAhorrosCompleted(Me, New ReporteImpresionLibretaAhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReportePagoInteresDiariaDP", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReportePagoInteresDiariaDP(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReportePagoInteresDiariaDP", New Object() {pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReportePagoInteresDiariaDP(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReportePagoInteresDiariaDP", New Object() {pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReportePagoInteresDiariaDP(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReportePagoInteresDiariaDPAsync(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReportePagoInteresDiariaDPAsync(pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReportePagoInteresDiariaDPAsync(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReportePagoInteresDiariaDPOperationCompleted Is Nothing) Then
                Me.ReportePagoInteresDiariaDPOperationCompleted = AddressOf Me.OnReportePagoInteresDiariaDPOperationCompleted
            End If
            Me.InvokeAsync("ReportePagoInteresDiariaDP", New Object() {pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal}, Me.ReportePagoInteresDiariaDPOperationCompleted, userState)
        End Sub
        
        Private Sub OnReportePagoInteresDiariaDPOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReportePagoInteresDiariaDPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReportePagoInteresDiariaDPCompleted(Me, New ReportePagoInteresDiariaDPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReporteTasasPasivas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteTasasPasivas(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteTasasPasivas", New Object() {pFechaIni, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteTasasPasivas(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteTasasPasivas", New Object() {pFechaIni, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteTasasPasivas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteTasasPasivasAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ReporteTasasPasivasAsync(pFechaIni, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteTasasPasivasAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteTasasPasivasOperationCompleted Is Nothing) Then
                Me.ReporteTasasPasivasOperationCompleted = AddressOf Me.OnReporteTasasPasivasOperationCompleted
            End If
            Me.InvokeAsync("ReporteTasasPasivas", New Object() {pFechaIni, pUs, pPa, pSucursal}, Me.ReporteTasasPasivasOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteTasasPasivasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteTasasPasivasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteTasasPasivasCompleted(Me, New ReporteTasasPasivasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ReporteTodasCuentas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteTodasCuentas(ByVal pDui As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteTodasCuentas", New Object() {pDui, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteTodasCuentas(ByVal pDui As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteTodasCuentas", New Object() {pDui, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteTodasCuentas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteTodasCuentasAsync(ByVal pDui As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteTodasCuentasAsync(pDui, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteTodasCuentasAsync(ByVal pDui As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteTodasCuentasOperationCompleted Is Nothing) Then
                Me.ReporteTodasCuentasOperationCompleted = AddressOf Me.OnReporteTodasCuentasOperationCompleted
            End If
            Me.InvokeAsync("ReporteTodasCuentas", New Object() {pDui, pUsuario, pPassword, pSucursal}, Me.ReporteTodasCuentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteTodasCuentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteTodasCuentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteTodasCuentasCompleted(Me, New ReporteTodasCuentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/insertarAsocTransferenciasAutomaticas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarAsocTransferenciasAutomaticas(ByVal nocuentaOrigen As String, ByVal noCuentaDestino As String, ByVal fechaTransferencia As Date, ByVal montoTransferencia As Double, ByVal activo As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal pcIngresa As String, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String) As Integer
            Dim results() As Object = Me.Invoke("insertarAsocTransferenciasAutomaticas", New Object() {nocuentaOrigen, noCuentaDestino, fechaTransferencia, montoTransferencia, activo, usuarioIngresa, fechaIngreso, pcIngresa, usuario, contra, sucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarAsocTransferenciasAutomaticas(ByVal nocuentaOrigen As String, ByVal noCuentaDestino As String, ByVal fechaTransferencia As Date, ByVal montoTransferencia As Double, ByVal activo As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal pcIngresa As String, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarAsocTransferenciasAutomaticas", New Object() {nocuentaOrigen, noCuentaDestino, fechaTransferencia, montoTransferencia, activo, usuarioIngresa, fechaIngreso, pcIngresa, usuario, contra, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarAsocTransferenciasAutomaticas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarAsocTransferenciasAutomaticasAsync(ByVal nocuentaOrigen As String, ByVal noCuentaDestino As String, ByVal fechaTransferencia As Date, ByVal montoTransferencia As Double, ByVal activo As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal pcIngresa As String, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String)
            Me.insertarAsocTransferenciasAutomaticasAsync(nocuentaOrigen, noCuentaDestino, fechaTransferencia, montoTransferencia, activo, usuarioIngresa, fechaIngreso, pcIngresa, usuario, contra, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarAsocTransferenciasAutomaticasAsync(ByVal nocuentaOrigen As String, ByVal noCuentaDestino As String, ByVal fechaTransferencia As Date, ByVal montoTransferencia As Double, ByVal activo As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal pcIngresa As String, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.insertarAsocTransferenciasAutomaticasOperationCompleted Is Nothing) Then
                Me.insertarAsocTransferenciasAutomaticasOperationCompleted = AddressOf Me.OninsertarAsocTransferenciasAutomaticasOperationCompleted
            End If
            Me.InvokeAsync("insertarAsocTransferenciasAutomaticas", New Object() {nocuentaOrigen, noCuentaDestino, fechaTransferencia, montoTransferencia, activo, usuarioIngresa, fechaIngreso, pcIngresa, usuario, contra, sucursal}, Me.insertarAsocTransferenciasAutomaticasOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarAsocTransferenciasAutomaticasOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarAsocTransferenciasAutomaticasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarAsocTransferenciasAutomaticasCompleted(Me, New insertarAsocTransferenciasAutomaticasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/modificarAsocTransferenciasAutomaticas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarAsocTransferenciasAutomaticas(ByVal nocuentaOrigen As String, ByVal noCuentaDestino As String, ByVal fechaTransferencia As Date, ByVal montoTransferencia As Double, ByVal activo As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal pcIngresa As String, ByVal codTransferencia As Integer, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String) As Integer
            Dim results() As Object = Me.Invoke("modificarAsocTransferenciasAutomaticas", New Object() {nocuentaOrigen, noCuentaDestino, fechaTransferencia, montoTransferencia, activo, usuarioIngresa, fechaIngreso, pcIngresa, codTransferencia, usuario, contra, sucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarAsocTransferenciasAutomaticas(ByVal nocuentaOrigen As String, ByVal noCuentaDestino As String, ByVal fechaTransferencia As Date, ByVal montoTransferencia As Double, ByVal activo As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal pcIngresa As String, ByVal codTransferencia As Integer, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarAsocTransferenciasAutomaticas", New Object() {nocuentaOrigen, noCuentaDestino, fechaTransferencia, montoTransferencia, activo, usuarioIngresa, fechaIngreso, pcIngresa, codTransferencia, usuario, contra, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarAsocTransferenciasAutomaticas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarAsocTransferenciasAutomaticasAsync(ByVal nocuentaOrigen As String, ByVal noCuentaDestino As String, ByVal fechaTransferencia As Date, ByVal montoTransferencia As Double, ByVal activo As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal pcIngresa As String, ByVal codTransferencia As Integer, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String)
            Me.modificarAsocTransferenciasAutomaticasAsync(nocuentaOrigen, noCuentaDestino, fechaTransferencia, montoTransferencia, activo, usuarioIngresa, fechaIngreso, pcIngresa, codTransferencia, usuario, contra, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarAsocTransferenciasAutomaticasAsync(ByVal nocuentaOrigen As String, ByVal noCuentaDestino As String, ByVal fechaTransferencia As Date, ByVal montoTransferencia As Double, ByVal activo As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal pcIngresa As String, ByVal codTransferencia As Integer, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.modificarAsocTransferenciasAutomaticasOperationCompleted Is Nothing) Then
                Me.modificarAsocTransferenciasAutomaticasOperationCompleted = AddressOf Me.OnmodificarAsocTransferenciasAutomaticasOperationCompleted
            End If
            Me.InvokeAsync("modificarAsocTransferenciasAutomaticas", New Object() {nocuentaOrigen, noCuentaDestino, fechaTransferencia, montoTransferencia, activo, usuarioIngresa, fechaIngreso, pcIngresa, codTransferencia, usuario, contra, sucursal}, Me.modificarAsocTransferenciasAutomaticasOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarAsocTransferenciasAutomaticasOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarAsocTransferenciasAutomaticasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarAsocTransferenciasAutomaticasCompleted(Me, New modificarAsocTransferenciasAutomaticasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/consultarAsocTransferenciasAutomaticas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocTransferenciasAutomaticas(ByVal codTransferencia As Integer, ByVal dui As String, ByVal opcion As Integer, ByVal asociado As String, ByVal origen As String, ByVal destino As String, ByVal fechaIngreso As Date, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocTransferenciasAutomaticas", New Object() {codTransferencia, dui, opcion, asociado, origen, destino, fechaIngreso, usuario, contra, sucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocTransferenciasAutomaticas(ByVal codTransferencia As Integer, ByVal dui As String, ByVal opcion As Integer, ByVal asociado As String, ByVal origen As String, ByVal destino As String, ByVal fechaIngreso As Date, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocTransferenciasAutomaticas", New Object() {codTransferencia, dui, opcion, asociado, origen, destino, fechaIngreso, usuario, contra, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocTransferenciasAutomaticas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocTransferenciasAutomaticasAsync(ByVal codTransferencia As Integer, ByVal dui As String, ByVal opcion As Integer, ByVal asociado As String, ByVal origen As String, ByVal destino As String, ByVal fechaIngreso As Date, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String)
            Me.consultarAsocTransferenciasAutomaticasAsync(codTransferencia, dui, opcion, asociado, origen, destino, fechaIngreso, usuario, contra, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocTransferenciasAutomaticasAsync(ByVal codTransferencia As Integer, ByVal dui As String, ByVal opcion As Integer, ByVal asociado As String, ByVal origen As String, ByVal destino As String, ByVal fechaIngreso As Date, ByVal usuario As String, ByVal contra As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.consultarAsocTransferenciasAutomaticasOperationCompleted Is Nothing) Then
                Me.consultarAsocTransferenciasAutomaticasOperationCompleted = AddressOf Me.OnconsultarAsocTransferenciasAutomaticasOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocTransferenciasAutomaticas", New Object() {codTransferencia, dui, opcion, asociado, origen, destino, fechaIngreso, usuario, contra, sucursal}, Me.consultarAsocTransferenciasAutomaticasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocTransferenciasAutomaticasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocTransferenciasAutomaticasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocTransferenciasAutomaticasCompleted(Me, New consultarAsocTransferenciasAutomaticasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/recuperarHojaLibreata", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function recuperarHojaLibreata(ByVal linea As Integer) As Integer
            Dim results() As Object = Me.Invoke("recuperarHojaLibreata", New Object() {linea})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginrecuperarHojaLibreata(ByVal linea As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("recuperarHojaLibreata", New Object() {linea}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndrecuperarHojaLibreata(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub recuperarHojaLibreataAsync(ByVal linea As Integer)
            Me.recuperarHojaLibreataAsync(linea, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub recuperarHojaLibreataAsync(ByVal linea As Integer, ByVal userState As Object)
            If (Me.recuperarHojaLibreataOperationCompleted Is Nothing) Then
                Me.recuperarHojaLibreataOperationCompleted = AddressOf Me.OnrecuperarHojaLibreataOperationCompleted
            End If
            Me.InvokeAsync("recuperarHojaLibreata", New Object() {linea}, Me.recuperarHojaLibreataOperationCompleted, userState)
        End Sub
        
        Private Sub OnrecuperarHojaLibreataOperationCompleted(ByVal arg As Object)
            If (Not (Me.recuperarHojaLibreataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent recuperarHojaLibreataCompleted(Me, New recuperarHojaLibreataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/postearMovimientosAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function postearMovimientosAhorro(ByVal nocuenta As String, ByVal noHoja As Integer, ByVal idLibreta As Integer) As Integer
            Dim results() As Object = Me.Invoke("postearMovimientosAhorro", New Object() {nocuenta, noHoja, idLibreta})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginpostearMovimientosAhorro(ByVal nocuenta As String, ByVal noHoja As Integer, ByVal idLibreta As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("postearMovimientosAhorro", New Object() {nocuenta, noHoja, idLibreta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndpostearMovimientosAhorro(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub postearMovimientosAhorroAsync(ByVal nocuenta As String, ByVal noHoja As Integer, ByVal idLibreta As Integer)
            Me.postearMovimientosAhorroAsync(nocuenta, noHoja, idLibreta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub postearMovimientosAhorroAsync(ByVal nocuenta As String, ByVal noHoja As Integer, ByVal idLibreta As Integer, ByVal userState As Object)
            If (Me.postearMovimientosAhorroOperationCompleted Is Nothing) Then
                Me.postearMovimientosAhorroOperationCompleted = AddressOf Me.OnpostearMovimientosAhorroOperationCompleted
            End If
            Me.InvokeAsync("postearMovimientosAhorro", New Object() {nocuenta, noHoja, idLibreta}, Me.postearMovimientosAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnpostearMovimientosAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.postearMovimientosAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent postearMovimientosAhorroCompleted(Me, New postearMovimientosAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/movimientosPendientesPostear", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function movimientosPendientesPostear(ByVal nocuenta As String, ByVal noHoja As Integer, ByVal idLibreta As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("movimientosPendientesPostear", New Object() {nocuenta, noHoja, idLibreta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginmovimientosPendientesPostear(ByVal nocuenta As String, ByVal noHoja As Integer, ByVal idLibreta As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("movimientosPendientesPostear", New Object() {nocuenta, noHoja, idLibreta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmovimientosPendientesPostear(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub movimientosPendientesPostearAsync(ByVal nocuenta As String, ByVal noHoja As Integer, ByVal idLibreta As Integer)
            Me.movimientosPendientesPostearAsync(nocuenta, noHoja, idLibreta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub movimientosPendientesPostearAsync(ByVal nocuenta As String, ByVal noHoja As Integer, ByVal idLibreta As Integer, ByVal userState As Object)
            If (Me.movimientosPendientesPostearOperationCompleted Is Nothing) Then
                Me.movimientosPendientesPostearOperationCompleted = AddressOf Me.OnmovimientosPendientesPostearOperationCompleted
            End If
            Me.InvokeAsync("movimientosPendientesPostear", New Object() {nocuenta, noHoja, idLibreta}, Me.movimientosPendientesPostearOperationCompleted, userState)
        End Sub
        
        Private Sub OnmovimientosPendientesPostearOperationCompleted(ByVal arg As Object)
            If (Not (Me.movimientosPendientesPostearCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent movimientosPendientesPostearCompleted(Me, New movimientosPendientesPostearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RptContratoDepositoPlazo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RptContratoDepositoPlazo(ByVal noCuenta As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RptContratoDepositoPlazo", New Object() {noCuenta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRptContratoDepositoPlazo(ByVal noCuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RptContratoDepositoPlazo", New Object() {noCuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRptContratoDepositoPlazo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RptContratoDepositoPlazoAsync(ByVal noCuenta As String)
            Me.RptContratoDepositoPlazoAsync(noCuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RptContratoDepositoPlazoAsync(ByVal noCuenta As String, ByVal userState As Object)
            If (Me.RptContratoDepositoPlazoOperationCompleted Is Nothing) Then
                Me.RptContratoDepositoPlazoOperationCompleted = AddressOf Me.OnRptContratoDepositoPlazoOperationCompleted
            End If
            Me.InvokeAsync("RptContratoDepositoPlazo", New Object() {noCuenta}, Me.RptContratoDepositoPlazoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRptContratoDepositoPlazoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RptContratoDepositoPlazoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RptContratoDepositoPlazoCompleted(Me, New RptContratoDepositoPlazoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RptContratoAhorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RptContratoAhorros(ByVal noCuenta As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RptContratoAhorros", New Object() {noCuenta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRptContratoAhorros(ByVal noCuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RptContratoAhorros", New Object() {noCuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRptContratoAhorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RptContratoAhorrosAsync(ByVal noCuenta As String)
            Me.RptContratoAhorrosAsync(noCuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RptContratoAhorrosAsync(ByVal noCuenta As String, ByVal userState As Object)
            If (Me.RptContratoAhorrosOperationCompleted Is Nothing) Then
                Me.RptContratoAhorrosOperationCompleted = AddressOf Me.OnRptContratoAhorrosOperationCompleted
            End If
            Me.InvokeAsync("RptContratoAhorros", New Object() {noCuenta}, Me.RptContratoAhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRptContratoAhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RptContratoAhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RptContratoAhorrosCompleted(Me, New RptContratoAhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/generarNoCuentaTipoAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function generarNoCuentaTipoAhorro(ByVal dui As String, ByVal codTipoAhorro As String, ByVal pUsuario As String, ByVal contrasenia As String, ByVal sucursal As String) As String
            Dim results() As Object = Me.Invoke("generarNoCuentaTipoAhorro", New Object() {dui, codTipoAhorro, pUsuario, contrasenia, sucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BegingenerarNoCuentaTipoAhorro(ByVal dui As String, ByVal codTipoAhorro As String, ByVal pUsuario As String, ByVal contrasenia As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("generarNoCuentaTipoAhorro", New Object() {dui, codTipoAhorro, pUsuario, contrasenia, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgenerarNoCuentaTipoAhorro(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub generarNoCuentaTipoAhorroAsync(ByVal dui As String, ByVal codTipoAhorro As String, ByVal pUsuario As String, ByVal contrasenia As String, ByVal sucursal As String)
            Me.generarNoCuentaTipoAhorroAsync(dui, codTipoAhorro, pUsuario, contrasenia, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub generarNoCuentaTipoAhorroAsync(ByVal dui As String, ByVal codTipoAhorro As String, ByVal pUsuario As String, ByVal contrasenia As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.generarNoCuentaTipoAhorroOperationCompleted Is Nothing) Then
                Me.generarNoCuentaTipoAhorroOperationCompleted = AddressOf Me.OngenerarNoCuentaTipoAhorroOperationCompleted
            End If
            Me.InvokeAsync("generarNoCuentaTipoAhorro", New Object() {dui, codTipoAhorro, pUsuario, contrasenia, sucursal}, Me.generarNoCuentaTipoAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OngenerarNoCuentaTipoAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.generarNoCuentaTipoAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent generarNoCuentaTipoAhorroCompleted(Me, New generarNoCuentaTipoAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/procesarProvisionAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function procesarProvisionAhorro(ByVal todas As Integer, ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal noCuenta As String) As String
            Dim results() As Object = Me.Invoke("procesarProvisionAhorro", New Object() {todas, fechaInicio, fechaFin, noCuenta})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginprocesarProvisionAhorro(ByVal todas As Integer, ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal noCuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("procesarProvisionAhorro", New Object() {todas, fechaInicio, fechaFin, noCuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndprocesarProvisionAhorro(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub procesarProvisionAhorroAsync(ByVal todas As Integer, ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal noCuenta As String)
            Me.procesarProvisionAhorroAsync(todas, fechaInicio, fechaFin, noCuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub procesarProvisionAhorroAsync(ByVal todas As Integer, ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal noCuenta As String, ByVal userState As Object)
            If (Me.procesarProvisionAhorroOperationCompleted Is Nothing) Then
                Me.procesarProvisionAhorroOperationCompleted = AddressOf Me.OnprocesarProvisionAhorroOperationCompleted
            End If
            Me.InvokeAsync("procesarProvisionAhorro", New Object() {todas, fechaInicio, fechaFin, noCuenta}, Me.procesarProvisionAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnprocesarProvisionAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.procesarProvisionAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent procesarProvisionAhorroCompleted(Me, New procesarProvisionAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/consultarAhCuentasInactivas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAhCuentasInactivas(ByVal dui As String, ByVal nocuenta As String, ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAhCuentasInactivas", New Object() {dui, nocuenta, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAhCuentasInactivas(ByVal dui As String, ByVal nocuenta As String, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAhCuentasInactivas", New Object() {dui, nocuenta, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAhCuentasInactivas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAhCuentasInactivasAsync(ByVal dui As String, ByVal nocuenta As String, ByVal opcion As Integer)
            Me.consultarAhCuentasInactivasAsync(dui, nocuenta, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAhCuentasInactivasAsync(ByVal dui As String, ByVal nocuenta As String, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.consultarAhCuentasInactivasOperationCompleted Is Nothing) Then
                Me.consultarAhCuentasInactivasOperationCompleted = AddressOf Me.OnconsultarAhCuentasInactivasOperationCompleted
            End If
            Me.InvokeAsync("consultarAhCuentasInactivas", New Object() {dui, nocuenta, opcion}, Me.consultarAhCuentasInactivasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAhCuentasInactivasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAhCuentasInactivasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAhCuentasInactivasCompleted(Me, New consultarAhCuentasInactivasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/activarCuentasInactivas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function activarCuentasInactivas(ByVal usuarioActiva As String, ByVal nocuenta As String, ByVal inactiva As Boolean) As Integer
            Dim results() As Object = Me.Invoke("activarCuentasInactivas", New Object() {usuarioActiva, nocuenta, inactiva})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginactivarCuentasInactivas(ByVal usuarioActiva As String, ByVal nocuenta As String, ByVal inactiva As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("activarCuentasInactivas", New Object() {usuarioActiva, nocuenta, inactiva}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndactivarCuentasInactivas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub activarCuentasInactivasAsync(ByVal usuarioActiva As String, ByVal nocuenta As String, ByVal inactiva As Boolean)
            Me.activarCuentasInactivasAsync(usuarioActiva, nocuenta, inactiva, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub activarCuentasInactivasAsync(ByVal usuarioActiva As String, ByVal nocuenta As String, ByVal inactiva As Boolean, ByVal userState As Object)
            If (Me.activarCuentasInactivasOperationCompleted Is Nothing) Then
                Me.activarCuentasInactivasOperationCompleted = AddressOf Me.OnactivarCuentasInactivasOperationCompleted
            End If
            Me.InvokeAsync("activarCuentasInactivas", New Object() {usuarioActiva, nocuenta, inactiva}, Me.activarCuentasInactivasOperationCompleted, userState)
        End Sub
        
        Private Sub OnactivarCuentasInactivasOperationCompleted(ByVal arg As Object)
            If (Not (Me.activarCuentasInactivasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent activarCuentasInactivasCompleted(Me, New activarCuentasInactivasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/consultarAhContratos_Ahorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAhContratos_Ahorro(ByVal codtipoahorro As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAhContratos_Ahorro", New Object() {codtipoahorro})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAhContratos_Ahorro(ByVal codtipoahorro As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAhContratos_Ahorro", New Object() {codtipoahorro}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAhContratos_Ahorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAhContratos_AhorroAsync(ByVal codtipoahorro As String)
            Me.consultarAhContratos_AhorroAsync(codtipoahorro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAhContratos_AhorroAsync(ByVal codtipoahorro As String, ByVal userState As Object)
            If (Me.consultarAhContratos_AhorroOperationCompleted Is Nothing) Then
                Me.consultarAhContratos_AhorroOperationCompleted = AddressOf Me.OnconsultarAhContratos_AhorroOperationCompleted
            End If
            Me.InvokeAsync("consultarAhContratos_Ahorro", New Object() {codtipoahorro}, Me.consultarAhContratos_AhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAhContratos_AhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAhContratos_AhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAhContratos_AhorroCompleted(Me, New consultarAhContratos_AhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/consultarDatosLibreta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarDatosLibreta(ByVal noCuenta As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarDatosLibreta", New Object() {noCuenta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarDatosLibreta(ByVal noCuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarDatosLibreta", New Object() {noCuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarDatosLibreta(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarDatosLibretaAsync(ByVal noCuenta As String)
            Me.consultarDatosLibretaAsync(noCuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarDatosLibretaAsync(ByVal noCuenta As String, ByVal userState As Object)
            If (Me.consultarDatosLibretaOperationCompleted Is Nothing) Then
                Me.consultarDatosLibretaOperationCompleted = AddressOf Me.OnconsultarDatosLibretaOperationCompleted
            End If
            Me.InvokeAsync("consultarDatosLibreta", New Object() {noCuenta}, Me.consultarDatosLibretaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarDatosLibretaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarDatosLibretaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarDatosLibretaCompleted(Me, New consultarDatosLibretaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/QuitarPosteos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QuitarPosteos(ByVal correlativo As Integer, ByVal posteo As String) As Integer
            Dim results() As Object = Me.Invoke("QuitarPosteos", New Object() {correlativo, posteo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginQuitarPosteos(ByVal correlativo As Integer, ByVal posteo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("QuitarPosteos", New Object() {correlativo, posteo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndQuitarPosteos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub QuitarPosteosAsync(ByVal correlativo As Integer, ByVal posteo As String)
            Me.QuitarPosteosAsync(correlativo, posteo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QuitarPosteosAsync(ByVal correlativo As Integer, ByVal posteo As String, ByVal userState As Object)
            If (Me.QuitarPosteosOperationCompleted Is Nothing) Then
                Me.QuitarPosteosOperationCompleted = AddressOf Me.OnQuitarPosteosOperationCompleted
            End If
            Me.InvokeAsync("QuitarPosteos", New Object() {correlativo, posteo}, Me.QuitarPosteosOperationCompleted, userState)
        End Sub
        
        Private Sub OnQuitarPosteosOperationCompleted(ByVal arg As Object)
            If (Not (Me.QuitarPosteosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QuitarPosteosCompleted(Me, New QuitarPosteosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/AsociadosISR", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AsociadosISR(ByVal FechaInicio As Date, ByVal fechaFin As Date) As Integer
            Dim results() As Object = Me.Invoke("AsociadosISR", New Object() {FechaInicio, fechaFin})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginAsociadosISR(ByVal FechaInicio As Date, ByVal fechaFin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AsociadosISR", New Object() {FechaInicio, fechaFin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAsociadosISR(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AsociadosISRAsync(ByVal FechaInicio As Date, ByVal fechaFin As Date)
            Me.AsociadosISRAsync(FechaInicio, fechaFin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AsociadosISRAsync(ByVal FechaInicio As Date, ByVal fechaFin As Date, ByVal userState As Object)
            If (Me.AsociadosISROperationCompleted Is Nothing) Then
                Me.AsociadosISROperationCompleted = AddressOf Me.OnAsociadosISROperationCompleted
            End If
            Me.InvokeAsync("AsociadosISR", New Object() {FechaInicio, fechaFin}, Me.AsociadosISROperationCompleted, userState)
        End Sub
        
        Private Sub OnAsociadosISROperationCompleted(ByVal arg As Object)
            If (Not (Me.AsociadosISRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AsociadosISRCompleted(Me, New AsociadosISRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/consultarAhAutorizacionTasasDpf", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAhAutorizacionTasasDpf(ByVal codEmpleado As String, ByVal opcion As Integer, ByVal idAutorizacion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAhAutorizacionTasasDpf", New Object() {codEmpleado, opcion, idAutorizacion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAhAutorizacionTasasDpf(ByVal codEmpleado As String, ByVal opcion As Integer, ByVal idAutorizacion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAhAutorizacionTasasDpf", New Object() {codEmpleado, opcion, idAutorizacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAhAutorizacionTasasDpf(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAhAutorizacionTasasDpfAsync(ByVal codEmpleado As String, ByVal opcion As Integer, ByVal idAutorizacion As Integer)
            Me.consultarAhAutorizacionTasasDpfAsync(codEmpleado, opcion, idAutorizacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAhAutorizacionTasasDpfAsync(ByVal codEmpleado As String, ByVal opcion As Integer, ByVal idAutorizacion As Integer, ByVal userState As Object)
            If (Me.consultarAhAutorizacionTasasDpfOperationCompleted Is Nothing) Then
                Me.consultarAhAutorizacionTasasDpfOperationCompleted = AddressOf Me.OnconsultarAhAutorizacionTasasDpfOperationCompleted
            End If
            Me.InvokeAsync("consultarAhAutorizacionTasasDpf", New Object() {codEmpleado, opcion, idAutorizacion}, Me.consultarAhAutorizacionTasasDpfOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAhAutorizacionTasasDpfOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAhAutorizacionTasasDpfCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAhAutorizacionTasasDpfCompleted(Me, New consultarAhAutorizacionTasasDpfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/eliminarAhAutorizacionTasasDpf", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarAhAutorizacionTasasDpf(ByVal idAutorizacion As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarAhAutorizacionTasasDpf", New Object() {idAutorizacion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarAhAutorizacionTasasDpf(ByVal idAutorizacion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarAhAutorizacionTasasDpf", New Object() {idAutorizacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarAhAutorizacionTasasDpf(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarAhAutorizacionTasasDpfAsync(ByVal idAutorizacion As Integer)
            Me.eliminarAhAutorizacionTasasDpfAsync(idAutorizacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarAhAutorizacionTasasDpfAsync(ByVal idAutorizacion As Integer, ByVal userState As Object)
            If (Me.eliminarAhAutorizacionTasasDpfOperationCompleted Is Nothing) Then
                Me.eliminarAhAutorizacionTasasDpfOperationCompleted = AddressOf Me.OneliminarAhAutorizacionTasasDpfOperationCompleted
            End If
            Me.InvokeAsync("eliminarAhAutorizacionTasasDpf", New Object() {idAutorizacion}, Me.eliminarAhAutorizacionTasasDpfOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarAhAutorizacionTasasDpfOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarAhAutorizacionTasasDpfCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarAhAutorizacionTasasDpfCompleted(Me, New eliminarAhAutorizacionTasasDpfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/modificarAhAutorizacionTasasDpf", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarAhAutorizacionTasasDpf(ByVal codEmpleado As String, ByVal idAutorizacion As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarAhAutorizacionTasasDpf", New Object() {codEmpleado, idAutorizacion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarAhAutorizacionTasasDpf(ByVal codEmpleado As String, ByVal idAutorizacion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarAhAutorizacionTasasDpf", New Object() {codEmpleado, idAutorizacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarAhAutorizacionTasasDpf(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarAhAutorizacionTasasDpfAsync(ByVal codEmpleado As String, ByVal idAutorizacion As Integer)
            Me.modificarAhAutorizacionTasasDpfAsync(codEmpleado, idAutorizacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarAhAutorizacionTasasDpfAsync(ByVal codEmpleado As String, ByVal idAutorizacion As Integer, ByVal userState As Object)
            If (Me.modificarAhAutorizacionTasasDpfOperationCompleted Is Nothing) Then
                Me.modificarAhAutorizacionTasasDpfOperationCompleted = AddressOf Me.OnmodificarAhAutorizacionTasasDpfOperationCompleted
            End If
            Me.InvokeAsync("modificarAhAutorizacionTasasDpf", New Object() {codEmpleado, idAutorizacion}, Me.modificarAhAutorizacionTasasDpfOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarAhAutorizacionTasasDpfOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarAhAutorizacionTasasDpfCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarAhAutorizacionTasasDpfCompleted(Me, New modificarAhAutorizacionTasasDpfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/insertarAhAutorizacionTasasDpf", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarAhAutorizacionTasasDpf(ByVal codEmpleado As String) As Integer
            Dim results() As Object = Me.Invoke("insertarAhAutorizacionTasasDpf", New Object() {codEmpleado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarAhAutorizacionTasasDpf(ByVal codEmpleado As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarAhAutorizacionTasasDpf", New Object() {codEmpleado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarAhAutorizacionTasasDpf(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarAhAutorizacionTasasDpfAsync(ByVal codEmpleado As String)
            Me.insertarAhAutorizacionTasasDpfAsync(codEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarAhAutorizacionTasasDpfAsync(ByVal codEmpleado As String, ByVal userState As Object)
            If (Me.insertarAhAutorizacionTasasDpfOperationCompleted Is Nothing) Then
                Me.insertarAhAutorizacionTasasDpfOperationCompleted = AddressOf Me.OninsertarAhAutorizacionTasasDpfOperationCompleted
            End If
            Me.InvokeAsync("insertarAhAutorizacionTasasDpf", New Object() {codEmpleado}, Me.insertarAhAutorizacionTasasDpfOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarAhAutorizacionTasasDpfOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarAhAutorizacionTasasDpfCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarAhAutorizacionTasasDpfCompleted(Me, New insertarAhAutorizacionTasasDpfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/consultarTiposAhorrosActivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarTiposAhorrosActivos(ByVal Filtro As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarTiposAhorrosActivos", New Object() {Filtro})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarTiposAhorrosActivos(ByVal Filtro As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarTiposAhorrosActivos", New Object() {Filtro}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarTiposAhorrosActivos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarTiposAhorrosActivosAsync(ByVal Filtro As String)
            Me.consultarTiposAhorrosActivosAsync(Filtro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarTiposAhorrosActivosAsync(ByVal Filtro As String, ByVal userState As Object)
            If (Me.consultarTiposAhorrosActivosOperationCompleted Is Nothing) Then
                Me.consultarTiposAhorrosActivosOperationCompleted = AddressOf Me.OnconsultarTiposAhorrosActivosOperationCompleted
            End If
            Me.InvokeAsync("consultarTiposAhorrosActivos", New Object() {Filtro}, Me.consultarTiposAhorrosActivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarTiposAhorrosActivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarTiposAhorrosActivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarTiposAhorrosActivosCompleted(Me, New consultarTiposAhorrosActivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RetiroAhorrosCheque", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetiroAhorrosCheque( _
                    ByVal Dui As String,  _
                    ByVal NoCuenta As String,  _
                    ByVal SaldoDisponibleCtaAhorro As Double,  _
                    ByVal SaldoCtaAhorro As Double,  _
                    ByVal SaldoFinal As Double,  _
                    ByVal CodTipoAhorro As String,  _
                    ByVal CtaBanco As String,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Hora As String,  _
                    ByVal IdBanco As Integer,  _
                    ByVal Corr_Cheque As String,  _
                    ByVal Fecha As Date,  _
                    ByVal Monto As Double,  _
                    ByVal Concepto As String,  _
                    ByVal Ciudad As String,  _
                    ByVal Paguese As String,  _
                    ByVal CodCajero As String,  _
                    ByVal NoCaja As Integer,  _
                    ByVal CodSucursal As String,  _
                    ByVal Usuario As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NoLibreta As String,  _
                    ByVal Num As Integer,  _
                    ByVal Corr_Libreta As Integer,  _
                    ByVal IdLibreta As Integer,  _
                    ByVal CodTransaccion As String,  _
                    ByVal CodTipo As String,  _
                    ByVal PagoLibreta As String,  _
                    ByVal Annio As Integer,  _
                    ByVal Posteado As String,  _
                    ByVal Origen As String,  _
                    ByVal NoSocio As Integer,  _
                    ByVal CtaContableAhorro As String,  _
                    ByVal TipoPartida As String,  _
                    ByVal Autorizado As String,  _
                    ByVal Cod_CBeneficio As String,  _
                    ByVal Cod_Ccosto As String) As String()
            Dim results() As Object = Me.Invoke("RetiroAhorrosCheque", New Object() {Dui, NoCuenta, SaldoDisponibleCtaAhorro, SaldoCtaAhorro, SaldoFinal, CodTipoAhorro, CtaBanco, TasaInteres, Hora, IdBanco, Corr_Cheque, Fecha, Monto, Concepto, Ciudad, Paguese, CodCajero, NoCaja, CodSucursal, Usuario, Prefijo, NoLibreta, Num, Corr_Libreta, IdLibreta, CodTransaccion, CodTipo, PagoLibreta, Annio, Posteado, Origen, NoSocio, CtaContableAhorro, TipoPartida, Autorizado, Cod_CBeneficio, Cod_Ccosto})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginRetiroAhorrosCheque( _
                    ByVal Dui As String,  _
                    ByVal NoCuenta As String,  _
                    ByVal SaldoDisponibleCtaAhorro As Double,  _
                    ByVal SaldoCtaAhorro As Double,  _
                    ByVal SaldoFinal As Double,  _
                    ByVal CodTipoAhorro As String,  _
                    ByVal CtaBanco As String,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Hora As String,  _
                    ByVal IdBanco As Integer,  _
                    ByVal Corr_Cheque As String,  _
                    ByVal Fecha As Date,  _
                    ByVal Monto As Double,  _
                    ByVal Concepto As String,  _
                    ByVal Ciudad As String,  _
                    ByVal Paguese As String,  _
                    ByVal CodCajero As String,  _
                    ByVal NoCaja As Integer,  _
                    ByVal CodSucursal As String,  _
                    ByVal Usuario As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NoLibreta As String,  _
                    ByVal Num As Integer,  _
                    ByVal Corr_Libreta As Integer,  _
                    ByVal IdLibreta As Integer,  _
                    ByVal CodTransaccion As String,  _
                    ByVal CodTipo As String,  _
                    ByVal PagoLibreta As String,  _
                    ByVal Annio As Integer,  _
                    ByVal Posteado As String,  _
                    ByVal Origen As String,  _
                    ByVal NoSocio As Integer,  _
                    ByVal CtaContableAhorro As String,  _
                    ByVal TipoPartida As String,  _
                    ByVal Autorizado As String,  _
                    ByVal Cod_CBeneficio As String,  _
                    ByVal Cod_Ccosto As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetiroAhorrosCheque", New Object() {Dui, NoCuenta, SaldoDisponibleCtaAhorro, SaldoCtaAhorro, SaldoFinal, CodTipoAhorro, CtaBanco, TasaInteres, Hora, IdBanco, Corr_Cheque, Fecha, Monto, Concepto, Ciudad, Paguese, CodCajero, NoCaja, CodSucursal, Usuario, Prefijo, NoLibreta, Num, Corr_Libreta, IdLibreta, CodTransaccion, CodTipo, PagoLibreta, Annio, Posteado, Origen, NoSocio, CtaContableAhorro, TipoPartida, Autorizado, Cod_CBeneficio, Cod_Ccosto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetiroAhorrosCheque(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetiroAhorrosChequeAsync( _
                    ByVal Dui As String,  _
                    ByVal NoCuenta As String,  _
                    ByVal SaldoDisponibleCtaAhorro As Double,  _
                    ByVal SaldoCtaAhorro As Double,  _
                    ByVal SaldoFinal As Double,  _
                    ByVal CodTipoAhorro As String,  _
                    ByVal CtaBanco As String,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Hora As String,  _
                    ByVal IdBanco As Integer,  _
                    ByVal Corr_Cheque As String,  _
                    ByVal Fecha As Date,  _
                    ByVal Monto As Double,  _
                    ByVal Concepto As String,  _
                    ByVal Ciudad As String,  _
                    ByVal Paguese As String,  _
                    ByVal CodCajero As String,  _
                    ByVal NoCaja As Integer,  _
                    ByVal CodSucursal As String,  _
                    ByVal Usuario As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NoLibreta As String,  _
                    ByVal Num As Integer,  _
                    ByVal Corr_Libreta As Integer,  _
                    ByVal IdLibreta As Integer,  _
                    ByVal CodTransaccion As String,  _
                    ByVal CodTipo As String,  _
                    ByVal PagoLibreta As String,  _
                    ByVal Annio As Integer,  _
                    ByVal Posteado As String,  _
                    ByVal Origen As String,  _
                    ByVal NoSocio As Integer,  _
                    ByVal CtaContableAhorro As String,  _
                    ByVal TipoPartida As String,  _
                    ByVal Autorizado As String,  _
                    ByVal Cod_CBeneficio As String,  _
                    ByVal Cod_Ccosto As String)
            Me.RetiroAhorrosChequeAsync(Dui, NoCuenta, SaldoDisponibleCtaAhorro, SaldoCtaAhorro, SaldoFinal, CodTipoAhorro, CtaBanco, TasaInteres, Hora, IdBanco, Corr_Cheque, Fecha, Monto, Concepto, Ciudad, Paguese, CodCajero, NoCaja, CodSucursal, Usuario, Prefijo, NoLibreta, Num, Corr_Libreta, IdLibreta, CodTransaccion, CodTipo, PagoLibreta, Annio, Posteado, Origen, NoSocio, CtaContableAhorro, TipoPartida, Autorizado, Cod_CBeneficio, Cod_Ccosto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetiroAhorrosChequeAsync( _
                    ByVal Dui As String,  _
                    ByVal NoCuenta As String,  _
                    ByVal SaldoDisponibleCtaAhorro As Double,  _
                    ByVal SaldoCtaAhorro As Double,  _
                    ByVal SaldoFinal As Double,  _
                    ByVal CodTipoAhorro As String,  _
                    ByVal CtaBanco As String,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Hora As String,  _
                    ByVal IdBanco As Integer,  _
                    ByVal Corr_Cheque As String,  _
                    ByVal Fecha As Date,  _
                    ByVal Monto As Double,  _
                    ByVal Concepto As String,  _
                    ByVal Ciudad As String,  _
                    ByVal Paguese As String,  _
                    ByVal CodCajero As String,  _
                    ByVal NoCaja As Integer,  _
                    ByVal CodSucursal As String,  _
                    ByVal Usuario As String,  _
                    ByVal Prefijo As String,  _
                    ByVal NoLibreta As String,  _
                    ByVal Num As Integer,  _
                    ByVal Corr_Libreta As Integer,  _
                    ByVal IdLibreta As Integer,  _
                    ByVal CodTransaccion As String,  _
                    ByVal CodTipo As String,  _
                    ByVal PagoLibreta As String,  _
                    ByVal Annio As Integer,  _
                    ByVal Posteado As String,  _
                    ByVal Origen As String,  _
                    ByVal NoSocio As Integer,  _
                    ByVal CtaContableAhorro As String,  _
                    ByVal TipoPartida As String,  _
                    ByVal Autorizado As String,  _
                    ByVal Cod_CBeneficio As String,  _
                    ByVal Cod_Ccosto As String,  _
                    ByVal userState As Object)
            If (Me.RetiroAhorrosChequeOperationCompleted Is Nothing) Then
                Me.RetiroAhorrosChequeOperationCompleted = AddressOf Me.OnRetiroAhorrosChequeOperationCompleted
            End If
            Me.InvokeAsync("RetiroAhorrosCheque", New Object() {Dui, NoCuenta, SaldoDisponibleCtaAhorro, SaldoCtaAhorro, SaldoFinal, CodTipoAhorro, CtaBanco, TasaInteres, Hora, IdBanco, Corr_Cheque, Fecha, Monto, Concepto, Ciudad, Paguese, CodCajero, NoCaja, CodSucursal, Usuario, Prefijo, NoLibreta, Num, Corr_Libreta, IdLibreta, CodTransaccion, CodTipo, PagoLibreta, Annio, Posteado, Origen, NoSocio, CtaContableAhorro, TipoPartida, Autorizado, Cod_CBeneficio, Cod_Ccosto}, Me.RetiroAhorrosChequeOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetiroAhorrosChequeOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetiroAhorrosChequeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetiroAhorrosChequeCompleted(Me, New RetiroAhorrosChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Temp_Consultar_CtasInactivas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Temp_Consultar_CtasInactivas(ByVal NoCuenta As String) As Boolean
            Dim results() As Object = Me.Invoke("Temp_Consultar_CtasInactivas", New Object() {NoCuenta})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginTemp_Consultar_CtasInactivas(ByVal NoCuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Temp_Consultar_CtasInactivas", New Object() {NoCuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTemp_Consultar_CtasInactivas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Temp_Consultar_CtasInactivasAsync(ByVal NoCuenta As String)
            Me.Temp_Consultar_CtasInactivasAsync(NoCuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Temp_Consultar_CtasInactivasAsync(ByVal NoCuenta As String, ByVal userState As Object)
            If (Me.Temp_Consultar_CtasInactivasOperationCompleted Is Nothing) Then
                Me.Temp_Consultar_CtasInactivasOperationCompleted = AddressOf Me.OnTemp_Consultar_CtasInactivasOperationCompleted
            End If
            Me.InvokeAsync("Temp_Consultar_CtasInactivas", New Object() {NoCuenta}, Me.Temp_Consultar_CtasInactivasOperationCompleted, userState)
        End Sub
        
        Private Sub OnTemp_Consultar_CtasInactivasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Temp_Consultar_CtasInactivasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Temp_Consultar_CtasInactivasCompleted(Me, New Temp_Consultar_CtasInactivasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarAhMovimientos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAhMovimientos(ByVal Campos As String, ByVal Filtro As String, ByVal orden As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAhMovimientos", New Object() {Campos, Filtro, orden})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAhMovimientos(ByVal Campos As String, ByVal Filtro As String, ByVal orden As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAhMovimientos", New Object() {Campos, Filtro, orden}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAhMovimientos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAhMovimientosAsync(ByVal Campos As String, ByVal Filtro As String, ByVal orden As String)
            Me.ConsultarAhMovimientosAsync(Campos, Filtro, orden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAhMovimientosAsync(ByVal Campos As String, ByVal Filtro As String, ByVal orden As String, ByVal userState As Object)
            If (Me.ConsultarAhMovimientosOperationCompleted Is Nothing) Then
                Me.ConsultarAhMovimientosOperationCompleted = AddressOf Me.OnConsultarAhMovimientosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAhMovimientos", New Object() {Campos, Filtro, orden}, Me.ConsultarAhMovimientosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAhMovimientosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAhMovimientosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAhMovimientosCompleted(Me, New ConsultarAhMovimientosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarMov_AportacionesDif", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarMov_AportacionesDif(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarMov_AportacionesDif", New Object() {Fecha_Inicio, Fecha_Fin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarMov_AportacionesDif(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarMov_AportacionesDif", New Object() {Fecha_Inicio, Fecha_Fin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarMov_AportacionesDif(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarMov_AportacionesDifAsync(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date)
            Me.ConsultarMov_AportacionesDifAsync(Fecha_Inicio, Fecha_Fin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarMov_AportacionesDifAsync(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal userState As Object)
            If (Me.ConsultarMov_AportacionesDifOperationCompleted Is Nothing) Then
                Me.ConsultarMov_AportacionesDifOperationCompleted = AddressOf Me.OnConsultarMov_AportacionesDifOperationCompleted
            End If
            Me.InvokeAsync("ConsultarMov_AportacionesDif", New Object() {Fecha_Inicio, Fecha_Fin}, Me.ConsultarMov_AportacionesDifOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarMov_AportacionesDifOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarMov_AportacionesDifCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarMov_AportacionesDifCompleted(Me, New ConsultarMov_AportacionesDifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarMov_AhorrosDif", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarMov_AhorrosDif(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarMov_AhorrosDif", New Object() {Fecha_Inicio, Fecha_Fin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarMov_AhorrosDif(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarMov_AhorrosDif", New Object() {Fecha_Inicio, Fecha_Fin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarMov_AhorrosDif(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarMov_AhorrosDifAsync(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date)
            Me.ConsultarMov_AhorrosDifAsync(Fecha_Inicio, Fecha_Fin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarMov_AhorrosDifAsync(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal userState As Object)
            If (Me.ConsultarMov_AhorrosDifOperationCompleted Is Nothing) Then
                Me.ConsultarMov_AhorrosDifOperationCompleted = AddressOf Me.OnConsultarMov_AhorrosDifOperationCompleted
            End If
            Me.InvokeAsync("ConsultarMov_AhorrosDif", New Object() {Fecha_Inicio, Fecha_Fin}, Me.ConsultarMov_AhorrosDifOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarMov_AhorrosDifOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarMov_AhorrosDifCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarMov_AhorrosDifCompleted(Me, New ConsultarMov_AhorrosDifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Transferencia_IntDpf_CuotaAportaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Transferencia_IntDpf_CuotaAportaciones(ByVal Fecha As Date, ByVal Dui As String, ByVal Usuario As String) As Integer
            Dim results() As Object = Me.Invoke("Transferencia_IntDpf_CuotaAportaciones", New Object() {Fecha, Dui, Usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginTransferencia_IntDpf_CuotaAportaciones(ByVal Fecha As Date, ByVal Dui As String, ByVal Usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Transferencia_IntDpf_CuotaAportaciones", New Object() {Fecha, Dui, Usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTransferencia_IntDpf_CuotaAportaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Transferencia_IntDpf_CuotaAportacionesAsync(ByVal Fecha As Date, ByVal Dui As String, ByVal Usuario As String)
            Me.Transferencia_IntDpf_CuotaAportacionesAsync(Fecha, Dui, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Transferencia_IntDpf_CuotaAportacionesAsync(ByVal Fecha As Date, ByVal Dui As String, ByVal Usuario As String, ByVal userState As Object)
            If (Me.Transferencia_IntDpf_CuotaAportacionesOperationCompleted Is Nothing) Then
                Me.Transferencia_IntDpf_CuotaAportacionesOperationCompleted = AddressOf Me.OnTransferencia_IntDpf_CuotaAportacionesOperationCompleted
            End If
            Me.InvokeAsync("Transferencia_IntDpf_CuotaAportaciones", New Object() {Fecha, Dui, Usuario}, Me.Transferencia_IntDpf_CuotaAportacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferencia_IntDpf_CuotaAportacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Transferencia_IntDpf_CuotaAportacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Transferencia_IntDpf_CuotaAportacionesCompleted(Me, New Transferencia_IntDpf_CuotaAportacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Cargar_Planilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cargar_Planilla(ByVal FechaCarga As Date, ByVal CodPagaduaria As String, ByVal IdCtaBanco As String, ByVal Usuario As String, ByVal Dts As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("Cargar_Planilla", New Object() {FechaCarga, CodPagaduaria, IdCtaBanco, Usuario, Dts})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCargar_Planilla(ByVal FechaCarga As Date, ByVal CodPagaduaria As String, ByVal IdCtaBanco As String, ByVal Usuario As String, ByVal Dts As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Cargar_Planilla", New Object() {FechaCarga, CodPagaduaria, IdCtaBanco, Usuario, Dts}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargar_Planilla(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cargar_PlanillaAsync(ByVal FechaCarga As Date, ByVal CodPagaduaria As String, ByVal IdCtaBanco As String, ByVal Usuario As String, ByVal Dts As System.Data.DataSet)
            Me.Cargar_PlanillaAsync(FechaCarga, CodPagaduaria, IdCtaBanco, Usuario, Dts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cargar_PlanillaAsync(ByVal FechaCarga As Date, ByVal CodPagaduaria As String, ByVal IdCtaBanco As String, ByVal Usuario As String, ByVal Dts As System.Data.DataSet, ByVal userState As Object)
            If (Me.Cargar_PlanillaOperationCompleted Is Nothing) Then
                Me.Cargar_PlanillaOperationCompleted = AddressOf Me.OnCargar_PlanillaOperationCompleted
            End If
            Me.InvokeAsync("Cargar_Planilla", New Object() {FechaCarga, CodPagaduaria, IdCtaBanco, Usuario, Dts}, Me.Cargar_PlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargar_PlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cargar_PlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cargar_PlanillaCompleted(Me, New Cargar_PlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RptTransferenciasAutoAhorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RptTransferenciasAutoAhorros(ByVal Fecha As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RptTransferenciasAutoAhorros", New Object() {Fecha})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRptTransferenciasAutoAhorros(ByVal Fecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RptTransferenciasAutoAhorros", New Object() {Fecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRptTransferenciasAutoAhorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RptTransferenciasAutoAhorrosAsync(ByVal Fecha As Date)
            Me.RptTransferenciasAutoAhorrosAsync(Fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RptTransferenciasAutoAhorrosAsync(ByVal Fecha As Date, ByVal userState As Object)
            If (Me.RptTransferenciasAutoAhorrosOperationCompleted Is Nothing) Then
                Me.RptTransferenciasAutoAhorrosOperationCompleted = AddressOf Me.OnRptTransferenciasAutoAhorrosOperationCompleted
            End If
            Me.InvokeAsync("RptTransferenciasAutoAhorros", New Object() {Fecha}, Me.RptTransferenciasAutoAhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRptTransferenciasAutoAhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RptTransferenciasAutoAhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RptTransferenciasAutoAhorrosCompleted(Me, New RptTransferenciasAutoAhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarCtasTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCtasTransferencia(ByVal fecha As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCtasTransferencia", New Object() {fecha})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCtasTransferencia(ByVal fecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCtasTransferencia", New Object() {fecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCtasTransferencia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCtasTransferenciaAsync(ByVal fecha As Date)
            Me.ConsultarCtasTransferenciaAsync(fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCtasTransferenciaAsync(ByVal fecha As Date, ByVal userState As Object)
            If (Me.ConsultarCtasTransferenciaOperationCompleted Is Nothing) Then
                Me.ConsultarCtasTransferenciaOperationCompleted = AddressOf Me.OnConsultarCtasTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCtasTransferencia", New Object() {fecha}, Me.ConsultarCtasTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCtasTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCtasTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCtasTransferenciaCompleted(Me, New ConsultarCtasTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/TrasnferenciasAutomaticas_Ahorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrasnferenciasAutomaticas_Ahorros(ByVal Fecha As Date, ByVal Usuario As String, ByVal CtasNo As String) As Integer
            Dim results() As Object = Me.Invoke("TrasnferenciasAutomaticas_Ahorros", New Object() {Fecha, Usuario, CtasNo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginTrasnferenciasAutomaticas_Ahorros(ByVal Fecha As Date, ByVal Usuario As String, ByVal CtasNo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TrasnferenciasAutomaticas_Ahorros", New Object() {Fecha, Usuario, CtasNo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTrasnferenciasAutomaticas_Ahorros(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrasnferenciasAutomaticas_AhorrosAsync(ByVal Fecha As Date, ByVal Usuario As String, ByVal CtasNo As String)
            Me.TrasnferenciasAutomaticas_AhorrosAsync(Fecha, Usuario, CtasNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrasnferenciasAutomaticas_AhorrosAsync(ByVal Fecha As Date, ByVal Usuario As String, ByVal CtasNo As String, ByVal userState As Object)
            If (Me.TrasnferenciasAutomaticas_AhorrosOperationCompleted Is Nothing) Then
                Me.TrasnferenciasAutomaticas_AhorrosOperationCompleted = AddressOf Me.OnTrasnferenciasAutomaticas_AhorrosOperationCompleted
            End If
            Me.InvokeAsync("TrasnferenciasAutomaticas_Ahorros", New Object() {Fecha, Usuario, CtasNo}, Me.TrasnferenciasAutomaticas_AhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrasnferenciasAutomaticas_AhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrasnferenciasAutomaticas_AhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrasnferenciasAutomaticas_AhorrosCompleted(Me, New TrasnferenciasAutomaticas_AhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/AsignarPrestamo_Transferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AsignarPrestamo_Transferencia(ByVal NoCuenta As String, ByVal CodPrestamo As String, ByVal Transferencia As Boolean) As Integer
            Dim results() As Object = Me.Invoke("AsignarPrestamo_Transferencia", New Object() {NoCuenta, CodPrestamo, Transferencia})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginAsignarPrestamo_Transferencia(ByVal NoCuenta As String, ByVal CodPrestamo As String, ByVal Transferencia As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AsignarPrestamo_Transferencia", New Object() {NoCuenta, CodPrestamo, Transferencia}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAsignarPrestamo_Transferencia(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AsignarPrestamo_TransferenciaAsync(ByVal NoCuenta As String, ByVal CodPrestamo As String, ByVal Transferencia As Boolean)
            Me.AsignarPrestamo_TransferenciaAsync(NoCuenta, CodPrestamo, Transferencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AsignarPrestamo_TransferenciaAsync(ByVal NoCuenta As String, ByVal CodPrestamo As String, ByVal Transferencia As Boolean, ByVal userState As Object)
            If (Me.AsignarPrestamo_TransferenciaOperationCompleted Is Nothing) Then
                Me.AsignarPrestamo_TransferenciaOperationCompleted = AddressOf Me.OnAsignarPrestamo_TransferenciaOperationCompleted
            End If
            Me.InvokeAsync("AsignarPrestamo_Transferencia", New Object() {NoCuenta, CodPrestamo, Transferencia}, Me.AsignarPrestamo_TransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAsignarPrestamo_TransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AsignarPrestamo_TransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AsignarPrestamo_TransferenciaCompleted(Me, New AsignarPrestamo_TransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ValidarCtas_TransferenciasAutomaticas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarCtas_TransferenciasAutomaticas(ByVal CodTipoAhorro As String) As Boolean
            Dim results() As Object = Me.Invoke("ValidarCtas_TransferenciasAutomaticas", New Object() {CodTipoAhorro})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarCtas_TransferenciasAutomaticas(ByVal CodTipoAhorro As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarCtas_TransferenciasAutomaticas", New Object() {CodTipoAhorro}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarCtas_TransferenciasAutomaticas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarCtas_TransferenciasAutomaticasAsync(ByVal CodTipoAhorro As String)
            Me.ValidarCtas_TransferenciasAutomaticasAsync(CodTipoAhorro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarCtas_TransferenciasAutomaticasAsync(ByVal CodTipoAhorro As String, ByVal userState As Object)
            If (Me.ValidarCtas_TransferenciasAutomaticasOperationCompleted Is Nothing) Then
                Me.ValidarCtas_TransferenciasAutomaticasOperationCompleted = AddressOf Me.OnValidarCtas_TransferenciasAutomaticasOperationCompleted
            End If
            Me.InvokeAsync("ValidarCtas_TransferenciasAutomaticas", New Object() {CodTipoAhorro}, Me.ValidarCtas_TransferenciasAutomaticasOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarCtas_TransferenciasAutomaticasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarCtas_TransferenciasAutomaticasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarCtas_TransferenciasAutomaticasCompleted(Me, New ValidarCtas_TransferenciasAutomaticasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/RPT_TASAPASIVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_TASAPASIVA(ByVal FECHA As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_TASAPASIVA", New Object() {FECHA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_TASAPASIVA(ByVal FECHA As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_TASAPASIVA", New Object() {FECHA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_TASAPASIVA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_TASAPASIVAAsync(ByVal FECHA As Date)
            Me.RPT_TASAPASIVAAsync(FECHA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_TASAPASIVAAsync(ByVal FECHA As Date, ByVal userState As Object)
            If (Me.RPT_TASAPASIVAOperationCompleted Is Nothing) Then
                Me.RPT_TASAPASIVAOperationCompleted = AddressOf Me.OnRPT_TASAPASIVAOperationCompleted
            End If
            Me.InvokeAsync("RPT_TASAPASIVA", New Object() {FECHA}, Me.RPT_TASAPASIVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_TASAPASIVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_TASAPASIVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_TASAPASIVACompleted(Me, New RPT_TASAPASIVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/SALDO_CUENTASAHORRO", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SALDO_CUENTASAHORRO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SALDO_CUENTASAHORRO", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSALDO_CUENTASAHORRO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SALDO_CUENTASAHORRO", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSALDO_CUENTASAHORRO(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SALDO_CUENTASAHORROAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date)
            Me.SALDO_CUENTASAHORROAsync(PUSUARIO, PWD, PSUCURSAL, FECHA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SALDO_CUENTASAHORROAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal userState As Object)
            If (Me.SALDO_CUENTASAHORROOperationCompleted Is Nothing) Then
                Me.SALDO_CUENTASAHORROOperationCompleted = AddressOf Me.OnSALDO_CUENTASAHORROOperationCompleted
            End If
            Me.InvokeAsync("SALDO_CUENTASAHORRO", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, Me.SALDO_CUENTASAHORROOperationCompleted, userState)
        End Sub
        
        Private Sub OnSALDO_CUENTASAHORROOperationCompleted(ByVal arg As Object)
            If (Not (Me.SALDO_CUENTASAHORROCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SALDO_CUENTASAHORROCompleted(Me, New SALDO_CUENTASAHORROCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/SALDO_CUENTASAPORTACIONES", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SALDO_CUENTASAPORTACIONES(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SALDO_CUENTASAPORTACIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSALDO_CUENTASAPORTACIONES(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SALDO_CUENTASAPORTACIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSALDO_CUENTASAPORTACIONES(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SALDO_CUENTASAPORTACIONESAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date)
            Me.SALDO_CUENTASAPORTACIONESAsync(PUSUARIO, PWD, PSUCURSAL, FECHA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SALDO_CUENTASAPORTACIONESAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal userState As Object)
            If (Me.SALDO_CUENTASAPORTACIONESOperationCompleted Is Nothing) Then
                Me.SALDO_CUENTASAPORTACIONESOperationCompleted = AddressOf Me.OnSALDO_CUENTASAPORTACIONESOperationCompleted
            End If
            Me.InvokeAsync("SALDO_CUENTASAPORTACIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, Me.SALDO_CUENTASAPORTACIONESOperationCompleted, userState)
        End Sub
        
        Private Sub OnSALDO_CUENTASAPORTACIONESOperationCompleted(ByVal arg As Object)
            If (Not (Me.SALDO_CUENTASAPORTACIONESCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SALDO_CUENTASAPORTACIONESCompleted(Me, New SALDO_CUENTASAPORTACIONESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/SALDO_CUENTASDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SALDO_CUENTASDPF(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SALDO_CUENTASDPF", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSALDO_CUENTASDPF(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SALDO_CUENTASDPF", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSALDO_CUENTASDPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SALDO_CUENTASDPFAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date)
            Me.SALDO_CUENTASDPFAsync(PUSUARIO, PWD, PSUCURSAL, FECHA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SALDO_CUENTASDPFAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal userState As Object)
            If (Me.SALDO_CUENTASDPFOperationCompleted Is Nothing) Then
                Me.SALDO_CUENTASDPFOperationCompleted = AddressOf Me.OnSALDO_CUENTASDPFOperationCompleted
            End If
            Me.InvokeAsync("SALDO_CUENTASDPF", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, Me.SALDO_CUENTASDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnSALDO_CUENTASDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.SALDO_CUENTASDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SALDO_CUENTASDPFCompleted(Me, New SALDO_CUENTASDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ActualizaCuentasInactivas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizaCuentasInactivas(ByVal pFecha As Date, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ActualizaCuentasInactivas", New Object() {pFecha, ds, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizaCuentasInactivas(ByVal pFecha As Date, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizaCuentasInactivas", New Object() {pFecha, ds, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizaCuentasInactivas(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizaCuentasInactivasAsync(ByVal pFecha As Date, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ActualizaCuentasInactivasAsync(pFecha, ds, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizaCuentasInactivasAsync(ByVal pFecha As Date, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ActualizaCuentasInactivasOperationCompleted Is Nothing) Then
                Me.ActualizaCuentasInactivasOperationCompleted = AddressOf Me.OnActualizaCuentasInactivasOperationCompleted
            End If
            Me.InvokeAsync("ActualizaCuentasInactivas", New Object() {pFecha, ds, pUsuario, pPassword, pSucursal}, Me.ActualizaCuentasInactivasOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizaCuentasInactivasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizaCuentasInactivasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizaCuentasInactivasCompleted(Me, New ActualizaCuentasInactivasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ActualizaEstructuraCuentasInactivas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizaEstructuraCuentasInactivas(ByVal ds As System.Data.DataSet, ByVal dsSel As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ActualizaEstructuraCuentasInactivas", New Object() {ds, dsSel, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizaEstructuraCuentasInactivas(ByVal ds As System.Data.DataSet, ByVal dsSel As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizaEstructuraCuentasInactivas", New Object() {ds, dsSel, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizaEstructuraCuentasInactivas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizaEstructuraCuentasInactivasAsync(ByVal ds As System.Data.DataSet, ByVal dsSel As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ActualizaEstructuraCuentasInactivasAsync(ds, dsSel, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizaEstructuraCuentasInactivasAsync(ByVal ds As System.Data.DataSet, ByVal dsSel As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ActualizaEstructuraCuentasInactivasOperationCompleted Is Nothing) Then
                Me.ActualizaEstructuraCuentasInactivasOperationCompleted = AddressOf Me.OnActualizaEstructuraCuentasInactivasOperationCompleted
            End If
            Me.InvokeAsync("ActualizaEstructuraCuentasInactivas", New Object() {ds, dsSel, pUsuario, pPassword, pSucursal}, Me.ActualizaEstructuraCuentasInactivasOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizaEstructuraCuentasInactivasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizaEstructuraCuentasInactivasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizaEstructuraCuentasInactivasCompleted(Me, New ActualizaEstructuraCuentasInactivasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ActualizaListadoCuentasInactivas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizaListadoCuentasInactivas(ByVal pFecha As Date, ByVal pCodTipoAhorro As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ActualizaListadoCuentasInactivas", New Object() {pFecha, pCodTipoAhorro, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizaListadoCuentasInactivas(ByVal pFecha As Date, ByVal pCodTipoAhorro As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizaListadoCuentasInactivas", New Object() {pFecha, pCodTipoAhorro, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizaListadoCuentasInactivas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizaListadoCuentasInactivasAsync(ByVal pFecha As Date, ByVal pCodTipoAhorro As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ActualizaListadoCuentasInactivasAsync(pFecha, pCodTipoAhorro, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizaListadoCuentasInactivasAsync(ByVal pFecha As Date, ByVal pCodTipoAhorro As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ActualizaListadoCuentasInactivasOperationCompleted Is Nothing) Then
                Me.ActualizaListadoCuentasInactivasOperationCompleted = AddressOf Me.OnActualizaListadoCuentasInactivasOperationCompleted
            End If
            Me.InvokeAsync("ActualizaListadoCuentasInactivas", New Object() {pFecha, pCodTipoAhorro, pTodos, pUsuario, pPassword, pSucursal}, Me.ActualizaListadoCuentasInactivasOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizaListadoCuentasInactivasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizaListadoCuentasInactivasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizaListadoCuentasInactivasCompleted(Me, New ActualizaListadoCuentasInactivasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/AgregarDetalleTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregarDetalleTransferencia(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal pNoCuenta As String, ByVal pValor As Double, ByVal pTipoMovimiento As String, ByVal pTipoCuenta As String, ByVal pIdCuenta As String, ByVal pFecha As Date, ByVal CodCosto As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("AgregarDetalleTransferencia", New Object() {dsDetalle, pNumero, pNoCuenta, pValor, pTipoMovimiento, pTipoCuenta, pIdCuenta, pFecha, CodCosto})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginAgregarDetalleTransferencia(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal pNoCuenta As String, ByVal pValor As Double, ByVal pTipoMovimiento As String, ByVal pTipoCuenta As String, ByVal pIdCuenta As String, ByVal pFecha As Date, ByVal CodCosto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarDetalleTransferencia", New Object() {dsDetalle, pNumero, pNoCuenta, pValor, pTipoMovimiento, pTipoCuenta, pIdCuenta, pFecha, CodCosto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAgregarDetalleTransferencia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AgregarDetalleTransferenciaAsync(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal pNoCuenta As String, ByVal pValor As Double, ByVal pTipoMovimiento As String, ByVal pTipoCuenta As String, ByVal pIdCuenta As String, ByVal pFecha As Date, ByVal CodCosto As String)
            Me.AgregarDetalleTransferenciaAsync(dsDetalle, pNumero, pNoCuenta, pValor, pTipoMovimiento, pTipoCuenta, pIdCuenta, pFecha, CodCosto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AgregarDetalleTransferenciaAsync(ByVal dsDetalle As System.Data.DataSet, ByVal pNumero As Integer, ByVal pNoCuenta As String, ByVal pValor As Double, ByVal pTipoMovimiento As String, ByVal pTipoCuenta As String, ByVal pIdCuenta As String, ByVal pFecha As Date, ByVal CodCosto As String, ByVal userState As Object)
            If (Me.AgregarDetalleTransferenciaOperationCompleted Is Nothing) Then
                Me.AgregarDetalleTransferenciaOperationCompleted = AddressOf Me.OnAgregarDetalleTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("AgregarDetalleTransferencia", New Object() {dsDetalle, pNumero, pNoCuenta, pValor, pTipoMovimiento, pTipoCuenta, pIdCuenta, pFecha, CodCosto}, Me.AgregarDetalleTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAgregarDetalleTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregarDetalleTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregarDetalleTransferenciaCompleted(Me, New AgregarDetalleTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/AlmacenaEstructuraSeleccion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AlmacenaEstructuraSeleccion(ByVal pVal As Boolean, ByVal pNoCuenta As String, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("AlmacenaEstructuraSeleccion", New Object() {pVal, pNoCuenta, ds, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginAlmacenaEstructuraSeleccion(ByVal pVal As Boolean, ByVal pNoCuenta As String, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AlmacenaEstructuraSeleccion", New Object() {pVal, pNoCuenta, ds, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAlmacenaEstructuraSeleccion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AlmacenaEstructuraSeleccionAsync(ByVal pVal As Boolean, ByVal pNoCuenta As String, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AlmacenaEstructuraSeleccionAsync(pVal, pNoCuenta, ds, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlmacenaEstructuraSeleccionAsync(ByVal pVal As Boolean, ByVal pNoCuenta As String, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AlmacenaEstructuraSeleccionOperationCompleted Is Nothing) Then
                Me.AlmacenaEstructuraSeleccionOperationCompleted = AddressOf Me.OnAlmacenaEstructuraSeleccionOperationCompleted
            End If
            Me.InvokeAsync("AlmacenaEstructuraSeleccion", New Object() {pVal, pNoCuenta, ds, pUsuario, pPassword, pSucursal}, Me.AlmacenaEstructuraSeleccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlmacenaEstructuraSeleccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlmacenaEstructuraSeleccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlmacenaEstructuraSeleccionCompleted(Me, New AlmacenaEstructuraSeleccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/AutorizaDatos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutorizaDatos(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String) As Integer
            Dim results() As Object = Me.Invoke("AutorizaDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginAutorizaDatos(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AutorizaDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAutorizaDatos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutorizaDatosAsync(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String)
            Me.AutorizaDatosAsync(pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutorizaDatosAsync(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String, ByVal userState As Object)
            If (Me.AutorizaDatosOperationCompleted Is Nothing) Then
                Me.AutorizaDatosOperationCompleted = AddressOf Me.OnAutorizaDatosOperationCompleted
            End If
            Me.InvokeAsync("AutorizaDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5}, Me.AutorizaDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutorizaDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutorizaDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutorizaDatosCompleted(Me, New AutorizaDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/CalculoProvisionIntereses", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CalculoProvisionIntereses(ByVal pNoCuenta As String, ByVal pTodos As Boolean, ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("CalculoProvisionIntereses", New Object() {pNoCuenta, pTodos, pFecIni, pFecFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCalculoProvisionIntereses(ByVal pNoCuenta As String, ByVal pTodos As Boolean, ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CalculoProvisionIntereses", New Object() {pNoCuenta, pTodos, pFecIni, pFecFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCalculoProvisionIntereses(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CalculoProvisionInteresesAsync(ByVal pNoCuenta As String, ByVal pTodos As Boolean, ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CalculoProvisionInteresesAsync(pNoCuenta, pTodos, pFecIni, pFecFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CalculoProvisionInteresesAsync(ByVal pNoCuenta As String, ByVal pTodos As Boolean, ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CalculoProvisionInteresesOperationCompleted Is Nothing) Then
                Me.CalculoProvisionInteresesOperationCompleted = AddressOf Me.OnCalculoProvisionInteresesOperationCompleted
            End If
            Me.InvokeAsync("CalculoProvisionIntereses", New Object() {pNoCuenta, pTodos, pFecIni, pFecFin, pUsuario, pPassword, pSucursal}, Me.CalculoProvisionInteresesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalculoProvisionInteresesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CalculoProvisionInteresesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CalculoProvisionInteresesCompleted(Me, New CalculoProvisionInteresesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/CancelarCuentaAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelarCuentaAhorro(ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pMotivo As String, ByVal pCodEjecCanc As String, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("CancelarCuentaAhorro", New Object() {pNoCuenta, pCodTipoAhorro, pMotivo, pCodEjecCanc, pNoCaja, pCodCajero, pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCancelarCuentaAhorro(ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pMotivo As String, ByVal pCodEjecCanc As String, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CancelarCuentaAhorro", New Object() {pNoCuenta, pCodTipoAhorro, pMotivo, pCodEjecCanc, pNoCaja, pCodCajero, pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCancelarCuentaAhorro(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelarCuentaAhorroAsync(ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pMotivo As String, ByVal pCodEjecCanc As String, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CancelarCuentaAhorroAsync(pNoCuenta, pCodTipoAhorro, pMotivo, pCodEjecCanc, pNoCaja, pCodCajero, pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelarCuentaAhorroAsync(ByVal pNoCuenta As String, ByVal pCodTipoAhorro As String, ByVal pMotivo As String, ByVal pCodEjecCanc As String, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CancelarCuentaAhorroOperationCompleted Is Nothing) Then
                Me.CancelarCuentaAhorroOperationCompleted = AddressOf Me.OnCancelarCuentaAhorroOperationCompleted
            End If
            Me.InvokeAsync("CancelarCuentaAhorro", New Object() {pNoCuenta, pCodTipoAhorro, pMotivo, pCodEjecCanc, pNoCaja, pCodCajero, pFecha, pUsuario, pPassword, pSucursal}, Me.CancelarCuentaAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelarCuentaAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelarCuentaAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelarCuentaAhorroCompleted(Me, New CancelarCuentaAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/CargarDatosPrestamosPignorados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargarDatosPrestamosPignorados(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargarDatosPrestamosPignorados", New Object() {pListaCampos, pFiltro, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargarDatosPrestamosPignorados(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargarDatosPrestamosPignorados", New Object() {pListaCampos, pFiltro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargarDatosPrestamosPignorados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargarDatosPrestamosPignoradosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.CargarDatosPrestamosPignoradosAsync(pListaCampos, pFiltro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargarDatosPrestamosPignoradosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargarDatosPrestamosPignoradosOperationCompleted Is Nothing) Then
                Me.CargarDatosPrestamosPignoradosOperationCompleted = AddressOf Me.OnCargarDatosPrestamosPignoradosOperationCompleted
            End If
            Me.InvokeAsync("CargarDatosPrestamosPignorados", New Object() {pListaCampos, pFiltro, pUs, pPa, pSucursal}, Me.CargarDatosPrestamosPignoradosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargarDatosPrestamosPignoradosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargarDatosPrestamosPignoradosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargarDatosPrestamosPignoradosCompleted(Me, New CargarDatosPrestamosPignoradosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Cartera_DPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cartera_DPF(ByVal pFechaIni As Date, ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Cartera_DPF", New Object() {pFechaIni, pFecha, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCartera_DPF(ByVal pFechaIni As Date, ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Cartera_DPF", New Object() {pFechaIni, pFecha, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCartera_DPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cartera_DPFAsync(ByVal pFechaIni As Date, ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Cartera_DPFAsync(pFechaIni, pFecha, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cartera_DPFAsync(ByVal pFechaIni As Date, ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Cartera_DPFOperationCompleted Is Nothing) Then
                Me.Cartera_DPFOperationCompleted = AddressOf Me.OnCartera_DPFOperationCompleted
            End If
            Me.InvokeAsync("Cartera_DPF", New Object() {pFechaIni, pFecha, pUs, pPa, pSucursal}, Me.Cartera_DPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnCartera_DPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cartera_DPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cartera_DPFCompleted(Me, New Cartera_DPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Comp_Reversiones_Ahorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Comp_Reversiones_Ahorros(ByVal pCodReversion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Comp_Reversiones_Ahorros", New Object() {pCodReversion, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginComp_Reversiones_Ahorros(ByVal pCodReversion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Comp_Reversiones_Ahorros", New Object() {pCodReversion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndComp_Reversiones_Ahorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Comp_Reversiones_AhorrosAsync(ByVal pCodReversion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Comp_Reversiones_AhorrosAsync(pCodReversion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Comp_Reversiones_AhorrosAsync(ByVal pCodReversion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Comp_Reversiones_AhorrosOperationCompleted Is Nothing) Then
                Me.Comp_Reversiones_AhorrosOperationCompleted = AddressOf Me.OnComp_Reversiones_AhorrosOperationCompleted
            End If
            Me.InvokeAsync("Comp_Reversiones_Ahorros", New Object() {pCodReversion, pUs, pPa, pSucursal}, Me.Comp_Reversiones_AhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnComp_Reversiones_AhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Comp_Reversiones_AhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Comp_Reversiones_AhorrosCompleted(Me, New Comp_Reversiones_AhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultaPosteo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaPosteo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaPosteo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaPosteo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaPosteo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaPosteo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaPosteoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultaPosteoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaPosteoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultaPosteoOperationCompleted Is Nothing) Then
                Me.ConsultaPosteoOperationCompleted = AddressOf Me.OnConsultaPosteoOperationCompleted
            End If
            Me.InvokeAsync("ConsultaPosteo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultaPosteoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaPosteoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaPosteoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaPosteoCompleted(Me, New ConsultaPosteoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarAutorizadoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAutorizadoRetiro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAutorizadoRetiro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAutorizadoRetiro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAutorizadoRetiro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAutorizadoRetiro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAutorizadoRetiroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarAutorizadoRetiroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAutorizadoRetiroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarAutorizadoRetiroOperationCompleted Is Nothing) Then
                Me.ConsultarAutorizadoRetiroOperationCompleted = AddressOf Me.OnConsultarAutorizadoRetiroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAutorizadoRetiro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarAutorizadoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAutorizadoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAutorizadoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAutorizadoRetiroCompleted(Me, New ConsultarAutorizadoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBeneficiarios(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBeneficiarios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBeneficiarios(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBeneficiarios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBeneficiarios(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBeneficiariosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarBeneficiariosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBeneficiariosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarBeneficiariosOperationCompleted Is Nothing) Then
                Me.ConsultarBeneficiariosOperationCompleted = AddressOf Me.OnConsultarBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBeneficiarios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBeneficiariosCompleted(Me, New ConsultarBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCertificadosDPF(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCertificadosDPF", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCertificadosDPF(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCertificadosDPF", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCertificadosDPFAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCertificadosDPFAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCertificadosDPFAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCertificadosDPFOperationCompleted Is Nothing) Then
                Me.ConsultarCertificadosDPFOperationCompleted = AddressOf Me.OnConsultarCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCertificadosDPF", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCertificadosDPFCompleted(Me, New ConsultarCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarComisiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarComisiones(ByVal pListaCampos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarComisiones", New Object() {pListaCampos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarComisiones(ByVal pListaCampos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarComisiones", New Object() {pListaCampos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarComisiones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarComisionesAsync(ByVal pListaCampos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarComisionesAsync(pListaCampos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarComisionesAsync(ByVal pListaCampos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarComisionesOperationCompleted Is Nothing) Then
                Me.ConsultarComisionesOperationCompleted = AddressOf Me.OnConsultarComisionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarComisiones", New Object() {pListaCampos, pUsuario, pPassword, pSucursal}, Me.ConsultarComisionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarComisionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarComisionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarComisionesCompleted(Me, New ConsultarComisionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarCtasAhorroDUI", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCtasAhorroDUI(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCtasAhorroDUI", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCtasAhorroDUI(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCtasAhorroDUI", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCtasAhorroDUI(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCtasAhorroDUIAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCtasAhorroDUIAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCtasAhorroDUIAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCtasAhorroDUIOperationCompleted Is Nothing) Then
                Me.ConsultarCtasAhorroDUIOperationCompleted = AddressOf Me.OnConsultarCtasAhorroDUIOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCtasAhorroDUI", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCtasAhorroDUIOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCtasAhorroDUIOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCtasAhorroDUICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCtasAhorroDUICompleted(Me, New ConsultarCtasAhorroDUICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarCuentaAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCuentaAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCuentaAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCuentaAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCuentaAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCuentaAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuentaAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCuentaAhorroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuentaAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCuentaAhorroOperationCompleted Is Nothing) Then
                Me.ConsultarCuentaAhorroOperationCompleted = AddressOf Me.OnConsultarCuentaAhorroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCuentaAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCuentaAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCuentaAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCuentaAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCuentaAhorroCompleted(Me, New ConsultarCuentaAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarCuentaAhorroAgrupadaParametro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCuentaAhorroAgrupadaParametro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pGroup As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCuentaAhorroAgrupadaParametro", New Object() {pListaCampos, pFiltro, pOrden, pGroup, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCuentaAhorroAgrupadaParametro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pGroup As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCuentaAhorroAgrupadaParametro", New Object() {pListaCampos, pFiltro, pOrden, pGroup, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCuentaAhorroAgrupadaParametro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuentaAhorroAgrupadaParametroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pGroup As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCuentaAhorroAgrupadaParametroAsync(pListaCampos, pFiltro, pOrden, pGroup, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuentaAhorroAgrupadaParametroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pGroup As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCuentaAhorroAgrupadaParametroOperationCompleted Is Nothing) Then
                Me.ConsultarCuentaAhorroAgrupadaParametroOperationCompleted = AddressOf Me.OnConsultarCuentaAhorroAgrupadaParametroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCuentaAhorroAgrupadaParametro", New Object() {pListaCampos, pFiltro, pOrden, pGroup, pUs, pPa, pSucursal}, Me.ConsultarCuentaAhorroAgrupadaParametroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCuentaAhorroAgrupadaParametroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCuentaAhorroAgrupadaParametroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCuentaAhorroAgrupadaParametroCompleted(Me, New ConsultarCuentaAhorroAgrupadaParametroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarCuentaAhorroTipoAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCuentaAhorroTipoAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCuentaAhorroTipoAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCuentaAhorroTipoAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCuentaAhorroTipoAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCuentaAhorroTipoAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuentaAhorroTipoAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCuentaAhorroTipoAhorroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuentaAhorroTipoAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCuentaAhorroTipoAhorroOperationCompleted Is Nothing) Then
                Me.ConsultarCuentaAhorroTipoAhorroOperationCompleted = AddressOf Me.OnConsultarCuentaAhorroTipoAhorroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCuentaAhorroTipoAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCuentaAhorroTipoAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCuentaAhorroTipoAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCuentaAhorroTipoAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCuentaAhorroTipoAhorroCompleted(Me, New ConsultarCuentaAhorroTipoAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarCuentaPignorada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCuentaPignorada(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCuentaPignorada", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCuentaPignorada(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCuentaPignorada", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCuentaPignorada(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuentaPignoradaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCuentaPignoradaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuentaPignoradaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCuentaPignoradaOperationCompleted Is Nothing) Then
                Me.ConsultarCuentaPignoradaOperationCompleted = AddressOf Me.OnConsultarCuentaPignoradaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCuentaPignorada", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCuentaPignoradaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCuentaPignoradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCuentaPignoradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCuentaPignoradaCompleted(Me, New ConsultarCuentaPignoradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarDestino", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDestino(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDestino", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDestino(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDestino", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDestino(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDestinoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDestinoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDestinoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDestinoOperationCompleted Is Nothing) Then
                Me.ConsultarDestinoOperationCompleted = AddressOf Me.OnConsultarDestinoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDestino", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDestinoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDestinoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDestinoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDestinoCompleted(Me, New ConsultarDestinoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarDet_PlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDet_PlanAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDet_PlanAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDet_PlanAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDet_PlanAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDet_PlanAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDet_PlanAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDet_PlanAhorroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDet_PlanAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDet_PlanAhorroOperationCompleted Is Nothing) Then
                Me.ConsultarDet_PlanAhorroOperationCompleted = AddressOf Me.OnConsultarDet_PlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDet_PlanAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDet_PlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDet_PlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDet_PlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDet_PlanAhorroCompleted(Me, New ConsultarDet_PlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarFechaCuotaPlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarFechaCuotaPlanAhorro(ByVal pCodTipoAhorro As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarFechaCuotaPlanAhorro", New Object() {pCodTipoAhorro, pNoCuenta, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarFechaCuotaPlanAhorro(ByVal pCodTipoAhorro As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarFechaCuotaPlanAhorro", New Object() {pCodTipoAhorro, pNoCuenta, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarFechaCuotaPlanAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarFechaCuotaPlanAhorroAsync(ByVal pCodTipoAhorro As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarFechaCuotaPlanAhorroAsync(pCodTipoAhorro, pNoCuenta, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarFechaCuotaPlanAhorroAsync(ByVal pCodTipoAhorro As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarFechaCuotaPlanAhorroOperationCompleted Is Nothing) Then
                Me.ConsultarFechaCuotaPlanAhorroOperationCompleted = AddressOf Me.OnConsultarFechaCuotaPlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarFechaCuotaPlanAhorro", New Object() {pCodTipoAhorro, pNoCuenta, pUsuario, pPassword, pSucursal}, Me.ConsultarFechaCuotaPlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarFechaCuotaPlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarFechaCuotaPlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarFechaCuotaPlanAhorroCompleted(Me, New ConsultarFechaCuotaPlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarFechasCapitalizacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarFechasCapitalizacion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarFechasCapitalizacion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarFechasCapitalizacion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarFechasCapitalizacion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarFechasCapitalizacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarFechasCapitalizacionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarFechasCapitalizacionAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarFechasCapitalizacionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarFechasCapitalizacionOperationCompleted Is Nothing) Then
                Me.ConsultarFechasCapitalizacionOperationCompleted = AddressOf Me.OnConsultarFechasCapitalizacionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarFechasCapitalizacion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarFechasCapitalizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarFechasCapitalizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarFechasCapitalizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarFechasCapitalizacionCompleted(Me, New ConsultarFechasCapitalizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarFechasCapitalizacionTipo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarFechasCapitalizacionTipo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarFechasCapitalizacionTipo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarFechasCapitalizacionTipo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarFechasCapitalizacionTipo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarFechasCapitalizacionTipo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarFechasCapitalizacionTipoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarFechasCapitalizacionTipoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarFechasCapitalizacionTipoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarFechasCapitalizacionTipoOperationCompleted Is Nothing) Then
                Me.ConsultarFechasCapitalizacionTipoOperationCompleted = AddressOf Me.OnConsultarFechasCapitalizacionTipoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarFechasCapitalizacionTipo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarFechasCapitalizacionTipoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarFechasCapitalizacionTipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarFechasCapitalizacionTipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarFechasCapitalizacionTipoCompleted(Me, New ConsultarFechasCapitalizacionTipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarParametros(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarParametros", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarParametros(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarParametros", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarParametros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarParametrosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarParametrosAsync(pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarParametrosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarParametrosOperationCompleted Is Nothing) Then
                Me.ConsultarParametrosOperationCompleted = AddressOf Me.OnConsultarParametrosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarParametros", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarParametrosCompleted(Me, New ConsultarParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarParametrosxTipoAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarParametrosxTipoAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarParametrosxTipoAhorro", New Object() {pListaCampos, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarParametrosxTipoAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarParametrosxTipoAhorro", New Object() {pListaCampos, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarParametrosxTipoAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarParametrosxTipoAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarParametrosxTipoAhorroAsync(pListaCampos, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarParametrosxTipoAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarParametrosxTipoAhorroOperationCompleted Is Nothing) Then
                Me.ConsultarParametrosxTipoAhorroOperationCompleted = AddressOf Me.OnConsultarParametrosxTipoAhorroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarParametrosxTipoAhorro", New Object() {pListaCampos, pFiltro, pUsuario, pPassword, pSucursal}, Me.ConsultarParametrosxTipoAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarParametrosxTipoAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarParametrosxTipoAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarParametrosxTipoAhorroCompleted(Me, New ConsultarParametrosxTipoAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarPignoracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPignoracion(ByVal codPrestamo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPignoracion", New Object() {codPrestamo, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPignoracion(ByVal codPrestamo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPignoracion", New Object() {codPrestamo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPignoracion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPignoracionAsync(ByVal codPrestamo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarPignoracionAsync(codPrestamo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPignoracionAsync(ByVal codPrestamo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPignoracionOperationCompleted Is Nothing) Then
                Me.ConsultarPignoracionOperationCompleted = AddressOf Me.OnConsultarPignoracionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPignoracion", New Object() {codPrestamo, pUs, pPa, pSucursal}, Me.ConsultarPignoracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPignoracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPignoracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPignoracionCompleted(Me, New ConsultarPignoracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarPlanAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPlanAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPlanAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPlanAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPlanAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPlanAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPlanAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarPlanAhorroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPlanAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPlanAhorroOperationCompleted Is Nothing) Then
                Me.ConsultarPlanAhorroOperationCompleted = AddressOf Me.OnConsultarPlanAhorroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPlanAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarPlanAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPlanAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPlanAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPlanAhorroCompleted(Me, New ConsultarPlanAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarProvisiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarProvisiones(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarProvisiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarProvisiones(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarProvisiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarProvisiones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarProvisionesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarProvisionesAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarProvisionesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarProvisionesOperationCompleted Is Nothing) Then
                Me.ConsultarProvisionesOperationCompleted = AddressOf Me.OnConsultarProvisionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarProvisiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarProvisionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarProvisionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarProvisionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarProvisionesCompleted(Me, New ConsultarProvisionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarReposicionCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarReposicionCertificadosDPF(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarReposicionCertificadosDPF", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarReposicionCertificadosDPF(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarReposicionCertificadosDPF", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarReposicionCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarReposicionCertificadosDPFAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarReposicionCertificadosDPFAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarReposicionCertificadosDPFAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarReposicionCertificadosDPFOperationCompleted Is Nothing) Then
                Me.ConsultarReposicionCertificadosDPFOperationCompleted = AddressOf Me.OnConsultarReposicionCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("ConsultarReposicionCertificadosDPF", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarReposicionCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarReposicionCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarReposicionCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarReposicionCertificadosDPFCompleted(Me, New ConsultarReposicionCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarReposicionLibreta", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarReposicionLibreta(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarReposicionLibreta", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarReposicionLibreta(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarReposicionLibreta", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarReposicionLibreta(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarReposicionLibretaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarReposicionLibretaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarReposicionLibretaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarReposicionLibretaOperationCompleted Is Nothing) Then
                Me.ConsultarReposicionLibretaOperationCompleted = AddressOf Me.OnConsultarReposicionLibretaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarReposicionLibreta", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarReposicionLibretaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarReposicionLibretaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarReposicionLibretaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarReposicionLibretaCompleted(Me, New ConsultarReposicionLibretaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarRutasCobro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRutasCobro(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRutasCobro", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRutasCobro(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRutasCobro", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRutasCobro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRutasCobroAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarRutasCobroAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRutasCobroAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRutasCobroOperationCompleted Is Nothing) Then
                Me.ConsultarRutasCobroOperationCompleted = AddressOf Me.OnConsultarRutasCobroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRutasCobro", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarRutasCobroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRutasCobroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRutasCobroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRutasCobroCompleted(Me, New ConsultarRutasCobroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarTasasInteres", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTasasInteres(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTasasInteres", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTasasInteres(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTasasInteres", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTasasInteres(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTasasInteresAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarTasasInteresAsync(pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTasasInteresAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTasasInteresOperationCompleted Is Nothing) Then
                Me.ConsultarTasasInteresOperationCompleted = AddressOf Me.OnConsultarTasasInteresOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTasasInteres", New Object() {pListaCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarTasasInteresOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTasasInteresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTasasInteresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTasasInteresCompleted(Me, New ConsultarTasasInteresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarTipoAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipoAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTipoAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTipoAhorro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTipoAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTipoAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTipoAhorroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoAhorroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTipoAhorroOperationCompleted Is Nothing) Then
                Me.ConsultarTipoAhorroOperationCompleted = AddressOf Me.OnConsultarTipoAhorroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipoAhorro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarTipoAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipoAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipoAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipoAhorroCompleted(Me, New ConsultarTipoAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/ConsultarTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTransferencia(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pTipo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTransferencia", New Object() {pListaCampos, pFiltro, pOrden, pTipo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTransferencia(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pTipo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTransferencia", New Object() {pListaCampos, pFiltro, pOrden, pTipo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTransferencia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTransferenciaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pTipo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarTransferenciaAsync(pListaCampos, pFiltro, pOrden, pTipo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTransferenciaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pTipo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTransferenciaOperationCompleted Is Nothing) Then
                Me.ConsultarTransferenciaOperationCompleted = AddressOf Me.OnConsultarTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTransferencia", New Object() {pListaCampos, pFiltro, pOrden, pTipo, pUsuario, pPassword, pSucursal}, Me.ConsultarTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTransferenciaCompleted(Me, New ConsultarTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/CorrelativoAhReversion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CorrelativoAhReversion(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("CorrelativoAhReversion", New Object() {pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCorrelativoAhReversion(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CorrelativoAhReversion", New Object() {pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCorrelativoAhReversion(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CorrelativoAhReversionAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.CorrelativoAhReversionAsync(pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CorrelativoAhReversionAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CorrelativoAhReversionOperationCompleted Is Nothing) Then
                Me.CorrelativoAhReversionOperationCompleted = AddressOf Me.OnCorrelativoAhReversionOperationCompleted
            End If
            Me.InvokeAsync("CorrelativoAhReversion", New Object() {pUs, pPa, pSucursal}, Me.CorrelativoAhReversionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorrelativoAhReversionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CorrelativoAhReversionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CorrelativoAhReversionCompleted(Me, New CorrelativoAhReversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Cuentas_Canceladas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cuentas_Canceladas(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Cuentas_Canceladas", New Object() {pFecha, pFecha2, pTipoAhorro, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCuentas_Canceladas(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Cuentas_Canceladas", New Object() {pFecha, pFecha2, pTipoAhorro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCuentas_Canceladas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cuentas_CanceladasAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Cuentas_CanceladasAsync(pFecha, pFecha2, pTipoAhorro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cuentas_CanceladasAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Cuentas_CanceladasOperationCompleted Is Nothing) Then
                Me.Cuentas_CanceladasOperationCompleted = AddressOf Me.OnCuentas_CanceladasOperationCompleted
            End If
            Me.InvokeAsync("Cuentas_Canceladas", New Object() {pFecha, pFecha2, pTipoAhorro, pUs, pPa, pSucursal}, Me.Cuentas_CanceladasOperationCompleted, userState)
        End Sub
        
        Private Sub OnCuentas_CanceladasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cuentas_CanceladasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cuentas_CanceladasCompleted(Me, New Cuentas_CanceladasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/Cuentas_Pignoradas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cuentas_Pignoradas(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Cuentas_Pignoradas", New Object() {pFecha, pFecha2, pTipoAhorro, pTodos, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCuentas_Pignoradas(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Cuentas_Pignoradas", New Object() {pFecha, pFecha2, pTipoAhorro, pTodos, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCuentas_Pignoradas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cuentas_PignoradasAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Cuentas_PignoradasAsync(pFecha, pFecha2, pTipoAhorro, pTodos, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cuentas_PignoradasAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pTipoAhorro As TiposAhorroReporteMovimientos, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Cuentas_PignoradasOperationCompleted Is Nothing) Then
                Me.Cuentas_PignoradasOperationCompleted = AddressOf Me.OnCuentas_PignoradasOperationCompleted
            End If
            Me.InvokeAsync("Cuentas_Pignoradas", New Object() {pFecha, pFecha2, pTipoAhorro, pTodos, pUs, pPa, pSucursal}, Me.Cuentas_PignoradasOperationCompleted, userState)
        End Sub
        
        Private Sub OnCuentas_PignoradasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cuentas_PignoradasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cuentas_PignoradasCompleted(Me, New Cuentas_PignoradasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/DPF_Anulados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DPF_Anulados(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("DPF_Anulados", New Object() {pFecha, pFecha2, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginDPF_Anulados(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DPF_Anulados", New Object() {pFecha, pFecha2, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDPF_Anulados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DPF_AnuladosAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.DPF_AnuladosAsync(pFecha, pFecha2, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DPF_AnuladosAsync(ByVal pFecha As Date, ByVal pFecha2 As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.DPF_AnuladosOperationCompleted Is Nothing) Then
                Me.DPF_AnuladosOperationCompleted = AddressOf Me.OnDPF_AnuladosOperationCompleted
            End If
            Me.InvokeAsync("DPF_Anulados", New Object() {pFecha, pFecha2, pUs, pPa, pSucursal}, Me.DPF_AnuladosOperationCompleted, userState)
        End Sub
        
        Private Sub OnDPF_AnuladosOperationCompleted(ByVal arg As Object)
            If (Not (Me.DPF_AnuladosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DPF_AnuladosCompleted(Me, New DPF_AnuladosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminaComisiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaComisiones(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaComisiones", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaComisiones(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaComisiones", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaComisiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaComisionesAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminaComisionesAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaComisionesAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaComisionesOperationCompleted Is Nothing) Then
                Me.EliminaComisionesOperationCompleted = AddressOf Me.OnEliminaComisionesOperationCompleted
            End If
            Me.InvokeAsync("EliminaComisiones", New Object() {pUsuario, pPassword, pSucursal}, Me.EliminaComisionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaComisionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaComisionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaComisionesCompleted(Me, New EliminaComisionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminaParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaParametros(ByVal pCorrelativo As Long, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaParametros", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaParametros(ByVal pCorrelativo As Long, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaParametros", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaParametros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaParametrosAsync(ByVal pCorrelativo As Long, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminaParametrosAsync(pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaParametrosAsync(ByVal pCorrelativo As Long, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaParametrosOperationCompleted Is Nothing) Then
                Me.EliminaParametrosOperationCompleted = AddressOf Me.OnEliminaParametrosOperationCompleted
            End If
            Me.InvokeAsync("EliminaParametros", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, Me.EliminaParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaParametrosCompleted(Me, New EliminaParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarAutorizadoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarAutorizadoRetiro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarAutorizadoRetiro", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarAutorizadoRetiro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarAutorizadoRetiro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarAutorizadoRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarAutorizadoRetiroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarAutorizadoRetiroAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarAutorizadoRetiroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarAutorizadoRetiroOperationCompleted Is Nothing) Then
                Me.EliminarAutorizadoRetiroOperationCompleted = AddressOf Me.OnEliminarAutorizadoRetiroOperationCompleted
            End If
            Me.InvokeAsync("EliminarAutorizadoRetiro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarAutorizadoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarAutorizadoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarAutorizadoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarAutorizadoRetiroCompleted(Me, New EliminarAutorizadoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBeneficiarios(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarBeneficiarios", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBeneficiarios(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBeneficiarios", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBeneficiarios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBeneficiariosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarBeneficiariosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBeneficiariosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarBeneficiariosOperationCompleted Is Nothing) Then
                Me.EliminarBeneficiariosOperationCompleted = AddressOf Me.OnEliminarBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("EliminarBeneficiarios", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBeneficiariosCompleted(Me, New EliminarBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAhorro/EliminarCertificadosDPF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAhorro", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAhorro", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCertificadosDPF(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCertificadosDPF", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCertificadosDPF(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCertificadosDPF", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCertificadosDPF(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCertificadosDPFAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarCertificadosDPFAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCertificadosDPFAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCertificadosDPFOperationCompleted Is Nothing) Then
                Me.EliminarCertificadosDPFOperationCompleted = AddressOf Me.OnEliminarCertificadosDPFOperationCompleted
            End If
            Me.InvokeAsync("EliminarCertificadosDPF", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarCertificadosDPFOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCertificadosDPFOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCertificadosDPFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCertificadosDPFCompleted(Me, New EliminarCertificadosDPFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAhorro")>  _
    Public Enum TiposAhorroReporteMovimientos
        
        '''<remarks/>
        Aportacion
        
        '''<remarks/>
        DPF
        
        '''<remarks/>
        Programado
        
        '''<remarks/>
        Restringido
        
        '''<remarks/>
        Vista
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAhorro")>  _
    Public Enum TipoCuenta
        
        '''<remarks/>
        Ahorro
        
        '''<remarks/>
        Aportacion
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAhorro")>  _
    Public Enum TipoReporte
        
        '''<remarks/>
        AperturaAhorro
        
        '''<remarks/>
        AperturaAportacion
        
        '''<remarks/>
        AperturaDeposito
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepValorFecha_AhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As RepValorFecha_AhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepValorFecha_AhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepVencimientosCompletedEventHandler(ByVal sender As Object, ByVal e As RepVencimientosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepVencimientosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReversionAhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As ReversionAhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReversionAhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReversionAportacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ReversionAportacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReversionAportacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReversionMovimientosCompletedEventHandler(ByVal sender As Object, ByVal e As ReversionMovimientosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReversionMovimientosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReversionMovimientosxTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ReversionMovimientosxTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReversionMovimientosxTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SaldosAhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As SaldosAhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaldosAhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SaldosAhorros_RangoCompletedEventHandler(ByVal sender As Object, ByVal e As SaldosAhorros_RangoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaldosAhorros_RangoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub TransferenciaAutomaticaCuentasCompletedEventHandler(ByVal sender As Object, ByVal e As TransferenciaAutomaticaCuentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferenciaAutomaticaCuentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub TransferenciaCuentasCompletedEventHandler(ByVal sender As Object, ByVal e As TransferenciaCuentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferenciaCuentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Vencimientos_DPFCompletedEventHandler(ByVal sender As Object, ByVal e As Vencimientos_DPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Vencimientos_DPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VencimientosDiarios_DPFCompletedEventHandler(ByVal sender As Object, ByVal e As VencimientosDiarios_DPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VencimientosDiarios_DPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VencimientosDiarios_DPF_ProyectadosCompletedEventHandler(ByVal sender As Object, ByVal e As VencimientosDiarios_DPF_ProyectadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VencimientosDiarios_DPF_ProyectadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaSumaMontoDetalleTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaSumaMontoDetalleTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaSumaMontoDetalleTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCuentaAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCuentaAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCuentaAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCuentaPignoradaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCuentaPignoradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCuentaPignoradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarDestinoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDestinoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDestinoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarDet_PlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDet_PlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDet_PlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarDetalleTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDetalleTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDetalleTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarFechasCapitalizacionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarFechasCapitalizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarFechasCapitalizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarReposicionCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarReposicionCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarReposicionCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarReposicionLibretaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarReposicionLibretaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarReposicionLibretaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarTipoAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarTipoAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarTipoAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminaRutasCobroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaRutasCobroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaRutasCobroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminaTasasInteresCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaTasasInteresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaTasasInteresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ExportacionDatos_AhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As ExportacionDatos_AhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExportacionDatos_AhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ExportacionDatos_DPFCompletedEventHandler(ByVal sender As Object, ByVal e As ExportacionDatos_DPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExportacionDatos_DPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GeneraNoCuentaCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraNoCuentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraNoCuentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Gerencial_Cartera_DPFCompletedEventHandler(ByVal sender As Object, ByVal e As Gerencial_Cartera_DPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gerencial_Cartera_DPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Gerencial_MovCuentasAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As Gerencial_MovCuentasAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gerencial_MovCuentasAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InicializacionLibretaCompletedEventHandler(ByVal sender As Object, ByVal e As InicializacionLibretaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InicializacionLibretaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertaParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarAutorizadoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarAutorizadoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarAutorizadoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarComisionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarComisionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarComisionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCuentaAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCuentaAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCuentaAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCuentaPignoradaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCuentaPignoradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCuentaPignoradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarDestinoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDestinoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDestinoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarDet_PlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDet_PlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDet_PlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarFechasCapitalizacionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarFechasCapitalizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarFechasCapitalizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarReposicionCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarReposicionCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarReposicionCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarReposicionLibretaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarReposicionLibretaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarReposicionLibretaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarRutasCobroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRutasCobroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRutasCobroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarTipoAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarTipoAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarTipoAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertaTasasInteresCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaTasasInteresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaTasasInteresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaComisionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaComisionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaComisionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarAhCuentasAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAhCuentasAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAhCuentasAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarAutorizadoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAutorizadoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAutorizadoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCuentaAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCuentaAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCuentaAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCuentaPignoradaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCuentaPignoradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCuentaPignoradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarDestinoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDestinoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDestinoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarDet_PlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDet_PlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDet_PlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarDetalleTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDetalleTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDetalleTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarFechasCapitalizacionCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarFechasCapitalizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarFechasCapitalizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPRPrestamosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPRPrestamosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPRPrestamosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarReposicionCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarReposicionCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarReposicionCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarReposicionLibretaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarReposicionLibretaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarReposicionLibretaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarRutasCobroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRutasCobroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRutasCobroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarTipoAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarTipoAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarTipoAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaTasasInteresCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaTasasInteresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaTasasInteresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub MostrarMovimientosCompletedEventHandler(ByVal sender As Object, ByVal e As MostrarMovimientosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MostrarMovimientosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub MovimientosAhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As MovimientosAhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MovimientosAhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoAutorizadoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoAutorizadoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoAutorizadoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoCuentaAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoCuentaAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoCuentaAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoDestinoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoDestinoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoDestinoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoDet_PlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoDet_PlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoDet_PlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoPlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoPlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoPlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoReposicionCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoReposicionCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoReposicionCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoReposicionLibretaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoReposicionLibretaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoReposicionLibretaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoTipoAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoTipoAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoTipoAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerDetalleTransferenciaVacioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDetalleTransferenciaVacioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDetalleTransferenciaVacioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerEstructuraSeleccionCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerEstructuraSeleccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerEstructuraSeleccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtieneDigitoVerificadorCompletedEventHandler(ByVal sender As Object, ByVal e As ObtieneDigitoVerificadorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtieneDigitoVerificadorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Orden_DescuentoCompletedEventHandler(ByVal sender As Object, ByVal e As Orden_DescuentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Orden_DescuentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub PignoracionCuentasAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As PignoracionCuentasAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PignoracionCuentasAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub PlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As PlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub PosteoMovimientosCompletedEventHandler(ByVal sender As Object, ByVal e As PosteoMovimientosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PosteoMovimientosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ProcesoProrrogaCuentasCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesoProrrogaCuentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesoProrrogaCuentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Provisiones_AhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As Provisiones_AhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Provisiones_AhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepCancelacion_TransfCompletedEventHandler(ByVal sender As Object, ByVal e As RepCancelacion_TransfCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepCancelacion_TransfCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepCobroInactividadCompletedEventHandler(ByVal sender As Object, ByVal e As RepCobroInactividadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepCobroInactividadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepCtasAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As RepCtasAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepCtasAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_CuentasInactivasCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_CuentasInactivasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_CuentasInactivasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_Datos_DPFCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_Datos_DPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_Datos_DPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteEstadoCuentaAhorroAportacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteEstadoCuentaAhorroAportacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteEstadoCuentaAhorroAportacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteImpresionLibretaAhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteImpresionLibretaAhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteImpresionLibretaAhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReportePagoInteresDiariaDPCompletedEventHandler(ByVal sender As Object, ByVal e As ReportePagoInteresDiariaDPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReportePagoInteresDiariaDPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteTasasPasivasCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteTasasPasivasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteTasasPasivasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteTodasCuentasCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteTodasCuentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteTodasCuentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarAsocTransferenciasAutomaticasCompletedEventHandler(ByVal sender As Object, ByVal e As insertarAsocTransferenciasAutomaticasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarAsocTransferenciasAutomaticasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarAsocTransferenciasAutomaticasCompletedEventHandler(ByVal sender As Object, ByVal e As modificarAsocTransferenciasAutomaticasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarAsocTransferenciasAutomaticasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocTransferenciasAutomaticasCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocTransferenciasAutomaticasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocTransferenciasAutomaticasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub recuperarHojaLibreataCompletedEventHandler(ByVal sender As Object, ByVal e As recuperarHojaLibreataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class recuperarHojaLibreataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub postearMovimientosAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As postearMovimientosAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class postearMovimientosAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub movimientosPendientesPostearCompletedEventHandler(ByVal sender As Object, ByVal e As movimientosPendientesPostearCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class movimientosPendientesPostearCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RptContratoDepositoPlazoCompletedEventHandler(ByVal sender As Object, ByVal e As RptContratoDepositoPlazoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RptContratoDepositoPlazoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RptContratoAhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As RptContratoAhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RptContratoAhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub generarNoCuentaTipoAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As generarNoCuentaTipoAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class generarNoCuentaTipoAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub procesarProvisionAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As procesarProvisionAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class procesarProvisionAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAhCuentasInactivasCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAhCuentasInactivasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAhCuentasInactivasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub activarCuentasInactivasCompletedEventHandler(ByVal sender As Object, ByVal e As activarCuentasInactivasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class activarCuentasInactivasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAhContratos_AhorroCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAhContratos_AhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAhContratos_AhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarDatosLibretaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarDatosLibretaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarDatosLibretaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub QuitarPosteosCompletedEventHandler(ByVal sender As Object, ByVal e As QuitarPosteosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QuitarPosteosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AsociadosISRCompletedEventHandler(ByVal sender As Object, ByVal e As AsociadosISRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AsociadosISRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAhAutorizacionTasasDpfCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAhAutorizacionTasasDpfCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAhAutorizacionTasasDpfCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub eliminarAhAutorizacionTasasDpfCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarAhAutorizacionTasasDpfCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarAhAutorizacionTasasDpfCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarAhAutorizacionTasasDpfCompletedEventHandler(ByVal sender As Object, ByVal e As modificarAhAutorizacionTasasDpfCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarAhAutorizacionTasasDpfCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarAhAutorizacionTasasDpfCompletedEventHandler(ByVal sender As Object, ByVal e As insertarAhAutorizacionTasasDpfCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarAhAutorizacionTasasDpfCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarTiposAhorrosActivosCompletedEventHandler(ByVal sender As Object, ByVal e As consultarTiposAhorrosActivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarTiposAhorrosActivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RetiroAhorrosChequeCompletedEventHandler(ByVal sender As Object, ByVal e As RetiroAhorrosChequeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetiroAhorrosChequeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Temp_Consultar_CtasInactivasCompletedEventHandler(ByVal sender As Object, ByVal e As Temp_Consultar_CtasInactivasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Temp_Consultar_CtasInactivasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAhMovimientosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAhMovimientosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAhMovimientosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarMov_AportacionesDifCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarMov_AportacionesDifCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarMov_AportacionesDifCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarMov_AhorrosDifCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarMov_AhorrosDifCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarMov_AhorrosDifCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Transferencia_IntDpf_CuotaAportacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Transferencia_IntDpf_CuotaAportacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Transferencia_IntDpf_CuotaAportacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Cargar_PlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As Cargar_PlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cargar_PlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RptTransferenciasAutoAhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As RptTransferenciasAutoAhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RptTransferenciasAutoAhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCtasTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCtasTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCtasTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub TrasnferenciasAutomaticas_AhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As TrasnferenciasAutomaticas_AhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrasnferenciasAutomaticas_AhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AsignarPrestamo_TransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As AsignarPrestamo_TransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AsignarPrestamo_TransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ValidarCtas_TransferenciasAutomaticasCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarCtas_TransferenciasAutomaticasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarCtas_TransferenciasAutomaticasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RPT_TASAPASIVACompletedEventHandler(ByVal sender As Object, ByVal e As RPT_TASAPASIVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_TASAPASIVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SALDO_CUENTASAHORROCompletedEventHandler(ByVal sender As Object, ByVal e As SALDO_CUENTASAHORROCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SALDO_CUENTASAHORROCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SALDO_CUENTASAPORTACIONESCompletedEventHandler(ByVal sender As Object, ByVal e As SALDO_CUENTASAPORTACIONESCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SALDO_CUENTASAPORTACIONESCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub SALDO_CUENTASDPFCompletedEventHandler(ByVal sender As Object, ByVal e As SALDO_CUENTASDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SALDO_CUENTASDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ActualizaCuentasInactivasCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizaCuentasInactivasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizaCuentasInactivasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ActualizaEstructuraCuentasInactivasCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizaEstructuraCuentasInactivasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizaEstructuraCuentasInactivasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ActualizaListadoCuentasInactivasCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizaListadoCuentasInactivasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizaListadoCuentasInactivasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AgregarDetalleTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As AgregarDetalleTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AgregarDetalleTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AlmacenaEstructuraSeleccionCompletedEventHandler(ByVal sender As Object, ByVal e As AlmacenaEstructuraSeleccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AlmacenaEstructuraSeleccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AutorizaDatosCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizaDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutorizaDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CalculoProvisionInteresesCompletedEventHandler(ByVal sender As Object, ByVal e As CalculoProvisionInteresesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CalculoProvisionInteresesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CancelarCuentaAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As CancelarCuentaAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelarCuentaAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargarDatosPrestamosPignoradosCompletedEventHandler(ByVal sender As Object, ByVal e As CargarDatosPrestamosPignoradosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargarDatosPrestamosPignoradosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Cartera_DPFCompletedEventHandler(ByVal sender As Object, ByVal e As Cartera_DPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cartera_DPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Comp_Reversiones_AhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As Comp_Reversiones_AhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Comp_Reversiones_AhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaPosteoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaPosteoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaPosteoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAutorizadoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAutorizadoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAutorizadoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarComisionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarComisionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarComisionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCtasAhorroDUICompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCtasAhorroDUICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCtasAhorroDUICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCuentaAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCuentaAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCuentaAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCuentaAhorroAgrupadaParametroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCuentaAhorroAgrupadaParametroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCuentaAhorroAgrupadaParametroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCuentaAhorroTipoAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCuentaAhorroTipoAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCuentaAhorroTipoAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCuentaPignoradaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCuentaPignoradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCuentaPignoradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDestinoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDestinoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDestinoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDet_PlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDet_PlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDet_PlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarFechaCuotaPlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarFechaCuotaPlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarFechaCuotaPlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarFechasCapitalizacionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarFechasCapitalizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarFechasCapitalizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarFechasCapitalizacionTipoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarFechasCapitalizacionTipoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarFechasCapitalizacionTipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarParametrosxTipoAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarParametrosxTipoAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarParametrosxTipoAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPignoracionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPignoracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPignoracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPlanAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPlanAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPlanAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarProvisionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarProvisionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarProvisionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarReposicionCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarReposicionCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarReposicionCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarReposicionLibretaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarReposicionLibretaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarReposicionLibretaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarRutasCobroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRutasCobroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRutasCobroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarTasasInteresCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTasasInteresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTasasInteresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarTipoAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipoAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipoAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CorrelativoAhReversionCompletedEventHandler(ByVal sender As Object, ByVal e As CorrelativoAhReversionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CorrelativoAhReversionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Cuentas_CanceladasCompletedEventHandler(ByVal sender As Object, ByVal e As Cuentas_CanceladasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cuentas_CanceladasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Cuentas_PignoradasCompletedEventHandler(ByVal sender As Object, ByVal e As Cuentas_PignoradasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cuentas_PignoradasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DPF_AnuladosCompletedEventHandler(ByVal sender As Object, ByVal e As DPF_AnuladosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DPF_AnuladosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminaComisionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaComisionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaComisionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminaParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarAutorizadoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarAutorizadoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarAutorizadoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCertificadosDPFCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCertificadosDPFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCertificadosDPFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
