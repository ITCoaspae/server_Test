'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrCaja
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibCajaSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibCaja")>  _
    Partial Public Class wsLibCaja
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ObtenerFacturaVaciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerItemxRubroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerListaFacturasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerListaItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerListaRubrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerMensajeCajasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerNumItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RedondearOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteCorteCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteCorteMovCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteResumenMovCajaxDocOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteResumenMovCajaxTransacOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepReversionesDiariasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepTransferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepTransferenciasConsolidadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReversionTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaCajeroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaCorrelativoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GuardarChequesBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCajeroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerChequesBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerChequesARemesarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarChequesRemesarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AnularChequesBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerListaItesmRubrosDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private reversionMovimientosCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarCaRubroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarCaRubroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCaRubroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private generarReciboDivEfectivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarTransaccionesChequeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AperturaCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCaMovimientosCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCaTipoMovCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarCaTipoMovCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarCaTipoMovCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCaTipoMovCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCaCorrelativoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarCaCorrelativoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private incrementarCorrelativo_CaCorrelativoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarCaCorrelativoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCaCorrelativoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCaMaestrosTipoDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private desactivarCaMaestroTipoDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarCaMaestroTipoDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCaMaestroTipoDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ComprobanteTransferenciasDesembolsoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AnularFacturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArqueoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArqueoCierreCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cheques_CajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChequexMovCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CierreCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAperturaCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCAItemsFactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCajasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCajerosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCajerosPsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCAParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDatosAhorroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDatosFacturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDatosPrestamoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDescripcionMovimientosAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDetFacturasxFiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEncabezadoDetalleFacturasxFiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEncabezadoDetalleItemFacturasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarFacturasxFiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarMovimientoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTiposDocOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CorrelativoReversionTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CorteMovCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DepositoRetiroAhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Detallado_FacturasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DetalleApertura_CajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarAperturaCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCAItemsFactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCajasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCajerosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmisionFacturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FacturaConsolidadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GuardarFacturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarAperturaCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCAItemsFactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCajasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCajerosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCAParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarMovimientoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaFacturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAperturaCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCAItemsFactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCajasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCajerosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCAParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarClaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarMovimientoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Movimientos_de_CajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NotaCargoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NotaCargoContableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NotaCargoPrestamoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoxMovimientoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerFacturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrCaja_wsLibCaja
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ObtenerFacturaVaciaCompleted As ObtenerFacturaVaciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerItemCompleted As ObtenerItemCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerItemxRubroCompleted As ObtenerItemxRubroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerListaFacturasCompleted As ObtenerListaFacturasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerListaItemsCompleted As ObtenerListaItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerListaRubrosCompleted As ObtenerListaRubrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerMensajeCajasCompleted As ObtenerMensajeCajasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerNumItemCompleted As ObtenerNumItemCompletedEventHandler
        
        '''<remarks/>
        Public Event RedondearCompleted As RedondearCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteCorteCajaCompleted As ReporteCorteCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteCorteMovCajaCompleted As ReporteCorteMovCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteResumenMovCajaxDocCompleted As ReporteResumenMovCajaxDocCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteResumenMovCajaxTransacCompleted As ReporteResumenMovCajaxTransacCompletedEventHandler
        
        '''<remarks/>
        Public Event RepReversionesDiariasCompleted As RepReversionesDiariasCompletedEventHandler
        
        '''<remarks/>
        Public Event RepTransferenciasCompleted As RepTransferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event RepTransferenciasConsolidadaCompleted As RepTransferenciasConsolidadaCompletedEventHandler
        
        '''<remarks/>
        Public Event ReversionTransferenciaCompleted As ReversionTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaCajeroCompleted As VerificaCajeroCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaCorrelativoCompleted As VerificaCorrelativoCompletedEventHandler
        
        '''<remarks/>
        Public Event GuardarChequesBovedaCompleted As GuardarChequesBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCajeroCompleted As ObtenerCajeroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerChequesBovedaCompleted As ObtenerChequesBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerChequesARemesarCompleted As ObtenerChequesARemesarCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarChequesRemesarCompleted As ActualizarChequesRemesarCompletedEventHandler
        
        '''<remarks/>
        Public Event AnularChequesBovedaCompleted As AnularChequesBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerListaItesmRubrosDocumentosCompleted As ObtenerListaItesmRubrosDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event reversionMovimientosCajaCompleted As reversionMovimientosCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarCaRubroCompleted As eliminarCaRubroCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarCaRubroCompleted As modificarCaRubroCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCaRubroCompleted As insertarCaRubroCompletedEventHandler
        
        '''<remarks/>
        Public Event generarReciboDivEfectivoCompleted As generarReciboDivEfectivoCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarTransaccionesChequeCompleted As consultarTransaccionesChequeCompletedEventHandler
        
        '''<remarks/>
        Public Event AperturaCajaCompleted As AperturaCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCaMovimientosCajaCompleted As InsertarCaMovimientosCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCaTipoMovCajaCompleted As InsertarCaTipoMovCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarCaTipoMovCajaCompleted As modificarCaTipoMovCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarCaTipoMovCajaCompleted As eliminarCaTipoMovCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCaTipoMovCajaCompleted As consultarCaTipoMovCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCaCorrelativoCajaCompleted As consultarCaCorrelativoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarCaCorrelativoCajaCompleted As eliminarCaCorrelativoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event incrementarCorrelativo_CaCorrelativoCajaCompleted As incrementarCorrelativo_CaCorrelativoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarCaCorrelativoCajaCompleted As modificarCaCorrelativoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCaCorrelativoCajaCompleted As insertarCaCorrelativoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCaMaestrosTipoDocumentosCompleted As consultarCaMaestrosTipoDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event desactivarCaMaestroTipoDocumentosCompleted As desactivarCaMaestroTipoDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarCaMaestroTipoDocumentosCompleted As modificarCaMaestroTipoDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCaMaestroTipoDocumentosCompleted As insertarCaMaestroTipoDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ComprobanteTransferenciasDesembolsoCompleted As ComprobanteTransferenciasDesembolsoCompletedEventHandler
        
        '''<remarks/>
        Public Event AnularFacturaCompleted As AnularFacturaCompletedEventHandler
        
        '''<remarks/>
        Public Event ArqueoCajaCompleted As ArqueoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ArqueoCierreCajaCompleted As ArqueoCierreCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event Cheques_CajaCompleted As Cheques_CajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ChequexMovCajaCompleted As ChequexMovCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event CierreCajaCompleted As CierreCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAperturaCajaCompleted As ConsultarAperturaCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCAItemsFactCompleted As ConsultarCAItemsFactCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCajasCompleted As ConsultarCajasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCajerosCompleted As ConsultarCajerosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCajerosPsCompleted As ConsultarCajerosPsCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCAParametrosCompleted As ConsultarCAParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDatosAhorroCompleted As ConsultarDatosAhorroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDatosFacturaCompleted As ConsultarDatosFacturaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDatosPrestamoCompleted As ConsultarDatosPrestamoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDescripcionMovimientosAsociadoCompleted As ConsultarDescripcionMovimientosAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDetFacturasxFiltroCompleted As ConsultarDetFacturasxFiltroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEncabezadoDetalleFacturasxFiltroCompleted As ConsultarEncabezadoDetalleFacturasxFiltroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEncabezadoDetalleItemFacturasCompleted As ConsultarEncabezadoDetalleItemFacturasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarFacturasxFiltroCompleted As ConsultarFacturasxFiltroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarMovimientoCajaCompleted As ConsultarMovimientoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTiposDocCompleted As ConsultarTiposDocCompletedEventHandler
        
        '''<remarks/>
        Public Event CorrelativoReversionTransferenciaCompleted As CorrelativoReversionTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event CorteMovCajaCompleted As CorteMovCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event DepositoRetiroAhorrosCompleted As DepositoRetiroAhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event Detallado_FacturasCompleted As Detallado_FacturasCompletedEventHandler
        
        '''<remarks/>
        Public Event DetalleApertura_CajaCompleted As DetalleApertura_CajaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarAperturaCajaCompleted As EliminarAperturaCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCAItemsFactCompleted As EliminarCAItemsFactCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCajasCompleted As EliminarCajasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCajerosCompleted As EliminarCajerosCompletedEventHandler
        
        '''<remarks/>
        Public Event EmisionFacturaCompleted As EmisionFacturaCompletedEventHandler
        
        '''<remarks/>
        Public Event FacturaConsolidadaCompleted As FacturaConsolidadaCompletedEventHandler
        
        '''<remarks/>
        Public Event GuardarFacturaCompleted As GuardarFacturaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarAperturaCajaCompleted As InsertarAperturaCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCAItemsFactCompleted As InsertarCAItemsFactCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCajasCompleted As InsertarCajasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCajerosCompleted As InsertarCajerosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCAParametrosCompleted As InsertarCAParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarMovimientoCajaCompleted As InsertarMovimientoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaFacturaCompleted As ModificaFacturaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAperturaCajaCompleted As ModificarAperturaCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCAItemsFactCompleted As ModificarCAItemsFactCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCajasCompleted As ModificarCajasCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCajerosCompleted As ModificarCajerosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCAParametrosCompleted As ModificarCAParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarClaveCompleted As ModificarClaveCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarMovimientoCajaCompleted As ModificarMovimientoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event Movimientos_de_CajaCompleted As Movimientos_de_CajaCompletedEventHandler
        
        '''<remarks/>
        Public Event NotaCargoCompleted As NotaCargoCompletedEventHandler
        
        '''<remarks/>
        Public Event NotaCargoContableCompleted As NotaCargoContableCompletedEventHandler
        
        '''<remarks/>
        Public Event NotaCargoPrestamoCompleted As NotaCargoPrestamoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoxMovimientoCompleted As ObtenerCorrelativoxMovimientoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerFacturaCompleted As ObtenerFacturaCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerFacturaVacia", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerFacturaVacia(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerFacturaVacia", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerFacturaVacia(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerFacturaVacia", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerFacturaVacia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerFacturaVaciaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerFacturaVaciaAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerFacturaVaciaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerFacturaVaciaOperationCompleted Is Nothing) Then
                Me.ObtenerFacturaVaciaOperationCompleted = AddressOf Me.OnObtenerFacturaVaciaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerFacturaVacia", New Object() {pUsuario, pPassword, pSucursal}, Me.ObtenerFacturaVaciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerFacturaVaciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerFacturaVaciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerFacturaVaciaCompleted(Me, New ObtenerFacturaVaciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerItem", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerItem(ByVal pCodItem As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerItem", New Object() {pCodItem, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerItem(ByVal pCodItem As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerItem", New Object() {pCodItem, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerItemAsync(ByVal pCodItem As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerItemAsync(pCodItem, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerItemAsync(ByVal pCodItem As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerItemOperationCompleted Is Nothing) Then
                Me.ObtenerItemOperationCompleted = AddressOf Me.OnObtenerItemOperationCompleted
            End If
            Me.InvokeAsync("ObtenerItem", New Object() {pCodItem, pFiltro, pUsuario, pPassword, pSucursal}, Me.ObtenerItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerItemCompleted(Me, New ObtenerItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerItemxRubro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerItemxRubro(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerItemxRubro", New Object() {pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerItemxRubro(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerItemxRubro", New Object() {pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerItemxRubro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerItemxRubroAsync(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerItemxRubroAsync(pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerItemxRubroAsync(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerItemxRubroOperationCompleted Is Nothing) Then
                Me.ObtenerItemxRubroOperationCompleted = AddressOf Me.OnObtenerItemxRubroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerItemxRubro", New Object() {pFiltro, pUsuario, pPassword, pSucursal}, Me.ObtenerItemxRubroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerItemxRubroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerItemxRubroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerItemxRubroCompleted(Me, New ObtenerItemxRubroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerListaFacturas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerListaFacturas(ByVal pTodas As Boolean, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pCodPrestamo As String, ByVal pDUIAsociado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerListaFacturas", New Object() {pTodas, pFechaIni, pFechaFin, pCodPrestamo, pDUIAsociado, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerListaFacturas(ByVal pTodas As Boolean, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pCodPrestamo As String, ByVal pDUIAsociado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerListaFacturas", New Object() {pTodas, pFechaIni, pFechaFin, pCodPrestamo, pDUIAsociado, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerListaFacturas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerListaFacturasAsync(ByVal pTodas As Boolean, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pCodPrestamo As String, ByVal pDUIAsociado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerListaFacturasAsync(pTodas, pFechaIni, pFechaFin, pCodPrestamo, pDUIAsociado, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerListaFacturasAsync(ByVal pTodas As Boolean, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pCodPrestamo As String, ByVal pDUIAsociado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerListaFacturasOperationCompleted Is Nothing) Then
                Me.ObtenerListaFacturasOperationCompleted = AddressOf Me.OnObtenerListaFacturasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerListaFacturas", New Object() {pTodas, pFechaIni, pFechaFin, pCodPrestamo, pDUIAsociado, pUsuario, pPassword, pSucursal}, Me.ObtenerListaFacturasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerListaFacturasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerListaFacturasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerListaFacturasCompleted(Me, New ObtenerListaFacturasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerListaItems", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerListaItems(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerListaItems", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerListaItems(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerListaItems", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerListaItems(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerListaItemsAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerListaItemsAsync(pCampos, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerListaItemsAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerListaItemsOperationCompleted Is Nothing) Then
                Me.ObtenerListaItemsOperationCompleted = AddressOf Me.OnObtenerListaItemsOperationCompleted
            End If
            Me.InvokeAsync("ObtenerListaItems", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal}, Me.ObtenerListaItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerListaItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerListaItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerListaItemsCompleted(Me, New ObtenerListaItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerListaRubros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerListaRubros(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerListaRubros", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerListaRubros(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerListaRubros", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerListaRubros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerListaRubrosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerListaRubrosAsync(pCampos, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerListaRubrosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerListaRubrosOperationCompleted Is Nothing) Then
                Me.ObtenerListaRubrosOperationCompleted = AddressOf Me.OnObtenerListaRubrosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerListaRubros", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal}, Me.ObtenerListaRubrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerListaRubrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerListaRubrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerListaRubrosCompleted(Me, New ObtenerListaRubrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerMensajeCajas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerMensajeCajas(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ObtenerMensajeCajas", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerMensajeCajas(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerMensajeCajas", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerMensajeCajas(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerMensajeCajasAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerMensajeCajasAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerMensajeCajasAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerMensajeCajasOperationCompleted Is Nothing) Then
                Me.ObtenerMensajeCajasOperationCompleted = AddressOf Me.OnObtenerMensajeCajasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerMensajeCajas", New Object() {pUsuario, pPassword, pSucursal}, Me.ObtenerMensajeCajasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerMensajeCajasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerMensajeCajasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerMensajeCajasCompleted(Me, New ObtenerMensajeCajasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerNumItem", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerNumItem(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("ObtenerNumItem", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerNumItem(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerNumItem", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerNumItem(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerNumItemAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerNumItemAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerNumItemAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerNumItemOperationCompleted Is Nothing) Then
                Me.ObtenerNumItemOperationCompleted = AddressOf Me.OnObtenerNumItemOperationCompleted
            End If
            Me.InvokeAsync("ObtenerNumItem", New Object() {pUsuario, pPassword, pSucursal}, Me.ObtenerNumItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerNumItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerNumItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerNumItemCompleted(Me, New ObtenerNumItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/Redondear", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Redondear(ByVal pValor As Double, ByVal pDecimales As Double) As Double
            Dim results() As Object = Me.Invoke("Redondear", New Object() {pValor, pDecimales})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Function BeginRedondear(ByVal pValor As Double, ByVal pDecimales As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Redondear", New Object() {pValor, pDecimales}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRedondear(ByVal asyncResult As System.IAsyncResult) As Double
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RedondearAsync(ByVal pValor As Double, ByVal pDecimales As Double)
            Me.RedondearAsync(pValor, pDecimales, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RedondearAsync(ByVal pValor As Double, ByVal pDecimales As Double, ByVal userState As Object)
            If (Me.RedondearOperationCompleted Is Nothing) Then
                Me.RedondearOperationCompleted = AddressOf Me.OnRedondearOperationCompleted
            End If
            Me.InvokeAsync("Redondear", New Object() {pValor, pDecimales}, Me.RedondearOperationCompleted, userState)
        End Sub
        
        Private Sub OnRedondearOperationCompleted(ByVal arg As Object)
            If (Not (Me.RedondearCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RedondearCompleted(Me, New RedondearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ReporteCorteCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteCorteCaja(ByVal pFecha As Date, ByVal pFiltroBanco As String, ByVal pFiltroCaja As String, ByVal pFiltroCajero As String, ByVal pSubTotalEfectivo As Double, ByVal pSubTotalCheque As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteCorteCaja", New Object() {pFecha, pFiltroBanco, pFiltroCaja, pFiltroCajero, pSubTotalEfectivo, pSubTotalCheque, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteCorteCaja(ByVal pFecha As Date, ByVal pFiltroBanco As String, ByVal pFiltroCaja As String, ByVal pFiltroCajero As String, ByVal pSubTotalEfectivo As Double, ByVal pSubTotalCheque As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteCorteCaja", New Object() {pFecha, pFiltroBanco, pFiltroCaja, pFiltroCajero, pSubTotalEfectivo, pSubTotalCheque, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteCorteCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteCorteCajaAsync(ByVal pFecha As Date, ByVal pFiltroBanco As String, ByVal pFiltroCaja As String, ByVal pFiltroCajero As String, ByVal pSubTotalEfectivo As Double, ByVal pSubTotalCheque As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteCorteCajaAsync(pFecha, pFiltroBanco, pFiltroCaja, pFiltroCajero, pSubTotalEfectivo, pSubTotalCheque, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteCorteCajaAsync(ByVal pFecha As Date, ByVal pFiltroBanco As String, ByVal pFiltroCaja As String, ByVal pFiltroCajero As String, ByVal pSubTotalEfectivo As Double, ByVal pSubTotalCheque As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteCorteCajaOperationCompleted Is Nothing) Then
                Me.ReporteCorteCajaOperationCompleted = AddressOf Me.OnReporteCorteCajaOperationCompleted
            End If
            Me.InvokeAsync("ReporteCorteCaja", New Object() {pFecha, pFiltroBanco, pFiltroCaja, pFiltroCajero, pSubTotalEfectivo, pSubTotalCheque, pUsuario, pPassword, pSucursal}, Me.ReporteCorteCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteCorteCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteCorteCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteCorteCajaCompleted(Me, New ReporteCorteCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ReporteCorteMovCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteCorteMovCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteCorteMovCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteCorteMovCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteCorteMovCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteCorteMovCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteCorteMovCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteCorteMovCajaAsync(pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteCorteMovCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteCorteMovCajaOperationCompleted Is Nothing) Then
                Me.ReporteCorteMovCajaOperationCompleted = AddressOf Me.OnReporteCorteMovCajaOperationCompleted
            End If
            Me.InvokeAsync("ReporteCorteMovCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, Me.ReporteCorteMovCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteCorteMovCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteCorteMovCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteCorteMovCajaCompleted(Me, New ReporteCorteMovCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ReporteResumenMovCajaxDoc", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteResumenMovCajaxDoc(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteResumenMovCajaxDoc", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteResumenMovCajaxDoc(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteResumenMovCajaxDoc", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteResumenMovCajaxDoc(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteResumenMovCajaxDocAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteResumenMovCajaxDocAsync(pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteResumenMovCajaxDocAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteResumenMovCajaxDocOperationCompleted Is Nothing) Then
                Me.ReporteResumenMovCajaxDocOperationCompleted = AddressOf Me.OnReporteResumenMovCajaxDocOperationCompleted
            End If
            Me.InvokeAsync("ReporteResumenMovCajaxDoc", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, Me.ReporteResumenMovCajaxDocOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteResumenMovCajaxDocOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteResumenMovCajaxDocCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteResumenMovCajaxDocCompleted(Me, New ReporteResumenMovCajaxDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ReporteResumenMovCajaxTransac", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteResumenMovCajaxTransac(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteResumenMovCajaxTransac", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteResumenMovCajaxTransac(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteResumenMovCajaxTransac", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteResumenMovCajaxTransac(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteResumenMovCajaxTransacAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteResumenMovCajaxTransacAsync(pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteResumenMovCajaxTransacAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteResumenMovCajaxTransacOperationCompleted Is Nothing) Then
                Me.ReporteResumenMovCajaxTransacOperationCompleted = AddressOf Me.OnReporteResumenMovCajaxTransacOperationCompleted
            End If
            Me.InvokeAsync("ReporteResumenMovCajaxTransac", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, Me.ReporteResumenMovCajaxTransacOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteResumenMovCajaxTransacOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteResumenMovCajaxTransacCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteResumenMovCajaxTransacCompleted(Me, New ReporteResumenMovCajaxTransacCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/RepReversionesDiarias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepReversionesDiarias(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepReversionesDiarias", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepReversionesDiarias(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepReversionesDiarias", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepReversionesDiarias(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepReversionesDiariasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepReversionesDiariasAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepReversionesDiariasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepReversionesDiariasOperationCompleted Is Nothing) Then
                Me.RepReversionesDiariasOperationCompleted = AddressOf Me.OnRepReversionesDiariasOperationCompleted
            End If
            Me.InvokeAsync("RepReversionesDiarias", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepReversionesDiariasOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepReversionesDiariasOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepReversionesDiariasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepReversionesDiariasCompleted(Me, New RepReversionesDiariasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/RepTransferencias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepTransferencias(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pTipo As String, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepTransferencias", New Object() {pFechaIni, pFechaFin, pTipo, pTodos, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepTransferencias(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pTipo As String, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepTransferencias", New Object() {pFechaIni, pFechaFin, pTipo, pTodos, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepTransferencias(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepTransferenciasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pTipo As String, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepTransferenciasAsync(pFechaIni, pFechaFin, pTipo, pTodos, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepTransferenciasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pTipo As String, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepTransferenciasOperationCompleted Is Nothing) Then
                Me.RepTransferenciasOperationCompleted = AddressOf Me.OnRepTransferenciasOperationCompleted
            End If
            Me.InvokeAsync("RepTransferencias", New Object() {pFechaIni, pFechaFin, pTipo, pTodos, pUs, pPa, pSucursal}, Me.RepTransferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepTransferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepTransferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepTransferenciasCompleted(Me, New RepTransferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/RepTransferenciasConsolidada", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepTransferenciasConsolidada(ByVal pNoFactura As String, ByVal pFecha As Date, ByVal pTipo As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepTransferenciasConsolidada", New Object() {pNoFactura, pFecha, pTipo, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepTransferenciasConsolidada(ByVal pNoFactura As String, ByVal pFecha As Date, ByVal pTipo As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepTransferenciasConsolidada", New Object() {pNoFactura, pFecha, pTipo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepTransferenciasConsolidada(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepTransferenciasConsolidadaAsync(ByVal pNoFactura As String, ByVal pFecha As Date, ByVal pTipo As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepTransferenciasConsolidadaAsync(pNoFactura, pFecha, pTipo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepTransferenciasConsolidadaAsync(ByVal pNoFactura As String, ByVal pFecha As Date, ByVal pTipo As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepTransferenciasConsolidadaOperationCompleted Is Nothing) Then
                Me.RepTransferenciasConsolidadaOperationCompleted = AddressOf Me.OnRepTransferenciasConsolidadaOperationCompleted
            End If
            Me.InvokeAsync("RepTransferenciasConsolidada", New Object() {pNoFactura, pFecha, pTipo, pUs, pPa, pSucursal}, Me.RepTransferenciasConsolidadaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepTransferenciasConsolidadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepTransferenciasConsolidadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepTransferenciasConsolidadaCompleted(Me, New RepTransferenciasConsolidadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ReversionTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReversionTransferencia(ByVal pNoDoc As String, ByVal pFecTransf As Date, ByVal pFecha As Date, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ReversionTransferencia", New Object() {pNoDoc, pFecTransf, pFecha, pNoCaja, pCodCajero, pObservacion, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginReversionTransferencia(ByVal pNoDoc As String, ByVal pFecTransf As Date, ByVal pFecha As Date, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReversionTransferencia", New Object() {pNoDoc, pFecTransf, pFecha, pNoCaja, pCodCajero, pObservacion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReversionTransferencia(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReversionTransferenciaAsync(ByVal pNoDoc As String, ByVal pFecTransf As Date, ByVal pFecha As Date, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ReversionTransferenciaAsync(pNoDoc, pFecTransf, pFecha, pNoCaja, pCodCajero, pObservacion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReversionTransferenciaAsync(ByVal pNoDoc As String, ByVal pFecTransf As Date, ByVal pFecha As Date, ByVal pNoCaja As Integer, ByVal pCodCajero As Integer, ByVal pObservacion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReversionTransferenciaOperationCompleted Is Nothing) Then
                Me.ReversionTransferenciaOperationCompleted = AddressOf Me.OnReversionTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("ReversionTransferencia", New Object() {pNoDoc, pFecTransf, pFecha, pNoCaja, pCodCajero, pObservacion, pUs, pPa, pSucursal}, Me.ReversionTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnReversionTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReversionTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReversionTransferenciaCompleted(Me, New ReversionTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/VerificaCajero", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaCajero(ByVal sUsuario As String, ByVal sClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("VerificaCajero", New Object() {sUsuario, sClave, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaCajero(ByVal sUsuario As String, ByVal sClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaCajero", New Object() {sUsuario, sClave, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaCajero(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaCajeroAsync(ByVal sUsuario As String, ByVal sClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificaCajeroAsync(sUsuario, sClave, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaCajeroAsync(ByVal sUsuario As String, ByVal sClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaCajeroOperationCompleted Is Nothing) Then
                Me.VerificaCajeroOperationCompleted = AddressOf Me.OnVerificaCajeroOperationCompleted
            End If
            Me.InvokeAsync("VerificaCajero", New Object() {sUsuario, sClave, pUsuario, pPassword, pSucursal}, Me.VerificaCajeroOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaCajeroOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaCajeroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaCajeroCompleted(Me, New VerificaCajeroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/VerificaCorrelativo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaCorrelativo(ByVal pTabla As String, ByVal pTipo As String, ByVal pAnio As Integer, ByVal pIdMovimiento As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("VerificaCorrelativo", New Object() {pTabla, pTipo, pAnio, pIdMovimiento, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaCorrelativo(ByVal pTabla As String, ByVal pTipo As String, ByVal pAnio As Integer, ByVal pIdMovimiento As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaCorrelativo", New Object() {pTabla, pTipo, pAnio, pIdMovimiento, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaCorrelativo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaCorrelativoAsync(ByVal pTabla As String, ByVal pTipo As String, ByVal pAnio As Integer, ByVal pIdMovimiento As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificaCorrelativoAsync(pTabla, pTipo, pAnio, pIdMovimiento, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaCorrelativoAsync(ByVal pTabla As String, ByVal pTipo As String, ByVal pAnio As Integer, ByVal pIdMovimiento As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaCorrelativoOperationCompleted Is Nothing) Then
                Me.VerificaCorrelativoOperationCompleted = AddressOf Me.OnVerificaCorrelativoOperationCompleted
            End If
            Me.InvokeAsync("VerificaCorrelativo", New Object() {pTabla, pTipo, pAnio, pIdMovimiento, pUsuario, pPassword, pSucursal}, Me.VerificaCorrelativoOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaCorrelativoOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaCorrelativoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaCorrelativoCompleted(Me, New VerificaCorrelativoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/GuardarChequesBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GuardarChequesBoveda(ByVal noCheque As String, ByVal IdBanco As Integer, ByVal MontoCheque As Double, ByVal IdBoveda As Integer, ByVal FecMov As Date, ByVal Usuario As String, ByVal hora As String, ByVal NumPartida As String, ByVal Flag As Boolean, ByVal TotalCheques As Double, ByVal CantidadCheques As Integer, ByVal codCajero As Integer)
            Me.Invoke("GuardarChequesBoveda", New Object() {noCheque, IdBanco, MontoCheque, IdBoveda, FecMov, Usuario, hora, NumPartida, Flag, TotalCheques, CantidadCheques, codCajero})
        End Sub
        
        '''<remarks/>
        Public Function BeginGuardarChequesBoveda(ByVal noCheque As String, ByVal IdBanco As Integer, ByVal MontoCheque As Double, ByVal IdBoveda As Integer, ByVal FecMov As Date, ByVal Usuario As String, ByVal hora As String, ByVal NumPartida As String, ByVal Flag As Boolean, ByVal TotalCheques As Double, ByVal CantidadCheques As Integer, ByVal codCajero As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GuardarChequesBoveda", New Object() {noCheque, IdBanco, MontoCheque, IdBoveda, FecMov, Usuario, hora, NumPartida, Flag, TotalCheques, CantidadCheques, codCajero}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndGuardarChequesBoveda(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GuardarChequesBovedaAsync(ByVal noCheque As String, ByVal IdBanco As Integer, ByVal MontoCheque As Double, ByVal IdBoveda As Integer, ByVal FecMov As Date, ByVal Usuario As String, ByVal hora As String, ByVal NumPartida As String, ByVal Flag As Boolean, ByVal TotalCheques As Double, ByVal CantidadCheques As Integer, ByVal codCajero As Integer)
            Me.GuardarChequesBovedaAsync(noCheque, IdBanco, MontoCheque, IdBoveda, FecMov, Usuario, hora, NumPartida, Flag, TotalCheques, CantidadCheques, codCajero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GuardarChequesBovedaAsync(ByVal noCheque As String, ByVal IdBanco As Integer, ByVal MontoCheque As Double, ByVal IdBoveda As Integer, ByVal FecMov As Date, ByVal Usuario As String, ByVal hora As String, ByVal NumPartida As String, ByVal Flag As Boolean, ByVal TotalCheques As Double, ByVal CantidadCheques As Integer, ByVal codCajero As Integer, ByVal userState As Object)
            If (Me.GuardarChequesBovedaOperationCompleted Is Nothing) Then
                Me.GuardarChequesBovedaOperationCompleted = AddressOf Me.OnGuardarChequesBovedaOperationCompleted
            End If
            Me.InvokeAsync("GuardarChequesBoveda", New Object() {noCheque, IdBanco, MontoCheque, IdBoveda, FecMov, Usuario, hora, NumPartida, Flag, TotalCheques, CantidadCheques, codCajero}, Me.GuardarChequesBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGuardarChequesBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GuardarChequesBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GuardarChequesBovedaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerCajero", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCajero(ByVal FechaMov As Date, ByVal codCajero As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCajero", New Object() {FechaMov, codCajero})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCajero(ByVal FechaMov As Date, ByVal codCajero As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCajero", New Object() {FechaMov, codCajero}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCajero(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCajeroAsync(ByVal FechaMov As Date, ByVal codCajero As Integer)
            Me.ObtenerCajeroAsync(FechaMov, codCajero, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCajeroAsync(ByVal FechaMov As Date, ByVal codCajero As Integer, ByVal userState As Object)
            If (Me.ObtenerCajeroOperationCompleted Is Nothing) Then
                Me.ObtenerCajeroOperationCompleted = AddressOf Me.OnObtenerCajeroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCajero", New Object() {FechaMov, codCajero}, Me.ObtenerCajeroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCajeroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCajeroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCajeroCompleted(Me, New ObtenerCajeroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerChequesBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerChequesBoveda(ByVal CodCajero As Integer, ByVal FecMov As Date, ByVal codSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerChequesBoveda", New Object() {CodCajero, FecMov, codSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerChequesBoveda(ByVal CodCajero As Integer, ByVal FecMov As Date, ByVal codSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerChequesBoveda", New Object() {CodCajero, FecMov, codSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerChequesBoveda(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerChequesBovedaAsync(ByVal CodCajero As Integer, ByVal FecMov As Date, ByVal codSucursal As String)
            Me.ObtenerChequesBovedaAsync(CodCajero, FecMov, codSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerChequesBovedaAsync(ByVal CodCajero As Integer, ByVal FecMov As Date, ByVal codSucursal As String, ByVal userState As Object)
            If (Me.ObtenerChequesBovedaOperationCompleted Is Nothing) Then
                Me.ObtenerChequesBovedaOperationCompleted = AddressOf Me.OnObtenerChequesBovedaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerChequesBoveda", New Object() {CodCajero, FecMov, codSucursal}, Me.ObtenerChequesBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerChequesBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerChequesBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerChequesBovedaCompleted(Me, New ObtenerChequesBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerChequesARemesar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerChequesARemesar(ByVal FecMov As Date, ByVal codSucursal As String, ByVal remesados As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerChequesARemesar", New Object() {FecMov, codSucursal, remesados})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerChequesARemesar(ByVal FecMov As Date, ByVal codSucursal As String, ByVal remesados As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerChequesARemesar", New Object() {FecMov, codSucursal, remesados}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerChequesARemesar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerChequesARemesarAsync(ByVal FecMov As Date, ByVal codSucursal As String, ByVal remesados As String)
            Me.ObtenerChequesARemesarAsync(FecMov, codSucursal, remesados, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerChequesARemesarAsync(ByVal FecMov As Date, ByVal codSucursal As String, ByVal remesados As String, ByVal userState As Object)
            If (Me.ObtenerChequesARemesarOperationCompleted Is Nothing) Then
                Me.ObtenerChequesARemesarOperationCompleted = AddressOf Me.OnObtenerChequesARemesarOperationCompleted
            End If
            Me.InvokeAsync("ObtenerChequesARemesar", New Object() {FecMov, codSucursal, remesados}, Me.ObtenerChequesARemesarOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerChequesARemesarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerChequesARemesarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerChequesARemesarCompleted(Me, New ObtenerChequesARemesarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ActualizarChequesRemesar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ActualizarChequesRemesar( _
                    ByVal Correlativo As Integer,  _
                    ByVal Estado As Boolean,  _
                    ByVal Flag As Boolean,  _
                    ByVal FecMov As Date,  _
                    ByVal idboveda As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal numPartida As String,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal idBanco As Integer,  _
                    ByVal TotalCheques As Double,  _
                    ByVal CantidadCheques As Integer,  _
                    ByVal folio As String,  _
                    ByVal noRemesa As String,  _
                    ByVal nombreCuenta As String,  _
                    ByVal observacionRemesa As String)
            Me.Invoke("ActualizarChequesRemesar", New Object() {Correlativo, Estado, Flag, FecMov, idboveda, usuario, hora, numPartida, codTransaccion, idBanco, TotalCheques, CantidadCheques, folio, noRemesa, nombreCuenta, observacionRemesa})
        End Sub
        
        '''<remarks/>
        Public Function BeginActualizarChequesRemesar( _
                    ByVal Correlativo As Integer,  _
                    ByVal Estado As Boolean,  _
                    ByVal Flag As Boolean,  _
                    ByVal FecMov As Date,  _
                    ByVal idboveda As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal numPartida As String,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal idBanco As Integer,  _
                    ByVal TotalCheques As Double,  _
                    ByVal CantidadCheques As Integer,  _
                    ByVal folio As String,  _
                    ByVal noRemesa As String,  _
                    ByVal nombreCuenta As String,  _
                    ByVal observacionRemesa As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizarChequesRemesar", New Object() {Correlativo, Estado, Flag, FecMov, idboveda, usuario, hora, numPartida, codTransaccion, idBanco, TotalCheques, CantidadCheques, folio, noRemesa, nombreCuenta, observacionRemesa}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndActualizarChequesRemesar(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarChequesRemesarAsync( _
                    ByVal Correlativo As Integer,  _
                    ByVal Estado As Boolean,  _
                    ByVal Flag As Boolean,  _
                    ByVal FecMov As Date,  _
                    ByVal idboveda As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal numPartida As String,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal idBanco As Integer,  _
                    ByVal TotalCheques As Double,  _
                    ByVal CantidadCheques As Integer,  _
                    ByVal folio As String,  _
                    ByVal noRemesa As String,  _
                    ByVal nombreCuenta As String,  _
                    ByVal observacionRemesa As String)
            Me.ActualizarChequesRemesarAsync(Correlativo, Estado, Flag, FecMov, idboveda, usuario, hora, numPartida, codTransaccion, idBanco, TotalCheques, CantidadCheques, folio, noRemesa, nombreCuenta, observacionRemesa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarChequesRemesarAsync( _
                    ByVal Correlativo As Integer,  _
                    ByVal Estado As Boolean,  _
                    ByVal Flag As Boolean,  _
                    ByVal FecMov As Date,  _
                    ByVal idboveda As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal numPartida As String,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal idBanco As Integer,  _
                    ByVal TotalCheques As Double,  _
                    ByVal CantidadCheques As Integer,  _
                    ByVal folio As String,  _
                    ByVal noRemesa As String,  _
                    ByVal nombreCuenta As String,  _
                    ByVal observacionRemesa As String,  _
                    ByVal userState As Object)
            If (Me.ActualizarChequesRemesarOperationCompleted Is Nothing) Then
                Me.ActualizarChequesRemesarOperationCompleted = AddressOf Me.OnActualizarChequesRemesarOperationCompleted
            End If
            Me.InvokeAsync("ActualizarChequesRemesar", New Object() {Correlativo, Estado, Flag, FecMov, idboveda, usuario, hora, numPartida, codTransaccion, idBanco, TotalCheques, CantidadCheques, folio, noRemesa, nombreCuenta, observacionRemesa}, Me.ActualizarChequesRemesarOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarChequesRemesarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarChequesRemesarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarChequesRemesarCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/AnularChequesBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AnularChequesBoveda(ByVal Correlativo As Integer, ByVal Flag As Boolean, ByVal Num_partida As String, ByVal Usuario As String, ByVal hora As String, ByVal FecMov As Date, ByVal IdBoveda As Integer)
            Me.Invoke("AnularChequesBoveda", New Object() {Correlativo, Flag, Num_partida, Usuario, hora, FecMov, IdBoveda})
        End Sub
        
        '''<remarks/>
        Public Function BeginAnularChequesBoveda(ByVal Correlativo As Integer, ByVal Flag As Boolean, ByVal Num_partida As String, ByVal Usuario As String, ByVal hora As String, ByVal FecMov As Date, ByVal IdBoveda As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AnularChequesBoveda", New Object() {Correlativo, Flag, Num_partida, Usuario, hora, FecMov, IdBoveda}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndAnularChequesBoveda(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AnularChequesBovedaAsync(ByVal Correlativo As Integer, ByVal Flag As Boolean, ByVal Num_partida As String, ByVal Usuario As String, ByVal hora As String, ByVal FecMov As Date, ByVal IdBoveda As Integer)
            Me.AnularChequesBovedaAsync(Correlativo, Flag, Num_partida, Usuario, hora, FecMov, IdBoveda, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AnularChequesBovedaAsync(ByVal Correlativo As Integer, ByVal Flag As Boolean, ByVal Num_partida As String, ByVal Usuario As String, ByVal hora As String, ByVal FecMov As Date, ByVal IdBoveda As Integer, ByVal userState As Object)
            If (Me.AnularChequesBovedaOperationCompleted Is Nothing) Then
                Me.AnularChequesBovedaOperationCompleted = AddressOf Me.OnAnularChequesBovedaOperationCompleted
            End If
            Me.InvokeAsync("AnularChequesBoveda", New Object() {Correlativo, Flag, Num_partida, Usuario, hora, FecMov, IdBoveda}, Me.AnularChequesBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAnularChequesBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AnularChequesBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AnularChequesBovedaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerListaItesmRubrosDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerListaItesmRubrosDocumentos(ByVal id As Integer, ByVal coditem As String, ByVal idRubro As String, ByVal idTipoDoc As Integer, ByVal TipoOperacion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerListaItesmRubrosDocumentos", New Object() {id, coditem, idRubro, idTipoDoc, TipoOperacion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerListaItesmRubrosDocumentos(ByVal id As Integer, ByVal coditem As String, ByVal idRubro As String, ByVal idTipoDoc As Integer, ByVal TipoOperacion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerListaItesmRubrosDocumentos", New Object() {id, coditem, idRubro, idTipoDoc, TipoOperacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerListaItesmRubrosDocumentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerListaItesmRubrosDocumentosAsync(ByVal id As Integer, ByVal coditem As String, ByVal idRubro As String, ByVal idTipoDoc As Integer, ByVal TipoOperacion As Integer)
            Me.ObtenerListaItesmRubrosDocumentosAsync(id, coditem, idRubro, idTipoDoc, TipoOperacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerListaItesmRubrosDocumentosAsync(ByVal id As Integer, ByVal coditem As String, ByVal idRubro As String, ByVal idTipoDoc As Integer, ByVal TipoOperacion As Integer, ByVal userState As Object)
            If (Me.ObtenerListaItesmRubrosDocumentosOperationCompleted Is Nothing) Then
                Me.ObtenerListaItesmRubrosDocumentosOperationCompleted = AddressOf Me.OnObtenerListaItesmRubrosDocumentosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerListaItesmRubrosDocumentos", New Object() {id, coditem, idRubro, idTipoDoc, TipoOperacion}, Me.ObtenerListaItesmRubrosDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerListaItesmRubrosDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerListaItesmRubrosDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerListaItesmRubrosDocumentosCompleted(Me, New ObtenerListaItesmRubrosDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/reversionMovimientosCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function reversionMovimientosCaja(ByVal noFactura As String, ByVal tipo As String, ByVal fecha As Date, ByVal codSucursal As String, ByVal monto As Double, ByVal observacion As String, ByVal usuario As String, ByVal noCaja As Integer, ByVal codCajero As Integer, ByVal opcion As Integer) As Integer
            Dim results() As Object = Me.Invoke("reversionMovimientosCaja", New Object() {noFactura, tipo, fecha, codSucursal, monto, observacion, usuario, noCaja, codCajero, opcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginreversionMovimientosCaja(ByVal noFactura As String, ByVal tipo As String, ByVal fecha As Date, ByVal codSucursal As String, ByVal monto As Double, ByVal observacion As String, ByVal usuario As String, ByVal noCaja As Integer, ByVal codCajero As Integer, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("reversionMovimientosCaja", New Object() {noFactura, tipo, fecha, codSucursal, monto, observacion, usuario, noCaja, codCajero, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndreversionMovimientosCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub reversionMovimientosCajaAsync(ByVal noFactura As String, ByVal tipo As String, ByVal fecha As Date, ByVal codSucursal As String, ByVal monto As Double, ByVal observacion As String, ByVal usuario As String, ByVal noCaja As Integer, ByVal codCajero As Integer, ByVal opcion As Integer)
            Me.reversionMovimientosCajaAsync(noFactura, tipo, fecha, codSucursal, monto, observacion, usuario, noCaja, codCajero, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub reversionMovimientosCajaAsync(ByVal noFactura As String, ByVal tipo As String, ByVal fecha As Date, ByVal codSucursal As String, ByVal monto As Double, ByVal observacion As String, ByVal usuario As String, ByVal noCaja As Integer, ByVal codCajero As Integer, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.reversionMovimientosCajaOperationCompleted Is Nothing) Then
                Me.reversionMovimientosCajaOperationCompleted = AddressOf Me.OnreversionMovimientosCajaOperationCompleted
            End If
            Me.InvokeAsync("reversionMovimientosCaja", New Object() {noFactura, tipo, fecha, codSucursal, monto, observacion, usuario, noCaja, codCajero, opcion}, Me.reversionMovimientosCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnreversionMovimientosCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.reversionMovimientosCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent reversionMovimientosCajaCompleted(Me, New reversionMovimientosCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/eliminarCaRubro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarCaRubro(ByVal idRubro As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("eliminarCaRubro", New Object() {idRubro, usuario, contraseña, sucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarCaRubro(ByVal idRubro As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarCaRubro", New Object() {idRubro, usuario, contraseña, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarCaRubro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarCaRubroAsync(ByVal idRubro As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String)
            Me.eliminarCaRubroAsync(idRubro, usuario, contraseña, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarCaRubroAsync(ByVal idRubro As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.eliminarCaRubroOperationCompleted Is Nothing) Then
                Me.eliminarCaRubroOperationCompleted = AddressOf Me.OneliminarCaRubroOperationCompleted
            End If
            Me.InvokeAsync("eliminarCaRubro", New Object() {idRubro, usuario, contraseña, sucursal}, Me.eliminarCaRubroOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarCaRubroOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarCaRubroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarCaRubroCompleted(Me, New eliminarCaRubroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/modificarCaRubro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarCaRubro(ByVal valores As String, ByVal idRubro As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("modificarCaRubro", New Object() {valores, idRubro, usuario, contraseña, sucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarCaRubro(ByVal valores As String, ByVal idRubro As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarCaRubro", New Object() {valores, idRubro, usuario, contraseña, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarCaRubro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarCaRubroAsync(ByVal valores As String, ByVal idRubro As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String)
            Me.modificarCaRubroAsync(valores, idRubro, usuario, contraseña, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarCaRubroAsync(ByVal valores As String, ByVal idRubro As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.modificarCaRubroOperationCompleted Is Nothing) Then
                Me.modificarCaRubroOperationCompleted = AddressOf Me.OnmodificarCaRubroOperationCompleted
            End If
            Me.InvokeAsync("modificarCaRubro", New Object() {valores, idRubro, usuario, contraseña, sucursal}, Me.modificarCaRubroOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarCaRubroOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarCaRubroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarCaRubroCompleted(Me, New modificarCaRubroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/insertarCaRubro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCaRubro(ByVal campos As String, ByVal valores As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("insertarCaRubro", New Object() {campos, valores, usuario, contraseña, sucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCaRubro(ByVal campos As String, ByVal valores As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCaRubro", New Object() {campos, valores, usuario, contraseña, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCaRubro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCaRubroAsync(ByVal campos As String, ByVal valores As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String)
            Me.insertarCaRubroAsync(campos, valores, usuario, contraseña, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCaRubroAsync(ByVal campos As String, ByVal valores As String, ByVal usuario As String, ByVal contraseña As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.insertarCaRubroOperationCompleted Is Nothing) Then
                Me.insertarCaRubroOperationCompleted = AddressOf Me.OninsertarCaRubroOperationCompleted
            End If
            Me.InvokeAsync("insertarCaRubro", New Object() {campos, valores, usuario, contraseña, sucursal}, Me.insertarCaRubroOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCaRubroOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCaRubroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCaRubroCompleted(Me, New insertarCaRubroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/generarReciboDivEfectivo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function generarReciboDivEfectivo(ByVal dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("generarReciboDivEfectivo", New Object() {dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BegingenerarReciboDivEfectivo(ByVal dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("generarReciboDivEfectivo", New Object() {dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgenerarReciboDivEfectivo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub generarReciboDivEfectivoAsync(ByVal dui As String)
            Me.generarReciboDivEfectivoAsync(dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub generarReciboDivEfectivoAsync(ByVal dui As String, ByVal userState As Object)
            If (Me.generarReciboDivEfectivoOperationCompleted Is Nothing) Then
                Me.generarReciboDivEfectivoOperationCompleted = AddressOf Me.OngenerarReciboDivEfectivoOperationCompleted
            End If
            Me.InvokeAsync("generarReciboDivEfectivo", New Object() {dui}, Me.generarReciboDivEfectivoOperationCompleted, userState)
        End Sub
        
        Private Sub OngenerarReciboDivEfectivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.generarReciboDivEfectivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent generarReciboDivEfectivoCompleted(Me, New generarReciboDivEfectivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/consultarTransaccionesCheque", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarTransaccionesCheque(ByVal idBanco As Integer, ByVal nocheque As String, ByVal noCuenta As String, ByVal noReserva As String, ByVal fecha As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarTransaccionesCheque", New Object() {idBanco, nocheque, noCuenta, noReserva, fecha})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarTransaccionesCheque(ByVal idBanco As Integer, ByVal nocheque As String, ByVal noCuenta As String, ByVal noReserva As String, ByVal fecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarTransaccionesCheque", New Object() {idBanco, nocheque, noCuenta, noReserva, fecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarTransaccionesCheque(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarTransaccionesChequeAsync(ByVal idBanco As Integer, ByVal nocheque As String, ByVal noCuenta As String, ByVal noReserva As String, ByVal fecha As Date)
            Me.consultarTransaccionesChequeAsync(idBanco, nocheque, noCuenta, noReserva, fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarTransaccionesChequeAsync(ByVal idBanco As Integer, ByVal nocheque As String, ByVal noCuenta As String, ByVal noReserva As String, ByVal fecha As Date, ByVal userState As Object)
            If (Me.consultarTransaccionesChequeOperationCompleted Is Nothing) Then
                Me.consultarTransaccionesChequeOperationCompleted = AddressOf Me.OnconsultarTransaccionesChequeOperationCompleted
            End If
            Me.InvokeAsync("consultarTransaccionesCheque", New Object() {idBanco, nocheque, noCuenta, noReserva, fecha}, Me.consultarTransaccionesChequeOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarTransaccionesChequeOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarTransaccionesChequeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarTransaccionesChequeCompleted(Me, New consultarTransaccionesChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/AperturaCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AperturaCaja( _
                    ByVal nocaja As Integer,  _
                    ByVal codcajero As Integer,  _
                    ByVal fechaApertura As Date,  _
                    ByVal horaApertura As String,  _
                    ByVal montoApertura As Double,  _
                    ByVal horaCierre As String,  _
                    ByVal tipoCaja As String,  _
                    ByVal CajaCerrada As String,  _
                    ByVal tipoMov As String,  _
                    ByVal cantidadUno As Double,  _
                    ByVal cantidadCinco As Double,  _
                    ByVal cantidadDiez As Double,  _
                    ByVal cantidadVeinte As Double,  _
                    ByVal cantidadCincuenta As Double,  _
                    ByVal cantidadCien As Double,  _
                    ByVal cantidadFraccion As Double,  _
                    ByVal MontosDeteriorados As Double,  _
                    ByVal totalCheques As Double,  _
                    ByVal totalDepositos As Double,  _
                    ByVal totalFacturas As Double,  _
                    ByVal totalCreditoFiscal As Double,  _
                    ByVal totalDividendo As Double,  _
                    ByVal totalRetiros As Double,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal cantidadMonedaUno As Integer) As Integer
            Dim results() As Object = Me.Invoke("AperturaCaja", New Object() {nocaja, codcajero, fechaApertura, horaApertura, montoApertura, horaCierre, tipoCaja, CajaCerrada, tipoMov, cantidadUno, cantidadCinco, cantidadDiez, cantidadVeinte, cantidadCincuenta, cantidadCien, cantidadFraccion, MontosDeteriorados, totalCheques, totalDepositos, totalFacturas, totalCreditoFiscal, totalDividendo, totalRetiros, idTipoMovCaja, cantidadMonedaUno})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginAperturaCaja( _
                    ByVal nocaja As Integer,  _
                    ByVal codcajero As Integer,  _
                    ByVal fechaApertura As Date,  _
                    ByVal horaApertura As String,  _
                    ByVal montoApertura As Double,  _
                    ByVal horaCierre As String,  _
                    ByVal tipoCaja As String,  _
                    ByVal CajaCerrada As String,  _
                    ByVal tipoMov As String,  _
                    ByVal cantidadUno As Double,  _
                    ByVal cantidadCinco As Double,  _
                    ByVal cantidadDiez As Double,  _
                    ByVal cantidadVeinte As Double,  _
                    ByVal cantidadCincuenta As Double,  _
                    ByVal cantidadCien As Double,  _
                    ByVal cantidadFraccion As Double,  _
                    ByVal MontosDeteriorados As Double,  _
                    ByVal totalCheques As Double,  _
                    ByVal totalDepositos As Double,  _
                    ByVal totalFacturas As Double,  _
                    ByVal totalCreditoFiscal As Double,  _
                    ByVal totalDividendo As Double,  _
                    ByVal totalRetiros As Double,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal cantidadMonedaUno As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AperturaCaja", New Object() {nocaja, codcajero, fechaApertura, horaApertura, montoApertura, horaCierre, tipoCaja, CajaCerrada, tipoMov, cantidadUno, cantidadCinco, cantidadDiez, cantidadVeinte, cantidadCincuenta, cantidadCien, cantidadFraccion, MontosDeteriorados, totalCheques, totalDepositos, totalFacturas, totalCreditoFiscal, totalDividendo, totalRetiros, idTipoMovCaja, cantidadMonedaUno}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAperturaCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AperturaCajaAsync( _
                    ByVal nocaja As Integer,  _
                    ByVal codcajero As Integer,  _
                    ByVal fechaApertura As Date,  _
                    ByVal horaApertura As String,  _
                    ByVal montoApertura As Double,  _
                    ByVal horaCierre As String,  _
                    ByVal tipoCaja As String,  _
                    ByVal CajaCerrada As String,  _
                    ByVal tipoMov As String,  _
                    ByVal cantidadUno As Double,  _
                    ByVal cantidadCinco As Double,  _
                    ByVal cantidadDiez As Double,  _
                    ByVal cantidadVeinte As Double,  _
                    ByVal cantidadCincuenta As Double,  _
                    ByVal cantidadCien As Double,  _
                    ByVal cantidadFraccion As Double,  _
                    ByVal MontosDeteriorados As Double,  _
                    ByVal totalCheques As Double,  _
                    ByVal totalDepositos As Double,  _
                    ByVal totalFacturas As Double,  _
                    ByVal totalCreditoFiscal As Double,  _
                    ByVal totalDividendo As Double,  _
                    ByVal totalRetiros As Double,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal cantidadMonedaUno As Integer)
            Me.AperturaCajaAsync(nocaja, codcajero, fechaApertura, horaApertura, montoApertura, horaCierre, tipoCaja, CajaCerrada, tipoMov, cantidadUno, cantidadCinco, cantidadDiez, cantidadVeinte, cantidadCincuenta, cantidadCien, cantidadFraccion, MontosDeteriorados, totalCheques, totalDepositos, totalFacturas, totalCreditoFiscal, totalDividendo, totalRetiros, idTipoMovCaja, cantidadMonedaUno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AperturaCajaAsync( _
                    ByVal nocaja As Integer,  _
                    ByVal codcajero As Integer,  _
                    ByVal fechaApertura As Date,  _
                    ByVal horaApertura As String,  _
                    ByVal montoApertura As Double,  _
                    ByVal horaCierre As String,  _
                    ByVal tipoCaja As String,  _
                    ByVal CajaCerrada As String,  _
                    ByVal tipoMov As String,  _
                    ByVal cantidadUno As Double,  _
                    ByVal cantidadCinco As Double,  _
                    ByVal cantidadDiez As Double,  _
                    ByVal cantidadVeinte As Double,  _
                    ByVal cantidadCincuenta As Double,  _
                    ByVal cantidadCien As Double,  _
                    ByVal cantidadFraccion As Double,  _
                    ByVal MontosDeteriorados As Double,  _
                    ByVal totalCheques As Double,  _
                    ByVal totalDepositos As Double,  _
                    ByVal totalFacturas As Double,  _
                    ByVal totalCreditoFiscal As Double,  _
                    ByVal totalDividendo As Double,  _
                    ByVal totalRetiros As Double,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal cantidadMonedaUno As Integer,  _
                    ByVal userState As Object)
            If (Me.AperturaCajaOperationCompleted Is Nothing) Then
                Me.AperturaCajaOperationCompleted = AddressOf Me.OnAperturaCajaOperationCompleted
            End If
            Me.InvokeAsync("AperturaCaja", New Object() {nocaja, codcajero, fechaApertura, horaApertura, montoApertura, horaCierre, tipoCaja, CajaCerrada, tipoMov, cantidadUno, cantidadCinco, cantidadDiez, cantidadVeinte, cantidadCincuenta, cantidadCien, cantidadFraccion, MontosDeteriorados, totalCheques, totalDepositos, totalFacturas, totalCreditoFiscal, totalDividendo, totalRetiros, idTipoMovCaja, cantidadMonedaUno}, Me.AperturaCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAperturaCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AperturaCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AperturaCajaCompleted(Me, New AperturaCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/InsertarCaMovimientosCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCaMovimientosCaja( _
                    ByVal nocaja As Integer,  _
                    ByVal codCajero As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal monto As Double,  _
                    ByVal tipoMov As String,  _
                    ByVal cantidadUno As Double,  _
                    ByVal cantidadCinco As Double,  _
                    ByVal cantidadDiez As Double,  _
                    ByVal cantidadVeinte As Double,  _
                    ByVal cantidadCincuenta As Double,  _
                    ByVal cantidadCien As Double,  _
                    ByVal cantidadFraccion As Double,  _
                    ByVal MontosDeteriorados As Double,  _
                    ByVal totalCheques As Double,  _
                    ByVal totalDepositos As Double,  _
                    ByVal totalFacturas As Double,  _
                    ByVal totalCreditoFiscal As Double,  _
                    ByVal totalDividendo As Double,  _
                    ByVal totalRetiros As Double,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal cantidadMonedasUno As Integer) As Integer
            Dim results() As Object = Me.Invoke("InsertarCaMovimientosCaja", New Object() {nocaja, codCajero, Fecha, monto, tipoMov, cantidadUno, cantidadCinco, cantidadDiez, cantidadVeinte, cantidadCincuenta, cantidadCien, cantidadFraccion, MontosDeteriorados, totalCheques, totalDepositos, totalFacturas, totalCreditoFiscal, totalDividendo, totalRetiros, idTipoMovCaja, cantidadMonedasUno})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCaMovimientosCaja( _
                    ByVal nocaja As Integer,  _
                    ByVal codCajero As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal monto As Double,  _
                    ByVal tipoMov As String,  _
                    ByVal cantidadUno As Double,  _
                    ByVal cantidadCinco As Double,  _
                    ByVal cantidadDiez As Double,  _
                    ByVal cantidadVeinte As Double,  _
                    ByVal cantidadCincuenta As Double,  _
                    ByVal cantidadCien As Double,  _
                    ByVal cantidadFraccion As Double,  _
                    ByVal MontosDeteriorados As Double,  _
                    ByVal totalCheques As Double,  _
                    ByVal totalDepositos As Double,  _
                    ByVal totalFacturas As Double,  _
                    ByVal totalCreditoFiscal As Double,  _
                    ByVal totalDividendo As Double,  _
                    ByVal totalRetiros As Double,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCaMovimientosCaja", New Object() {nocaja, codCajero, Fecha, monto, tipoMov, cantidadUno, cantidadCinco, cantidadDiez, cantidadVeinte, cantidadCincuenta, cantidadCien, cantidadFraccion, MontosDeteriorados, totalCheques, totalDepositos, totalFacturas, totalCreditoFiscal, totalDividendo, totalRetiros, idTipoMovCaja, cantidadMonedasUno}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCaMovimientosCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCaMovimientosCajaAsync( _
                    ByVal nocaja As Integer,  _
                    ByVal codCajero As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal monto As Double,  _
                    ByVal tipoMov As String,  _
                    ByVal cantidadUno As Double,  _
                    ByVal cantidadCinco As Double,  _
                    ByVal cantidadDiez As Double,  _
                    ByVal cantidadVeinte As Double,  _
                    ByVal cantidadCincuenta As Double,  _
                    ByVal cantidadCien As Double,  _
                    ByVal cantidadFraccion As Double,  _
                    ByVal MontosDeteriorados As Double,  _
                    ByVal totalCheques As Double,  _
                    ByVal totalDepositos As Double,  _
                    ByVal totalFacturas As Double,  _
                    ByVal totalCreditoFiscal As Double,  _
                    ByVal totalDividendo As Double,  _
                    ByVal totalRetiros As Double,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal cantidadMonedasUno As Integer)
            Me.InsertarCaMovimientosCajaAsync(nocaja, codCajero, Fecha, monto, tipoMov, cantidadUno, cantidadCinco, cantidadDiez, cantidadVeinte, cantidadCincuenta, cantidadCien, cantidadFraccion, MontosDeteriorados, totalCheques, totalDepositos, totalFacturas, totalCreditoFiscal, totalDividendo, totalRetiros, idTipoMovCaja, cantidadMonedasUno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCaMovimientosCajaAsync( _
                    ByVal nocaja As Integer,  _
                    ByVal codCajero As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal monto As Double,  _
                    ByVal tipoMov As String,  _
                    ByVal cantidadUno As Double,  _
                    ByVal cantidadCinco As Double,  _
                    ByVal cantidadDiez As Double,  _
                    ByVal cantidadVeinte As Double,  _
                    ByVal cantidadCincuenta As Double,  _
                    ByVal cantidadCien As Double,  _
                    ByVal cantidadFraccion As Double,  _
                    ByVal MontosDeteriorados As Double,  _
                    ByVal totalCheques As Double,  _
                    ByVal totalDepositos As Double,  _
                    ByVal totalFacturas As Double,  _
                    ByVal totalCreditoFiscal As Double,  _
                    ByVal totalDividendo As Double,  _
                    ByVal totalRetiros As Double,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal userState As Object)
            If (Me.InsertarCaMovimientosCajaOperationCompleted Is Nothing) Then
                Me.InsertarCaMovimientosCajaOperationCompleted = AddressOf Me.OnInsertarCaMovimientosCajaOperationCompleted
            End If
            Me.InvokeAsync("InsertarCaMovimientosCaja", New Object() {nocaja, codCajero, Fecha, monto, tipoMov, cantidadUno, cantidadCinco, cantidadDiez, cantidadVeinte, cantidadCincuenta, cantidadCien, cantidadFraccion, MontosDeteriorados, totalCheques, totalDepositos, totalFacturas, totalCreditoFiscal, totalDividendo, totalRetiros, idTipoMovCaja, cantidadMonedasUno}, Me.InsertarCaMovimientosCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCaMovimientosCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCaMovimientosCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCaMovimientosCajaCompleted(Me, New InsertarCaMovimientosCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/InsertarCaTipoMovCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCaTipoMovCaja(ByVal descripcion As String, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("InsertarCaTipoMovCaja", New Object() {descripcion, codTransaccion, usuario, pwd, codSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCaTipoMovCaja(ByVal descripcion As String, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCaTipoMovCaja", New Object() {descripcion, codTransaccion, usuario, pwd, codSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCaTipoMovCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCaTipoMovCajaAsync(ByVal descripcion As String, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String)
            Me.InsertarCaTipoMovCajaAsync(descripcion, codTransaccion, usuario, pwd, codSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCaTipoMovCajaAsync(ByVal descripcion As String, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String, ByVal userState As Object)
            If (Me.InsertarCaTipoMovCajaOperationCompleted Is Nothing) Then
                Me.InsertarCaTipoMovCajaOperationCompleted = AddressOf Me.OnInsertarCaTipoMovCajaOperationCompleted
            End If
            Me.InvokeAsync("InsertarCaTipoMovCaja", New Object() {descripcion, codTransaccion, usuario, pwd, codSucursal}, Me.InsertarCaTipoMovCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCaTipoMovCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCaTipoMovCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCaTipoMovCajaCompleted(Me, New InsertarCaTipoMovCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/modificarCaTipoMovCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarCaTipoMovCaja(ByVal idTipoMovCaja As Integer, ByVal descripcion As String, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("modificarCaTipoMovCaja", New Object() {idTipoMovCaja, descripcion, codTransaccion, usuario, pwd, codSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarCaTipoMovCaja(ByVal idTipoMovCaja As Integer, ByVal descripcion As String, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarCaTipoMovCaja", New Object() {idTipoMovCaja, descripcion, codTransaccion, usuario, pwd, codSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarCaTipoMovCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarCaTipoMovCajaAsync(ByVal idTipoMovCaja As Integer, ByVal descripcion As String, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String)
            Me.modificarCaTipoMovCajaAsync(idTipoMovCaja, descripcion, codTransaccion, usuario, pwd, codSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarCaTipoMovCajaAsync(ByVal idTipoMovCaja As Integer, ByVal descripcion As String, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String, ByVal userState As Object)
            If (Me.modificarCaTipoMovCajaOperationCompleted Is Nothing) Then
                Me.modificarCaTipoMovCajaOperationCompleted = AddressOf Me.OnmodificarCaTipoMovCajaOperationCompleted
            End If
            Me.InvokeAsync("modificarCaTipoMovCaja", New Object() {idTipoMovCaja, descripcion, codTransaccion, usuario, pwd, codSucursal}, Me.modificarCaTipoMovCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarCaTipoMovCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarCaTipoMovCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarCaTipoMovCajaCompleted(Me, New modificarCaTipoMovCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/eliminarCaTipoMovCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarCaTipoMovCaja(ByVal idTipoMovCaja As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("eliminarCaTipoMovCaja", New Object() {idTipoMovCaja, usuario, pwd, codSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarCaTipoMovCaja(ByVal idTipoMovCaja As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarCaTipoMovCaja", New Object() {idTipoMovCaja, usuario, pwd, codSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarCaTipoMovCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarCaTipoMovCajaAsync(ByVal idTipoMovCaja As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String)
            Me.eliminarCaTipoMovCajaAsync(idTipoMovCaja, usuario, pwd, codSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarCaTipoMovCajaAsync(ByVal idTipoMovCaja As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String, ByVal userState As Object)
            If (Me.eliminarCaTipoMovCajaOperationCompleted Is Nothing) Then
                Me.eliminarCaTipoMovCajaOperationCompleted = AddressOf Me.OneliminarCaTipoMovCajaOperationCompleted
            End If
            Me.InvokeAsync("eliminarCaTipoMovCaja", New Object() {idTipoMovCaja, usuario, pwd, codSucursal}, Me.eliminarCaTipoMovCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarCaTipoMovCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarCaTipoMovCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarCaTipoMovCajaCompleted(Me, New eliminarCaTipoMovCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/consultarCaTipoMovCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCaTipoMovCaja(ByVal opcion As Integer, ByVal idTipoMovCaja As Integer, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCaTipoMovCaja", New Object() {opcion, idTipoMovCaja, codTransaccion, usuario, pwd, codSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCaTipoMovCaja(ByVal opcion As Integer, ByVal idTipoMovCaja As Integer, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCaTipoMovCaja", New Object() {opcion, idTipoMovCaja, codTransaccion, usuario, pwd, codSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCaTipoMovCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCaTipoMovCajaAsync(ByVal opcion As Integer, ByVal idTipoMovCaja As Integer, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String)
            Me.consultarCaTipoMovCajaAsync(opcion, idTipoMovCaja, codTransaccion, usuario, pwd, codSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCaTipoMovCajaAsync(ByVal opcion As Integer, ByVal idTipoMovCaja As Integer, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal pwd As String, ByVal codSucursal As String, ByVal userState As Object)
            If (Me.consultarCaTipoMovCajaOperationCompleted Is Nothing) Then
                Me.consultarCaTipoMovCajaOperationCompleted = AddressOf Me.OnconsultarCaTipoMovCajaOperationCompleted
            End If
            Me.InvokeAsync("consultarCaTipoMovCaja", New Object() {opcion, idTipoMovCaja, codTransaccion, usuario, pwd, codSucursal}, Me.consultarCaTipoMovCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCaTipoMovCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCaTipoMovCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCaTipoMovCajaCompleted(Me, New consultarCaTipoMovCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/consultarCaCorrelativoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCaCorrelativoCaja(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal idCorrCaja As Integer, ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, idCorrCaja, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCaCorrelativoCaja(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal idCorrCaja As Integer, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, idCorrCaja, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCaCorrelativoCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCaCorrelativoCajaAsync(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal idCorrCaja As Integer, ByVal opcion As Integer)
            Me.consultarCaCorrelativoCajaAsync(codSucursal, noCaja, idTipoDoc, idCorrCaja, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCaCorrelativoCajaAsync(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal idCorrCaja As Integer, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.consultarCaCorrelativoCajaOperationCompleted Is Nothing) Then
                Me.consultarCaCorrelativoCajaOperationCompleted = AddressOf Me.OnconsultarCaCorrelativoCajaOperationCompleted
            End If
            Me.InvokeAsync("consultarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, idCorrCaja, opcion}, Me.consultarCaCorrelativoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCaCorrelativoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCaCorrelativoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCaCorrelativoCajaCompleted(Me, New consultarCaCorrelativoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/eliminarCaCorrelativoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarCaCorrelativoCaja(ByVal idCorrCaja As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarCaCorrelativoCaja", New Object() {idCorrCaja})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarCaCorrelativoCaja(ByVal idCorrCaja As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarCaCorrelativoCaja", New Object() {idCorrCaja}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarCaCorrelativoCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarCaCorrelativoCajaAsync(ByVal idCorrCaja As Integer)
            Me.eliminarCaCorrelativoCajaAsync(idCorrCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarCaCorrelativoCajaAsync(ByVal idCorrCaja As Integer, ByVal userState As Object)
            If (Me.eliminarCaCorrelativoCajaOperationCompleted Is Nothing) Then
                Me.eliminarCaCorrelativoCajaOperationCompleted = AddressOf Me.OneliminarCaCorrelativoCajaOperationCompleted
            End If
            Me.InvokeAsync("eliminarCaCorrelativoCaja", New Object() {idCorrCaja}, Me.eliminarCaCorrelativoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarCaCorrelativoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarCaCorrelativoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarCaCorrelativoCajaCompleted(Me, New eliminarCaCorrelativoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/incrementarCorrelativo_CaCorrelativoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function incrementarCorrelativo_CaCorrelativoCaja(ByVal correlativo As Integer, ByVal idCorrCaja As Integer) As Integer
            Dim results() As Object = Me.Invoke("incrementarCorrelativo_CaCorrelativoCaja", New Object() {correlativo, idCorrCaja})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginincrementarCorrelativo_CaCorrelativoCaja(ByVal correlativo As Integer, ByVal idCorrCaja As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("incrementarCorrelativo_CaCorrelativoCaja", New Object() {correlativo, idCorrCaja}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndincrementarCorrelativo_CaCorrelativoCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub incrementarCorrelativo_CaCorrelativoCajaAsync(ByVal correlativo As Integer, ByVal idCorrCaja As Integer)
            Me.incrementarCorrelativo_CaCorrelativoCajaAsync(correlativo, idCorrCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub incrementarCorrelativo_CaCorrelativoCajaAsync(ByVal correlativo As Integer, ByVal idCorrCaja As Integer, ByVal userState As Object)
            If (Me.incrementarCorrelativo_CaCorrelativoCajaOperationCompleted Is Nothing) Then
                Me.incrementarCorrelativo_CaCorrelativoCajaOperationCompleted = AddressOf Me.OnincrementarCorrelativo_CaCorrelativoCajaOperationCompleted
            End If
            Me.InvokeAsync("incrementarCorrelativo_CaCorrelativoCaja", New Object() {correlativo, idCorrCaja}, Me.incrementarCorrelativo_CaCorrelativoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnincrementarCorrelativo_CaCorrelativoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.incrementarCorrelativo_CaCorrelativoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent incrementarCorrelativo_CaCorrelativoCajaCompleted(Me, New incrementarCorrelativo_CaCorrelativoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/modificarCaCorrelativoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarCaCorrelativoCaja(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal min As Integer, ByVal max As Integer, ByVal correlativo As Integer, ByVal idCorrCaja As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, min, max, correlativo, idCorrCaja})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarCaCorrelativoCaja(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal min As Integer, ByVal max As Integer, ByVal correlativo As Integer, ByVal idCorrCaja As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, min, max, correlativo, idCorrCaja}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarCaCorrelativoCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarCaCorrelativoCajaAsync(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal min As Integer, ByVal max As Integer, ByVal correlativo As Integer, ByVal idCorrCaja As Integer)
            Me.modificarCaCorrelativoCajaAsync(codSucursal, noCaja, idTipoDoc, min, max, correlativo, idCorrCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarCaCorrelativoCajaAsync(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal min As Integer, ByVal max As Integer, ByVal correlativo As Integer, ByVal idCorrCaja As Integer, ByVal userState As Object)
            If (Me.modificarCaCorrelativoCajaOperationCompleted Is Nothing) Then
                Me.modificarCaCorrelativoCajaOperationCompleted = AddressOf Me.OnmodificarCaCorrelativoCajaOperationCompleted
            End If
            Me.InvokeAsync("modificarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, min, max, correlativo, idCorrCaja}, Me.modificarCaCorrelativoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarCaCorrelativoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarCaCorrelativoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarCaCorrelativoCajaCompleted(Me, New modificarCaCorrelativoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/insertarCaCorrelativoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCaCorrelativoCaja(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal min As Integer, ByVal max As Integer, ByVal correlativo As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, min, max, correlativo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCaCorrelativoCaja(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal min As Integer, ByVal max As Integer, ByVal correlativo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, min, max, correlativo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCaCorrelativoCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCaCorrelativoCajaAsync(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal min As Integer, ByVal max As Integer, ByVal correlativo As Integer)
            Me.insertarCaCorrelativoCajaAsync(codSucursal, noCaja, idTipoDoc, min, max, correlativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCaCorrelativoCajaAsync(ByVal codSucursal As String, ByVal noCaja As Integer, ByVal idTipoDoc As Integer, ByVal min As Integer, ByVal max As Integer, ByVal correlativo As Integer, ByVal userState As Object)
            If (Me.insertarCaCorrelativoCajaOperationCompleted Is Nothing) Then
                Me.insertarCaCorrelativoCajaOperationCompleted = AddressOf Me.OninsertarCaCorrelativoCajaOperationCompleted
            End If
            Me.InvokeAsync("insertarCaCorrelativoCaja", New Object() {codSucursal, noCaja, idTipoDoc, min, max, correlativo}, Me.insertarCaCorrelativoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCaCorrelativoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCaCorrelativoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCaCorrelativoCajaCompleted(Me, New insertarCaCorrelativoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/consultarCaMaestrosTipoDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCaMaestrosTipoDocumentos(ByVal opcion As Integer, ByVal activo As Boolean, ByVal idTipoDoc As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCaMaestrosTipoDocumentos", New Object() {opcion, activo, idTipoDoc})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCaMaestrosTipoDocumentos(ByVal opcion As Integer, ByVal activo As Boolean, ByVal idTipoDoc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCaMaestrosTipoDocumentos", New Object() {opcion, activo, idTipoDoc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCaMaestrosTipoDocumentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCaMaestrosTipoDocumentosAsync(ByVal opcion As Integer, ByVal activo As Boolean, ByVal idTipoDoc As Integer)
            Me.consultarCaMaestrosTipoDocumentosAsync(opcion, activo, idTipoDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCaMaestrosTipoDocumentosAsync(ByVal opcion As Integer, ByVal activo As Boolean, ByVal idTipoDoc As Integer, ByVal userState As Object)
            If (Me.consultarCaMaestrosTipoDocumentosOperationCompleted Is Nothing) Then
                Me.consultarCaMaestrosTipoDocumentosOperationCompleted = AddressOf Me.OnconsultarCaMaestrosTipoDocumentosOperationCompleted
            End If
            Me.InvokeAsync("consultarCaMaestrosTipoDocumentos", New Object() {opcion, activo, idTipoDoc}, Me.consultarCaMaestrosTipoDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCaMaestrosTipoDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCaMaestrosTipoDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCaMaestrosTipoDocumentosCompleted(Me, New consultarCaMaestrosTipoDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/desactivarCaMaestroTipoDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function desactivarCaMaestroTipoDocumentos(ByVal activo As Boolean, ByVal idtipodoc As Integer) As Integer
            Dim results() As Object = Me.Invoke("desactivarCaMaestroTipoDocumentos", New Object() {activo, idtipodoc})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegindesactivarCaMaestroTipoDocumentos(ByVal activo As Boolean, ByVal idtipodoc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("desactivarCaMaestroTipoDocumentos", New Object() {activo, idtipodoc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EnddesactivarCaMaestroTipoDocumentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub desactivarCaMaestroTipoDocumentosAsync(ByVal activo As Boolean, ByVal idtipodoc As Integer)
            Me.desactivarCaMaestroTipoDocumentosAsync(activo, idtipodoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub desactivarCaMaestroTipoDocumentosAsync(ByVal activo As Boolean, ByVal idtipodoc As Integer, ByVal userState As Object)
            If (Me.desactivarCaMaestroTipoDocumentosOperationCompleted Is Nothing) Then
                Me.desactivarCaMaestroTipoDocumentosOperationCompleted = AddressOf Me.OndesactivarCaMaestroTipoDocumentosOperationCompleted
            End If
            Me.InvokeAsync("desactivarCaMaestroTipoDocumentos", New Object() {activo, idtipodoc}, Me.desactivarCaMaestroTipoDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OndesactivarCaMaestroTipoDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.desactivarCaMaestroTipoDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent desactivarCaMaestroTipoDocumentosCompleted(Me, New desactivarCaMaestroTipoDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/modificarCaMaestroTipoDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarCaMaestroTipoDocumentos(ByVal tipoDocumento As String, ByVal abrev As String, ByVal activo As Boolean, ByVal idTipoDoc As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarCaMaestroTipoDocumentos", New Object() {tipoDocumento, abrev, activo, idTipoDoc})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarCaMaestroTipoDocumentos(ByVal tipoDocumento As String, ByVal abrev As String, ByVal activo As Boolean, ByVal idTipoDoc As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarCaMaestroTipoDocumentos", New Object() {tipoDocumento, abrev, activo, idTipoDoc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarCaMaestroTipoDocumentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarCaMaestroTipoDocumentosAsync(ByVal tipoDocumento As String, ByVal abrev As String, ByVal activo As Boolean, ByVal idTipoDoc As Integer)
            Me.modificarCaMaestroTipoDocumentosAsync(tipoDocumento, abrev, activo, idTipoDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarCaMaestroTipoDocumentosAsync(ByVal tipoDocumento As String, ByVal abrev As String, ByVal activo As Boolean, ByVal idTipoDoc As Integer, ByVal userState As Object)
            If (Me.modificarCaMaestroTipoDocumentosOperationCompleted Is Nothing) Then
                Me.modificarCaMaestroTipoDocumentosOperationCompleted = AddressOf Me.OnmodificarCaMaestroTipoDocumentosOperationCompleted
            End If
            Me.InvokeAsync("modificarCaMaestroTipoDocumentos", New Object() {tipoDocumento, abrev, activo, idTipoDoc}, Me.modificarCaMaestroTipoDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarCaMaestroTipoDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarCaMaestroTipoDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarCaMaestroTipoDocumentosCompleted(Me, New modificarCaMaestroTipoDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/insertarCaMaestroTipoDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCaMaestroTipoDocumentos(ByVal tipoDocumento As String, ByVal abrev As String, ByVal activo As Boolean) As Integer
            Dim results() As Object = Me.Invoke("insertarCaMaestroTipoDocumentos", New Object() {tipoDocumento, abrev, activo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCaMaestroTipoDocumentos(ByVal tipoDocumento As String, ByVal abrev As String, ByVal activo As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCaMaestroTipoDocumentos", New Object() {tipoDocumento, abrev, activo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCaMaestroTipoDocumentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCaMaestroTipoDocumentosAsync(ByVal tipoDocumento As String, ByVal abrev As String, ByVal activo As Boolean)
            Me.insertarCaMaestroTipoDocumentosAsync(tipoDocumento, abrev, activo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCaMaestroTipoDocumentosAsync(ByVal tipoDocumento As String, ByVal abrev As String, ByVal activo As Boolean, ByVal userState As Object)
            If (Me.insertarCaMaestroTipoDocumentosOperationCompleted Is Nothing) Then
                Me.insertarCaMaestroTipoDocumentosOperationCompleted = AddressOf Me.OninsertarCaMaestroTipoDocumentosOperationCompleted
            End If
            Me.InvokeAsync("insertarCaMaestroTipoDocumentos", New Object() {tipoDocumento, abrev, activo}, Me.insertarCaMaestroTipoDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCaMaestroTipoDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCaMaestroTipoDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCaMaestroTipoDocumentosCompleted(Me, New insertarCaMaestroTipoDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ComprobanteTransferenciasDesembolso", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ComprobanteTransferenciasDesembolso(ByVal CodTransferencia As String, ByVal Fecha As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ComprobanteTransferenciasDesembolso", New Object() {CodTransferencia, Fecha})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginComprobanteTransferenciasDesembolso(ByVal CodTransferencia As String, ByVal Fecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ComprobanteTransferenciasDesembolso", New Object() {CodTransferencia, Fecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndComprobanteTransferenciasDesembolso(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ComprobanteTransferenciasDesembolsoAsync(ByVal CodTransferencia As String, ByVal Fecha As Date)
            Me.ComprobanteTransferenciasDesembolsoAsync(CodTransferencia, Fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ComprobanteTransferenciasDesembolsoAsync(ByVal CodTransferencia As String, ByVal Fecha As Date, ByVal userState As Object)
            If (Me.ComprobanteTransferenciasDesembolsoOperationCompleted Is Nothing) Then
                Me.ComprobanteTransferenciasDesembolsoOperationCompleted = AddressOf Me.OnComprobanteTransferenciasDesembolsoOperationCompleted
            End If
            Me.InvokeAsync("ComprobanteTransferenciasDesembolso", New Object() {CodTransferencia, Fecha}, Me.ComprobanteTransferenciasDesembolsoOperationCompleted, userState)
        End Sub
        
        Private Sub OnComprobanteTransferenciasDesembolsoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ComprobanteTransferenciasDesembolsoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ComprobanteTransferenciasDesembolsoCompleted(Me, New ComprobanteTransferenciasDesembolsoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/AnularFactura", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AnularFactura(ByVal pNumFactura As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AnularFactura", New Object() {pNumFactura, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAnularFactura(ByVal pNumFactura As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AnularFactura", New Object() {pNumFactura, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAnularFactura(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AnularFacturaAsync(ByVal pNumFactura As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AnularFacturaAsync(pNumFactura, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AnularFacturaAsync(ByVal pNumFactura As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AnularFacturaOperationCompleted Is Nothing) Then
                Me.AnularFacturaOperationCompleted = AddressOf Me.OnAnularFacturaOperationCompleted
            End If
            Me.InvokeAsync("AnularFactura", New Object() {pNumFactura, pUsuario, pPassword, pSucursal}, Me.AnularFacturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAnularFacturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AnularFacturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AnularFacturaCompleted(Me, New AnularFacturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ArqueoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArqueoCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ArqueoCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginArqueoCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ArqueoCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndArqueoCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArqueoCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ArqueoCajaAsync(pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArqueoCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ArqueoCajaOperationCompleted Is Nothing) Then
                Me.ArqueoCajaOperationCompleted = AddressOf Me.OnArqueoCajaOperationCompleted
            End If
            Me.InvokeAsync("ArqueoCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, Me.ArqueoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnArqueoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArqueoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArqueoCajaCompleted(Me, New ArqueoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ArqueoCierreCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArqueoCierreCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ArqueoCierreCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginArqueoCierreCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ArqueoCierreCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndArqueoCierreCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArqueoCierreCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ArqueoCierreCajaAsync(pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArqueoCierreCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ArqueoCierreCajaOperationCompleted Is Nothing) Then
                Me.ArqueoCierreCajaOperationCompleted = AddressOf Me.OnArqueoCierreCajaOperationCompleted
            End If
            Me.InvokeAsync("ArqueoCierreCaja", New Object() {pFecha, pNoCaja, pTodos, pUsuario, pPassword, pSucursal}, Me.ArqueoCierreCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnArqueoCierreCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArqueoCierreCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArqueoCierreCajaCompleted(Me, New ArqueoCierreCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/Cheques_Caja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Cheques_Caja(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Cheques_Caja", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCheques_Caja(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Cheques_Caja", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCheques_Caja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Cheques_CajaAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Cheques_CajaAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cheques_CajaAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Cheques_CajaOperationCompleted Is Nothing) Then
                Me.Cheques_CajaOperationCompleted = AddressOf Me.OnCheques_CajaOperationCompleted
            End If
            Me.InvokeAsync("Cheques_Caja", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.Cheques_CajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheques_CajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cheques_CajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cheques_CajaCompleted(Me, New Cheques_CajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ChequexMovCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChequexMovCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pCodCajero As String, ByVal pAnulados As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ChequexMovCaja", New Object() {pFecha, pNoCaja, pTodos, pCodCajero, pAnulados, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginChequexMovCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pCodCajero As String, ByVal pAnulados As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ChequexMovCaja", New Object() {pFecha, pNoCaja, pTodos, pCodCajero, pAnulados, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndChequexMovCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChequexMovCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pCodCajero As String, ByVal pAnulados As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ChequexMovCajaAsync(pFecha, pNoCaja, pTodos, pCodCajero, pAnulados, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChequexMovCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pTodos As Boolean, ByVal pCodCajero As String, ByVal pAnulados As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ChequexMovCajaOperationCompleted Is Nothing) Then
                Me.ChequexMovCajaOperationCompleted = AddressOf Me.OnChequexMovCajaOperationCompleted
            End If
            Me.InvokeAsync("ChequexMovCaja", New Object() {pFecha, pNoCaja, pTodos, pCodCajero, pAnulados, pUsuario, pPassword, pSucursal}, Me.ChequexMovCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnChequexMovCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChequexMovCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChequexMovCajaCompleted(Me, New ChequexMovCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/CierreCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CierreCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("CierreCaja", New Object() {pFecha, pNoCaja, pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCierreCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CierreCaja", New Object() {pFecha, pNoCaja, pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCierreCaja(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CierreCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CierreCajaAsync(pFecha, pNoCaja, pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CierreCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CierreCajaOperationCompleted Is Nothing) Then
                Me.CierreCajaOperationCompleted = AddressOf Me.OnCierreCajaOperationCompleted
            End If
            Me.InvokeAsync("CierreCaja", New Object() {pFecha, pNoCaja, pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.CierreCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCierreCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CierreCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CierreCajaCompleted(Me, New CierreCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarAperturaCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAperturaCaja(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAperturaCaja", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAperturaCaja(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAperturaCaja", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAperturaCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAperturaCajaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarAperturaCajaAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAperturaCajaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarAperturaCajaOperationCompleted Is Nothing) Then
                Me.ConsultarAperturaCajaOperationCompleted = AddressOf Me.OnConsultarAperturaCajaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAperturaCaja", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarAperturaCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAperturaCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAperturaCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAperturaCajaCompleted(Me, New ConsultarAperturaCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarCAItemsFact", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCAItemsFact(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCAItemsFact", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCAItemsFact(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCAItemsFact", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCAItemsFact(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCAItemsFactAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCAItemsFactAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCAItemsFactAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCAItemsFactOperationCompleted Is Nothing) Then
                Me.ConsultarCAItemsFactOperationCompleted = AddressOf Me.OnConsultarCAItemsFactOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCAItemsFact", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCAItemsFactOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCAItemsFactOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCAItemsFactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCAItemsFactCompleted(Me, New ConsultarCAItemsFactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarCajas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCajas(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCajas", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCajas(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCajas", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCajas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCajasAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCajasAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCajasAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCajasOperationCompleted Is Nothing) Then
                Me.ConsultarCajasOperationCompleted = AddressOf Me.OnConsultarCajasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCajas", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCajasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCajasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCajasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCajasCompleted(Me, New ConsultarCajasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarCajeros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCajeros(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCajeros", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCajeros(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCajeros", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCajeros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCajerosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCajerosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCajerosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCajerosOperationCompleted Is Nothing) Then
                Me.ConsultarCajerosOperationCompleted = AddressOf Me.OnConsultarCajerosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCajeros", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCajerosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCajerosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCajerosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCajerosCompleted(Me, New ConsultarCajerosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarCajerosPs", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCajerosPs(ByVal pCampos As String, ByVal pFiltro As String, ByVal pClave As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCajerosPs", New Object() {pCampos, pFiltro, pClave, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCajerosPs(ByVal pCampos As String, ByVal pFiltro As String, ByVal pClave As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCajerosPs", New Object() {pCampos, pFiltro, pClave, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCajerosPs(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCajerosPsAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pClave As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCajerosPsAsync(pCampos, pFiltro, pClave, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCajerosPsAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pClave As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCajerosPsOperationCompleted Is Nothing) Then
                Me.ConsultarCajerosPsOperationCompleted = AddressOf Me.OnConsultarCajerosPsOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCajerosPs", New Object() {pCampos, pFiltro, pClave, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCajerosPsOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCajerosPsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCajerosPsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCajerosPsCompleted(Me, New ConsultarCajerosPsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarCAParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCAParametros(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCAParametros", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCAParametros(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCAParametros", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCAParametros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCAParametrosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCAParametrosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCAParametrosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCAParametrosOperationCompleted Is Nothing) Then
                Me.ConsultarCAParametrosOperationCompleted = AddressOf Me.OnConsultarCAParametrosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCAParametros", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCAParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCAParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCAParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCAParametrosCompleted(Me, New ConsultarCAParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarDatosAhorro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDatosAhorro(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDatosAhorro", New Object() {pCampos, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDatosAhorro(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDatosAhorro", New Object() {pCampos, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDatosAhorro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosAhorroAsync(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String)
            Me.ConsultarDatosAhorroAsync(pCampos, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosAhorroAsync(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String, ByVal userState As Object)
            If (Me.ConsultarDatosAhorroOperationCompleted Is Nothing) Then
                Me.ConsultarDatosAhorroOperationCompleted = AddressOf Me.OnConsultarDatosAhorroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDatosAhorro", New Object() {pCampos, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen}, Me.ConsultarDatosAhorroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDatosAhorroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDatosAhorroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDatosAhorroCompleted(Me, New ConsultarDatosAhorroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarDatosFactura", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDatosFactura(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDatosFactura", New Object() {pCampos, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDatosFactura(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDatosFactura", New Object() {pCampos, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDatosFactura(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosFacturaAsync(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String)
            Me.ConsultarDatosFacturaAsync(pCampos, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosFacturaAsync(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String, ByVal userState As Object)
            If (Me.ConsultarDatosFacturaOperationCompleted Is Nothing) Then
                Me.ConsultarDatosFacturaOperationCompleted = AddressOf Me.OnConsultarDatosFacturaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDatosFactura", New Object() {pCampos, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen}, Me.ConsultarDatosFacturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDatosFacturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDatosFacturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDatosFacturaCompleted(Me, New ConsultarDatosFacturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarDatosPrestamo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDatosPrestamo(ByVal pCodPrestamo As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDatosPrestamo", New Object() {pCodPrestamo, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDatosPrestamo(ByVal pCodPrestamo As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDatosPrestamo", New Object() {pCodPrestamo, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDatosPrestamo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosPrestamoAsync(ByVal pCodPrestamo As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String)
            Me.ConsultarDatosPrestamoAsync(pCodPrestamo, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosPrestamoAsync(ByVal pCodPrestamo As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal sucOrigen As String, ByVal userState As Object)
            If (Me.ConsultarDatosPrestamoOperationCompleted Is Nothing) Then
                Me.ConsultarDatosPrestamoOperationCompleted = AddressOf Me.OnConsultarDatosPrestamoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDatosPrestamo", New Object() {pCodPrestamo, pIdMovimiento, pAnnio, pTipo, pUsuario, pPassword, pSucursal, sucOrigen}, Me.ConsultarDatosPrestamoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDatosPrestamoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDatosPrestamoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDatosPrestamoCompleted(Me, New ConsultarDatosPrestamoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarDescripcionMovimientosAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDescripcionMovimientosAsociado(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDescripcionMovimientosAsociado", New Object() {pCampos, pIdMovimiento, pAnnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDescripcionMovimientosAsociado(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDescripcionMovimientosAsociado", New Object() {pCampos, pIdMovimiento, pAnnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDescripcionMovimientosAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDescripcionMovimientosAsociadoAsync(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarDescripcionMovimientosAsociadoAsync(pCampos, pIdMovimiento, pAnnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDescripcionMovimientosAsociadoAsync(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDescripcionMovimientosAsociadoOperationCompleted Is Nothing) Then
                Me.ConsultarDescripcionMovimientosAsociadoOperationCompleted = AddressOf Me.OnConsultarDescripcionMovimientosAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDescripcionMovimientosAsociado", New Object() {pCampos, pIdMovimiento, pAnnio, pUsuario, pPassword, pSucursal}, Me.ConsultarDescripcionMovimientosAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDescripcionMovimientosAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDescripcionMovimientosAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDescripcionMovimientosAsociadoCompleted(Me, New ConsultarDescripcionMovimientosAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarDetFacturasxFiltro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDetFacturasxFiltro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDetFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDetFacturasxFiltro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDetFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDetFacturasxFiltro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetFacturasxFiltroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDetFacturasxFiltroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetFacturasxFiltroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDetFacturasxFiltroOperationCompleted Is Nothing) Then
                Me.ConsultarDetFacturasxFiltroOperationCompleted = AddressOf Me.OnConsultarDetFacturasxFiltroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDetFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDetFacturasxFiltroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDetFacturasxFiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDetFacturasxFiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDetFacturasxFiltroCompleted(Me, New ConsultarDetFacturasxFiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarEncabezadoDetalleFacturasxFiltro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEncabezadoDetalleFacturasxFiltro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEncabezadoDetalleFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEncabezadoDetalleFacturasxFiltro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEncabezadoDetalleFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEncabezadoDetalleFacturasxFiltro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEncabezadoDetalleFacturasxFiltroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarEncabezadoDetalleFacturasxFiltroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEncabezadoDetalleFacturasxFiltroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEncabezadoDetalleFacturasxFiltroOperationCompleted Is Nothing) Then
                Me.ConsultarEncabezadoDetalleFacturasxFiltroOperationCompleted = AddressOf Me.OnConsultarEncabezadoDetalleFacturasxFiltroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEncabezadoDetalleFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarEncabezadoDetalleFacturasxFiltroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEncabezadoDetalleFacturasxFiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEncabezadoDetalleFacturasxFiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEncabezadoDetalleFacturasxFiltroCompleted(Me, New ConsultarEncabezadoDetalleFacturasxFiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarEncabezadoDetalleItemFacturas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEncabezadoDetalleItemFacturas(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEncabezadoDetalleItemFacturas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEncabezadoDetalleItemFacturas(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEncabezadoDetalleItemFacturas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEncabezadoDetalleItemFacturas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEncabezadoDetalleItemFacturasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarEncabezadoDetalleItemFacturasAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEncabezadoDetalleItemFacturasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEncabezadoDetalleItemFacturasOperationCompleted Is Nothing) Then
                Me.ConsultarEncabezadoDetalleItemFacturasOperationCompleted = AddressOf Me.OnConsultarEncabezadoDetalleItemFacturasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEncabezadoDetalleItemFacturas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarEncabezadoDetalleItemFacturasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEncabezadoDetalleItemFacturasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEncabezadoDetalleItemFacturasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEncabezadoDetalleItemFacturasCompleted(Me, New ConsultarEncabezadoDetalleItemFacturasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarFacturasxFiltro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarFacturasxFiltro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarFacturasxFiltro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarFacturasxFiltro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarFacturasxFiltroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarFacturasxFiltroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarFacturasxFiltroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarFacturasxFiltroOperationCompleted Is Nothing) Then
                Me.ConsultarFacturasxFiltroOperationCompleted = AddressOf Me.OnConsultarFacturasxFiltroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarFacturasxFiltro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarFacturasxFiltroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarFacturasxFiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarFacturasxFiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarFacturasxFiltroCompleted(Me, New ConsultarFacturasxFiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarMovimientoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarMovimientoCaja(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarMovimientoCaja", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarMovimientoCaja(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarMovimientoCaja", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarMovimientoCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarMovimientoCajaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarMovimientoCajaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarMovimientoCajaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarMovimientoCajaOperationCompleted Is Nothing) Then
                Me.ConsultarMovimientoCajaOperationCompleted = AddressOf Me.OnConsultarMovimientoCajaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarMovimientoCaja", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarMovimientoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarMovimientoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarMovimientoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarMovimientoCajaCompleted(Me, New ConsultarMovimientoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ConsultarTiposDoc", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTiposDoc(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTiposDoc", New Object() {pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTiposDoc(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTiposDoc", New Object() {pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTiposDoc(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTiposDocAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTiposDocAsync(pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTiposDocAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTiposDocOperationCompleted Is Nothing) Then
                Me.ConsultarTiposDocOperationCompleted = AddressOf Me.OnConsultarTiposDocOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTiposDoc", New Object() {pUs, pPa, pSucursal}, Me.ConsultarTiposDocOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTiposDocOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTiposDocCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTiposDocCompleted(Me, New ConsultarTiposDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/CorrelativoReversionTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CorrelativoReversionTransferencia() As Long
            Dim results() As Object = Me.Invoke("CorrelativoReversionTransferencia", New Object(-1) {})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginCorrelativoReversionTransferencia(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CorrelativoReversionTransferencia", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCorrelativoReversionTransferencia(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CorrelativoReversionTransferenciaAsync()
            Me.CorrelativoReversionTransferenciaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CorrelativoReversionTransferenciaAsync(ByVal userState As Object)
            If (Me.CorrelativoReversionTransferenciaOperationCompleted Is Nothing) Then
                Me.CorrelativoReversionTransferenciaOperationCompleted = AddressOf Me.OnCorrelativoReversionTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("CorrelativoReversionTransferencia", New Object(-1) {}, Me.CorrelativoReversionTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorrelativoReversionTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CorrelativoReversionTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CorrelativoReversionTransferenciaCompleted(Me, New CorrelativoReversionTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/CorteMovCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CorteMovCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pEfectivo As Double, ByVal pValorCheque As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CorteMovCaja", New Object() {pFecha, pNoCaja, pEfectivo, pValorCheque, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCorteMovCaja(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pEfectivo As Double, ByVal pValorCheque As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CorteMovCaja", New Object() {pFecha, pNoCaja, pEfectivo, pValorCheque, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCorteMovCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CorteMovCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pEfectivo As Double, ByVal pValorCheque As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CorteMovCajaAsync(pFecha, pNoCaja, pEfectivo, pValorCheque, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CorteMovCajaAsync(ByVal pFecha As Date, ByVal pNoCaja As String, ByVal pEfectivo As Double, ByVal pValorCheque As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CorteMovCajaOperationCompleted Is Nothing) Then
                Me.CorteMovCajaOperationCompleted = AddressOf Me.OnCorteMovCajaOperationCompleted
            End If
            Me.InvokeAsync("CorteMovCaja", New Object() {pFecha, pNoCaja, pEfectivo, pValorCheque, pUsuario, pPassword, pSucursal}, Me.CorteMovCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorteMovCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CorteMovCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CorteMovCajaCompleted(Me, New CorteMovCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/DepositoRetiroAhorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DepositoRetiroAhorros(ByVal pCampos As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("DepositoRetiroAhorros", New Object() {pCampos, pNoCuenta, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginDepositoRetiroAhorros(ByVal pCampos As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DepositoRetiroAhorros", New Object() {pCampos, pNoCuenta, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDepositoRetiroAhorros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DepositoRetiroAhorrosAsync(ByVal pCampos As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.DepositoRetiroAhorrosAsync(pCampos, pNoCuenta, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DepositoRetiroAhorrosAsync(ByVal pCampos As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.DepositoRetiroAhorrosOperationCompleted Is Nothing) Then
                Me.DepositoRetiroAhorrosOperationCompleted = AddressOf Me.OnDepositoRetiroAhorrosOperationCompleted
            End If
            Me.InvokeAsync("DepositoRetiroAhorros", New Object() {pCampos, pNoCuenta, pUsuario, pPassword, pSucursal}, Me.DepositoRetiroAhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnDepositoRetiroAhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.DepositoRetiroAhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DepositoRetiroAhorrosCompleted(Me, New DepositoRetiroAhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/Detallado_Facturas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Detallado_Facturas(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Detallado_Facturas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginDetallado_Facturas(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Detallado_Facturas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDetallado_Facturas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Detallado_FacturasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Detallado_FacturasAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Detallado_FacturasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Detallado_FacturasOperationCompleted Is Nothing) Then
                Me.Detallado_FacturasOperationCompleted = AddressOf Me.OnDetallado_FacturasOperationCompleted
            End If
            Me.InvokeAsync("Detallado_Facturas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.Detallado_FacturasOperationCompleted, userState)
        End Sub
        
        Private Sub OnDetallado_FacturasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Detallado_FacturasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Detallado_FacturasCompleted(Me, New Detallado_FacturasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/DetalleApertura_Caja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DetalleApertura_Caja(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("DetalleApertura_Caja", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginDetalleApertura_Caja(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DetalleApertura_Caja", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDetalleApertura_Caja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DetalleApertura_CajaAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.DetalleApertura_CajaAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DetalleApertura_CajaAsync(ByVal pFechaIni As Date, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.DetalleApertura_CajaOperationCompleted Is Nothing) Then
                Me.DetalleApertura_CajaOperationCompleted = AddressOf Me.OnDetalleApertura_CajaOperationCompleted
            End If
            Me.InvokeAsync("DetalleApertura_Caja", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.DetalleApertura_CajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDetalleApertura_CajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DetalleApertura_CajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DetalleApertura_CajaCompleted(Me, New DetalleApertura_CajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/EliminarAperturaCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarAperturaCaja(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarAperturaCaja", New Object() {pCodCajero, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarAperturaCaja(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarAperturaCaja", New Object() {pCodCajero, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarAperturaCaja(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarAperturaCajaAsync(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarAperturaCajaAsync(pCodCajero, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarAperturaCajaAsync(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarAperturaCajaOperationCompleted Is Nothing) Then
                Me.EliminarAperturaCajaOperationCompleted = AddressOf Me.OnEliminarAperturaCajaOperationCompleted
            End If
            Me.InvokeAsync("EliminarAperturaCaja", New Object() {pCodCajero, pUsuario, pPassword, pSucursal}, Me.EliminarAperturaCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarAperturaCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarAperturaCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarAperturaCajaCompleted(Me, New EliminarAperturaCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/EliminarCAItemsFact", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCAItemsFact(ByVal pCodItem As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCAItemsFact", New Object() {pCodItem, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCAItemsFact(ByVal pCodItem As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCAItemsFact", New Object() {pCodItem, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCAItemsFact(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCAItemsFactAsync(ByVal pCodItem As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarCAItemsFactAsync(pCodItem, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCAItemsFactAsync(ByVal pCodItem As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCAItemsFactOperationCompleted Is Nothing) Then
                Me.EliminarCAItemsFactOperationCompleted = AddressOf Me.OnEliminarCAItemsFactOperationCompleted
            End If
            Me.InvokeAsync("EliminarCAItemsFact", New Object() {pCodItem, pUsuario, pPassword, pSucursal}, Me.EliminarCAItemsFactOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCAItemsFactOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCAItemsFactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCAItemsFactCompleted(Me, New EliminarCAItemsFactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/EliminarCajas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCajas(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCajas", New Object() {pCodCajero, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCajas(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCajas", New Object() {pCodCajero, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCajas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCajasAsync(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarCajasAsync(pCodCajero, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCajasAsync(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCajasOperationCompleted Is Nothing) Then
                Me.EliminarCajasOperationCompleted = AddressOf Me.OnEliminarCajasOperationCompleted
            End If
            Me.InvokeAsync("EliminarCajas", New Object() {pCodCajero, pUsuario, pPassword, pSucursal}, Me.EliminarCajasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCajasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCajasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCajasCompleted(Me, New EliminarCajasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/EliminarCajeros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCajeros(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCajeros", New Object() {pCodCajero, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCajeros(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCajeros", New Object() {pCodCajero, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCajeros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCajerosAsync(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarCajerosAsync(pCodCajero, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCajerosAsync(ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCajerosOperationCompleted Is Nothing) Then
                Me.EliminarCajerosOperationCompleted = AddressOf Me.OnEliminarCajerosOperationCompleted
            End If
            Me.InvokeAsync("EliminarCajeros", New Object() {pCodCajero, pUsuario, pPassword, pSucursal}, Me.EliminarCajerosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCajerosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCajerosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCajerosCompleted(Me, New EliminarCajerosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/EmisionFactura", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmisionFactura(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pConsumidorFinal As Boolean, ByVal pCredFiscal As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EmisionFactura", New Object() {pCampos, pIdMovimiento, pAnnio, pConsumidorFinal, pCredFiscal, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginEmisionFactura(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pConsumidorFinal As Boolean, ByVal pCredFiscal As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EmisionFactura", New Object() {pCampos, pIdMovimiento, pAnnio, pConsumidorFinal, pCredFiscal, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEmisionFactura(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmisionFacturaAsync(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pConsumidorFinal As Boolean, ByVal pCredFiscal As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EmisionFacturaAsync(pCampos, pIdMovimiento, pAnnio, pConsumidorFinal, pCredFiscal, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmisionFacturaAsync(ByVal pCampos As String, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pConsumidorFinal As Boolean, ByVal pCredFiscal As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EmisionFacturaOperationCompleted Is Nothing) Then
                Me.EmisionFacturaOperationCompleted = AddressOf Me.OnEmisionFacturaOperationCompleted
            End If
            Me.InvokeAsync("EmisionFactura", New Object() {pCampos, pIdMovimiento, pAnnio, pConsumidorFinal, pCredFiscal, pUsuario, pPassword, pSucursal}, Me.EmisionFacturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmisionFacturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmisionFacturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmisionFacturaCompleted(Me, New EmisionFacturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/FacturaConsolidada", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FacturaConsolidada(ByVal pFecha As Date, ByVal pNoFactura As String, ByVal pTipo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("FacturaConsolidada", New Object() {pFecha, pNoFactura, pTipo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginFacturaConsolidada(ByVal pFecha As Date, ByVal pNoFactura As String, ByVal pTipo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FacturaConsolidada", New Object() {pFecha, pNoFactura, pTipo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndFacturaConsolidada(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FacturaConsolidadaAsync(ByVal pFecha As Date, ByVal pNoFactura As String, ByVal pTipo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.FacturaConsolidadaAsync(pFecha, pNoFactura, pTipo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FacturaConsolidadaAsync(ByVal pFecha As Date, ByVal pNoFactura As String, ByVal pTipo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.FacturaConsolidadaOperationCompleted Is Nothing) Then
                Me.FacturaConsolidadaOperationCompleted = AddressOf Me.OnFacturaConsolidadaOperationCompleted
            End If
            Me.InvokeAsync("FacturaConsolidada", New Object() {pFecha, pNoFactura, pTipo, pUsuario, pPassword, pSucursal}, Me.FacturaConsolidadaOperationCompleted, userState)
        End Sub
        
        Private Sub OnFacturaConsolidadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.FacturaConsolidadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FacturaConsolidadaCompleted(Me, New FacturaConsolidadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/GuardarFactura", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GuardarFactura(ByVal pNumFactura As String, ByVal oFactura As System.Data.DataSet, ByVal pTipoMov As Integer, ByVal pCodTransaccion As String, ByVal pConsolidado As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("GuardarFactura", New Object() {pNumFactura, oFactura, pTipoMov, pCodTransaccion, pConsolidado, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGuardarFactura(ByVal pNumFactura As String, ByVal oFactura As System.Data.DataSet, ByVal pTipoMov As Integer, ByVal pCodTransaccion As String, ByVal pConsolidado As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GuardarFactura", New Object() {pNumFactura, oFactura, pTipoMov, pCodTransaccion, pConsolidado, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGuardarFactura(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GuardarFacturaAsync(ByVal pNumFactura As String, ByVal oFactura As System.Data.DataSet, ByVal pTipoMov As Integer, ByVal pCodTransaccion As String, ByVal pConsolidado As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.GuardarFacturaAsync(pNumFactura, oFactura, pTipoMov, pCodTransaccion, pConsolidado, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GuardarFacturaAsync(ByVal pNumFactura As String, ByVal oFactura As System.Data.DataSet, ByVal pTipoMov As Integer, ByVal pCodTransaccion As String, ByVal pConsolidado As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.GuardarFacturaOperationCompleted Is Nothing) Then
                Me.GuardarFacturaOperationCompleted = AddressOf Me.OnGuardarFacturaOperationCompleted
            End If
            Me.InvokeAsync("GuardarFactura", New Object() {pNumFactura, oFactura, pTipoMov, pCodTransaccion, pConsolidado, pUsuario, pPassword, pSucursal}, Me.GuardarFacturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGuardarFacturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GuardarFacturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GuardarFacturaCompleted(Me, New GuardarFacturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/InsertarAperturaCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarAperturaCaja(ByVal pCampos As String, ByVal pValores As String, ByVal pCamposMov As String, ByVal pValoresMov As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarAperturaCaja", New Object() {pCampos, pValores, pCamposMov, pValoresMov, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarAperturaCaja(ByVal pCampos As String, ByVal pValores As String, ByVal pCamposMov As String, ByVal pValoresMov As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarAperturaCaja", New Object() {pCampos, pValores, pCamposMov, pValoresMov, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarAperturaCaja(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarAperturaCajaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pCamposMov As String, ByVal pValoresMov As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarAperturaCajaAsync(pCampos, pValores, pCamposMov, pValoresMov, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarAperturaCajaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pCamposMov As String, ByVal pValoresMov As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarAperturaCajaOperationCompleted Is Nothing) Then
                Me.InsertarAperturaCajaOperationCompleted = AddressOf Me.OnInsertarAperturaCajaOperationCompleted
            End If
            Me.InvokeAsync("InsertarAperturaCaja", New Object() {pCampos, pValores, pCamposMov, pValoresMov, pUsuario, pPassword, pSucursal}, Me.InsertarAperturaCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarAperturaCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarAperturaCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarAperturaCajaCompleted(Me, New InsertarAperturaCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/InsertarCAItemsFact", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCAItemsFact(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCAItemsFact", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCAItemsFact(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCAItemsFact", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCAItemsFact(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCAItemsFactAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarCAItemsFactAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCAItemsFactAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCAItemsFactOperationCompleted Is Nothing) Then
                Me.InsertarCAItemsFactOperationCompleted = AddressOf Me.OnInsertarCAItemsFactOperationCompleted
            End If
            Me.InvokeAsync("InsertarCAItemsFact", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarCAItemsFactOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCAItemsFactOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCAItemsFactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCAItemsFactCompleted(Me, New InsertarCAItemsFactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/InsertarCajas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCajas(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCajas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCajas(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCajas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCajas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCajasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarCajasAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCajasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCajasOperationCompleted Is Nothing) Then
                Me.InsertarCajasOperationCompleted = AddressOf Me.OnInsertarCajasOperationCompleted
            End If
            Me.InvokeAsync("InsertarCajas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarCajasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCajasOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCajasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCajasCompleted(Me, New InsertarCajasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/InsertarCajeros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCajeros(ByVal Nombre As String, ByVal CodEmpleado As String, ByVal Usuario As String, ByVal FechaIngreso As Date, ByVal FechaFinalizacion As Date, ByVal Activo As String, ByVal CodSucursal As String, ByVal pClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCajeros", New Object() {Nombre, CodEmpleado, Usuario, FechaIngreso, FechaFinalizacion, Activo, CodSucursal, pClave, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCajeros(ByVal Nombre As String, ByVal CodEmpleado As String, ByVal Usuario As String, ByVal FechaIngreso As Date, ByVal FechaFinalizacion As Date, ByVal Activo As String, ByVal CodSucursal As String, ByVal pClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCajeros", New Object() {Nombre, CodEmpleado, Usuario, FechaIngreso, FechaFinalizacion, Activo, CodSucursal, pClave, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCajeros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCajerosAsync(ByVal Nombre As String, ByVal CodEmpleado As String, ByVal Usuario As String, ByVal FechaIngreso As Date, ByVal FechaFinalizacion As Date, ByVal Activo As String, ByVal CodSucursal As String, ByVal pClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarCajerosAsync(Nombre, CodEmpleado, Usuario, FechaIngreso, FechaFinalizacion, Activo, CodSucursal, pClave, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCajerosAsync(ByVal Nombre As String, ByVal CodEmpleado As String, ByVal Usuario As String, ByVal FechaIngreso As Date, ByVal FechaFinalizacion As Date, ByVal Activo As String, ByVal CodSucursal As String, ByVal pClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCajerosOperationCompleted Is Nothing) Then
                Me.InsertarCajerosOperationCompleted = AddressOf Me.OnInsertarCajerosOperationCompleted
            End If
            Me.InvokeAsync("InsertarCajeros", New Object() {Nombre, CodEmpleado, Usuario, FechaIngreso, FechaFinalizacion, Activo, CodSucursal, pClave, pUsuario, pPassword, pSucursal}, Me.InsertarCajerosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCajerosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCajerosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCajerosCompleted(Me, New InsertarCajerosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/InsertarCAParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCAParametros(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCAParametros", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCAParametros(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCAParametros", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCAParametros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCAParametrosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarCAParametrosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCAParametrosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCAParametrosOperationCompleted Is Nothing) Then
                Me.InsertarCAParametrosOperationCompleted = AddressOf Me.OnInsertarCAParametrosOperationCompleted
            End If
            Me.InvokeAsync("InsertarCAParametros", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarCAParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCAParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCAParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCAParametrosCompleted(Me, New InsertarCAParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/InsertarMovimientoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarMovimientoCaja(ByVal pCampos As String, ByVal pValores As String, ByVal pOrigen As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarMovimientoCaja", New Object() {pCampos, pValores, pOrigen, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarMovimientoCaja(ByVal pCampos As String, ByVal pValores As String, ByVal pOrigen As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarMovimientoCaja", New Object() {pCampos, pValores, pOrigen, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarMovimientoCaja(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarMovimientoCajaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pOrigen As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarMovimientoCajaAsync(pCampos, pValores, pOrigen, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarMovimientoCajaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pOrigen As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarMovimientoCajaOperationCompleted Is Nothing) Then
                Me.InsertarMovimientoCajaOperationCompleted = AddressOf Me.OnInsertarMovimientoCajaOperationCompleted
            End If
            Me.InvokeAsync("InsertarMovimientoCaja", New Object() {pCampos, pValores, pOrigen, pUs, pPa, pSucursal}, Me.InsertarMovimientoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarMovimientoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarMovimientoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarMovimientoCajaCompleted(Me, New InsertarMovimientoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ModificaFactura", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaFactura(ByVal pFiltro As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ModificaFactura", New Object() {pFiltro, pCamposyValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaFactura(ByVal pFiltro As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaFactura", New Object() {pFiltro, pCamposyValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaFactura(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaFacturaAsync(ByVal pFiltro As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaFacturaAsync(pFiltro, pCamposyValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaFacturaAsync(ByVal pFiltro As String, ByVal pCamposyValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaFacturaOperationCompleted Is Nothing) Then
                Me.ModificaFacturaOperationCompleted = AddressOf Me.OnModificaFacturaOperationCompleted
            End If
            Me.InvokeAsync("ModificaFactura", New Object() {pFiltro, pCamposyValores, pUsuario, pPassword, pSucursal}, Me.ModificaFacturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaFacturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaFacturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaFacturaCompleted(Me, New ModificaFacturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ModificarAperturaCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAperturaCaja(ByVal pCamposValores As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAperturaCaja", New Object() {pCamposValores, pCodCajero, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAperturaCaja(ByVal pCamposValores As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAperturaCaja", New Object() {pCamposValores, pCodCajero, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAperturaCaja(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAperturaCajaAsync(ByVal pCamposValores As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarAperturaCajaAsync(pCamposValores, pCodCajero, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAperturaCajaAsync(ByVal pCamposValores As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAperturaCajaOperationCompleted Is Nothing) Then
                Me.ModificarAperturaCajaOperationCompleted = AddressOf Me.OnModificarAperturaCajaOperationCompleted
            End If
            Me.InvokeAsync("ModificarAperturaCaja", New Object() {pCamposValores, pCodCajero, pUsuario, pPassword, pSucursal}, Me.ModificarAperturaCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAperturaCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAperturaCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAperturaCajaCompleted(Me, New ModificarAperturaCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ModificarCAItemsFact", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCAItemsFact(ByVal pCamposValores As String, ByVal pCodItem As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCAItemsFact", New Object() {pCamposValores, pCodItem, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCAItemsFact(ByVal pCamposValores As String, ByVal pCodItem As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCAItemsFact", New Object() {pCamposValores, pCodItem, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCAItemsFact(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCAItemsFactAsync(ByVal pCamposValores As String, ByVal pCodItem As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarCAItemsFactAsync(pCamposValores, pCodItem, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCAItemsFactAsync(ByVal pCamposValores As String, ByVal pCodItem As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCAItemsFactOperationCompleted Is Nothing) Then
                Me.ModificarCAItemsFactOperationCompleted = AddressOf Me.OnModificarCAItemsFactOperationCompleted
            End If
            Me.InvokeAsync("ModificarCAItemsFact", New Object() {pCamposValores, pCodItem, pUsuario, pPassword, pSucursal}, Me.ModificarCAItemsFactOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCAItemsFactOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCAItemsFactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCAItemsFactCompleted(Me, New ModificarCAItemsFactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ModificarCajas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCajas(ByVal pCamposValores As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCajas", New Object() {pCamposValores, pCodCajero, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCajas(ByVal pCamposValores As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCajas", New Object() {pCamposValores, pCodCajero, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCajas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCajasAsync(ByVal pCamposValores As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarCajasAsync(pCamposValores, pCodCajero, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCajasAsync(ByVal pCamposValores As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCajasOperationCompleted Is Nothing) Then
                Me.ModificarCajasOperationCompleted = AddressOf Me.OnModificarCajasOperationCompleted
            End If
            Me.InvokeAsync("ModificarCajas", New Object() {pCamposValores, pCodCajero, pUsuario, pPassword, pSucursal}, Me.ModificarCajasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCajasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCajasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCajasCompleted(Me, New ModificarCajasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ModificarCajeros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCajeros(ByVal Nombre As String, ByVal CodEmpleado As String, ByVal Usuario As String, ByVal FechaIngreso As Date, ByVal FechaFinalizacion As Date, ByVal Activo As String, ByVal CodSucursal As String, ByVal pClave As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCajeros", New Object() {Nombre, CodEmpleado, Usuario, FechaIngreso, FechaFinalizacion, Activo, CodSucursal, pClave, pCodCajero, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCajeros(ByVal Nombre As String, ByVal CodEmpleado As String, ByVal Usuario As String, ByVal FechaIngreso As Date, ByVal FechaFinalizacion As Date, ByVal Activo As String, ByVal CodSucursal As String, ByVal pClave As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCajeros", New Object() {Nombre, CodEmpleado, Usuario, FechaIngreso, FechaFinalizacion, Activo, CodSucursal, pClave, pCodCajero, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCajeros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCajerosAsync(ByVal Nombre As String, ByVal CodEmpleado As String, ByVal Usuario As String, ByVal FechaIngreso As Date, ByVal FechaFinalizacion As Date, ByVal Activo As String, ByVal CodSucursal As String, ByVal pClave As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarCajerosAsync(Nombre, CodEmpleado, Usuario, FechaIngreso, FechaFinalizacion, Activo, CodSucursal, pClave, pCodCajero, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCajerosAsync(ByVal Nombre As String, ByVal CodEmpleado As String, ByVal Usuario As String, ByVal FechaIngreso As Date, ByVal FechaFinalizacion As Date, ByVal Activo As String, ByVal CodSucursal As String, ByVal pClave As String, ByVal pCodCajero As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCajerosOperationCompleted Is Nothing) Then
                Me.ModificarCajerosOperationCompleted = AddressOf Me.OnModificarCajerosOperationCompleted
            End If
            Me.InvokeAsync("ModificarCajeros", New Object() {Nombre, CodEmpleado, Usuario, FechaIngreso, FechaFinalizacion, Activo, CodSucursal, pClave, pCodCajero, pUsuario, pPassword, pSucursal}, Me.ModificarCajerosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCajerosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCajerosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCajerosCompleted(Me, New ModificarCajerosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ModificarCAParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCAParametros(ByVal pCamposValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCAParametros", New Object() {pCamposValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCAParametros(ByVal pCamposValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCAParametros", New Object() {pCamposValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCAParametros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCAParametrosAsync(ByVal pCamposValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarCAParametrosAsync(pCamposValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCAParametrosAsync(ByVal pCamposValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCAParametrosOperationCompleted Is Nothing) Then
                Me.ModificarCAParametrosOperationCompleted = AddressOf Me.OnModificarCAParametrosOperationCompleted
            End If
            Me.InvokeAsync("ModificarCAParametros", New Object() {pCamposValores, pUsuario, pPassword, pSucursal}, Me.ModificarCAParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCAParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCAParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCAParametrosCompleted(Me, New ModificarCAParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ModificarClave", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarClave(ByVal filtro As String, ByVal pClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarClave", New Object() {filtro, pClave, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarClave(ByVal filtro As String, ByVal pClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarClave", New Object() {filtro, pClave, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarClave(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarClaveAsync(ByVal filtro As String, ByVal pClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarClaveAsync(filtro, pClave, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarClaveAsync(ByVal filtro As String, ByVal pClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarClaveOperationCompleted Is Nothing) Then
                Me.ModificarClaveOperationCompleted = AddressOf Me.OnModificarClaveOperationCompleted
            End If
            Me.InvokeAsync("ModificarClave", New Object() {filtro, pClave, pUsuario, pPassword, pSucursal}, Me.ModificarClaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarClaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarClaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarClaveCompleted(Me, New ModificarClaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ModificarMovimientoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarMovimientoCaja(ByVal pCampos As String, ByVal pCorrelativo As String, ByVal pOrigen As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarMovimientoCaja", New Object() {pCampos, pCorrelativo, pOrigen, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarMovimientoCaja(ByVal pCampos As String, ByVal pCorrelativo As String, ByVal pOrigen As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarMovimientoCaja", New Object() {pCampos, pCorrelativo, pOrigen, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarMovimientoCaja(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarMovimientoCajaAsync(ByVal pCampos As String, ByVal pCorrelativo As String, ByVal pOrigen As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarMovimientoCajaAsync(pCampos, pCorrelativo, pOrigen, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarMovimientoCajaAsync(ByVal pCampos As String, ByVal pCorrelativo As String, ByVal pOrigen As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarMovimientoCajaOperationCompleted Is Nothing) Then
                Me.ModificarMovimientoCajaOperationCompleted = AddressOf Me.OnModificarMovimientoCajaOperationCompleted
            End If
            Me.InvokeAsync("ModificarMovimientoCaja", New Object() {pCampos, pCorrelativo, pOrigen, pUs, pPa, pSucursal}, Me.ModificarMovimientoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarMovimientoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarMovimientoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarMovimientoCajaCompleted(Me, New ModificarMovimientoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/Movimientos_de_Caja", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Movimientos_de_Caja(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTodas As Boolean, ByVal pNoCaja As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Movimientos_de_Caja", New Object() {pFechaIni, pFechaFin, pTodas, pNoCaja, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginMovimientos_de_Caja(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTodas As Boolean, ByVal pNoCaja As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Movimientos_de_Caja", New Object() {pFechaIni, pFechaFin, pTodas, pNoCaja, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMovimientos_de_Caja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Movimientos_de_CajaAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTodas As Boolean, ByVal pNoCaja As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Movimientos_de_CajaAsync(pFechaIni, pFechaFin, pTodas, pNoCaja, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Movimientos_de_CajaAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTodas As Boolean, ByVal pNoCaja As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Movimientos_de_CajaOperationCompleted Is Nothing) Then
                Me.Movimientos_de_CajaOperationCompleted = AddressOf Me.OnMovimientos_de_CajaOperationCompleted
            End If
            Me.InvokeAsync("Movimientos_de_Caja", New Object() {pFechaIni, pFechaFin, pTodas, pNoCaja, pUs, pPa, pSucursal}, Me.Movimientos_de_CajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnMovimientos_de_CajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Movimientos_de_CajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Movimientos_de_CajaCompleted(Me, New Movimientos_de_CajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/NotaCargo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NotaCargo(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("NotaCargo", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginNotaCargo(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NotaCargo", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNotaCargo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NotaCargoAsync(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.NotaCargoAsync(pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NotaCargoAsync(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.NotaCargoOperationCompleted Is Nothing) Then
                Me.NotaCargoOperationCompleted = AddressOf Me.OnNotaCargoOperationCompleted
            End If
            Me.InvokeAsync("NotaCargo", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal}, Me.NotaCargoOperationCompleted, userState)
        End Sub
        
        Private Sub OnNotaCargoOperationCompleted(ByVal arg As Object)
            If (Not (Me.NotaCargoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NotaCargoCompleted(Me, New NotaCargoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/NotaCargoContable", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NotaCargoContable(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("NotaCargoContable", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginNotaCargoContable(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NotaCargoContable", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNotaCargoContable(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NotaCargoContableAsync(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.NotaCargoContableAsync(pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NotaCargoContableAsync(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.NotaCargoContableOperationCompleted Is Nothing) Then
                Me.NotaCargoContableOperationCompleted = AddressOf Me.OnNotaCargoContableOperationCompleted
            End If
            Me.InvokeAsync("NotaCargoContable", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal}, Me.NotaCargoContableOperationCompleted, userState)
        End Sub
        
        Private Sub OnNotaCargoContableOperationCompleted(ByVal arg As Object)
            If (Not (Me.NotaCargoContableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NotaCargoContableCompleted(Me, New NotaCargoContableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/NotaCargoPrestamo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NotaCargoPrestamo(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("NotaCargoPrestamo", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginNotaCargoPrestamo(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NotaCargoPrestamo", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNotaCargoPrestamo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NotaCargoPrestamoAsync(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.NotaCargoPrestamoAsync(pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NotaCargoPrestamoAsync(ByVal pCodTransferencia As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.NotaCargoPrestamoOperationCompleted Is Nothing) Then
                Me.NotaCargoPrestamoOperationCompleted = AddressOf Me.OnNotaCargoPrestamoOperationCompleted
            End If
            Me.InvokeAsync("NotaCargoPrestamo", New Object() {pCodTransferencia, pFecha, pUsuario, pPassword, pSucursal}, Me.NotaCargoPrestamoOperationCompleted, userState)
        End Sub
        
        Private Sub OnNotaCargoPrestamoOperationCompleted(ByVal arg As Object)
            If (Not (Me.NotaCargoPrestamoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NotaCargoPrestamoCompleted(Me, New NotaCargoPrestamoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerCorrelativoxMovimiento", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoxMovimiento(ByVal pTabla As String, ByVal pTipo As String, ByVal pAnio As Integer, ByVal pCampo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoxMovimiento", New Object() {pTabla, pTipo, pAnio, pCampo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoxMovimiento(ByVal pTabla As String, ByVal pTipo As String, ByVal pAnio As Integer, ByVal pCampo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoxMovimiento", New Object() {pTabla, pTipo, pAnio, pCampo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoxMovimiento(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoxMovimientoAsync(ByVal pTabla As String, ByVal pTipo As String, ByVal pAnio As Integer, ByVal pCampo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoxMovimientoAsync(pTabla, pTipo, pAnio, pCampo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoxMovimientoAsync(ByVal pTabla As String, ByVal pTipo As String, ByVal pAnio As Integer, ByVal pCampo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoxMovimientoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoxMovimientoOperationCompleted = AddressOf Me.OnObtenerCorrelativoxMovimientoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoxMovimiento", New Object() {pTabla, pTipo, pAnio, pCampo, pUsuario, pPassword, pSucursal}, Me.ObtenerCorrelativoxMovimientoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoxMovimientoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoxMovimientoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoxMovimientoCompleted(Me, New ObtenerCorrelativoxMovimientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCaja/ObtenerFactura", RequestNamespace:="http://tempuri.org/wsSif/wsLibCaja", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCaja", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerFactura(ByVal pNumFactura As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerFactura", New Object() {pNumFactura, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerFactura(ByVal pNumFactura As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerFactura", New Object() {pNumFactura, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerFactura(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerFacturaAsync(ByVal pNumFactura As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerFacturaAsync(pNumFactura, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerFacturaAsync(ByVal pNumFactura As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerFacturaOperationCompleted Is Nothing) Then
                Me.ObtenerFacturaOperationCompleted = AddressOf Me.OnObtenerFacturaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerFactura", New Object() {pNumFactura, pUsuario, pPassword, pSucursal}, Me.ObtenerFacturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerFacturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerFacturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerFacturaCompleted(Me, New ObtenerFacturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerFacturaVaciaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerFacturaVaciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerFacturaVaciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerItemCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerItemxRubroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerItemxRubroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerItemxRubroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerListaFacturasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerListaFacturasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerListaFacturasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerListaItemsCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerListaItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerListaItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerListaRubrosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerListaRubrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerListaRubrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerMensajeCajasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerMensajeCajasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerMensajeCajasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerNumItemCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerNumItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerNumItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RedondearCompletedEventHandler(ByVal sender As Object, ByVal e As RedondearCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RedondearCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteCorteCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteCorteCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteCorteCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteCorteMovCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteCorteMovCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteCorteMovCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteResumenMovCajaxDocCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteResumenMovCajaxDocCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteResumenMovCajaxDocCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteResumenMovCajaxTransacCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteResumenMovCajaxTransacCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteResumenMovCajaxTransacCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepReversionesDiariasCompletedEventHandler(ByVal sender As Object, ByVal e As RepReversionesDiariasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepReversionesDiariasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepTransferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As RepTransferenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepTransferenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepTransferenciasConsolidadaCompletedEventHandler(ByVal sender As Object, ByVal e As RepTransferenciasConsolidadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepTransferenciasConsolidadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReversionTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ReversionTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReversionTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaCajeroCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaCajeroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaCajeroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaCorrelativoCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaCorrelativoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaCorrelativoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GuardarChequesBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCajeroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCajeroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCajeroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerChequesBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerChequesBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerChequesBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerChequesARemesarCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerChequesARemesarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerChequesARemesarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ActualizarChequesRemesarCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AnularChequesBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerListaItesmRubrosDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerListaItesmRubrosDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerListaItesmRubrosDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub reversionMovimientosCajaCompletedEventHandler(ByVal sender As Object, ByVal e As reversionMovimientosCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class reversionMovimientosCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub eliminarCaRubroCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarCaRubroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarCaRubroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarCaRubroCompletedEventHandler(ByVal sender As Object, ByVal e As modificarCaRubroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarCaRubroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarCaRubroCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCaRubroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCaRubroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub generarReciboDivEfectivoCompletedEventHandler(ByVal sender As Object, ByVal e As generarReciboDivEfectivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class generarReciboDivEfectivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarTransaccionesChequeCompletedEventHandler(ByVal sender As Object, ByVal e As consultarTransaccionesChequeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarTransaccionesChequeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AperturaCajaCompletedEventHandler(ByVal sender As Object, ByVal e As AperturaCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AperturaCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCaMovimientosCajaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCaMovimientosCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCaMovimientosCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCaTipoMovCajaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCaTipoMovCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCaTipoMovCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarCaTipoMovCajaCompletedEventHandler(ByVal sender As Object, ByVal e As modificarCaTipoMovCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarCaTipoMovCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub eliminarCaTipoMovCajaCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarCaTipoMovCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarCaTipoMovCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarCaTipoMovCajaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCaTipoMovCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCaTipoMovCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarCaCorrelativoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCaCorrelativoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCaCorrelativoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub eliminarCaCorrelativoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarCaCorrelativoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarCaCorrelativoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub incrementarCorrelativo_CaCorrelativoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As incrementarCorrelativo_CaCorrelativoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class incrementarCorrelativo_CaCorrelativoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarCaCorrelativoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As modificarCaCorrelativoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarCaCorrelativoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarCaCorrelativoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCaCorrelativoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCaCorrelativoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarCaMaestrosTipoDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCaMaestrosTipoDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCaMaestrosTipoDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub desactivarCaMaestroTipoDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As desactivarCaMaestroTipoDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class desactivarCaMaestroTipoDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarCaMaestroTipoDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As modificarCaMaestroTipoDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarCaMaestroTipoDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarCaMaestroTipoDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCaMaestroTipoDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCaMaestroTipoDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ComprobanteTransferenciasDesembolsoCompletedEventHandler(ByVal sender As Object, ByVal e As ComprobanteTransferenciasDesembolsoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ComprobanteTransferenciasDesembolsoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AnularFacturaCompletedEventHandler(ByVal sender As Object, ByVal e As AnularFacturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AnularFacturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ArqueoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ArqueoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArqueoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ArqueoCierreCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ArqueoCierreCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArqueoCierreCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Cheques_CajaCompletedEventHandler(ByVal sender As Object, ByVal e As Cheques_CajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Cheques_CajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ChequexMovCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ChequexMovCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChequexMovCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CierreCajaCompletedEventHandler(ByVal sender As Object, ByVal e As CierreCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CierreCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAperturaCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAperturaCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAperturaCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCAItemsFactCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCAItemsFactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCAItemsFactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCajasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCajasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCajasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCajerosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCajerosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCajerosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCajerosPsCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCajerosPsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCajerosPsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCAParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCAParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCAParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDatosAhorroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDatosAhorroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDatosAhorroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDatosFacturaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDatosFacturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDatosFacturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDatosPrestamoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDatosPrestamoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDatosPrestamoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDescripcionMovimientosAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDescripcionMovimientosAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDescripcionMovimientosAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDetFacturasxFiltroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDetFacturasxFiltroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDetFacturasxFiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEncabezadoDetalleFacturasxFiltroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEncabezadoDetalleFacturasxFiltroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEncabezadoDetalleFacturasxFiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEncabezadoDetalleItemFacturasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEncabezadoDetalleItemFacturasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEncabezadoDetalleItemFacturasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarFacturasxFiltroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarFacturasxFiltroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarFacturasxFiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarMovimientoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarMovimientoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarMovimientoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarTiposDocCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTiposDocCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTiposDocCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CorrelativoReversionTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As CorrelativoReversionTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CorrelativoReversionTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CorteMovCajaCompletedEventHandler(ByVal sender As Object, ByVal e As CorteMovCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CorteMovCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DepositoRetiroAhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As DepositoRetiroAhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DepositoRetiroAhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Detallado_FacturasCompletedEventHandler(ByVal sender As Object, ByVal e As Detallado_FacturasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Detallado_FacturasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub DetalleApertura_CajaCompletedEventHandler(ByVal sender As Object, ByVal e As DetalleApertura_CajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DetalleApertura_CajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarAperturaCajaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarAperturaCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarAperturaCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCAItemsFactCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCAItemsFactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCAItemsFactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCajasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCajasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCajasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCajerosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCajerosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCajerosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EmisionFacturaCompletedEventHandler(ByVal sender As Object, ByVal e As EmisionFacturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmisionFacturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub FacturaConsolidadaCompletedEventHandler(ByVal sender As Object, ByVal e As FacturaConsolidadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FacturaConsolidadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GuardarFacturaCompletedEventHandler(ByVal sender As Object, ByVal e As GuardarFacturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GuardarFacturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarAperturaCajaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarAperturaCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarAperturaCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCAItemsFactCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCAItemsFactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCAItemsFactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCajasCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCajasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCajasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCajerosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCajerosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCajerosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCAParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCAParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCAParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarMovimientoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarMovimientoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarMovimientoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaFacturaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaFacturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaFacturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarAperturaCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAperturaCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAperturaCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCAItemsFactCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCAItemsFactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCAItemsFactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCajasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCajasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCajasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCajerosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCajerosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCajerosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCAParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCAParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCAParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarClaveCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarClaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarClaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarMovimientoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarMovimientoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarMovimientoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Movimientos_de_CajaCompletedEventHandler(ByVal sender As Object, ByVal e As Movimientos_de_CajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Movimientos_de_CajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub NotaCargoCompletedEventHandler(ByVal sender As Object, ByVal e As NotaCargoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NotaCargoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub NotaCargoContableCompletedEventHandler(ByVal sender As Object, ByVal e As NotaCargoContableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NotaCargoContableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub NotaCargoPrestamoCompletedEventHandler(ByVal sender As Object, ByVal e As NotaCargoPrestamoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NotaCargoPrestamoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoxMovimientoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoxMovimientoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoxMovimientoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerFacturaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerFacturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerFacturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
