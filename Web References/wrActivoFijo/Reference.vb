'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrActivoFijo
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibActivoFijoSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibActivoFijo")>  _
    Partial Public Class wsLibActivoFijo
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private AdicionActivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdicionAgrupacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdicionClasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdicionDepartamentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdicionMarcasProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdicionProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdicionSubClasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdicionSubDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdicionTipoDescargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraActivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraAgrupacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraClasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraMarcasProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraSubclasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraSubDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BorraTipoDescargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CalculoDepreciacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaActivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaAgrupacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaClasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaMarcasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaMarcasProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaSubClasifOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaSubClasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaSubDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaSubDeptoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaTipoDescargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDepreciacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaActivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaAgrupacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaClasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaMarcasProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaSubClasificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaSubDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaTipoDescargaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_ActivoFijoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_ActivoFijoGlobalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_ActivoFijoValorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_ActivoFijoxAgrupacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_DetalleActivoFijoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrActivoFijo_wsLibActivoFijo
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AdicionActivosCompleted As AdicionActivosCompletedEventHandler
        
        '''<remarks/>
        Public Event AdicionAgrupacionesCompleted As AdicionAgrupacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event AdicionClasificacionCompleted As AdicionClasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event AdicionDepartamentoCompleted As AdicionDepartamentoCompletedEventHandler
        
        '''<remarks/>
        Public Event AdicionMarcasProveedoresCompleted As AdicionMarcasProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event AdicionProveedoresCompleted As AdicionProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event AdicionSubClasificacionCompleted As AdicionSubClasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event AdicionSubDepartamentosCompleted As AdicionSubDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event AdicionTipoDescargaCompleted As AdicionTipoDescargaCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraActivosCompleted As BorraActivosCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraAgrupacionesCompleted As BorraAgrupacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraClasificacionCompleted As BorraClasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraDepartamentosCompleted As BorraDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraMarcasProveedoresCompleted As BorraMarcasProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraProveedoresCompleted As BorraProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraSubclasificacionCompleted As BorraSubclasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraSubDepartamentosCompleted As BorraSubDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event BorraTipoDescargaCompleted As BorraTipoDescargaCompletedEventHandler
        
        '''<remarks/>
        Public Event CalculoDepreciacionCompleted As CalculoDepreciacionCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaActivosCompleted As CargaActivosCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaAgrupacionesCompleted As CargaAgrupacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaClasificacionCompleted As CargaClasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaDepartamentosCompleted As CargaDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaMarcasCompleted As CargaMarcasCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaMarcasProveedoresCompleted As CargaMarcasProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaProveedoresCompleted As CargaProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaSubClasifCompleted As CargaSubClasifCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaSubClasificacionCompleted As CargaSubClasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaSubDepartamentosCompleted As CargaSubDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaSubDeptoCompleted As CargaSubDeptoCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaTipoDescargaCompleted As CargaTipoDescargaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDepreciacionCompleted As ConsultaDepreciacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaActivosCompleted As ModificaActivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaAgrupacionesCompleted As ModificaAgrupacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaClasificacionCompleted As ModificaClasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaDepartamentosCompleted As ModificaDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaMarcasProveedoresCompleted As ModificaMarcasProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaProveedoresCompleted As ModificaProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaSubClasificacionCompleted As ModificaSubClasificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaSubDepartamentosCompleted As ModificaSubDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaTipoDescargaCompleted As ModificaTipoDescargaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoCompleted As ObtenerCorrelativoCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_ActivoFijoCompleted As Reporte_ActivoFijoCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_ActivoFijoGlobalCompleted As Reporte_ActivoFijoGlobalCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_ActivoFijoValorCompleted As Reporte_ActivoFijoValorCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_ActivoFijoxAgrupacionCompleted As Reporte_ActivoFijoxAgrupacionCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_DetalleActivoFijoCompleted As Reporte_DetalleActivoFijoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionActivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionActivos( _
                    ByVal sCod_Prod As String,  _
                    ByVal sIdProv As String,  _
                    ByVal sDescripcion As String,  _
                    ByVal nCantidad As Integer,  _
                    ByVal dFec_Compra As String,  _
                    ByVal nValor_Original As Double,  _
                    ByVal nVal_Depreciado As Double,  _
                    ByVal nValor_Acumulado As Double,  _
                    ByVal nValor_Residual As Double,  _
                    ByVal nValor_Libro As Double,  _
                    ByVal nVida_Util As Integer,  _
                    ByVal sCod_Barra As String,  _
                    ByVal sNum_Serie As String,  _
                    ByVal sModelo As String,  _
                    ByVal sIdCtaCargo As String,  _
                    ByVal sIdCtaAbono As String,  _
                    ByVal sIdClasif As String,  _
                    ByVal sIdSubClasif As String,  _
                    ByVal sIdDepto As String,  _
                    ByVal sIdSubDepto As String,  _
                    ByVal sIdEmpl As String,  _
                    ByVal sIdCodMarca As String,  _
                    ByVal sColor As String,  _
                    ByVal sNume_Fact As String,  _
                    ByVal nTipo_Compra As Integer,  _
                    ByVal nNume_Cuota As Integer,  _
                    ByVal nValor_Prima As Double,  _
                    ByVal nValor_Cuota_Mes As Double,  _
                    ByVal nDia_Pago As Integer,  _
                    ByVal sIdAgrupacion As String,  _
                    ByVal sIdTipoDesc As String,  _
                    ByVal nEstado As Integer,  _
                    ByVal sObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionActivos", New Object() {sCod_Prod, sIdProv, sDescripcion, nCantidad, dFec_Compra, nValor_Original, nVal_Depreciado, nValor_Acumulado, nValor_Residual, nValor_Libro, nVida_Util, sCod_Barra, sNum_Serie, sModelo, sIdCtaCargo, sIdCtaAbono, sIdClasif, sIdSubClasif, sIdDepto, sIdSubDepto, sIdEmpl, sIdCodMarca, sColor, sNume_Fact, nTipo_Compra, nNume_Cuota, nValor_Prima, nValor_Cuota_Mes, nDia_Pago, sIdAgrupacion, sIdTipoDesc, nEstado, sObs, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionActivos( _
                    ByVal sCod_Prod As String,  _
                    ByVal sIdProv As String,  _
                    ByVal sDescripcion As String,  _
                    ByVal nCantidad As Integer,  _
                    ByVal dFec_Compra As String,  _
                    ByVal nValor_Original As Double,  _
                    ByVal nVal_Depreciado As Double,  _
                    ByVal nValor_Acumulado As Double,  _
                    ByVal nValor_Residual As Double,  _
                    ByVal nValor_Libro As Double,  _
                    ByVal nVida_Util As Integer,  _
                    ByVal sCod_Barra As String,  _
                    ByVal sNum_Serie As String,  _
                    ByVal sModelo As String,  _
                    ByVal sIdCtaCargo As String,  _
                    ByVal sIdCtaAbono As String,  _
                    ByVal sIdClasif As String,  _
                    ByVal sIdSubClasif As String,  _
                    ByVal sIdDepto As String,  _
                    ByVal sIdSubDepto As String,  _
                    ByVal sIdEmpl As String,  _
                    ByVal sIdCodMarca As String,  _
                    ByVal sColor As String,  _
                    ByVal sNume_Fact As String,  _
                    ByVal nTipo_Compra As Integer,  _
                    ByVal nNume_Cuota As Integer,  _
                    ByVal nValor_Prima As Double,  _
                    ByVal nValor_Cuota_Mes As Double,  _
                    ByVal nDia_Pago As Integer,  _
                    ByVal sIdAgrupacion As String,  _
                    ByVal sIdTipoDesc As String,  _
                    ByVal nEstado As Integer,  _
                    ByVal sObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionActivos", New Object() {sCod_Prod, sIdProv, sDescripcion, nCantidad, dFec_Compra, nValor_Original, nVal_Depreciado, nValor_Acumulado, nValor_Residual, nValor_Libro, nVida_Util, sCod_Barra, sNum_Serie, sModelo, sIdCtaCargo, sIdCtaAbono, sIdClasif, sIdSubClasif, sIdDepto, sIdSubDepto, sIdEmpl, sIdCodMarca, sColor, sNume_Fact, nTipo_Compra, nNume_Cuota, nValor_Prima, nValor_Cuota_Mes, nDia_Pago, sIdAgrupacion, sIdTipoDesc, nEstado, sObs, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionActivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionActivosAsync( _
                    ByVal sCod_Prod As String,  _
                    ByVal sIdProv As String,  _
                    ByVal sDescripcion As String,  _
                    ByVal nCantidad As Integer,  _
                    ByVal dFec_Compra As String,  _
                    ByVal nValor_Original As Double,  _
                    ByVal nVal_Depreciado As Double,  _
                    ByVal nValor_Acumulado As Double,  _
                    ByVal nValor_Residual As Double,  _
                    ByVal nValor_Libro As Double,  _
                    ByVal nVida_Util As Integer,  _
                    ByVal sCod_Barra As String,  _
                    ByVal sNum_Serie As String,  _
                    ByVal sModelo As String,  _
                    ByVal sIdCtaCargo As String,  _
                    ByVal sIdCtaAbono As String,  _
                    ByVal sIdClasif As String,  _
                    ByVal sIdSubClasif As String,  _
                    ByVal sIdDepto As String,  _
                    ByVal sIdSubDepto As String,  _
                    ByVal sIdEmpl As String,  _
                    ByVal sIdCodMarca As String,  _
                    ByVal sColor As String,  _
                    ByVal sNume_Fact As String,  _
                    ByVal nTipo_Compra As Integer,  _
                    ByVal nNume_Cuota As Integer,  _
                    ByVal nValor_Prima As Double,  _
                    ByVal nValor_Cuota_Mes As Double,  _
                    ByVal nDia_Pago As Integer,  _
                    ByVal sIdAgrupacion As String,  _
                    ByVal sIdTipoDesc As String,  _
                    ByVal nEstado As Integer,  _
                    ByVal sObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String)
            Me.AdicionActivosAsync(sCod_Prod, sIdProv, sDescripcion, nCantidad, dFec_Compra, nValor_Original, nVal_Depreciado, nValor_Acumulado, nValor_Residual, nValor_Libro, nVida_Util, sCod_Barra, sNum_Serie, sModelo, sIdCtaCargo, sIdCtaAbono, sIdClasif, sIdSubClasif, sIdDepto, sIdSubDepto, sIdEmpl, sIdCodMarca, sColor, sNume_Fact, nTipo_Compra, nNume_Cuota, nValor_Prima, nValor_Cuota_Mes, nDia_Pago, sIdAgrupacion, sIdTipoDesc, nEstado, sObs, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionActivosAsync( _
                    ByVal sCod_Prod As String,  _
                    ByVal sIdProv As String,  _
                    ByVal sDescripcion As String,  _
                    ByVal nCantidad As Integer,  _
                    ByVal dFec_Compra As String,  _
                    ByVal nValor_Original As Double,  _
                    ByVal nVal_Depreciado As Double,  _
                    ByVal nValor_Acumulado As Double,  _
                    ByVal nValor_Residual As Double,  _
                    ByVal nValor_Libro As Double,  _
                    ByVal nVida_Util As Integer,  _
                    ByVal sCod_Barra As String,  _
                    ByVal sNum_Serie As String,  _
                    ByVal sModelo As String,  _
                    ByVal sIdCtaCargo As String,  _
                    ByVal sIdCtaAbono As String,  _
                    ByVal sIdClasif As String,  _
                    ByVal sIdSubClasif As String,  _
                    ByVal sIdDepto As String,  _
                    ByVal sIdSubDepto As String,  _
                    ByVal sIdEmpl As String,  _
                    ByVal sIdCodMarca As String,  _
                    ByVal sColor As String,  _
                    ByVal sNume_Fact As String,  _
                    ByVal nTipo_Compra As Integer,  _
                    ByVal nNume_Cuota As Integer,  _
                    ByVal nValor_Prima As Double,  _
                    ByVal nValor_Cuota_Mes As Double,  _
                    ByVal nDia_Pago As Integer,  _
                    ByVal sIdAgrupacion As String,  _
                    ByVal sIdTipoDesc As String,  _
                    ByVal nEstado As Integer,  _
                    ByVal sObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal userState As Object)
            If (Me.AdicionActivosOperationCompleted Is Nothing) Then
                Me.AdicionActivosOperationCompleted = AddressOf Me.OnAdicionActivosOperationCompleted
            End If
            Me.InvokeAsync("AdicionActivos", New Object() {sCod_Prod, sIdProv, sDescripcion, nCantidad, dFec_Compra, nValor_Original, nVal_Depreciado, nValor_Acumulado, nValor_Residual, nValor_Libro, nVida_Util, sCod_Barra, sNum_Serie, sModelo, sIdCtaCargo, sIdCtaAbono, sIdClasif, sIdSubClasif, sIdDepto, sIdSubDepto, sIdEmpl, sIdCodMarca, sColor, sNume_Fact, nTipo_Compra, nNume_Cuota, nValor_Prima, nValor_Cuota_Mes, nDia_Pago, sIdAgrupacion, sIdTipoDesc, nEstado, sObs, pUsuario, pPassword, pSucursal}, Me.AdicionActivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionActivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionActivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionActivosCompleted(Me, New AdicionActivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionAgrupaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionAgrupaciones(ByVal sIdAgrupacion As String, ByVal sDescripcion As String, ByVal sIdClas As String, ByVal sIdSubClas As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionAgrupaciones", New Object() {sIdAgrupacion, sDescripcion, sIdClas, sIdSubClas, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionAgrupaciones(ByVal sIdAgrupacion As String, ByVal sDescripcion As String, ByVal sIdClas As String, ByVal sIdSubClas As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionAgrupaciones", New Object() {sIdAgrupacion, sDescripcion, sIdClas, sIdSubClas, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionAgrupaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionAgrupacionesAsync(ByVal sIdAgrupacion As String, ByVal sDescripcion As String, ByVal sIdClas As String, ByVal sIdSubClas As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AdicionAgrupacionesAsync(sIdAgrupacion, sDescripcion, sIdClas, sIdSubClas, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionAgrupacionesAsync(ByVal sIdAgrupacion As String, ByVal sDescripcion As String, ByVal sIdClas As String, ByVal sIdSubClas As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AdicionAgrupacionesOperationCompleted Is Nothing) Then
                Me.AdicionAgrupacionesOperationCompleted = AddressOf Me.OnAdicionAgrupacionesOperationCompleted
            End If
            Me.InvokeAsync("AdicionAgrupaciones", New Object() {sIdAgrupacion, sDescripcion, sIdClas, sIdSubClas, pUsuario, pPassword, pSucursal}, Me.AdicionAgrupacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionAgrupacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionAgrupacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionAgrupacionesCompleted(Me, New AdicionAgrupacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionClasificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionClasificacion(ByVal sIdClasif As String, ByVal sDescClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionClasificacion", New Object() {sIdClasif, sDescClasif, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionClasificacion(ByVal sIdClasif As String, ByVal sDescClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionClasificacion", New Object() {sIdClasif, sDescClasif, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionClasificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionClasificacionAsync(ByVal sIdClasif As String, ByVal sDescClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AdicionClasificacionAsync(sIdClasif, sDescClasif, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionClasificacionAsync(ByVal sIdClasif As String, ByVal sDescClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AdicionClasificacionOperationCompleted Is Nothing) Then
                Me.AdicionClasificacionOperationCompleted = AddressOf Me.OnAdicionClasificacionOperationCompleted
            End If
            Me.InvokeAsync("AdicionClasificacion", New Object() {sIdClasif, sDescClasif, pUsuario, pPassword, pSucursal}, Me.AdicionClasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionClasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionClasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionClasificacionCompleted(Me, New AdicionClasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionDepartamento", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionDepartamento(ByVal sIdDepto As String, ByVal sDescDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionDepartamento", New Object() {sIdDepto, sDescDepto, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionDepartamento(ByVal sIdDepto As String, ByVal sDescDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionDepartamento", New Object() {sIdDepto, sDescDepto, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionDepartamento(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionDepartamentoAsync(ByVal sIdDepto As String, ByVal sDescDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AdicionDepartamentoAsync(sIdDepto, sDescDepto, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionDepartamentoAsync(ByVal sIdDepto As String, ByVal sDescDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AdicionDepartamentoOperationCompleted Is Nothing) Then
                Me.AdicionDepartamentoOperationCompleted = AddressOf Me.OnAdicionDepartamentoOperationCompleted
            End If
            Me.InvokeAsync("AdicionDepartamento", New Object() {sIdDepto, sDescDepto, pUsuario, pPassword, pSucursal}, Me.AdicionDepartamentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionDepartamentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionDepartamentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionDepartamentoCompleted(Me, New AdicionDepartamentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionMarcasProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionMarcasProveedores(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal sDesc_Marca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionMarcasProveedores", New Object() {sIdProv, sIdCodMarca, sDesc_Marca, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionMarcasProveedores(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal sDesc_Marca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionMarcasProveedores", New Object() {sIdProv, sIdCodMarca, sDesc_Marca, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionMarcasProveedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionMarcasProveedoresAsync(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal sDesc_Marca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AdicionMarcasProveedoresAsync(sIdProv, sIdCodMarca, sDesc_Marca, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionMarcasProveedoresAsync(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal sDesc_Marca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AdicionMarcasProveedoresOperationCompleted Is Nothing) Then
                Me.AdicionMarcasProveedoresOperationCompleted = AddressOf Me.OnAdicionMarcasProveedoresOperationCompleted
            End If
            Me.InvokeAsync("AdicionMarcasProveedores", New Object() {sIdProv, sIdCodMarca, sDesc_Marca, pUsuario, pPassword, pSucursal}, Me.AdicionMarcasProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionMarcasProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionMarcasProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionMarcasProveedoresCompleted(Me, New AdicionMarcasProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionProveedores(ByVal sIdProv As String, ByVal sNomb_Come As String, ByVal sNomb_Social As String, ByVal sGiro_Prov As String, ByVal sDire_Prov As String, ByVal sTelefono1 As String, ByVal sTelefono2 As String, ByVal sNume_Fax As String, ByVal sEmail As String, ByVal sNit As String, ByVal sRegistro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionProveedores", New Object() {sIdProv, sNomb_Come, sNomb_Social, sGiro_Prov, sDire_Prov, sTelefono1, sTelefono2, sNume_Fax, sEmail, sNit, sRegistro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionProveedores( _
                    ByVal sIdProv As String,  _
                    ByVal sNomb_Come As String,  _
                    ByVal sNomb_Social As String,  _
                    ByVal sGiro_Prov As String,  _
                    ByVal sDire_Prov As String,  _
                    ByVal sTelefono1 As String,  _
                    ByVal sTelefono2 As String,  _
                    ByVal sNume_Fax As String,  _
                    ByVal sEmail As String,  _
                    ByVal sNit As String,  _
                    ByVal sRegistro As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionProveedores", New Object() {sIdProv, sNomb_Come, sNomb_Social, sGiro_Prov, sDire_Prov, sTelefono1, sTelefono2, sNume_Fax, sEmail, sNit, sRegistro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionProveedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionProveedoresAsync(ByVal sIdProv As String, ByVal sNomb_Come As String, ByVal sNomb_Social As String, ByVal sGiro_Prov As String, ByVal sDire_Prov As String, ByVal sTelefono1 As String, ByVal sTelefono2 As String, ByVal sNume_Fax As String, ByVal sEmail As String, ByVal sNit As String, ByVal sRegistro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AdicionProveedoresAsync(sIdProv, sNomb_Come, sNomb_Social, sGiro_Prov, sDire_Prov, sTelefono1, sTelefono2, sNume_Fax, sEmail, sNit, sRegistro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionProveedoresAsync(ByVal sIdProv As String, ByVal sNomb_Come As String, ByVal sNomb_Social As String, ByVal sGiro_Prov As String, ByVal sDire_Prov As String, ByVal sTelefono1 As String, ByVal sTelefono2 As String, ByVal sNume_Fax As String, ByVal sEmail As String, ByVal sNit As String, ByVal sRegistro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AdicionProveedoresOperationCompleted Is Nothing) Then
                Me.AdicionProveedoresOperationCompleted = AddressOf Me.OnAdicionProveedoresOperationCompleted
            End If
            Me.InvokeAsync("AdicionProveedores", New Object() {sIdProv, sNomb_Come, sNomb_Social, sGiro_Prov, sDire_Prov, sTelefono1, sTelefono2, sNume_Fax, sEmail, sNit, sRegistro, pUsuario, pPassword, pSucursal}, Me.AdicionProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionProveedoresCompleted(Me, New AdicionProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionSubClasificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionSubClasificacion(ByVal sIdClasif As String, ByVal sIdSubClasif As String, ByVal sDescSubClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionSubClasificacion", New Object() {sIdClasif, sIdSubClasif, sDescSubClasif, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionSubClasificacion(ByVal sIdClasif As String, ByVal sIdSubClasif As String, ByVal sDescSubClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionSubClasificacion", New Object() {sIdClasif, sIdSubClasif, sDescSubClasif, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionSubClasificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionSubClasificacionAsync(ByVal sIdClasif As String, ByVal sIdSubClasif As String, ByVal sDescSubClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AdicionSubClasificacionAsync(sIdClasif, sIdSubClasif, sDescSubClasif, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionSubClasificacionAsync(ByVal sIdClasif As String, ByVal sIdSubClasif As String, ByVal sDescSubClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AdicionSubClasificacionOperationCompleted Is Nothing) Then
                Me.AdicionSubClasificacionOperationCompleted = AddressOf Me.OnAdicionSubClasificacionOperationCompleted
            End If
            Me.InvokeAsync("AdicionSubClasificacion", New Object() {sIdClasif, sIdSubClasif, sDescSubClasif, pUsuario, pPassword, pSucursal}, Me.AdicionSubClasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionSubClasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionSubClasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionSubClasificacionCompleted(Me, New AdicionSubClasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionSubDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionSubDepartamentos(ByVal sIdDepto As String, ByVal sIdSubDepto As String, ByVal sDescSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionSubDepartamentos", New Object() {sIdDepto, sIdSubDepto, sDescSubDepto, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionSubDepartamentos(ByVal sIdDepto As String, ByVal sIdSubDepto As String, ByVal sDescSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionSubDepartamentos", New Object() {sIdDepto, sIdSubDepto, sDescSubDepto, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionSubDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionSubDepartamentosAsync(ByVal sIdDepto As String, ByVal sIdSubDepto As String, ByVal sDescSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AdicionSubDepartamentosAsync(sIdDepto, sIdSubDepto, sDescSubDepto, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionSubDepartamentosAsync(ByVal sIdDepto As String, ByVal sIdSubDepto As String, ByVal sDescSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AdicionSubDepartamentosOperationCompleted Is Nothing) Then
                Me.AdicionSubDepartamentosOperationCompleted = AddressOf Me.OnAdicionSubDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("AdicionSubDepartamentos", New Object() {sIdDepto, sIdSubDepto, sDescSubDepto, pUsuario, pPassword, pSucursal}, Me.AdicionSubDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionSubDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionSubDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionSubDepartamentosCompleted(Me, New AdicionSubDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/AdicionTipoDescarga", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdicionTipoDescarga(ByVal sIdTipoDesc As String, ByVal sDesc_TipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("AdicionTipoDescarga", New Object() {sIdTipoDesc, sDesc_TipoDesc, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAdicionTipoDescarga(ByVal sIdTipoDesc As String, ByVal sDesc_TipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AdicionTipoDescarga", New Object() {sIdTipoDesc, sDesc_TipoDesc, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAdicionTipoDescarga(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdicionTipoDescargaAsync(ByVal sIdTipoDesc As String, ByVal sDesc_TipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AdicionTipoDescargaAsync(sIdTipoDesc, sDesc_TipoDesc, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdicionTipoDescargaAsync(ByVal sIdTipoDesc As String, ByVal sDesc_TipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AdicionTipoDescargaOperationCompleted Is Nothing) Then
                Me.AdicionTipoDescargaOperationCompleted = AddressOf Me.OnAdicionTipoDescargaOperationCompleted
            End If
            Me.InvokeAsync("AdicionTipoDescarga", New Object() {sIdTipoDesc, sDesc_TipoDesc, pUsuario, pPassword, pSucursal}, Me.AdicionTipoDescargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdicionTipoDescargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdicionTipoDescargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdicionTipoDescargaCompleted(Me, New AdicionTipoDescargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraActivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraActivos(ByVal sCod_Prod As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraActivos", New Object() {sCod_Prod, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraActivos(ByVal sCod_Prod As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraActivos", New Object() {sCod_Prod, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraActivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraActivosAsync(ByVal sCod_Prod As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraActivosAsync(sCod_Prod, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraActivosAsync(ByVal sCod_Prod As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraActivosOperationCompleted Is Nothing) Then
                Me.BorraActivosOperationCompleted = AddressOf Me.OnBorraActivosOperationCompleted
            End If
            Me.InvokeAsync("BorraActivos", New Object() {sCod_Prod, pUsuario, pPassword, pSucursal}, Me.BorraActivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraActivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraActivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraActivosCompleted(Me, New BorraActivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraAgrupaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraAgrupaciones(ByVal sIdAgrupacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraAgrupaciones", New Object() {sIdAgrupacion, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraAgrupaciones(ByVal sIdAgrupacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraAgrupaciones", New Object() {sIdAgrupacion, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraAgrupaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraAgrupacionesAsync(ByVal sIdAgrupacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraAgrupacionesAsync(sIdAgrupacion, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraAgrupacionesAsync(ByVal sIdAgrupacion As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraAgrupacionesOperationCompleted Is Nothing) Then
                Me.BorraAgrupacionesOperationCompleted = AddressOf Me.OnBorraAgrupacionesOperationCompleted
            End If
            Me.InvokeAsync("BorraAgrupaciones", New Object() {sIdAgrupacion, pUsuario, pPassword, pSucursal}, Me.BorraAgrupacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraAgrupacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraAgrupacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraAgrupacionesCompleted(Me, New BorraAgrupacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraClasificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraClasificacion(ByVal sIdClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraClasificacion", New Object() {sIdClasif, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraClasificacion(ByVal sIdClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraClasificacion", New Object() {sIdClasif, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraClasificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraClasificacionAsync(ByVal sIdClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraClasificacionAsync(sIdClasif, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraClasificacionAsync(ByVal sIdClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraClasificacionOperationCompleted Is Nothing) Then
                Me.BorraClasificacionOperationCompleted = AddressOf Me.OnBorraClasificacionOperationCompleted
            End If
            Me.InvokeAsync("BorraClasificacion", New Object() {sIdClasif, pUsuario, pPassword, pSucursal}, Me.BorraClasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraClasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraClasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraClasificacionCompleted(Me, New BorraClasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraDepartamentos(ByVal sIdDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraDepartamentos", New Object() {sIdDepto, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraDepartamentos(ByVal sIdDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraDepartamentos", New Object() {sIdDepto, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraDepartamentosAsync(ByVal sIdDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraDepartamentosAsync(sIdDepto, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraDepartamentosAsync(ByVal sIdDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraDepartamentosOperationCompleted Is Nothing) Then
                Me.BorraDepartamentosOperationCompleted = AddressOf Me.OnBorraDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("BorraDepartamentos", New Object() {sIdDepto, pUsuario, pPassword, pSucursal}, Me.BorraDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraDepartamentosCompleted(Me, New BorraDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraMarcasProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraMarcasProveedores(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraMarcasProveedores", New Object() {sIdProv, sIdCodMarca, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraMarcasProveedores(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraMarcasProveedores", New Object() {sIdProv, sIdCodMarca, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraMarcasProveedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraMarcasProveedoresAsync(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraMarcasProveedoresAsync(sIdProv, sIdCodMarca, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraMarcasProveedoresAsync(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraMarcasProveedoresOperationCompleted Is Nothing) Then
                Me.BorraMarcasProveedoresOperationCompleted = AddressOf Me.OnBorraMarcasProveedoresOperationCompleted
            End If
            Me.InvokeAsync("BorraMarcasProveedores", New Object() {sIdProv, sIdCodMarca, pUsuario, pPassword, pSucursal}, Me.BorraMarcasProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraMarcasProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraMarcasProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraMarcasProveedoresCompleted(Me, New BorraMarcasProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraProveedores(ByVal sIdProv As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraProveedores", New Object() {sIdProv, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraProveedores(ByVal sIdProv As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraProveedores", New Object() {sIdProv, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraProveedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraProveedoresAsync(ByVal sIdProv As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraProveedoresAsync(sIdProv, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraProveedoresAsync(ByVal sIdProv As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraProveedoresOperationCompleted Is Nothing) Then
                Me.BorraProveedoresOperationCompleted = AddressOf Me.OnBorraProveedoresOperationCompleted
            End If
            Me.InvokeAsync("BorraProveedores", New Object() {sIdProv, pUsuario, pPassword, pSucursal}, Me.BorraProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraProveedoresCompleted(Me, New BorraProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraSubclasificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraSubclasificacion(ByVal sIdSubClasif As String, ByVal sIdClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraSubclasificacion", New Object() {sIdSubClasif, sIdClasif, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraSubclasificacion(ByVal sIdSubClasif As String, ByVal sIdClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraSubclasificacion", New Object() {sIdSubClasif, sIdClasif, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraSubclasificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraSubclasificacionAsync(ByVal sIdSubClasif As String, ByVal sIdClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraSubclasificacionAsync(sIdSubClasif, sIdClasif, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraSubclasificacionAsync(ByVal sIdSubClasif As String, ByVal sIdClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraSubclasificacionOperationCompleted Is Nothing) Then
                Me.BorraSubclasificacionOperationCompleted = AddressOf Me.OnBorraSubclasificacionOperationCompleted
            End If
            Me.InvokeAsync("BorraSubclasificacion", New Object() {sIdSubClasif, sIdClasif, pUsuario, pPassword, pSucursal}, Me.BorraSubclasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraSubclasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraSubclasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraSubclasificacionCompleted(Me, New BorraSubclasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraSubDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraSubDepartamentos(ByVal sIdSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraSubDepartamentos", New Object() {sIdSubDepto, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraSubDepartamentos(ByVal sIdSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraSubDepartamentos", New Object() {sIdSubDepto, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraSubDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraSubDepartamentosAsync(ByVal sIdSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraSubDepartamentosAsync(sIdSubDepto, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraSubDepartamentosAsync(ByVal sIdSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraSubDepartamentosOperationCompleted Is Nothing) Then
                Me.BorraSubDepartamentosOperationCompleted = AddressOf Me.OnBorraSubDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("BorraSubDepartamentos", New Object() {sIdSubDepto, pUsuario, pPassword, pSucursal}, Me.BorraSubDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraSubDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraSubDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraSubDepartamentosCompleted(Me, New BorraSubDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/BorraTipoDescarga", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BorraTipoDescarga(ByVal sIdTipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("BorraTipoDescarga", New Object() {sIdTipoDesc, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginBorraTipoDescarga(ByVal sIdTipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorraTipoDescarga", New Object() {sIdTipoDesc, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBorraTipoDescarga(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BorraTipoDescargaAsync(ByVal sIdTipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BorraTipoDescargaAsync(sIdTipoDesc, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BorraTipoDescargaAsync(ByVal sIdTipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BorraTipoDescargaOperationCompleted Is Nothing) Then
                Me.BorraTipoDescargaOperationCompleted = AddressOf Me.OnBorraTipoDescargaOperationCompleted
            End If
            Me.InvokeAsync("BorraTipoDescarga", New Object() {sIdTipoDesc, pUsuario, pPassword, pSucursal}, Me.BorraTipoDescargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnBorraTipoDescargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorraTipoDescargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorraTipoDescargaCompleted(Me, New BorraTipoDescargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CalculoDepreciacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CalculoDepreciacion(ByVal pTodos As Boolean, ByVal pCodProd As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("CalculoDepreciacion", New Object() {pTodos, pCodProd, pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCalculoDepreciacion(ByVal pTodos As Boolean, ByVal pCodProd As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CalculoDepreciacion", New Object() {pTodos, pCodProd, pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCalculoDepreciacion(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CalculoDepreciacionAsync(ByVal pTodos As Boolean, ByVal pCodProd As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CalculoDepreciacionAsync(pTodos, pCodProd, pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CalculoDepreciacionAsync(ByVal pTodos As Boolean, ByVal pCodProd As String, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CalculoDepreciacionOperationCompleted Is Nothing) Then
                Me.CalculoDepreciacionOperationCompleted = AddressOf Me.OnCalculoDepreciacionOperationCompleted
            End If
            Me.InvokeAsync("CalculoDepreciacion", New Object() {pTodos, pCodProd, pFecha, pUsuario, pPassword, pSucursal}, Me.CalculoDepreciacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalculoDepreciacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CalculoDepreciacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CalculoDepreciacionCompleted(Me, New CalculoDepreciacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaActivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaActivos(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaActivos", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaActivos(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaActivos", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaActivos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaActivosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaActivosAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaActivosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaActivosOperationCompleted Is Nothing) Then
                Me.CargaActivosOperationCompleted = AddressOf Me.OnCargaActivosOperationCompleted
            End If
            Me.InvokeAsync("CargaActivos", New Object() {pUsuario, pPassword, pSucursal}, Me.CargaActivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaActivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaActivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaActivosCompleted(Me, New CargaActivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaAgrupaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaAgrupaciones(ByVal pTablasRel As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaAgrupaciones", New Object() {pTablasRel, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaAgrupaciones(ByVal pTablasRel As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaAgrupaciones", New Object() {pTablasRel, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaAgrupaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaAgrupacionesAsync(ByVal pTablasRel As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaAgrupacionesAsync(pTablasRel, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaAgrupacionesAsync(ByVal pTablasRel As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaAgrupacionesOperationCompleted Is Nothing) Then
                Me.CargaAgrupacionesOperationCompleted = AddressOf Me.OnCargaAgrupacionesOperationCompleted
            End If
            Me.InvokeAsync("CargaAgrupaciones", New Object() {pTablasRel, pUsuario, pPassword, pSucursal}, Me.CargaAgrupacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaAgrupacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaAgrupacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaAgrupacionesCompleted(Me, New CargaAgrupacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaClasificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaClasificacion(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaClasificacion", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaClasificacion(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaClasificacion", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaClasificacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaClasificacionAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaClasificacionAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaClasificacionAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaClasificacionOperationCompleted Is Nothing) Then
                Me.CargaClasificacionOperationCompleted = AddressOf Me.OnCargaClasificacionOperationCompleted
            End If
            Me.InvokeAsync("CargaClasificacion", New Object() {pUsuario, pPassword, pSucursal}, Me.CargaClasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaClasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaClasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaClasificacionCompleted(Me, New CargaClasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaDepartamentos(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaDepartamentos", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaDepartamentos(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaDepartamentos", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaDepartamentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaDepartamentosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaDepartamentosAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaDepartamentosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaDepartamentosOperationCompleted Is Nothing) Then
                Me.CargaDepartamentosOperationCompleted = AddressOf Me.OnCargaDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("CargaDepartamentos", New Object() {pUsuario, pPassword, pSucursal}, Me.CargaDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaDepartamentosCompleted(Me, New CargaDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaMarcas", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaMarcas(ByVal sIdProv As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaMarcas", New Object() {sIdProv, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaMarcas(ByVal sIdProv As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaMarcas", New Object() {sIdProv, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaMarcas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaMarcasAsync(ByVal sIdProv As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaMarcasAsync(sIdProv, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaMarcasAsync(ByVal sIdProv As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaMarcasOperationCompleted Is Nothing) Then
                Me.CargaMarcasOperationCompleted = AddressOf Me.OnCargaMarcasOperationCompleted
            End If
            Me.InvokeAsync("CargaMarcas", New Object() {sIdProv, pUsuario, pPassword, pSucursal}, Me.CargaMarcasOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaMarcasOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaMarcasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaMarcasCompleted(Me, New CargaMarcasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaMarcasProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaMarcasProveedores(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaMarcasProveedores", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaMarcasProveedores(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaMarcasProveedores", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaMarcasProveedores(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaMarcasProveedoresAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaMarcasProveedoresAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaMarcasProveedoresAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaMarcasProveedoresOperationCompleted Is Nothing) Then
                Me.CargaMarcasProveedoresOperationCompleted = AddressOf Me.OnCargaMarcasProveedoresOperationCompleted
            End If
            Me.InvokeAsync("CargaMarcasProveedores", New Object() {pUsuario, pPassword, pSucursal}, Me.CargaMarcasProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaMarcasProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaMarcasProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaMarcasProveedoresCompleted(Me, New CargaMarcasProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaProveedores(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaProveedores", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaProveedores(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaProveedores", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaProveedores(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaProveedoresAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaProveedoresAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaProveedoresAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaProveedoresOperationCompleted Is Nothing) Then
                Me.CargaProveedoresOperationCompleted = AddressOf Me.OnCargaProveedoresOperationCompleted
            End If
            Me.InvokeAsync("CargaProveedores", New Object() {pUsuario, pPassword, pSucursal}, Me.CargaProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaProveedoresCompleted(Me, New CargaProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaSubClasif", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaSubClasif(ByVal sIdClasif As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaSubClasif", New Object() {sIdClasif, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaSubClasif(ByVal sIdClasif As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaSubClasif", New Object() {sIdClasif, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaSubClasif(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaSubClasifAsync(ByVal sIdClasif As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaSubClasifAsync(sIdClasif, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaSubClasifAsync(ByVal sIdClasif As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaSubClasifOperationCompleted Is Nothing) Then
                Me.CargaSubClasifOperationCompleted = AddressOf Me.OnCargaSubClasifOperationCompleted
            End If
            Me.InvokeAsync("CargaSubClasif", New Object() {sIdClasif, pFiltro, pUsuario, pPassword, pSucursal}, Me.CargaSubClasifOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaSubClasifOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaSubClasifCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaSubClasifCompleted(Me, New CargaSubClasifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaSubClasificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaSubClasificacion(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaSubClasificacion", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaSubClasificacion(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaSubClasificacion", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaSubClasificacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaSubClasificacionAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaSubClasificacionAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaSubClasificacionAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaSubClasificacionOperationCompleted Is Nothing) Then
                Me.CargaSubClasificacionOperationCompleted = AddressOf Me.OnCargaSubClasificacionOperationCompleted
            End If
            Me.InvokeAsync("CargaSubClasificacion", New Object() {pUsuario, pPassword, pSucursal}, Me.CargaSubClasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaSubClasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaSubClasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaSubClasificacionCompleted(Me, New CargaSubClasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaSubDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaSubDepartamentos(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaSubDepartamentos", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaSubDepartamentos(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaSubDepartamentos", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaSubDepartamentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaSubDepartamentosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaSubDepartamentosAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaSubDepartamentosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaSubDepartamentosOperationCompleted Is Nothing) Then
                Me.CargaSubDepartamentosOperationCompleted = AddressOf Me.OnCargaSubDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("CargaSubDepartamentos", New Object() {pUsuario, pPassword, pSucursal}, Me.CargaSubDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaSubDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaSubDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaSubDepartamentosCompleted(Me, New CargaSubDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaSubDepto", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaSubDepto(ByVal sIdDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaSubDepto", New Object() {sIdDepto, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaSubDepto(ByVal sIdDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaSubDepto", New Object() {sIdDepto, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaSubDepto(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaSubDeptoAsync(ByVal sIdDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaSubDeptoAsync(sIdDepto, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaSubDeptoAsync(ByVal sIdDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaSubDeptoOperationCompleted Is Nothing) Then
                Me.CargaSubDeptoOperationCompleted = AddressOf Me.OnCargaSubDeptoOperationCompleted
            End If
            Me.InvokeAsync("CargaSubDepto", New Object() {sIdDepto, pUsuario, pPassword, pSucursal}, Me.CargaSubDeptoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaSubDeptoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaSubDeptoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaSubDeptoCompleted(Me, New CargaSubDeptoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/CargaTipoDescarga", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaTipoDescarga(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaTipoDescarga", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaTipoDescarga(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaTipoDescarga", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaTipoDescarga(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaTipoDescargaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaTipoDescargaAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaTipoDescargaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaTipoDescargaOperationCompleted Is Nothing) Then
                Me.CargaTipoDescargaOperationCompleted = AddressOf Me.OnCargaTipoDescargaOperationCompleted
            End If
            Me.InvokeAsync("CargaTipoDescarga", New Object() {pUsuario, pPassword, pSucursal}, Me.CargaTipoDescargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaTipoDescargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaTipoDescargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaTipoDescargaCompleted(Me, New CargaTipoDescargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ConsultaDepreciacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDepreciacion(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaDepreciacion", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaDepreciacion(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaDepreciacion", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaDepreciacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDepreciacionAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultaDepreciacionAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDepreciacionAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultaDepreciacionOperationCompleted Is Nothing) Then
                Me.ConsultaDepreciacionOperationCompleted = AddressOf Me.OnConsultaDepreciacionOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDepreciacion", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultaDepreciacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDepreciacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDepreciacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDepreciacionCompleted(Me, New ConsultaDepreciacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaActivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaActivos( _
                    ByVal sCod_Prod As String,  _
                    ByVal sIdProv As String,  _
                    ByVal sDescripcion As String,  _
                    ByVal nCantidad As Integer,  _
                    ByVal dFec_Compra As String,  _
                    ByVal nValor_Original As Double,  _
                    ByVal nVal_Depreciado As Double,  _
                    ByVal nValor_Acumulado As Double,  _
                    ByVal nValor_Residual As Double,  _
                    ByVal nValor_Libro As Double,  _
                    ByVal nVida_Util As Integer,  _
                    ByVal sCod_Barra As String,  _
                    ByVal sNum_Serie As String,  _
                    ByVal sModelo As String,  _
                    ByVal sIdCtaCargo As String,  _
                    ByVal sIdCtaAbono As String,  _
                    ByVal sIdClasif As String,  _
                    ByVal sIdSubClasif As String,  _
                    ByVal sIdDepto As String,  _
                    ByVal sIdSubDepto As String,  _
                    ByVal sIdEmpl As String,  _
                    ByVal sIdCodMarca As String,  _
                    ByVal sColor As String,  _
                    ByVal sNume_Fact As String,  _
                    ByVal nTipo_Compra As Integer,  _
                    ByVal nNume_Cuota As Integer,  _
                    ByVal nValor_Prima As Double,  _
                    ByVal nValor_Cuota_Mes As Double,  _
                    ByVal nDia_Pago As Integer,  _
                    ByVal sIdAgrupacion As String,  _
                    ByVal sIdTipoDesc As String,  _
                    ByVal nEstado As Integer,  _
                    ByVal sObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaActivos", New Object() {sCod_Prod, sIdProv, sDescripcion, nCantidad, dFec_Compra, nValor_Original, nVal_Depreciado, nValor_Acumulado, nValor_Residual, nValor_Libro, nVida_Util, sCod_Barra, sNum_Serie, sModelo, sIdCtaCargo, sIdCtaAbono, sIdClasif, sIdSubClasif, sIdDepto, sIdSubDepto, sIdEmpl, sIdCodMarca, sColor, sNume_Fact, nTipo_Compra, nNume_Cuota, nValor_Prima, nValor_Cuota_Mes, nDia_Pago, sIdAgrupacion, sIdTipoDesc, nEstado, sObs, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaActivos( _
                    ByVal sCod_Prod As String,  _
                    ByVal sIdProv As String,  _
                    ByVal sDescripcion As String,  _
                    ByVal nCantidad As Integer,  _
                    ByVal dFec_Compra As String,  _
                    ByVal nValor_Original As Double,  _
                    ByVal nVal_Depreciado As Double,  _
                    ByVal nValor_Acumulado As Double,  _
                    ByVal nValor_Residual As Double,  _
                    ByVal nValor_Libro As Double,  _
                    ByVal nVida_Util As Integer,  _
                    ByVal sCod_Barra As String,  _
                    ByVal sNum_Serie As String,  _
                    ByVal sModelo As String,  _
                    ByVal sIdCtaCargo As String,  _
                    ByVal sIdCtaAbono As String,  _
                    ByVal sIdClasif As String,  _
                    ByVal sIdSubClasif As String,  _
                    ByVal sIdDepto As String,  _
                    ByVal sIdSubDepto As String,  _
                    ByVal sIdEmpl As String,  _
                    ByVal sIdCodMarca As String,  _
                    ByVal sColor As String,  _
                    ByVal sNume_Fact As String,  _
                    ByVal nTipo_Compra As Integer,  _
                    ByVal nNume_Cuota As Integer,  _
                    ByVal nValor_Prima As Double,  _
                    ByVal nValor_Cuota_Mes As Double,  _
                    ByVal nDia_Pago As Integer,  _
                    ByVal sIdAgrupacion As String,  _
                    ByVal sIdTipoDesc As String,  _
                    ByVal nEstado As Integer,  _
                    ByVal sObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaActivos", New Object() {sCod_Prod, sIdProv, sDescripcion, nCantidad, dFec_Compra, nValor_Original, nVal_Depreciado, nValor_Acumulado, nValor_Residual, nValor_Libro, nVida_Util, sCod_Barra, sNum_Serie, sModelo, sIdCtaCargo, sIdCtaAbono, sIdClasif, sIdSubClasif, sIdDepto, sIdSubDepto, sIdEmpl, sIdCodMarca, sColor, sNume_Fact, nTipo_Compra, nNume_Cuota, nValor_Prima, nValor_Cuota_Mes, nDia_Pago, sIdAgrupacion, sIdTipoDesc, nEstado, sObs, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaActivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaActivosAsync( _
                    ByVal sCod_Prod As String,  _
                    ByVal sIdProv As String,  _
                    ByVal sDescripcion As String,  _
                    ByVal nCantidad As Integer,  _
                    ByVal dFec_Compra As String,  _
                    ByVal nValor_Original As Double,  _
                    ByVal nVal_Depreciado As Double,  _
                    ByVal nValor_Acumulado As Double,  _
                    ByVal nValor_Residual As Double,  _
                    ByVal nValor_Libro As Double,  _
                    ByVal nVida_Util As Integer,  _
                    ByVal sCod_Barra As String,  _
                    ByVal sNum_Serie As String,  _
                    ByVal sModelo As String,  _
                    ByVal sIdCtaCargo As String,  _
                    ByVal sIdCtaAbono As String,  _
                    ByVal sIdClasif As String,  _
                    ByVal sIdSubClasif As String,  _
                    ByVal sIdDepto As String,  _
                    ByVal sIdSubDepto As String,  _
                    ByVal sIdEmpl As String,  _
                    ByVal sIdCodMarca As String,  _
                    ByVal sColor As String,  _
                    ByVal sNume_Fact As String,  _
                    ByVal nTipo_Compra As Integer,  _
                    ByVal nNume_Cuota As Integer,  _
                    ByVal nValor_Prima As Double,  _
                    ByVal nValor_Cuota_Mes As Double,  _
                    ByVal nDia_Pago As Integer,  _
                    ByVal sIdAgrupacion As String,  _
                    ByVal sIdTipoDesc As String,  _
                    ByVal nEstado As Integer,  _
                    ByVal sObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String)
            Me.ModificaActivosAsync(sCod_Prod, sIdProv, sDescripcion, nCantidad, dFec_Compra, nValor_Original, nVal_Depreciado, nValor_Acumulado, nValor_Residual, nValor_Libro, nVida_Util, sCod_Barra, sNum_Serie, sModelo, sIdCtaCargo, sIdCtaAbono, sIdClasif, sIdSubClasif, sIdDepto, sIdSubDepto, sIdEmpl, sIdCodMarca, sColor, sNume_Fact, nTipo_Compra, nNume_Cuota, nValor_Prima, nValor_Cuota_Mes, nDia_Pago, sIdAgrupacion, sIdTipoDesc, nEstado, sObs, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaActivosAsync( _
                    ByVal sCod_Prod As String,  _
                    ByVal sIdProv As String,  _
                    ByVal sDescripcion As String,  _
                    ByVal nCantidad As Integer,  _
                    ByVal dFec_Compra As String,  _
                    ByVal nValor_Original As Double,  _
                    ByVal nVal_Depreciado As Double,  _
                    ByVal nValor_Acumulado As Double,  _
                    ByVal nValor_Residual As Double,  _
                    ByVal nValor_Libro As Double,  _
                    ByVal nVida_Util As Integer,  _
                    ByVal sCod_Barra As String,  _
                    ByVal sNum_Serie As String,  _
                    ByVal sModelo As String,  _
                    ByVal sIdCtaCargo As String,  _
                    ByVal sIdCtaAbono As String,  _
                    ByVal sIdClasif As String,  _
                    ByVal sIdSubClasif As String,  _
                    ByVal sIdDepto As String,  _
                    ByVal sIdSubDepto As String,  _
                    ByVal sIdEmpl As String,  _
                    ByVal sIdCodMarca As String,  _
                    ByVal sColor As String,  _
                    ByVal sNume_Fact As String,  _
                    ByVal nTipo_Compra As Integer,  _
                    ByVal nNume_Cuota As Integer,  _
                    ByVal nValor_Prima As Double,  _
                    ByVal nValor_Cuota_Mes As Double,  _
                    ByVal nDia_Pago As Integer,  _
                    ByVal sIdAgrupacion As String,  _
                    ByVal sIdTipoDesc As String,  _
                    ByVal nEstado As Integer,  _
                    ByVal sObs As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal userState As Object)
            If (Me.ModificaActivosOperationCompleted Is Nothing) Then
                Me.ModificaActivosOperationCompleted = AddressOf Me.OnModificaActivosOperationCompleted
            End If
            Me.InvokeAsync("ModificaActivos", New Object() {sCod_Prod, sIdProv, sDescripcion, nCantidad, dFec_Compra, nValor_Original, nVal_Depreciado, nValor_Acumulado, nValor_Residual, nValor_Libro, nVida_Util, sCod_Barra, sNum_Serie, sModelo, sIdCtaCargo, sIdCtaAbono, sIdClasif, sIdSubClasif, sIdDepto, sIdSubDepto, sIdEmpl, sIdCodMarca, sColor, sNume_Fact, nTipo_Compra, nNume_Cuota, nValor_Prima, nValor_Cuota_Mes, nDia_Pago, sIdAgrupacion, sIdTipoDesc, nEstado, sObs, pUsuario, pPassword, pSucursal}, Me.ModificaActivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaActivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaActivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaActivosCompleted(Me, New ModificaActivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaAgrupaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaAgrupaciones(ByVal sIdAgrupacion As String, ByVal sDescripcion As String, ByVal sIdClas As String, ByVal sIdSubClas As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaAgrupaciones", New Object() {sIdAgrupacion, sDescripcion, sIdClas, sIdSubClas, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaAgrupaciones(ByVal sIdAgrupacion As String, ByVal sDescripcion As String, ByVal sIdClas As String, ByVal sIdSubClas As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaAgrupaciones", New Object() {sIdAgrupacion, sDescripcion, sIdClas, sIdSubClas, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaAgrupaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaAgrupacionesAsync(ByVal sIdAgrupacion As String, ByVal sDescripcion As String, ByVal sIdClas As String, ByVal sIdSubClas As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaAgrupacionesAsync(sIdAgrupacion, sDescripcion, sIdClas, sIdSubClas, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaAgrupacionesAsync(ByVal sIdAgrupacion As String, ByVal sDescripcion As String, ByVal sIdClas As String, ByVal sIdSubClas As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaAgrupacionesOperationCompleted Is Nothing) Then
                Me.ModificaAgrupacionesOperationCompleted = AddressOf Me.OnModificaAgrupacionesOperationCompleted
            End If
            Me.InvokeAsync("ModificaAgrupaciones", New Object() {sIdAgrupacion, sDescripcion, sIdClas, sIdSubClas, pUsuario, pPassword, pSucursal}, Me.ModificaAgrupacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaAgrupacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaAgrupacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaAgrupacionesCompleted(Me, New ModificaAgrupacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaClasificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaClasificacion(ByVal sIdClasif As String, ByVal sDescClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaClasificacion", New Object() {sIdClasif, sDescClasif, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaClasificacion(ByVal sIdClasif As String, ByVal sDescClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaClasificacion", New Object() {sIdClasif, sDescClasif, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaClasificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaClasificacionAsync(ByVal sIdClasif As String, ByVal sDescClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaClasificacionAsync(sIdClasif, sDescClasif, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaClasificacionAsync(ByVal sIdClasif As String, ByVal sDescClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaClasificacionOperationCompleted Is Nothing) Then
                Me.ModificaClasificacionOperationCompleted = AddressOf Me.OnModificaClasificacionOperationCompleted
            End If
            Me.InvokeAsync("ModificaClasificacion", New Object() {sIdClasif, sDescClasif, pUsuario, pPassword, pSucursal}, Me.ModificaClasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaClasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaClasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaClasificacionCompleted(Me, New ModificaClasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaDepartamentos(ByVal sIdDepto As String, ByVal sDescDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaDepartamentos", New Object() {sIdDepto, sDescDepto, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaDepartamentos(ByVal sIdDepto As String, ByVal sDescDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaDepartamentos", New Object() {sIdDepto, sDescDepto, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaDepartamentosAsync(ByVal sIdDepto As String, ByVal sDescDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaDepartamentosAsync(sIdDepto, sDescDepto, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaDepartamentosAsync(ByVal sIdDepto As String, ByVal sDescDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaDepartamentosOperationCompleted Is Nothing) Then
                Me.ModificaDepartamentosOperationCompleted = AddressOf Me.OnModificaDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("ModificaDepartamentos", New Object() {sIdDepto, sDescDepto, pUsuario, pPassword, pSucursal}, Me.ModificaDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaDepartamentosCompleted(Me, New ModificaDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaMarcasProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaMarcasProveedores(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal sDesc_Marca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaMarcasProveedores", New Object() {sIdProv, sIdCodMarca, sDesc_Marca, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaMarcasProveedores(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal sDesc_Marca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaMarcasProveedores", New Object() {sIdProv, sIdCodMarca, sDesc_Marca, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaMarcasProveedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaMarcasProveedoresAsync(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal sDesc_Marca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaMarcasProveedoresAsync(sIdProv, sIdCodMarca, sDesc_Marca, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaMarcasProveedoresAsync(ByVal sIdProv As String, ByVal sIdCodMarca As String, ByVal sDesc_Marca As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaMarcasProveedoresOperationCompleted Is Nothing) Then
                Me.ModificaMarcasProveedoresOperationCompleted = AddressOf Me.OnModificaMarcasProveedoresOperationCompleted
            End If
            Me.InvokeAsync("ModificaMarcasProveedores", New Object() {sIdProv, sIdCodMarca, sDesc_Marca, pUsuario, pPassword, pSucursal}, Me.ModificaMarcasProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaMarcasProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaMarcasProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaMarcasProveedoresCompleted(Me, New ModificaMarcasProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaProveedores(ByVal sIdProv As String, ByVal sNomb_Come As String, ByVal sNomb_Social As String, ByVal sGiro_Prov As String, ByVal sDire_Prov As String, ByVal sTelefono1 As String, ByVal sTelefono2 As String, ByVal sNume_Fax As String, ByVal sEmail As String, ByVal sNit As String, ByVal sRegistro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaProveedores", New Object() {sIdProv, sNomb_Come, sNomb_Social, sGiro_Prov, sDire_Prov, sTelefono1, sTelefono2, sNume_Fax, sEmail, sNit, sRegistro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaProveedores( _
                    ByVal sIdProv As String,  _
                    ByVal sNomb_Come As String,  _
                    ByVal sNomb_Social As String,  _
                    ByVal sGiro_Prov As String,  _
                    ByVal sDire_Prov As String,  _
                    ByVal sTelefono1 As String,  _
                    ByVal sTelefono2 As String,  _
                    ByVal sNume_Fax As String,  _
                    ByVal sEmail As String,  _
                    ByVal sNit As String,  _
                    ByVal sRegistro As String,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaProveedores", New Object() {sIdProv, sNomb_Come, sNomb_Social, sGiro_Prov, sDire_Prov, sTelefono1, sTelefono2, sNume_Fax, sEmail, sNit, sRegistro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaProveedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaProveedoresAsync(ByVal sIdProv As String, ByVal sNomb_Come As String, ByVal sNomb_Social As String, ByVal sGiro_Prov As String, ByVal sDire_Prov As String, ByVal sTelefono1 As String, ByVal sTelefono2 As String, ByVal sNume_Fax As String, ByVal sEmail As String, ByVal sNit As String, ByVal sRegistro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaProveedoresAsync(sIdProv, sNomb_Come, sNomb_Social, sGiro_Prov, sDire_Prov, sTelefono1, sTelefono2, sNume_Fax, sEmail, sNit, sRegistro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaProveedoresAsync(ByVal sIdProv As String, ByVal sNomb_Come As String, ByVal sNomb_Social As String, ByVal sGiro_Prov As String, ByVal sDire_Prov As String, ByVal sTelefono1 As String, ByVal sTelefono2 As String, ByVal sNume_Fax As String, ByVal sEmail As String, ByVal sNit As String, ByVal sRegistro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaProveedoresOperationCompleted Is Nothing) Then
                Me.ModificaProveedoresOperationCompleted = AddressOf Me.OnModificaProveedoresOperationCompleted
            End If
            Me.InvokeAsync("ModificaProveedores", New Object() {sIdProv, sNomb_Come, sNomb_Social, sGiro_Prov, sDire_Prov, sTelefono1, sTelefono2, sNume_Fax, sEmail, sNit, sRegistro, pUsuario, pPassword, pSucursal}, Me.ModificaProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaProveedoresCompleted(Me, New ModificaProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaSubClasificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaSubClasificacion(ByVal sIdClasif As String, ByVal sIdSubClasif As String, ByVal sDescSubClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaSubClasificacion", New Object() {sIdClasif, sIdSubClasif, sDescSubClasif, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaSubClasificacion(ByVal sIdClasif As String, ByVal sIdSubClasif As String, ByVal sDescSubClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaSubClasificacion", New Object() {sIdClasif, sIdSubClasif, sDescSubClasif, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaSubClasificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaSubClasificacionAsync(ByVal sIdClasif As String, ByVal sIdSubClasif As String, ByVal sDescSubClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaSubClasificacionAsync(sIdClasif, sIdSubClasif, sDescSubClasif, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaSubClasificacionAsync(ByVal sIdClasif As String, ByVal sIdSubClasif As String, ByVal sDescSubClasif As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaSubClasificacionOperationCompleted Is Nothing) Then
                Me.ModificaSubClasificacionOperationCompleted = AddressOf Me.OnModificaSubClasificacionOperationCompleted
            End If
            Me.InvokeAsync("ModificaSubClasificacion", New Object() {sIdClasif, sIdSubClasif, sDescSubClasif, pUsuario, pPassword, pSucursal}, Me.ModificaSubClasificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaSubClasificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaSubClasificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaSubClasificacionCompleted(Me, New ModificaSubClasificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaSubDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaSubDepartamentos(ByVal sIdDepto As String, ByVal sIdSubDepto As String, ByVal sDescSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaSubDepartamentos", New Object() {sIdDepto, sIdSubDepto, sDescSubDepto, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaSubDepartamentos(ByVal sIdDepto As String, ByVal sIdSubDepto As String, ByVal sDescSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaSubDepartamentos", New Object() {sIdDepto, sIdSubDepto, sDescSubDepto, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaSubDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaSubDepartamentosAsync(ByVal sIdDepto As String, ByVal sIdSubDepto As String, ByVal sDescSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaSubDepartamentosAsync(sIdDepto, sIdSubDepto, sDescSubDepto, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaSubDepartamentosAsync(ByVal sIdDepto As String, ByVal sIdSubDepto As String, ByVal sDescSubDepto As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaSubDepartamentosOperationCompleted Is Nothing) Then
                Me.ModificaSubDepartamentosOperationCompleted = AddressOf Me.OnModificaSubDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("ModificaSubDepartamentos", New Object() {sIdDepto, sIdSubDepto, sDescSubDepto, pUsuario, pPassword, pSucursal}, Me.ModificaSubDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaSubDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaSubDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaSubDepartamentosCompleted(Me, New ModificaSubDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ModificaTipoDescarga", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaTipoDescarga(ByVal sIdTipoDesc As String, ByVal sDesc_TipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaTipoDescarga", New Object() {sIdTipoDesc, sDesc_TipoDesc, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaTipoDescarga(ByVal sIdTipoDesc As String, ByVal sDesc_TipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaTipoDescarga", New Object() {sIdTipoDesc, sDesc_TipoDesc, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaTipoDescarga(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaTipoDescargaAsync(ByVal sIdTipoDesc As String, ByVal sDesc_TipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificaTipoDescargaAsync(sIdTipoDesc, sDesc_TipoDesc, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaTipoDescargaAsync(ByVal sIdTipoDesc As String, ByVal sDesc_TipoDesc As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaTipoDescargaOperationCompleted Is Nothing) Then
                Me.ModificaTipoDescargaOperationCompleted = AddressOf Me.OnModificaTipoDescargaOperationCompleted
            End If
            Me.InvokeAsync("ModificaTipoDescarga", New Object() {sIdTipoDesc, sDesc_TipoDesc, pUsuario, pPassword, pSucursal}, Me.ModificaTipoDescargaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaTipoDescargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaTipoDescargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaTipoDescargaCompleted(Me, New ModificaTipoDescargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/ObtenerCorrelativo", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativo(ByVal pTabla As String, ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativo", New Object() {pTabla, pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativo(ByVal pTabla As String, ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativo", New Object() {pTabla, pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativo(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoAsync(ByVal pTabla As String, ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoAsync(pTabla, pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoAsync(ByVal pTabla As String, ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoOperationCompleted = AddressOf Me.OnObtenerCorrelativoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativo", New Object() {pTabla, pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoCompleted(Me, New ObtenerCorrelativoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/Reporte_ActivoFijo", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_ActivoFijo(ByVal pR1 As Date, ByVal pR2 As Date, ByVal pFiltro As String, ByVal pTipo As TipoReporte, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_ActivoFijo", New Object() {pR1, pR2, pFiltro, pTipo, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_ActivoFijo(ByVal pR1 As Date, ByVal pR2 As Date, ByVal pFiltro As String, ByVal pTipo As TipoReporte, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_ActivoFijo", New Object() {pR1, pR2, pFiltro, pTipo, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_ActivoFijo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_ActivoFijoAsync(ByVal pR1 As Date, ByVal pR2 As Date, ByVal pFiltro As String, ByVal pTipo As TipoReporte, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_ActivoFijoAsync(pR1, pR2, pFiltro, pTipo, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_ActivoFijoAsync(ByVal pR1 As Date, ByVal pR2 As Date, ByVal pFiltro As String, ByVal pTipo As TipoReporte, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_ActivoFijoOperationCompleted Is Nothing) Then
                Me.Reporte_ActivoFijoOperationCompleted = AddressOf Me.OnReporte_ActivoFijoOperationCompleted
            End If
            Me.InvokeAsync("Reporte_ActivoFijo", New Object() {pR1, pR2, pFiltro, pTipo, pTodos, pUsuario, pPassword, pSucursal}, Me.Reporte_ActivoFijoOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_ActivoFijoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_ActivoFijoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_ActivoFijoCompleted(Me, New Reporte_ActivoFijoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/Reporte_ActivoFijoGlobal", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_ActivoFijoGlobal(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_ActivoFijoGlobal", New Object() {pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_ActivoFijoGlobal(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_ActivoFijoGlobal", New Object() {pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_ActivoFijoGlobal(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_ActivoFijoGlobalAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_ActivoFijoGlobalAsync(pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_ActivoFijoGlobalAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_ActivoFijoGlobalOperationCompleted Is Nothing) Then
                Me.Reporte_ActivoFijoGlobalOperationCompleted = AddressOf Me.OnReporte_ActivoFijoGlobalOperationCompleted
            End If
            Me.InvokeAsync("Reporte_ActivoFijoGlobal", New Object() {pFecha, pUsuario, pPassword, pSucursal}, Me.Reporte_ActivoFijoGlobalOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_ActivoFijoGlobalOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_ActivoFijoGlobalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_ActivoFijoGlobalCompleted(Me, New Reporte_ActivoFijoGlobalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/Reporte_ActivoFijoValor", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_ActivoFijoValor(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_ActivoFijoValor", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_ActivoFijoValor(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_ActivoFijoValor", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_ActivoFijoValor(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_ActivoFijoValorAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_ActivoFijoValorAsync(pFecha1, pFecha2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_ActivoFijoValorAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_ActivoFijoValorOperationCompleted Is Nothing) Then
                Me.Reporte_ActivoFijoValorOperationCompleted = AddressOf Me.OnReporte_ActivoFijoValorOperationCompleted
            End If
            Me.InvokeAsync("Reporte_ActivoFijoValor", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, Me.Reporte_ActivoFijoValorOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_ActivoFijoValorOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_ActivoFijoValorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_ActivoFijoValorCompleted(Me, New Reporte_ActivoFijoValorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/Reporte_ActivoFijoxAgrupacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_ActivoFijoxAgrupacion(ByVal pR1 As Date, ByVal pR2 As Date, ByVal pFiltro As String, ByVal pTitulo As String, ByVal pTipo As TipoReporte, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_ActivoFijoxAgrupacion", New Object() {pR1, pR2, pFiltro, pTitulo, pTipo, pTodos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_ActivoFijoxAgrupacion(ByVal pR1 As Date, ByVal pR2 As Date, ByVal pFiltro As String, ByVal pTitulo As String, ByVal pTipo As TipoReporte, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_ActivoFijoxAgrupacion", New Object() {pR1, pR2, pFiltro, pTitulo, pTipo, pTodos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_ActivoFijoxAgrupacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_ActivoFijoxAgrupacionAsync(ByVal pR1 As Date, ByVal pR2 As Date, ByVal pFiltro As String, ByVal pTitulo As String, ByVal pTipo As TipoReporte, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_ActivoFijoxAgrupacionAsync(pR1, pR2, pFiltro, pTitulo, pTipo, pTodos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_ActivoFijoxAgrupacionAsync(ByVal pR1 As Date, ByVal pR2 As Date, ByVal pFiltro As String, ByVal pTitulo As String, ByVal pTipo As TipoReporte, ByVal pTodos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_ActivoFijoxAgrupacionOperationCompleted Is Nothing) Then
                Me.Reporte_ActivoFijoxAgrupacionOperationCompleted = AddressOf Me.OnReporte_ActivoFijoxAgrupacionOperationCompleted
            End If
            Me.InvokeAsync("Reporte_ActivoFijoxAgrupacion", New Object() {pR1, pR2, pFiltro, pTitulo, pTipo, pTodos, pUsuario, pPassword, pSucursal}, Me.Reporte_ActivoFijoxAgrupacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_ActivoFijoxAgrupacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_ActivoFijoxAgrupacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_ActivoFijoxAgrupacionCompleted(Me, New Reporte_ActivoFijoxAgrupacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibActivoFijo/Reporte_DetalleActivoFijo", RequestNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", ResponseNamespace:="http://tempuri.org/wsSif/wsLibActivoFijo", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_DetalleActivoFijo(ByVal pR1 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_DetalleActivoFijo", New Object() {pR1, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_DetalleActivoFijo(ByVal pR1 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_DetalleActivoFijo", New Object() {pR1, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_DetalleActivoFijo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_DetalleActivoFijoAsync(ByVal pR1 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_DetalleActivoFijoAsync(pR1, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_DetalleActivoFijoAsync(ByVal pR1 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_DetalleActivoFijoOperationCompleted Is Nothing) Then
                Me.Reporte_DetalleActivoFijoOperationCompleted = AddressOf Me.OnReporte_DetalleActivoFijoOperationCompleted
            End If
            Me.InvokeAsync("Reporte_DetalleActivoFijo", New Object() {pR1, pUsuario, pPassword, pSucursal}, Me.Reporte_DetalleActivoFijoOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_DetalleActivoFijoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_DetalleActivoFijoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_DetalleActivoFijoCompleted(Me, New Reporte_DetalleActivoFijoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibActivoFijo")>  _
    Public Enum TipoReporte
        
        '''<remarks/>
        xAgrupacion
        
        '''<remarks/>
        xDepartamento
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionActivosCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionActivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionActivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionAgrupacionesCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionAgrupacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionAgrupacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionClasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionClasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionClasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionDepartamentoCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionDepartamentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionDepartamentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionMarcasProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionMarcasProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionMarcasProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionSubClasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionSubClasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionSubClasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionSubDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionSubDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionSubDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AdicionTipoDescargaCompletedEventHandler(ByVal sender As Object, ByVal e As AdicionTipoDescargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdicionTipoDescargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraActivosCompletedEventHandler(ByVal sender As Object, ByVal e As BorraActivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraActivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraAgrupacionesCompletedEventHandler(ByVal sender As Object, ByVal e As BorraAgrupacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraAgrupacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraClasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As BorraClasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraClasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As BorraDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraMarcasProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As BorraMarcasProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraMarcasProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As BorraProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraSubclasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As BorraSubclasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraSubclasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraSubDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As BorraSubDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraSubDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BorraTipoDescargaCompletedEventHandler(ByVal sender As Object, ByVal e As BorraTipoDescargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BorraTipoDescargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CalculoDepreciacionCompletedEventHandler(ByVal sender As Object, ByVal e As CalculoDepreciacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CalculoDepreciacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaActivosCompletedEventHandler(ByVal sender As Object, ByVal e As CargaActivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaActivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaAgrupacionesCompletedEventHandler(ByVal sender As Object, ByVal e As CargaAgrupacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaAgrupacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaClasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As CargaClasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaClasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As CargaDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaMarcasCompletedEventHandler(ByVal sender As Object, ByVal e As CargaMarcasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaMarcasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaMarcasProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As CargaMarcasProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaMarcasProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As CargaProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaSubClasifCompletedEventHandler(ByVal sender As Object, ByVal e As CargaSubClasifCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaSubClasifCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaSubClasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As CargaSubClasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaSubClasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaSubDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As CargaSubDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaSubDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaSubDeptoCompletedEventHandler(ByVal sender As Object, ByVal e As CargaSubDeptoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaSubDeptoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaTipoDescargaCompletedEventHandler(ByVal sender As Object, ByVal e As CargaTipoDescargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaTipoDescargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDepreciacionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDepreciacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDepreciacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaActivosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaActivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaActivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaAgrupacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaAgrupacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaAgrupacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaClasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaClasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaClasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaMarcasProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaMarcasProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaMarcasProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaSubClasificacionCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaSubClasificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaSubClasificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaSubDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaSubDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaSubDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificaTipoDescargaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaTipoDescargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaTipoDescargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_ActivoFijoCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_ActivoFijoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_ActivoFijoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_ActivoFijoGlobalCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_ActivoFijoGlobalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_ActivoFijoGlobalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_ActivoFijoValorCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_ActivoFijoValorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_ActivoFijoValorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_ActivoFijoxAgrupacionCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_ActivoFijoxAgrupacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_ActivoFijoxAgrupacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_DetalleActivoFijoCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_DetalleActivoFijoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_DetalleActivoFijoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
