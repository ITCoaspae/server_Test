'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrAsociados
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibAsocSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibAsoc")>  _
    Partial Public Class wsLibAsoc
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RepAsociadosFallecidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepAsociadosInhabilitadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepConsolidadoResultadosMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepGerencial_AcumuladoMetasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepGerencial_EvaluacionxAnioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepGerencial_ResultadosHistoricosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepInformeMetasMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepInformeMetasxProductoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_Mora_AsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_RetiroAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_RetiroAsociadosGrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_SaldosAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteCuentasAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteDividendosAhOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteDividendosApOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteDividendosCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteDividendosPrestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteDividendosRetiradosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteRenunciaAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepReingresosAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepResultadosComparadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetiroAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaAsociados_ExclusionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaAsociados_MoraInhabilitacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Verificacion_DividendosNoCobradosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaNitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarProcesoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDetalleComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDetDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDividendosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarEjecutivosMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarEstadoIngresoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarExclusionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarFallecidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarFirmasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarFormaPagoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarInhabilitadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarLibroRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarMunicipiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarNacionalidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarParentescosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPlanificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarProfesionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarReferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarRetirosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarSolicitudRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarSucursalesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarTipoCuotaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LiquidacionAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAsociadoxFiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAspectosCooperativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCobradoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCooperativasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCuerposDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDetalleComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDetDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDividendosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarEjecutivosMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarEstadoIngresoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarExclusionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarFallecidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarFirmasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarFormaPagoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarInhabilitadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarLibroRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarMunicipiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarNacionalidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarParentescosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPlanificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarProfesionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarReferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRetirosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarSolicitudRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarSucursalesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarTipoCuotaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NuevosAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoCobradoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoCooperativasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoExclusionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoFallecidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoInhabilitadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoLibroRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoNacionalidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoParentescosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoProfesionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoReferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoRetirosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoSolicitudRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerEstructuraSeleccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesoDividendoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesoExclusionAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesoFallecidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesoInhabilitadosAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesoRehabilitadosAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Recibo_DividendosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RehabilitacionAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepAsociadosCtasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepAsociadosExcluidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAspectosCooperativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAspectosCooperativosxNombreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCobradoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCobradoresxNombreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCooperativasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCuerposDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDetalleComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDetDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDividendosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEjecutivosMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEjecutivosMercadeoxFiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEjecutivosMercadeoxNombreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEstadoIngresoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarExclusionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarFallecidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarFirmasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarFormaPagoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarInhabilitadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarLibroRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarLibroRegistroxAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarMunicipiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarNacionalidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarObservacionesAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarParentescosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPlanificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarProfesionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarReferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRetirosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarSolicitudRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarSucursalesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipoCuotaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarAspectosCooperativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCobradoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCooperativasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCuerposDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDetalleComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDetDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDividendosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarEjecutivosMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarEstadoIngresoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarExclusionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarFallecidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarFirmasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarFormaPagoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarInhabilitadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarLibroRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarMunicipiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarNacionalidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarParametrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarParentescosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPlanificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarProfesionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarReferenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarRetirosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarSolicitudRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarSucursalesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarTipoCuotaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExclusionAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExportarDatosAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Generar_Movimiento_RetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerarPartida_AspiranteAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Impresion_DividendosNoCobradosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Impresion_DividendosxPagarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IngresoAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InhabilitacionAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarAspectosCooperativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBeneficiariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCobradoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarComisionesMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCooperativasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCuerposDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ingresarFormularioUIFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AperturaCtaAportacionesTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private cambioDuiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarListaNegraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private cambiarEstadoListaNegraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificartarListaNegraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarListaNegraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertar_CatAsociados_DomicilioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDomiciliosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocRelacionesAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarAsocRelacionesAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarAsocRelacionesAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarAsocRelacionesAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarCamposActividadEconomicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarInfComplementariaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarPEPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarOtrosDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarCamposDeclaracionJuradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarCamposObligatoriosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private rptSolicitudIngresoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private anularAsocDeclaracionJuradaDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarAsocDeclaracionJuradaDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocDeclaracionJuradaDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarAsocDeclaracionJuradaDocumentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarAsocDeclaracionJuradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocDeclaracionJuradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private generarIdDeclaracionJuradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarAsocDeclaracionJuradaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private generarIdPepOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocPepOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertar_AsocPepOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarAsocPepOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocPep_FamiliaresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertar_AsocPep_FamiliaresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarAsocPep_FamiliaresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarAsocPep_FamiliaresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertar_AsocPep_SociedadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocPep_SociedadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarAsocPep_SociedadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarAsocPep_SociedadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private inactivarAsocActividadEconomicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocActividadEconomiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarAsocActividadEconomicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private actulizarAsocActividadEconomicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarCat_AsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCat_AsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertar_CatAsociados_OtrosDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertar_CatAsociados_InfComplementariaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCat_AsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCatPersonaJuridicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertar_catPersonaJuridicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private recuperarIdPersonaJuridicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarPersonaJuridicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarAsocPersonaJuridicaDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private actualizarAsocPersonaJuridicaDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarAsocPersonaJuridicaDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarAsocPersonaJuridicaDirectivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCatActividadEconomicaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCatalogosTiposCatalogoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private actualizarCatalogosTiposCatalogoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCatalogosTiposCatalogoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarDbCatalogosCatalogosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private actualizarDbCatalogosCatalogosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarDbCatalogosCatalogosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarMercaRutasAsesoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarNuevaVistaMercaRutasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarMercaRutasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarMercaRutasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarRevisionMercaRutasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private impuestosTransacccionesFinancierasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private capitalzarDividendosNoCobradosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarDividendosNoCobradosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_InversionistasMoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_CatAsociadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarAsociados_AhDividendosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_EjecutivosMercadeoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivacionCuentasAportacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlmacenaEstructuraSeleccionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlmacenarMatrizDividendosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Aplicacion_Dividendos_CuentasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Aplicacion_Dividendos_NoCobradosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutorizaDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CalculaComisionesEjecutivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrAsociados_wsLibAsoc
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RepAsociadosFallecidosCompleted As RepAsociadosFallecidosCompletedEventHandler
        
        '''<remarks/>
        Public Event RepAsociadosInhabilitadosCompleted As RepAsociadosInhabilitadosCompletedEventHandler
        
        '''<remarks/>
        Public Event RepConsolidadoResultadosMercadeoCompleted As RepConsolidadoResultadosMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event RepGerencial_AcumuladoMetasCompleted As RepGerencial_AcumuladoMetasCompletedEventHandler
        
        '''<remarks/>
        Public Event RepGerencial_EvaluacionxAnioCompleted As RepGerencial_EvaluacionxAnioCompletedEventHandler
        
        '''<remarks/>
        Public Event RepGerencial_ResultadosHistoricosCompleted As RepGerencial_ResultadosHistoricosCompletedEventHandler
        
        '''<remarks/>
        Public Event RepInformeMetasMercadeoCompleted As RepInformeMetasMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event RepInformeMetasxProductoCompleted As RepInformeMetasxProductoCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_Mora_AsociadosCompleted As Reporte_Mora_AsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_RetiroAsociadosCompleted As Reporte_RetiroAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_RetiroAsociadosGrCompleted As Reporte_RetiroAsociadosGrCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_SaldosAsociadosCompleted As Reporte_SaldosAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteCuentasAsociadoCompleted As ReporteCuentasAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteDividendosAhCompleted As ReporteDividendosAhCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteDividendosApCompleted As ReporteDividendosApCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteDividendosCajaCompleted As ReporteDividendosCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteDividendosPrestCompleted As ReporteDividendosPrestCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteDividendosRetiradosCompleted As ReporteDividendosRetiradosCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteRenunciaAsociadoCompleted As ReporteRenunciaAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event RepReingresosAsociadosCompleted As RepReingresosAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event RepResultadosComparadosCompleted As RepResultadosComparadosCompletedEventHandler
        
        '''<remarks/>
        Public Event RetiroAsociadoCompleted As RetiroAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaAsociados_ExclusionCompleted As VerificaAsociados_ExclusionCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaAsociados_MoraInhabilitacionCompleted As VerificaAsociados_MoraInhabilitacionCompletedEventHandler
        
        '''<remarks/>
        Public Event Verificacion_DividendosNoCobradosCompleted As Verificacion_DividendosNoCobradosCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaNitCompleted As VerificaNitCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarProcesoRetiroCompleted As VerificarProcesoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDetalleComisionesMercadeoCompleted As InsertarDetalleComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDetDirectivosCompleted As InsertarDetDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDirectivosCompleted As InsertarDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDividendosCompleted As InsertarDividendosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarEjecutivosMercadeoCompleted As InsertarEjecutivosMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarEstadoIngresoCompleted As InsertarEstadoIngresoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarExclusionCompleted As InsertarExclusionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarFallecidosCompleted As InsertarFallecidosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarFirmasCompleted As InsertarFirmasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarFormaPagoCompleted As InsertarFormaPagoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarInhabilitadosCompleted As InsertarInhabilitadosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarLibroRegistroCompleted As InsertarLibroRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarMunicipiosCompleted As InsertarMunicipiosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarNacionalidadesCompleted As InsertarNacionalidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarParametrosCompleted As InsertarParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarParentescosCompleted As InsertarParentescosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPlanificacionCompleted As InsertarPlanificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPlanillaCompleted As InsertarPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarProfesionesCompleted As InsertarProfesionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarReferenciasCompleted As InsertarReferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarRetirosCompleted As InsertarRetirosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarSolicitudRetiroCompleted As InsertarSolicitudRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarSucursalesCompleted As InsertarSucursalesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarTipoCuotaCompleted As InsertarTipoCuotaCompletedEventHandler
        
        '''<remarks/>
        Public Event LiquidacionAsociadoCompleted As LiquidacionAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAsociadoCompleted As ModificarAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAsociadoxFiltroCompleted As ModificarAsociadoxFiltroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAspectosCooperativosCompleted As ModificarAspectosCooperativosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarBeneficiariosCompleted As ModificarBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCobradoresCompleted As ModificarCobradoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarComisionesMercadeoCompleted As ModificarComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCooperativasCompleted As ModificarCooperativasCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCuerposDirectivosCompleted As ModificarCuerposDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDepartamentosCompleted As ModificarDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDetalleComisionesMercadeoCompleted As ModificarDetalleComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDetDirectivosCompleted As ModificarDetDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDirectivosCompleted As ModificarDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDividendosCompleted As ModificarDividendosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarEjecutivosMercadeoCompleted As ModificarEjecutivosMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarEstadoIngresoCompleted As ModificarEstadoIngresoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarExclusionCompleted As ModificarExclusionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarFallecidosCompleted As ModificarFallecidosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarFirmasCompleted As ModificarFirmasCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarFormaPagoCompleted As ModificarFormaPagoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarInhabilitadosCompleted As ModificarInhabilitadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarLibroRegistroCompleted As ModificarLibroRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarMunicipiosCompleted As ModificarMunicipiosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarNacionalidadesCompleted As ModificarNacionalidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarParametrosCompleted As ModificarParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarParentescosCompleted As ModificarParentescosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPlanificacionCompleted As ModificarPlanificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarProfesionesCompleted As ModificarProfesionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarReferenciasCompleted As ModificarReferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRetirosCompleted As ModificarRetirosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarSolicitudRetiroCompleted As ModificarSolicitudRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarSucursalesCompleted As ModificarSucursalesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarTipoCuotaCompleted As ModificarTipoCuotaCompletedEventHandler
        
        '''<remarks/>
        Public Event NuevosAsociadosCompleted As NuevosAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoAsociadoCompleted As ObtenerCorrelativoAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoBeneficiariosCompleted As ObtenerCorrelativoBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoCobradoresCompleted As ObtenerCorrelativoCobradoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoComisionesMercadeoCompleted As ObtenerCorrelativoComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoCooperativasCompleted As ObtenerCorrelativoCooperativasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoDirectivosCompleted As ObtenerCorrelativoDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoExclusionesCompleted As ObtenerCorrelativoExclusionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoFallecidosCompleted As ObtenerCorrelativoFallecidosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoInhabilitadosCompleted As ObtenerCorrelativoInhabilitadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoLibroRegistroCompleted As ObtenerCorrelativoLibroRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoNacionalidadesCompleted As ObtenerCorrelativoNacionalidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoParentescosCompleted As ObtenerCorrelativoParentescosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoProfesionesCompleted As ObtenerCorrelativoProfesionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoReferenciasCompleted As ObtenerCorrelativoReferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoRetirosCompleted As ObtenerCorrelativoRetirosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoSolicitudRetiroCompleted As ObtenerCorrelativoSolicitudRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerEstructuraSeleccionCompleted As ObtenerEstructuraSeleccionCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesoDividendoCompleted As ProcesoDividendoCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesoExclusionAsociadosCompleted As ProcesoExclusionAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesoFallecidosCompleted As ProcesoFallecidosCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesoInhabilitadosAsociadosCompleted As ProcesoInhabilitadosAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesoRehabilitadosAsociadosCompleted As ProcesoRehabilitadosAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event Recibo_DividendosCompleted As Recibo_DividendosCompletedEventHandler
        
        '''<remarks/>
        Public Event RehabilitacionAsociadoCompleted As RehabilitacionAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event RepAsociadosCtasCompleted As RepAsociadosCtasCompletedEventHandler
        
        '''<remarks/>
        Public Event RepAsociadosExcluidosCompleted As RepAsociadosExcluidosCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaPlanillaCompleted As CargaPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAsociadoCompleted As ConsultarAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAspectosCooperativosCompleted As ConsultarAspectosCooperativosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAspectosCooperativosxNombreCompleted As ConsultarAspectosCooperativosxNombreCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBeneficiariosCompleted As ConsultarBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCobradoresCompleted As ConsultarCobradoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCobradoresxNombreCompleted As ConsultarCobradoresxNombreCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarComisionesMercadeoCompleted As ConsultarComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCooperativasCompleted As ConsultarCooperativasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCuerposDirectivosCompleted As ConsultarCuerposDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDepartamentosCompleted As ConsultarDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDetalleComisionesMercadeoCompleted As ConsultarDetalleComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDetDirectivosCompleted As ConsultarDetDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDirectivosCompleted As ConsultarDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDividendosCompleted As ConsultarDividendosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEjecutivosMercadeoCompleted As ConsultarEjecutivosMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEjecutivosMercadeoxFiltroCompleted As ConsultarEjecutivosMercadeoxFiltroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEjecutivosMercadeoxNombreCompleted As ConsultarEjecutivosMercadeoxNombreCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEstadoIngresoCompleted As ConsultarEstadoIngresoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarExclusionCompleted As ConsultarExclusionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarFallecidosCompleted As ConsultarFallecidosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarFirmasCompleted As ConsultarFirmasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarFormaPagoCompleted As ConsultarFormaPagoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarInhabilitadosCompleted As ConsultarInhabilitadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarLibroRegistroCompleted As ConsultarLibroRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarLibroRegistroxAsociadoCompleted As ConsultarLibroRegistroxAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarMunicipiosCompleted As ConsultarMunicipiosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarNacionalidadesCompleted As ConsultarNacionalidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarObservacionesAsociadoCompleted As ConsultarObservacionesAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarParametrosCompleted As ConsultarParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarParentescosCompleted As ConsultarParentescosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPlanificacionCompleted As ConsultarPlanificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarProfesionesCompleted As ConsultarProfesionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarReferenciasCompleted As ConsultarReferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRetirosCompleted As ConsultarRetirosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarSolicitudRetiroCompleted As ConsultarSolicitudRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarSucursalesCompleted As ConsultarSucursalesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipoCuotaCompleted As ConsultarTipoCuotaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarAsociadoCompleted As EliminarAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarAspectosCooperativosCompleted As EliminarAspectosCooperativosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBeneficiariosCompleted As EliminarBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCobradoresCompleted As EliminarCobradoresCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarComisionesMercadeoCompleted As EliminarComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCooperativasCompleted As EliminarCooperativasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCuerposDirectivosCompleted As EliminarCuerposDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDepartamentosCompleted As EliminarDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDetalleComisionesMercadeoCompleted As EliminarDetalleComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDetDirectivosCompleted As EliminarDetDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDirectivosCompleted As EliminarDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDividendosCompleted As EliminarDividendosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarEjecutivosMercadeoCompleted As EliminarEjecutivosMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarEstadoIngresoCompleted As EliminarEstadoIngresoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarExclusionCompleted As EliminarExclusionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarFallecidosCompleted As EliminarFallecidosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarFirmasCompleted As EliminarFirmasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarFormaPagoCompleted As EliminarFormaPagoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarInhabilitadosCompleted As EliminarInhabilitadosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarLibroRegistroCompleted As EliminarLibroRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarMunicipiosCompleted As EliminarMunicipiosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarNacionalidadesCompleted As EliminarNacionalidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarParametrosCompleted As EliminarParametrosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarParentescosCompleted As EliminarParentescosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPlanificacionCompleted As EliminarPlanificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarProfesionesCompleted As EliminarProfesionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarReferenciasCompleted As EliminarReferenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarRetirosCompleted As EliminarRetirosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarSolicitudRetiroCompleted As EliminarSolicitudRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarSucursalesCompleted As EliminarSucursalesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarTipoCuotaCompleted As EliminarTipoCuotaCompletedEventHandler
        
        '''<remarks/>
        Public Event ExclusionAsociadoCompleted As ExclusionAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ExportarDatosAsociadoCompleted As ExportarDatosAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Generar_Movimiento_RetiroCompleted As Generar_Movimiento_RetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerarPartida_AspiranteAsociadoCompleted As GenerarPartida_AspiranteAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Impresion_DividendosNoCobradosCompleted As Impresion_DividendosNoCobradosCompletedEventHandler
        
        '''<remarks/>
        Public Event Impresion_DividendosxPagarCompleted As Impresion_DividendosxPagarCompletedEventHandler
        
        '''<remarks/>
        Public Event IngresoAsociadoCompleted As IngresoAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event InhabilitacionAsociadoCompleted As InhabilitacionAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarAsociadoCompleted As InsertarAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarAspectosCooperativosCompleted As InsertarAspectosCooperativosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBeneficiariosCompleted As InsertarBeneficiariosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCobradoresCompleted As InsertarCobradoresCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarComisionesMercadeoCompleted As InsertarComisionesMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCooperativasCompleted As InsertarCooperativasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCuerposDirectivosCompleted As InsertarCuerposDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDepartamentosCompleted As InsertarDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ingresarFormularioUIFCompleted As ingresarFormularioUIFCompletedEventHandler
        
        '''<remarks/>
        Public Event AperturaCtaAportacionesTransferenciaCompleted As AperturaCtaAportacionesTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event cambioDuiCompleted As cambioDuiCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarListaNegraCompleted As consultarListaNegraCompletedEventHandler
        
        '''<remarks/>
        Public Event cambiarEstadoListaNegraCompleted As cambiarEstadoListaNegraCompletedEventHandler
        
        '''<remarks/>
        Public Event modificartarListaNegraCompleted As modificartarListaNegraCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarListaNegraCompleted As insertarListaNegraCompletedEventHandler
        
        '''<remarks/>
        Public Event insertar_CatAsociados_DomicilioCompleted As insertar_CatAsociados_DomicilioCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDomiciliosCompleted As ConsultarDomiciliosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocRelacionesAsociadoCompleted As consultarAsocRelacionesAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarAsocRelacionesAsociadoCompleted As insertarAsocRelacionesAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarAsocRelacionesAsociadoCompleted As modificarAsocRelacionesAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarAsocRelacionesAsociadoCompleted As eliminarAsocRelacionesAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event validarCamposActividadEconomicaCompleted As validarCamposActividadEconomicaCompletedEventHandler
        
        '''<remarks/>
        Public Event validarInfComplementariaCompleted As validarInfComplementariaCompletedEventHandler
        
        '''<remarks/>
        Public Event validarPEPCompleted As validarPEPCompletedEventHandler
        
        '''<remarks/>
        Public Event validarOtrosDatosCompleted As validarOtrosDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event validarCamposDeclaracionJuradaCompleted As validarCamposDeclaracionJuradaCompletedEventHandler
        
        '''<remarks/>
        Public Event validarCamposObligatoriosCompleted As validarCamposObligatoriosCompletedEventHandler
        
        '''<remarks/>
        Public Event rptSolicitudIngresoCompleted As rptSolicitudIngresoCompletedEventHandler
        
        '''<remarks/>
        Public Event anularAsocDeclaracionJuradaDocumentosCompleted As anularAsocDeclaracionJuradaDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarAsocDeclaracionJuradaDocumentosCompleted As modificarAsocDeclaracionJuradaDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocDeclaracionJuradaDocumentosCompleted As consultarAsocDeclaracionJuradaDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarAsocDeclaracionJuradaDocumentosCompleted As insertarAsocDeclaracionJuradaDocumentosCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarAsocDeclaracionJuradaCompleted As modificarAsocDeclaracionJuradaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocDeclaracionJuradaCompleted As consultarAsocDeclaracionJuradaCompletedEventHandler
        
        '''<remarks/>
        Public Event generarIdDeclaracionJuradaCompleted As generarIdDeclaracionJuradaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarAsocDeclaracionJuradaCompleted As insertarAsocDeclaracionJuradaCompletedEventHandler
        
        '''<remarks/>
        Public Event generarIdPepCompleted As generarIdPepCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocPepCompleted As consultarAsocPepCompletedEventHandler
        
        '''<remarks/>
        Public Event insertar_AsocPepCompleted As insertar_AsocPepCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarAsocPepCompleted As modificarAsocPepCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocPep_FamiliaresCompleted As consultarAsocPep_FamiliaresCompletedEventHandler
        
        '''<remarks/>
        Public Event insertar_AsocPep_FamiliaresCompleted As insertar_AsocPep_FamiliaresCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarAsocPep_FamiliaresCompleted As modificarAsocPep_FamiliaresCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarAsocPep_FamiliaresCompleted As eliminarAsocPep_FamiliaresCompletedEventHandler
        
        '''<remarks/>
        Public Event insertar_AsocPep_SociedadesCompleted As insertar_AsocPep_SociedadesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocPep_SociedadesCompleted As consultarAsocPep_SociedadesCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarAsocPep_SociedadesCompleted As modificarAsocPep_SociedadesCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarAsocPep_SociedadesCompleted As eliminarAsocPep_SociedadesCompletedEventHandler
        
        '''<remarks/>
        Public Event inactivarAsocActividadEconomicaCompleted As inactivarAsocActividadEconomicaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocActividadEconomiaCompleted As consultarAsocActividadEconomiaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarAsocActividadEconomicaCompleted As insertarAsocActividadEconomicaCompletedEventHandler
        
        '''<remarks/>
        Public Event actulizarAsocActividadEconomicaCompleted As actulizarAsocActividadEconomicaCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarCat_AsociadosCompleted As modificarCat_AsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCat_AsociadosCompleted As insertarCat_AsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event insertar_CatAsociados_OtrosDatosCompleted As insertar_CatAsociados_OtrosDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event insertar_CatAsociados_InfComplementariaCompleted As insertar_CatAsociados_InfComplementariaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCat_AsociadosCompleted As consultarCat_AsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCatPersonaJuridicaCompleted As consultarCatPersonaJuridicaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertar_catPersonaJuridicaCompleted As insertar_catPersonaJuridicaCompletedEventHandler
        
        '''<remarks/>
        Public Event recuperarIdPersonaJuridicaCompleted As recuperarIdPersonaJuridicaCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarPersonaJuridicaCompleted As modificarPersonaJuridicaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarAsocPersonaJuridicaDirectivosCompleted As consultarAsocPersonaJuridicaDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event actualizarAsocPersonaJuridicaDirectivosCompleted As actualizarAsocPersonaJuridicaDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarAsocPersonaJuridicaDirectivosCompleted As insertarAsocPersonaJuridicaDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarAsocPersonaJuridicaDirectivosCompleted As eliminarAsocPersonaJuridicaDirectivosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCatActividadEconomicaCompleted As consultarCatActividadEconomicaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCatalogosTiposCatalogoCompleted As insertarCatalogosTiposCatalogoCompletedEventHandler
        
        '''<remarks/>
        Public Event actualizarCatalogosTiposCatalogoCompleted As actualizarCatalogosTiposCatalogoCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCatalogosTiposCatalogoCompleted As consultarCatalogosTiposCatalogoCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarDbCatalogosCatalogosCompleted As insertarDbCatalogosCatalogosCompletedEventHandler
        
        '''<remarks/>
        Public Event actualizarDbCatalogosCatalogosCompleted As actualizarDbCatalogosCatalogosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarDbCatalogosCatalogosCompleted As consultarDbCatalogosCatalogosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarMercaRutasAsesoresCompleted As consultarMercaRutasAsesoresCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarNuevaVistaMercaRutasCompleted As insertarNuevaVistaMercaRutasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarMercaRutasCompleted As consultarMercaRutasCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarMercaRutasCompleted As insertarMercaRutasCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarRevisionMercaRutasCompleted As insertarRevisionMercaRutasCompletedEventHandler
        
        '''<remarks/>
        Public Event impuestosTransacccionesFinancierasCompleted As impuestosTransacccionesFinancierasCompletedEventHandler
        
        '''<remarks/>
        Public Event capitalzarDividendosNoCobradosCompleted As capitalzarDividendosNoCobradosCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarDividendosNoCobradosCompleted As consultarDividendosNoCobradosCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_InversionistasMoraCompleted As Consultar_InversionistasMoraCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_CatAsociadosCompleted As Consultar_CatAsociadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarAsociados_AhDividendosCompleted As ConsultarAsociados_AhDividendosCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_EjecutivosMercadeoCompleted As Consultar_EjecutivosMercadeoCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivacionCuentasAportacionCompleted As ActivacionCuentasAportacionCompletedEventHandler
        
        '''<remarks/>
        Public Event AlmacenaEstructuraSeleccionCompleted As AlmacenaEstructuraSeleccionCompletedEventHandler
        
        '''<remarks/>
        Public Event AlmacenarMatrizDividendosCompleted As AlmacenarMatrizDividendosCompletedEventHandler
        
        '''<remarks/>
        Public Event Aplicacion_Dividendos_CuentasCompleted As Aplicacion_Dividendos_CuentasCompletedEventHandler
        
        '''<remarks/>
        Public Event Aplicacion_Dividendos_NoCobradosCompleted As Aplicacion_Dividendos_NoCobradosCompletedEventHandler
        
        '''<remarks/>
        Public Event AutorizaDatosCompleted As AutorizaDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event CalculaComisionesEjecutivosCompleted As CalculaComisionesEjecutivosCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepAsociadosFallecidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepAsociadosFallecidos(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepAsociadosFallecidos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepAsociadosFallecidos(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepAsociadosFallecidos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepAsociadosFallecidos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepAsociadosFallecidosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepAsociadosFallecidosAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepAsociadosFallecidosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepAsociadosFallecidosOperationCompleted Is Nothing) Then
                Me.RepAsociadosFallecidosOperationCompleted = AddressOf Me.OnRepAsociadosFallecidosOperationCompleted
            End If
            Me.InvokeAsync("RepAsociadosFallecidos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepAsociadosFallecidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepAsociadosFallecidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepAsociadosFallecidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepAsociadosFallecidosCompleted(Me, New RepAsociadosFallecidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepAsociadosInhabilitados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepAsociadosInhabilitados(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepAsociadosInhabilitados", New Object() {pFechaIni, pFechaFin, pTipo, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepAsociadosInhabilitados(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepAsociadosInhabilitados", New Object() {pFechaIni, pFechaFin, pTipo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepAsociadosInhabilitados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepAsociadosInhabilitadosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepAsociadosInhabilitadosAsync(pFechaIni, pFechaFin, pTipo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepAsociadosInhabilitadosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepAsociadosInhabilitadosOperationCompleted Is Nothing) Then
                Me.RepAsociadosInhabilitadosOperationCompleted = AddressOf Me.OnRepAsociadosInhabilitadosOperationCompleted
            End If
            Me.InvokeAsync("RepAsociadosInhabilitados", New Object() {pFechaIni, pFechaFin, pTipo, pUs, pPa, pSucursal}, Me.RepAsociadosInhabilitadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepAsociadosInhabilitadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepAsociadosInhabilitadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepAsociadosInhabilitadosCompleted(Me, New RepAsociadosInhabilitadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepConsolidadoResultadosMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepConsolidadoResultadosMercadeo(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepConsolidadoResultadosMercadeo", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepConsolidadoResultadosMercadeo(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepConsolidadoResultadosMercadeo", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepConsolidadoResultadosMercadeo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepConsolidadoResultadosMercadeoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepConsolidadoResultadosMercadeoAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepConsolidadoResultadosMercadeoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepConsolidadoResultadosMercadeoOperationCompleted Is Nothing) Then
                Me.RepConsolidadoResultadosMercadeoOperationCompleted = AddressOf Me.OnRepConsolidadoResultadosMercadeoOperationCompleted
            End If
            Me.InvokeAsync("RepConsolidadoResultadosMercadeo", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepConsolidadoResultadosMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepConsolidadoResultadosMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepConsolidadoResultadosMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepConsolidadoResultadosMercadeoCompleted(Me, New RepConsolidadoResultadosMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepGerencial_AcumuladoMetas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepGerencial_AcumuladoMetas(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepGerencial_AcumuladoMetas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepGerencial_AcumuladoMetas(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepGerencial_AcumuladoMetas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepGerencial_AcumuladoMetas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepGerencial_AcumuladoMetasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepGerencial_AcumuladoMetasAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepGerencial_AcumuladoMetasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepGerencial_AcumuladoMetasOperationCompleted Is Nothing) Then
                Me.RepGerencial_AcumuladoMetasOperationCompleted = AddressOf Me.OnRepGerencial_AcumuladoMetasOperationCompleted
            End If
            Me.InvokeAsync("RepGerencial_AcumuladoMetas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepGerencial_AcumuladoMetasOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepGerencial_AcumuladoMetasOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepGerencial_AcumuladoMetasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepGerencial_AcumuladoMetasCompleted(Me, New RepGerencial_AcumuladoMetasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepGerencial_EvaluacionxAnio", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepGerencial_EvaluacionxAnio(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepGerencial_EvaluacionxAnio", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepGerencial_EvaluacionxAnio(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepGerencial_EvaluacionxAnio", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepGerencial_EvaluacionxAnio(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepGerencial_EvaluacionxAnioAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepGerencial_EvaluacionxAnioAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepGerencial_EvaluacionxAnioAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepGerencial_EvaluacionxAnioOperationCompleted Is Nothing) Then
                Me.RepGerencial_EvaluacionxAnioOperationCompleted = AddressOf Me.OnRepGerencial_EvaluacionxAnioOperationCompleted
            End If
            Me.InvokeAsync("RepGerencial_EvaluacionxAnio", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepGerencial_EvaluacionxAnioOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepGerencial_EvaluacionxAnioOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepGerencial_EvaluacionxAnioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepGerencial_EvaluacionxAnioCompleted(Me, New RepGerencial_EvaluacionxAnioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepGerencial_ResultadosHistoricos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepGerencial_ResultadosHistoricos(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepGerencial_ResultadosHistoricos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepGerencial_ResultadosHistoricos(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepGerencial_ResultadosHistoricos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepGerencial_ResultadosHistoricos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepGerencial_ResultadosHistoricosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepGerencial_ResultadosHistoricosAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepGerencial_ResultadosHistoricosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepGerencial_ResultadosHistoricosOperationCompleted Is Nothing) Then
                Me.RepGerencial_ResultadosHistoricosOperationCompleted = AddressOf Me.OnRepGerencial_ResultadosHistoricosOperationCompleted
            End If
            Me.InvokeAsync("RepGerencial_ResultadosHistoricos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepGerencial_ResultadosHistoricosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepGerencial_ResultadosHistoricosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepGerencial_ResultadosHistoricosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepGerencial_ResultadosHistoricosCompleted(Me, New RepGerencial_ResultadosHistoricosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepInformeMetasMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepInformeMetasMercadeo(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepInformeMetasMercadeo", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepInformeMetasMercadeo(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepInformeMetasMercadeo", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepInformeMetasMercadeo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepInformeMetasMercadeoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepInformeMetasMercadeoAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepInformeMetasMercadeoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepInformeMetasMercadeoOperationCompleted Is Nothing) Then
                Me.RepInformeMetasMercadeoOperationCompleted = AddressOf Me.OnRepInformeMetasMercadeoOperationCompleted
            End If
            Me.InvokeAsync("RepInformeMetasMercadeo", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepInformeMetasMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepInformeMetasMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepInformeMetasMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepInformeMetasMercadeoCompleted(Me, New RepInformeMetasMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepInformeMetasxProducto", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepInformeMetasxProducto(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pCodInst As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepInformeMetasxProducto", New Object() {pFechaIni, pFechaFin, pCodInst, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepInformeMetasxProducto(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pCodInst As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepInformeMetasxProducto", New Object() {pFechaIni, pFechaFin, pCodInst, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepInformeMetasxProducto(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepInformeMetasxProductoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pCodInst As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepInformeMetasxProductoAsync(pFechaIni, pFechaFin, pCodInst, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepInformeMetasxProductoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pCodInst As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepInformeMetasxProductoOperationCompleted Is Nothing) Then
                Me.RepInformeMetasxProductoOperationCompleted = AddressOf Me.OnRepInformeMetasxProductoOperationCompleted
            End If
            Me.InvokeAsync("RepInformeMetasxProducto", New Object() {pFechaIni, pFechaFin, pCodInst, pUs, pPa, pSucursal}, Me.RepInformeMetasxProductoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepInformeMetasxProductoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepInformeMetasxProductoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepInformeMetasxProductoCompleted(Me, New RepInformeMetasxProductoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Reporte_Mora_Asociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_Mora_Asociados(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_Mora_Asociados", New Object() {pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_Mora_Asociados(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_Mora_Asociados", New Object() {pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_Mora_Asociados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_Mora_AsociadosAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Reporte_Mora_AsociadosAsync(pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_Mora_AsociadosAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_Mora_AsociadosOperationCompleted Is Nothing) Then
                Me.Reporte_Mora_AsociadosOperationCompleted = AddressOf Me.OnReporte_Mora_AsociadosOperationCompleted
            End If
            Me.InvokeAsync("Reporte_Mora_Asociados", New Object() {pUs, pPa, pSucursal}, Me.Reporte_Mora_AsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_Mora_AsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_Mora_AsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_Mora_AsociadosCompleted(Me, New Reporte_Mora_AsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Reporte_RetiroAsociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_RetiroAsociados(ByVal pTipo As String, ByVal pNoActa As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_RetiroAsociados", New Object() {pTipo, pNoActa, pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_RetiroAsociados(ByVal pTipo As String, ByVal pNoActa As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_RetiroAsociados", New Object() {pTipo, pNoActa, pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_RetiroAsociados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_RetiroAsociadosAsync(ByVal pTipo As String, ByVal pNoActa As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Reporte_RetiroAsociadosAsync(pTipo, pNoActa, pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_RetiroAsociadosAsync(ByVal pTipo As String, ByVal pNoActa As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_RetiroAsociadosOperationCompleted Is Nothing) Then
                Me.Reporte_RetiroAsociadosOperationCompleted = AddressOf Me.OnReporte_RetiroAsociadosOperationCompleted
            End If
            Me.InvokeAsync("Reporte_RetiroAsociados", New Object() {pTipo, pNoActa, pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.Reporte_RetiroAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_RetiroAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_RetiroAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_RetiroAsociadosCompleted(Me, New Reporte_RetiroAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Reporte_RetiroAsociadosGr", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_RetiroAsociadosGr(ByVal pTipo As String, ByVal pNoActa As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_RetiroAsociadosGr", New Object() {pTipo, pNoActa, pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_RetiroAsociadosGr(ByVal pTipo As String, ByVal pNoActa As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_RetiroAsociadosGr", New Object() {pTipo, pNoActa, pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_RetiroAsociadosGr(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_RetiroAsociadosGrAsync(ByVal pTipo As String, ByVal pNoActa As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Reporte_RetiroAsociadosGrAsync(pTipo, pNoActa, pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_RetiroAsociadosGrAsync(ByVal pTipo As String, ByVal pNoActa As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_RetiroAsociadosGrOperationCompleted Is Nothing) Then
                Me.Reporte_RetiroAsociadosGrOperationCompleted = AddressOf Me.OnReporte_RetiroAsociadosGrOperationCompleted
            End If
            Me.InvokeAsync("Reporte_RetiroAsociadosGr", New Object() {pTipo, pNoActa, pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.Reporte_RetiroAsociadosGrOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_RetiroAsociadosGrOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_RetiroAsociadosGrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_RetiroAsociadosGrCompleted(Me, New Reporte_RetiroAsociadosGrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Reporte_SaldosAsociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_SaldosAsociados(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_SaldosAsociados", New Object() {pFechaIni, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_SaldosAsociados(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_SaldosAsociados", New Object() {pFechaIni, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_SaldosAsociados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_SaldosAsociadosAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Reporte_SaldosAsociadosAsync(pFechaIni, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_SaldosAsociadosAsync(ByVal pFechaIni As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_SaldosAsociadosOperationCompleted Is Nothing) Then
                Me.Reporte_SaldosAsociadosOperationCompleted = AddressOf Me.OnReporte_SaldosAsociadosOperationCompleted
            End If
            Me.InvokeAsync("Reporte_SaldosAsociados", New Object() {pFechaIni, pUs, pPa, pSucursal}, Me.Reporte_SaldosAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_SaldosAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_SaldosAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_SaldosAsociadosCompleted(Me, New Reporte_SaldosAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ReporteCuentasAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteCuentasAsociado(ByVal pDUI As String, ByVal pDPF As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteCuentasAsociado", New Object() {pDUI, pDPF, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteCuentasAsociado(ByVal pDUI As String, ByVal pDPF As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteCuentasAsociado", New Object() {pDUI, pDPF, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteCuentasAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteCuentasAsociadoAsync(ByVal pDUI As String, ByVal pDPF As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteCuentasAsociadoAsync(pDUI, pDPF, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteCuentasAsociadoAsync(ByVal pDUI As String, ByVal pDPF As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteCuentasAsociadoOperationCompleted Is Nothing) Then
                Me.ReporteCuentasAsociadoOperationCompleted = AddressOf Me.OnReporteCuentasAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ReporteCuentasAsociado", New Object() {pDUI, pDPF, pUsuario, pPassword, pSucursal}, Me.ReporteCuentasAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteCuentasAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteCuentasAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteCuentasAsociadoCompleted(Me, New ReporteCuentasAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ReporteDividendosAh", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteDividendosAh(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteDividendosAh", New Object() {pAnnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteDividendosAh(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteDividendosAh", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteDividendosAh(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosAhAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteDividendosAhAsync(pAnnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosAhAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteDividendosAhOperationCompleted Is Nothing) Then
                Me.ReporteDividendosAhOperationCompleted = AddressOf Me.OnReporteDividendosAhOperationCompleted
            End If
            Me.InvokeAsync("ReporteDividendosAh", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, Me.ReporteDividendosAhOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteDividendosAhOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteDividendosAhCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteDividendosAhCompleted(Me, New ReporteDividendosAhCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ReporteDividendosAp", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteDividendosAp(ByVal pFechaI As Date, ByVal pFechaF As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteDividendosAp", New Object() {pFechaI, pFechaF, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteDividendosAp(ByVal pFechaI As Date, ByVal pFechaF As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteDividendosAp", New Object() {pFechaI, pFechaF, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteDividendosAp(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosApAsync(ByVal pFechaI As Date, ByVal pFechaF As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteDividendosApAsync(pFechaI, pFechaF, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosApAsync(ByVal pFechaI As Date, ByVal pFechaF As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteDividendosApOperationCompleted Is Nothing) Then
                Me.ReporteDividendosApOperationCompleted = AddressOf Me.OnReporteDividendosApOperationCompleted
            End If
            Me.InvokeAsync("ReporteDividendosAp", New Object() {pFechaI, pFechaF, pUsuario, pPassword, pSucursal}, Me.ReporteDividendosApOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteDividendosApOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteDividendosApCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteDividendosApCompleted(Me, New ReporteDividendosApCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ReporteDividendosCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteDividendosCaja(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteDividendosCaja", New Object() {pAnnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteDividendosCaja(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteDividendosCaja", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteDividendosCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosCajaAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteDividendosCajaAsync(pAnnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosCajaAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteDividendosCajaOperationCompleted Is Nothing) Then
                Me.ReporteDividendosCajaOperationCompleted = AddressOf Me.OnReporteDividendosCajaOperationCompleted
            End If
            Me.InvokeAsync("ReporteDividendosCaja", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, Me.ReporteDividendosCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteDividendosCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteDividendosCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteDividendosCajaCompleted(Me, New ReporteDividendosCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ReporteDividendosPrest", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteDividendosPrest(ByVal pFechaI As Date, ByVal pFechaF As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteDividendosPrest", New Object() {pFechaI, pFechaF, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteDividendosPrest(ByVal pFechaI As Date, ByVal pFechaF As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteDividendosPrest", New Object() {pFechaI, pFechaF, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteDividendosPrest(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosPrestAsync(ByVal pFechaI As Date, ByVal pFechaF As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteDividendosPrestAsync(pFechaI, pFechaF, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosPrestAsync(ByVal pFechaI As Date, ByVal pFechaF As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteDividendosPrestOperationCompleted Is Nothing) Then
                Me.ReporteDividendosPrestOperationCompleted = AddressOf Me.OnReporteDividendosPrestOperationCompleted
            End If
            Me.InvokeAsync("ReporteDividendosPrest", New Object() {pFechaI, pFechaF, pUsuario, pPassword, pSucursal}, Me.ReporteDividendosPrestOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteDividendosPrestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteDividendosPrestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteDividendosPrestCompleted(Me, New ReporteDividendosPrestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ReporteDividendosRetirados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteDividendosRetirados(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteDividendosRetirados", New Object() {pAnnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteDividendosRetirados(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteDividendosRetirados", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteDividendosRetirados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosRetiradosAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteDividendosRetiradosAsync(pAnnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteDividendosRetiradosAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteDividendosRetiradosOperationCompleted Is Nothing) Then
                Me.ReporteDividendosRetiradosOperationCompleted = AddressOf Me.OnReporteDividendosRetiradosOperationCompleted
            End If
            Me.InvokeAsync("ReporteDividendosRetirados", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, Me.ReporteDividendosRetiradosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteDividendosRetiradosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteDividendosRetiradosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteDividendosRetiradosCompleted(Me, New ReporteDividendosRetiradosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ReporteRenunciaAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteRenunciaAsociado(ByVal pDUI As String, ByVal pFechaReporte As Date, ByVal pObsAsociado As String, ByVal pObsGerente As String, ByVal pObsConsejo As String, ByVal pFechaSesion As Date, ByVal pNoActa As String, ByVal pAceptada As Boolean, ByVal pRechazada As Boolean, ByVal pFechaProy As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteRenunciaAsociado", New Object() {pDUI, pFechaReporte, pObsAsociado, pObsGerente, pObsConsejo, pFechaSesion, pNoActa, pAceptada, pRechazada, pFechaProy, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteRenunciaAsociado(ByVal pDUI As String, ByVal pFechaReporte As Date, ByVal pObsAsociado As String, ByVal pObsGerente As String, ByVal pObsConsejo As String, ByVal pFechaSesion As Date, ByVal pNoActa As String, ByVal pAceptada As Boolean, ByVal pRechazada As Boolean, ByVal pFechaProy As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteRenunciaAsociado", New Object() {pDUI, pFechaReporte, pObsAsociado, pObsGerente, pObsConsejo, pFechaSesion, pNoActa, pAceptada, pRechazada, pFechaProy, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteRenunciaAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteRenunciaAsociadoAsync(ByVal pDUI As String, ByVal pFechaReporte As Date, ByVal pObsAsociado As String, ByVal pObsGerente As String, ByVal pObsConsejo As String, ByVal pFechaSesion As Date, ByVal pNoActa As String, ByVal pAceptada As Boolean, ByVal pRechazada As Boolean, ByVal pFechaProy As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReporteRenunciaAsociadoAsync(pDUI, pFechaReporte, pObsAsociado, pObsGerente, pObsConsejo, pFechaSesion, pNoActa, pAceptada, pRechazada, pFechaProy, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteRenunciaAsociadoAsync(ByVal pDUI As String, ByVal pFechaReporte As Date, ByVal pObsAsociado As String, ByVal pObsGerente As String, ByVal pObsConsejo As String, ByVal pFechaSesion As Date, ByVal pNoActa As String, ByVal pAceptada As Boolean, ByVal pRechazada As Boolean, ByVal pFechaProy As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteRenunciaAsociadoOperationCompleted Is Nothing) Then
                Me.ReporteRenunciaAsociadoOperationCompleted = AddressOf Me.OnReporteRenunciaAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ReporteRenunciaAsociado", New Object() {pDUI, pFechaReporte, pObsAsociado, pObsGerente, pObsConsejo, pFechaSesion, pNoActa, pAceptada, pRechazada, pFechaProy, pUsuario, pPassword, pSucursal}, Me.ReporteRenunciaAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteRenunciaAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteRenunciaAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteRenunciaAsociadoCompleted(Me, New ReporteRenunciaAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepReingresosAsociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepReingresosAsociados(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepReingresosAsociados", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepReingresosAsociados(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepReingresosAsociados", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepReingresosAsociados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepReingresosAsociadosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepReingresosAsociadosAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepReingresosAsociadosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepReingresosAsociadosOperationCompleted Is Nothing) Then
                Me.RepReingresosAsociadosOperationCompleted = AddressOf Me.OnRepReingresosAsociadosOperationCompleted
            End If
            Me.InvokeAsync("RepReingresosAsociados", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepReingresosAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepReingresosAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepReingresosAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepReingresosAsociadosCompleted(Me, New RepReingresosAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepResultadosComparados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepResultadosComparados(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepResultadosComparados", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepResultadosComparados(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepResultadosComparados", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepResultadosComparados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepResultadosComparadosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepResultadosComparadosAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepResultadosComparadosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepResultadosComparadosOperationCompleted Is Nothing) Then
                Me.RepResultadosComparadosOperationCompleted = AddressOf Me.OnRepResultadosComparadosOperationCompleted
            End If
            Me.InvokeAsync("RepResultadosComparados", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepResultadosComparadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepResultadosComparadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepResultadosComparadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepResultadosComparadosCompleted(Me, New RepResultadosComparadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RetiroAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetiroAsociado(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pComite As String, ByVal pRealiza As String, ByVal pRevisa As String, ByVal pCargoRealiza As String, ByVal pCargoRevisa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetiroAsociado", New Object() {pFecIni, pFecFin, pComite, pRealiza, pRevisa, pCargoRealiza, pCargoRevisa, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetiroAsociado(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pComite As String, ByVal pRealiza As String, ByVal pRevisa As String, ByVal pCargoRealiza As String, ByVal pCargoRevisa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetiroAsociado", New Object() {pFecIni, pFecFin, pComite, pRealiza, pRevisa, pCargoRealiza, pCargoRevisa, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetiroAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetiroAsociadoAsync(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pComite As String, ByVal pRealiza As String, ByVal pRevisa As String, ByVal pCargoRealiza As String, ByVal pCargoRevisa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RetiroAsociadoAsync(pFecIni, pFecFin, pComite, pRealiza, pRevisa, pCargoRealiza, pCargoRevisa, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetiroAsociadoAsync(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pComite As String, ByVal pRealiza As String, ByVal pRevisa As String, ByVal pCargoRealiza As String, ByVal pCargoRevisa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RetiroAsociadoOperationCompleted Is Nothing) Then
                Me.RetiroAsociadoOperationCompleted = AddressOf Me.OnRetiroAsociadoOperationCompleted
            End If
            Me.InvokeAsync("RetiroAsociado", New Object() {pFecIni, pFecFin, pComite, pRealiza, pRevisa, pCargoRealiza, pCargoRevisa, pUs, pPa, pSucursal}, Me.RetiroAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetiroAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetiroAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetiroAsociadoCompleted(Me, New RetiroAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/VerificaAsociados_Exclusion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaAsociados_Exclusion(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("VerificaAsociados_Exclusion", New Object() {pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaAsociados_Exclusion(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaAsociados_Exclusion", New Object() {pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaAsociados_Exclusion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaAsociados_ExclusionAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificaAsociados_ExclusionAsync(pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaAsociados_ExclusionAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaAsociados_ExclusionOperationCompleted Is Nothing) Then
                Me.VerificaAsociados_ExclusionOperationCompleted = AddressOf Me.OnVerificaAsociados_ExclusionOperationCompleted
            End If
            Me.InvokeAsync("VerificaAsociados_Exclusion", New Object() {pFecha, pUsuario, pPassword, pSucursal}, Me.VerificaAsociados_ExclusionOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaAsociados_ExclusionOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaAsociados_ExclusionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaAsociados_ExclusionCompleted(Me, New VerificaAsociados_ExclusionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/VerificaAsociados_MoraInhabilitacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaAsociados_MoraInhabilitacion(ByVal pTodos As Boolean, ByVal pDui As String, ByVal pFecha As Date, ByVal pTipo As TipoInhabilitacion, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("VerificaAsociados_MoraInhabilitacion", New Object() {pTodos, pDui, pFecha, pTipo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaAsociados_MoraInhabilitacion(ByVal pTodos As Boolean, ByVal pDui As String, ByVal pFecha As Date, ByVal pTipo As TipoInhabilitacion, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaAsociados_MoraInhabilitacion", New Object() {pTodos, pDui, pFecha, pTipo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaAsociados_MoraInhabilitacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaAsociados_MoraInhabilitacionAsync(ByVal pTodos As Boolean, ByVal pDui As String, ByVal pFecha As Date, ByVal pTipo As TipoInhabilitacion, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificaAsociados_MoraInhabilitacionAsync(pTodos, pDui, pFecha, pTipo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaAsociados_MoraInhabilitacionAsync(ByVal pTodos As Boolean, ByVal pDui As String, ByVal pFecha As Date, ByVal pTipo As TipoInhabilitacion, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaAsociados_MoraInhabilitacionOperationCompleted Is Nothing) Then
                Me.VerificaAsociados_MoraInhabilitacionOperationCompleted = AddressOf Me.OnVerificaAsociados_MoraInhabilitacionOperationCompleted
            End If
            Me.InvokeAsync("VerificaAsociados_MoraInhabilitacion", New Object() {pTodos, pDui, pFecha, pTipo, pUsuario, pPassword, pSucursal}, Me.VerificaAsociados_MoraInhabilitacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaAsociados_MoraInhabilitacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaAsociados_MoraInhabilitacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaAsociados_MoraInhabilitacionCompleted(Me, New VerificaAsociados_MoraInhabilitacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Verificacion_DividendosNoCobrados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Verificacion_DividendosNoCobrados(ByVal pAnnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Verificacion_DividendosNoCobrados", New Object() {pAnnio, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificacion_DividendosNoCobrados(ByVal pAnnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Verificacion_DividendosNoCobrados", New Object() {pAnnio, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificacion_DividendosNoCobrados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Verificacion_DividendosNoCobradosAsync(ByVal pAnnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Verificacion_DividendosNoCobradosAsync(pAnnio, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Verificacion_DividendosNoCobradosAsync(ByVal pAnnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Verificacion_DividendosNoCobradosOperationCompleted Is Nothing) Then
                Me.Verificacion_DividendosNoCobradosOperationCompleted = AddressOf Me.OnVerificacion_DividendosNoCobradosOperationCompleted
            End If
            Me.InvokeAsync("Verificacion_DividendosNoCobrados", New Object() {pAnnio, pUs, pPa, pSucursal}, Me.Verificacion_DividendosNoCobradosOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificacion_DividendosNoCobradosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Verificacion_DividendosNoCobradosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Verificacion_DividendosNoCobradosCompleted(Me, New Verificacion_DividendosNoCobradosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/VerificaNit", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaNit(ByVal pNit As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("VerificaNit", New Object() {pNit, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaNit(ByVal pNit As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaNit", New Object() {pNit, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaNit(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaNitAsync(ByVal pNit As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.VerificaNitAsync(pNit, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaNitAsync(ByVal pNit As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaNitOperationCompleted Is Nothing) Then
                Me.VerificaNitOperationCompleted = AddressOf Me.OnVerificaNitOperationCompleted
            End If
            Me.InvokeAsync("VerificaNit", New Object() {pNit, pUs, pPa, pSucursal}, Me.VerificaNitOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaNitOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaNitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaNitCompleted(Me, New VerificaNitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/VerificarProcesoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarProcesoRetiro(ByVal pDui As String, ByVal pNoSocio As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("VerificarProcesoRetiro", New Object() {pDui, pNoSocio, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarProcesoRetiro(ByVal pDui As String, ByVal pNoSocio As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarProcesoRetiro", New Object() {pDui, pNoSocio, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarProcesoRetiro(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarProcesoRetiroAsync(ByVal pDui As String, ByVal pNoSocio As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.VerificarProcesoRetiroAsync(pDui, pNoSocio, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarProcesoRetiroAsync(ByVal pDui As String, ByVal pNoSocio As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificarProcesoRetiroOperationCompleted Is Nothing) Then
                Me.VerificarProcesoRetiroOperationCompleted = AddressOf Me.OnVerificarProcesoRetiroOperationCompleted
            End If
            Me.InvokeAsync("VerificarProcesoRetiro", New Object() {pDui, pNoSocio, pUs, pPa, pSucursal}, Me.VerificarProcesoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarProcesoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarProcesoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarProcesoRetiroCompleted(Me, New VerificarProcesoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarDetalleComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDetalleComisionesMercadeo(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDetalleComisionesMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDetalleComisionesMercadeo(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDetalleComisionesMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDetalleComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDetalleComisionesMercadeoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDetalleComisionesMercadeoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDetalleComisionesMercadeoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDetalleComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.InsertarDetalleComisionesMercadeoOperationCompleted = AddressOf Me.OnInsertarDetalleComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("InsertarDetalleComisionesMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDetalleComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDetalleComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDetalleComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDetalleComisionesMercadeoCompleted(Me, New InsertarDetalleComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarDetDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDetDirectivos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDetDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDetDirectivos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDetDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDetDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDetDirectivosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDetDirectivosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDetDirectivosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDetDirectivosOperationCompleted Is Nothing) Then
                Me.InsertarDetDirectivosOperationCompleted = AddressOf Me.OnInsertarDetDirectivosOperationCompleted
            End If
            Me.InvokeAsync("InsertarDetDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDetDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDetDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDetDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDetDirectivosCompleted(Me, New InsertarDetDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDirectivos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDirectivos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDirectivosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDirectivosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDirectivosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDirectivosOperationCompleted Is Nothing) Then
                Me.InsertarDirectivosOperationCompleted = AddressOf Me.OnInsertarDirectivosOperationCompleted
            End If
            Me.InvokeAsync("InsertarDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDirectivosCompleted(Me, New InsertarDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarDividendos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDividendos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDividendos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDividendos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDividendos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDividendos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDividendosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDividendosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDividendosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDividendosOperationCompleted Is Nothing) Then
                Me.InsertarDividendosOperationCompleted = AddressOf Me.OnInsertarDividendosOperationCompleted
            End If
            Me.InvokeAsync("InsertarDividendos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDividendosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDividendosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDividendosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDividendosCompleted(Me, New InsertarDividendosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarEjecutivosMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarEjecutivosMercadeo(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarEjecutivosMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarEjecutivosMercadeo(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarEjecutivosMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarEjecutivosMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarEjecutivosMercadeoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarEjecutivosMercadeoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarEjecutivosMercadeoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarEjecutivosMercadeoOperationCompleted Is Nothing) Then
                Me.InsertarEjecutivosMercadeoOperationCompleted = AddressOf Me.OnInsertarEjecutivosMercadeoOperationCompleted
            End If
            Me.InvokeAsync("InsertarEjecutivosMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarEjecutivosMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarEjecutivosMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarEjecutivosMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarEjecutivosMercadeoCompleted(Me, New InsertarEjecutivosMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarEstadoIngreso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarEstadoIngreso(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarEstadoIngreso", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarEstadoIngreso(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarEstadoIngreso", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarEstadoIngreso(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarEstadoIngresoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarEstadoIngresoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarEstadoIngresoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarEstadoIngresoOperationCompleted Is Nothing) Then
                Me.InsertarEstadoIngresoOperationCompleted = AddressOf Me.OnInsertarEstadoIngresoOperationCompleted
            End If
            Me.InvokeAsync("InsertarEstadoIngreso", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarEstadoIngresoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarEstadoIngresoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarEstadoIngresoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarEstadoIngresoCompleted(Me, New InsertarEstadoIngresoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarExclusion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarExclusion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarExclusion", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarExclusion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarExclusion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarExclusion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarExclusionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarExclusionAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarExclusionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarExclusionOperationCompleted Is Nothing) Then
                Me.InsertarExclusionOperationCompleted = AddressOf Me.OnInsertarExclusionOperationCompleted
            End If
            Me.InvokeAsync("InsertarExclusion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarExclusionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarExclusionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarExclusionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarExclusionCompleted(Me, New InsertarExclusionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarFallecidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarFallecidos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarFallecidos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarFallecidos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarFallecidos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarFallecidos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarFallecidosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarFallecidosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarFallecidosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarFallecidosOperationCompleted Is Nothing) Then
                Me.InsertarFallecidosOperationCompleted = AddressOf Me.OnInsertarFallecidosOperationCompleted
            End If
            Me.InvokeAsync("InsertarFallecidos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarFallecidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarFallecidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarFallecidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarFallecidosCompleted(Me, New InsertarFallecidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarFirmas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarFirmas(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarFirmas", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarFirmas(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarFirmas", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarFirmas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarFirmasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarFirmasAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarFirmasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarFirmasOperationCompleted Is Nothing) Then
                Me.InsertarFirmasOperationCompleted = AddressOf Me.OnInsertarFirmasOperationCompleted
            End If
            Me.InvokeAsync("InsertarFirmas", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarFirmasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarFirmasOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarFirmasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarFirmasCompleted(Me, New InsertarFirmasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarFormaPago", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarFormaPago(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarFormaPago", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarFormaPago(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarFormaPago", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarFormaPago(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarFormaPagoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarFormaPagoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarFormaPagoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarFormaPagoOperationCompleted Is Nothing) Then
                Me.InsertarFormaPagoOperationCompleted = AddressOf Me.OnInsertarFormaPagoOperationCompleted
            End If
            Me.InvokeAsync("InsertarFormaPago", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarFormaPagoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarFormaPagoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarFormaPagoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarFormaPagoCompleted(Me, New InsertarFormaPagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarInhabilitados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarInhabilitados(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarInhabilitados", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarInhabilitados(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarInhabilitados", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarInhabilitados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarInhabilitadosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarInhabilitadosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarInhabilitadosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarInhabilitadosOperationCompleted Is Nothing) Then
                Me.InsertarInhabilitadosOperationCompleted = AddressOf Me.OnInsertarInhabilitadosOperationCompleted
            End If
            Me.InvokeAsync("InsertarInhabilitados", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarInhabilitadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarInhabilitadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarInhabilitadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarInhabilitadosCompleted(Me, New InsertarInhabilitadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarLibroRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarLibroRegistro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarLibroRegistro", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarLibroRegistro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarLibroRegistro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarLibroRegistro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarLibroRegistroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarLibroRegistroAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarLibroRegistroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarLibroRegistroOperationCompleted Is Nothing) Then
                Me.InsertarLibroRegistroOperationCompleted = AddressOf Me.OnInsertarLibroRegistroOperationCompleted
            End If
            Me.InvokeAsync("InsertarLibroRegistro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarLibroRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarLibroRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarLibroRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarLibroRegistroCompleted(Me, New InsertarLibroRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarMunicipios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarMunicipios(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarMunicipios", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarMunicipios(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarMunicipios", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarMunicipios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarMunicipiosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarMunicipiosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarMunicipiosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarMunicipiosOperationCompleted Is Nothing) Then
                Me.InsertarMunicipiosOperationCompleted = AddressOf Me.OnInsertarMunicipiosOperationCompleted
            End If
            Me.InvokeAsync("InsertarMunicipios", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarMunicipiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarMunicipiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarMunicipiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarMunicipiosCompleted(Me, New InsertarMunicipiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarNacionalidades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarNacionalidades(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarNacionalidades", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarNacionalidades(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarNacionalidades", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarNacionalidades(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarNacionalidadesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarNacionalidadesAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarNacionalidadesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarNacionalidadesOperationCompleted Is Nothing) Then
                Me.InsertarNacionalidadesOperationCompleted = AddressOf Me.OnInsertarNacionalidadesOperationCompleted
            End If
            Me.InvokeAsync("InsertarNacionalidades", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarNacionalidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarNacionalidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarNacionalidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarNacionalidadesCompleted(Me, New InsertarNacionalidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarParametros(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarParametros", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarParametros(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarParametros", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarParametros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarParametrosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarParametrosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarParametrosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarParametrosOperationCompleted Is Nothing) Then
                Me.InsertarParametrosOperationCompleted = AddressOf Me.OnInsertarParametrosOperationCompleted
            End If
            Me.InvokeAsync("InsertarParametros", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarParametrosCompleted(Me, New InsertarParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarParentescos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarParentescos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarParentescos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarParentescos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarParentescos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarParentescos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarParentescosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarParentescosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarParentescosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarParentescosOperationCompleted Is Nothing) Then
                Me.InsertarParentescosOperationCompleted = AddressOf Me.OnInsertarParentescosOperationCompleted
            End If
            Me.InvokeAsync("InsertarParentescos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarParentescosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarParentescosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarParentescosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarParentescosCompleted(Me, New InsertarParentescosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarPlanificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPlanificacion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPlanificacion", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPlanificacion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPlanificacion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPlanificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPlanificacionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarPlanificacionAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPlanificacionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPlanificacionOperationCompleted Is Nothing) Then
                Me.InsertarPlanificacionOperationCompleted = AddressOf Me.OnInsertarPlanificacionOperationCompleted
            End If
            Me.InvokeAsync("InsertarPlanificacion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarPlanificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPlanificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPlanificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPlanificacionCompleted(Me, New InsertarPlanificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPlanilla(ByVal ds As System.Data.DataSet, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPlanilla", New Object() {ds, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPlanilla(ByVal ds As System.Data.DataSet, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPlanilla", New Object() {ds, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPlanilla(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPlanillaAsync(ByVal ds As System.Data.DataSet, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarPlanillaAsync(ds, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPlanillaAsync(ByVal ds As System.Data.DataSet, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPlanillaOperationCompleted Is Nothing) Then
                Me.InsertarPlanillaOperationCompleted = AddressOf Me.OnInsertarPlanillaOperationCompleted
            End If
            Me.InvokeAsync("InsertarPlanilla", New Object() {ds, pUs, pPa, pSucursal}, Me.InsertarPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPlanillaCompleted(Me, New InsertarPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarProfesiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarProfesiones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarProfesiones", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarProfesiones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarProfesiones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarProfesiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarProfesionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarProfesionesAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarProfesionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarProfesionesOperationCompleted Is Nothing) Then
                Me.InsertarProfesionesOperationCompleted = AddressOf Me.OnInsertarProfesionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarProfesiones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarProfesionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarProfesionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarProfesionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarProfesionesCompleted(Me, New InsertarProfesionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarReferencias", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarReferencias(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarReferencias", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarReferencias(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarReferencias", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarReferencias(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarReferenciasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarReferenciasAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarReferenciasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarReferenciasOperationCompleted Is Nothing) Then
                Me.InsertarReferenciasOperationCompleted = AddressOf Me.OnInsertarReferenciasOperationCompleted
            End If
            Me.InvokeAsync("InsertarReferencias", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarReferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarReferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarReferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarReferenciasCompleted(Me, New InsertarReferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarRetiros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRetiros(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarRetiros", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarRetiros(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarRetiros", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarRetiros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRetirosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarRetirosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRetirosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarRetirosOperationCompleted Is Nothing) Then
                Me.InsertarRetirosOperationCompleted = AddressOf Me.OnInsertarRetirosOperationCompleted
            End If
            Me.InvokeAsync("InsertarRetiros", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarRetirosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRetirosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRetirosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRetirosCompleted(Me, New InsertarRetirosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarSolicitudRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarSolicitudRetiro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarSolicitudRetiro", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarSolicitudRetiro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarSolicitudRetiro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarSolicitudRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarSolicitudRetiroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarSolicitudRetiroAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarSolicitudRetiroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarSolicitudRetiroOperationCompleted Is Nothing) Then
                Me.InsertarSolicitudRetiroOperationCompleted = AddressOf Me.OnInsertarSolicitudRetiroOperationCompleted
            End If
            Me.InvokeAsync("InsertarSolicitudRetiro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarSolicitudRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarSolicitudRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarSolicitudRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarSolicitudRetiroCompleted(Me, New InsertarSolicitudRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarSucursales", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarSucursales(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarSucursales", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarSucursales(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarSucursales", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarSucursales(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarSucursalesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarSucursalesAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarSucursalesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarSucursalesOperationCompleted Is Nothing) Then
                Me.InsertarSucursalesOperationCompleted = AddressOf Me.OnInsertarSucursalesOperationCompleted
            End If
            Me.InvokeAsync("InsertarSucursales", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarSucursalesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarSucursalesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarSucursalesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarSucursalesCompleted(Me, New InsertarSucursalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarTipoCuota", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarTipoCuota(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarTipoCuota", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarTipoCuota(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarTipoCuota", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarTipoCuota(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoCuotaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarTipoCuotaAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoCuotaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarTipoCuotaOperationCompleted Is Nothing) Then
                Me.InsertarTipoCuotaOperationCompleted = AddressOf Me.OnInsertarTipoCuotaOperationCompleted
            End If
            Me.InvokeAsync("InsertarTipoCuota", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarTipoCuotaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarTipoCuotaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarTipoCuotaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarTipoCuotaCompleted(Me, New InsertarTipoCuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/LiquidacionAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LiquidacionAsociado(ByVal pDUI As String, ByVal pFechaReporte As Date, ByVal pOtrosAbonos As Double, ByVal pOtrosCargos As Double, ByVal pFechaSesion As Date, ByVal pAceptada As Boolean, ByVal pRechazada As Boolean, ByVal pFechaProy As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("LiquidacionAsociado", New Object() {pDUI, pFechaReporte, pOtrosAbonos, pOtrosCargos, pFechaSesion, pAceptada, pRechazada, pFechaProy, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginLiquidacionAsociado(ByVal pDUI As String, ByVal pFechaReporte As Date, ByVal pOtrosAbonos As Double, ByVal pOtrosCargos As Double, ByVal pFechaSesion As Date, ByVal pAceptada As Boolean, ByVal pRechazada As Boolean, ByVal pFechaProy As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LiquidacionAsociado", New Object() {pDUI, pFechaReporte, pOtrosAbonos, pOtrosCargos, pFechaSesion, pAceptada, pRechazada, pFechaProy, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLiquidacionAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LiquidacionAsociadoAsync(ByVal pDUI As String, ByVal pFechaReporte As Date, ByVal pOtrosAbonos As Double, ByVal pOtrosCargos As Double, ByVal pFechaSesion As Date, ByVal pAceptada As Boolean, ByVal pRechazada As Boolean, ByVal pFechaProy As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.LiquidacionAsociadoAsync(pDUI, pFechaReporte, pOtrosAbonos, pOtrosCargos, pFechaSesion, pAceptada, pRechazada, pFechaProy, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LiquidacionAsociadoAsync(ByVal pDUI As String, ByVal pFechaReporte As Date, ByVal pOtrosAbonos As Double, ByVal pOtrosCargos As Double, ByVal pFechaSesion As Date, ByVal pAceptada As Boolean, ByVal pRechazada As Boolean, ByVal pFechaProy As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.LiquidacionAsociadoOperationCompleted Is Nothing) Then
                Me.LiquidacionAsociadoOperationCompleted = AddressOf Me.OnLiquidacionAsociadoOperationCompleted
            End If
            Me.InvokeAsync("LiquidacionAsociado", New Object() {pDUI, pFechaReporte, pOtrosAbonos, pOtrosCargos, pFechaSesion, pAceptada, pRechazada, pFechaProy, pUsuario, pPassword, pSucursal}, Me.LiquidacionAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnLiquidacionAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.LiquidacionAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LiquidacionAsociadoCompleted(Me, New LiquidacionAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAsociado(ByVal pCorrelativo As String, ByVal pDui As String, ByVal pNoSocio As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAsociado", New Object() {pCorrelativo, pDui, pNoSocio, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAsociado(ByVal pCorrelativo As String, ByVal pDui As String, ByVal pNoSocio As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAsociado", New Object() {pCorrelativo, pDui, pNoSocio, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAsociado(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAsociadoAsync(ByVal pCorrelativo As String, ByVal pDui As String, ByVal pNoSocio As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarAsociadoAsync(pCorrelativo, pDui, pNoSocio, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAsociadoAsync(ByVal pCorrelativo As String, ByVal pDui As String, ByVal pNoSocio As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAsociadoOperationCompleted Is Nothing) Then
                Me.ModificarAsociadoOperationCompleted = AddressOf Me.OnModificarAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ModificarAsociado", New Object() {pCorrelativo, pDui, pNoSocio, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAsociadoCompleted(Me, New ModificarAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarAsociadoxFiltro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAsociadoxFiltro(ByVal pFiltro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAsociadoxFiltro", New Object() {pFiltro, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAsociadoxFiltro(ByVal pFiltro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAsociadoxFiltro", New Object() {pFiltro, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAsociadoxFiltro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAsociadoxFiltroAsync(ByVal pFiltro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarAsociadoxFiltroAsync(pFiltro, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAsociadoxFiltroAsync(ByVal pFiltro As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAsociadoxFiltroOperationCompleted Is Nothing) Then
                Me.ModificarAsociadoxFiltroOperationCompleted = AddressOf Me.OnModificarAsociadoxFiltroOperationCompleted
            End If
            Me.InvokeAsync("ModificarAsociadoxFiltro", New Object() {pFiltro, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarAsociadoxFiltroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAsociadoxFiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAsociadoxFiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAsociadoxFiltroCompleted(Me, New ModificarAsociadoxFiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarAspectosCooperativos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAspectosCooperativos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAspectosCooperativos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAspectosCooperativos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAspectosCooperativos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAspectosCooperativos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAspectosCooperativosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarAspectosCooperativosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAspectosCooperativosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAspectosCooperativosOperationCompleted Is Nothing) Then
                Me.ModificarAspectosCooperativosOperationCompleted = AddressOf Me.OnModificarAspectosCooperativosOperationCompleted
            End If
            Me.InvokeAsync("ModificarAspectosCooperativos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarAspectosCooperativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAspectosCooperativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAspectosCooperativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAspectosCooperativosCompleted(Me, New ModificarAspectosCooperativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarBeneficiarios(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarBeneficiarios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarBeneficiarios(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBeneficiarios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarBeneficiarios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarBeneficiariosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarBeneficiariosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarBeneficiariosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarBeneficiariosOperationCompleted Is Nothing) Then
                Me.ModificarBeneficiariosOperationCompleted = AddressOf Me.OnModificarBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("ModificarBeneficiarios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBeneficiariosCompleted(Me, New ModificarBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarCobradores", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCobradores(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCobradores", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCobradores(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCobradores", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCobradores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCobradoresAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarCobradoresAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCobradoresAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCobradoresOperationCompleted Is Nothing) Then
                Me.ModificarCobradoresOperationCompleted = AddressOf Me.OnModificarCobradoresOperationCompleted
            End If
            Me.InvokeAsync("ModificarCobradores", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarCobradoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCobradoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCobradoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCobradoresCompleted(Me, New ModificarCobradoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarComisionesMercadeo(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarComisionesMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarComisionesMercadeo(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarComisionesMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarComisionesMercadeoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarComisionesMercadeoAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarComisionesMercadeoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.ModificarComisionesMercadeoOperationCompleted = AddressOf Me.OnModificarComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("ModificarComisionesMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarComisionesMercadeoCompleted(Me, New ModificarComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarCooperativas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCooperativas(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCooperativas", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCooperativas(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCooperativas", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCooperativas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCooperativasAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarCooperativasAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCooperativasAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCooperativasOperationCompleted Is Nothing) Then
                Me.ModificarCooperativasOperationCompleted = AddressOf Me.OnModificarCooperativasOperationCompleted
            End If
            Me.InvokeAsync("ModificarCooperativas", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarCooperativasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCooperativasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCooperativasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCooperativasCompleted(Me, New ModificarCooperativasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarCuerposDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCuerposDirectivos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCuerposDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCuerposDirectivos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCuerposDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCuerposDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCuerposDirectivosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarCuerposDirectivosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCuerposDirectivosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCuerposDirectivosOperationCompleted Is Nothing) Then
                Me.ModificarCuerposDirectivosOperationCompleted = AddressOf Me.OnModificarCuerposDirectivosOperationCompleted
            End If
            Me.InvokeAsync("ModificarCuerposDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarCuerposDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCuerposDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCuerposDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCuerposDirectivosCompleted(Me, New ModificarCuerposDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDepartamentos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDepartamentos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDepartamentos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDepartamentos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDepartamentosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDepartamentosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDepartamentosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDepartamentosOperationCompleted Is Nothing) Then
                Me.ModificarDepartamentosOperationCompleted = AddressOf Me.OnModificarDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("ModificarDepartamentos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDepartamentosCompleted(Me, New ModificarDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarDetalleComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDetalleComisionesMercadeo(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDetalleComisionesMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDetalleComisionesMercadeo(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDetalleComisionesMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDetalleComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDetalleComisionesMercadeoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDetalleComisionesMercadeoAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDetalleComisionesMercadeoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDetalleComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.ModificarDetalleComisionesMercadeoOperationCompleted = AddressOf Me.OnModificarDetalleComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("ModificarDetalleComisionesMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDetalleComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDetalleComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDetalleComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDetalleComisionesMercadeoCompleted(Me, New ModificarDetalleComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarDetDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDetDirectivos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDetDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDetDirectivos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDetDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDetDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDetDirectivosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDetDirectivosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDetDirectivosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDetDirectivosOperationCompleted Is Nothing) Then
                Me.ModificarDetDirectivosOperationCompleted = AddressOf Me.OnModificarDetDirectivosOperationCompleted
            End If
            Me.InvokeAsync("ModificarDetDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDetDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDetDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDetDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDetDirectivosCompleted(Me, New ModificarDetDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDirectivos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDirectivos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDirectivosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDirectivosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDirectivosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDirectivosOperationCompleted Is Nothing) Then
                Me.ModificarDirectivosOperationCompleted = AddressOf Me.OnModificarDirectivosOperationCompleted
            End If
            Me.InvokeAsync("ModificarDirectivos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDirectivosCompleted(Me, New ModificarDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarDividendos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDividendos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDividendos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDividendos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDividendos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDividendos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDividendosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDividendosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDividendosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDividendosOperationCompleted Is Nothing) Then
                Me.ModificarDividendosOperationCompleted = AddressOf Me.OnModificarDividendosOperationCompleted
            End If
            Me.InvokeAsync("ModificarDividendos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDividendosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDividendosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDividendosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDividendosCompleted(Me, New ModificarDividendosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarEjecutivosMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarEjecutivosMercadeo(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarEjecutivosMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarEjecutivosMercadeo(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarEjecutivosMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarEjecutivosMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarEjecutivosMercadeoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarEjecutivosMercadeoAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarEjecutivosMercadeoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarEjecutivosMercadeoOperationCompleted Is Nothing) Then
                Me.ModificarEjecutivosMercadeoOperationCompleted = AddressOf Me.OnModificarEjecutivosMercadeoOperationCompleted
            End If
            Me.InvokeAsync("ModificarEjecutivosMercadeo", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarEjecutivosMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarEjecutivosMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarEjecutivosMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarEjecutivosMercadeoCompleted(Me, New ModificarEjecutivosMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarEstadoIngreso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarEstadoIngreso(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarEstadoIngreso", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarEstadoIngreso(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarEstadoIngreso", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarEstadoIngreso(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarEstadoIngresoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarEstadoIngresoAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarEstadoIngresoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarEstadoIngresoOperationCompleted Is Nothing) Then
                Me.ModificarEstadoIngresoOperationCompleted = AddressOf Me.OnModificarEstadoIngresoOperationCompleted
            End If
            Me.InvokeAsync("ModificarEstadoIngreso", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarEstadoIngresoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarEstadoIngresoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarEstadoIngresoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarEstadoIngresoCompleted(Me, New ModificarEstadoIngresoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarExclusion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarExclusion(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarExclusion", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarExclusion(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarExclusion", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarExclusion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarExclusionAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarExclusionAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarExclusionAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarExclusionOperationCompleted Is Nothing) Then
                Me.ModificarExclusionOperationCompleted = AddressOf Me.OnModificarExclusionOperationCompleted
            End If
            Me.InvokeAsync("ModificarExclusion", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarExclusionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarExclusionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarExclusionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarExclusionCompleted(Me, New ModificarExclusionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarFallecidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarFallecidos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarFallecidos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarFallecidos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarFallecidos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarFallecidos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarFallecidosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarFallecidosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarFallecidosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarFallecidosOperationCompleted Is Nothing) Then
                Me.ModificarFallecidosOperationCompleted = AddressOf Me.OnModificarFallecidosOperationCompleted
            End If
            Me.InvokeAsync("ModificarFallecidos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarFallecidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarFallecidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarFallecidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarFallecidosCompleted(Me, New ModificarFallecidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarFirmas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarFirmas(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarFirmas", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarFirmas(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarFirmas", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarFirmas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarFirmasAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarFirmasAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarFirmasAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarFirmasOperationCompleted Is Nothing) Then
                Me.ModificarFirmasOperationCompleted = AddressOf Me.OnModificarFirmasOperationCompleted
            End If
            Me.InvokeAsync("ModificarFirmas", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarFirmasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarFirmasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarFirmasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarFirmasCompleted(Me, New ModificarFirmasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarFormaPago", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarFormaPago(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarFormaPago", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarFormaPago(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarFormaPago", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarFormaPago(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarFormaPagoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarFormaPagoAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarFormaPagoAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarFormaPagoOperationCompleted Is Nothing) Then
                Me.ModificarFormaPagoOperationCompleted = AddressOf Me.OnModificarFormaPagoOperationCompleted
            End If
            Me.InvokeAsync("ModificarFormaPago", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarFormaPagoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarFormaPagoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarFormaPagoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarFormaPagoCompleted(Me, New ModificarFormaPagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarInhabilitados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarInhabilitados(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarInhabilitados", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarInhabilitados(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarInhabilitados", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarInhabilitados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarInhabilitadosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarInhabilitadosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarInhabilitadosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarInhabilitadosOperationCompleted Is Nothing) Then
                Me.ModificarInhabilitadosOperationCompleted = AddressOf Me.OnModificarInhabilitadosOperationCompleted
            End If
            Me.InvokeAsync("ModificarInhabilitados", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarInhabilitadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarInhabilitadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarInhabilitadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarInhabilitadosCompleted(Me, New ModificarInhabilitadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarLibroRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarLibroRegistro(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarLibroRegistro", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarLibroRegistro(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarLibroRegistro", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarLibroRegistro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarLibroRegistroAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarLibroRegistroAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarLibroRegistroAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarLibroRegistroOperationCompleted Is Nothing) Then
                Me.ModificarLibroRegistroOperationCompleted = AddressOf Me.OnModificarLibroRegistroOperationCompleted
            End If
            Me.InvokeAsync("ModificarLibroRegistro", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarLibroRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarLibroRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarLibroRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarLibroRegistroCompleted(Me, New ModificarLibroRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarMunicipios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarMunicipios(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarMunicipios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarMunicipios(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarMunicipios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarMunicipios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarMunicipiosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarMunicipiosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarMunicipiosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarMunicipiosOperationCompleted Is Nothing) Then
                Me.ModificarMunicipiosOperationCompleted = AddressOf Me.OnModificarMunicipiosOperationCompleted
            End If
            Me.InvokeAsync("ModificarMunicipios", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarMunicipiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarMunicipiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarMunicipiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarMunicipiosCompleted(Me, New ModificarMunicipiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarNacionalidades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarNacionalidades(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarNacionalidades", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarNacionalidades(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarNacionalidades", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarNacionalidades(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarNacionalidadesAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarNacionalidadesAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarNacionalidadesAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarNacionalidadesOperationCompleted Is Nothing) Then
                Me.ModificarNacionalidadesOperationCompleted = AddressOf Me.OnModificarNacionalidadesOperationCompleted
            End If
            Me.InvokeAsync("ModificarNacionalidades", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarNacionalidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarNacionalidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarNacionalidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarNacionalidadesCompleted(Me, New ModificarNacionalidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarParametros(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarParametros", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarParametros(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarParametros", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarParametros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarParametrosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarParametrosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarParametrosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarParametrosOperationCompleted Is Nothing) Then
                Me.ModificarParametrosOperationCompleted = AddressOf Me.OnModificarParametrosOperationCompleted
            End If
            Me.InvokeAsync("ModificarParametros", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarParametrosCompleted(Me, New ModificarParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarParentescos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarParentescos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarParentescos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarParentescos(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarParentescos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarParentescos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarParentescosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarParentescosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarParentescosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarParentescosOperationCompleted Is Nothing) Then
                Me.ModificarParentescosOperationCompleted = AddressOf Me.OnModificarParentescosOperationCompleted
            End If
            Me.InvokeAsync("ModificarParentescos", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarParentescosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarParentescosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarParentescosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarParentescosCompleted(Me, New ModificarParentescosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarPlanificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPlanificacion(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPlanificacion", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPlanificacion(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPlanificacion", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPlanificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPlanificacionAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarPlanificacionAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPlanificacionAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPlanificacionOperationCompleted Is Nothing) Then
                Me.ModificarPlanificacionOperationCompleted = AddressOf Me.OnModificarPlanificacionOperationCompleted
            End If
            Me.InvokeAsync("ModificarPlanificacion", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarPlanificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPlanificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPlanificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPlanificacionCompleted(Me, New ModificarPlanificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarProfesiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarProfesiones(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarProfesiones", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarProfesiones(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarProfesiones", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarProfesiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarProfesionesAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarProfesionesAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarProfesionesAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarProfesionesOperationCompleted Is Nothing) Then
                Me.ModificarProfesionesOperationCompleted = AddressOf Me.OnModificarProfesionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarProfesiones", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarProfesionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarProfesionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarProfesionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarProfesionesCompleted(Me, New ModificarProfesionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarReferencias", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarReferencias(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarReferencias", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarReferencias(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarReferencias", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarReferencias(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarReferenciasAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarReferenciasAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarReferenciasAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarReferenciasOperationCompleted Is Nothing) Then
                Me.ModificarReferenciasOperationCompleted = AddressOf Me.OnModificarReferenciasOperationCompleted
            End If
            Me.InvokeAsync("ModificarReferencias", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarReferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarReferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarReferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarReferenciasCompleted(Me, New ModificarReferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarRetiros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRetiros(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRetiros", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRetiros(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRetiros", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRetiros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRetirosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarRetirosAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRetirosAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRetirosOperationCompleted Is Nothing) Then
                Me.ModificarRetirosOperationCompleted = AddressOf Me.OnModificarRetirosOperationCompleted
            End If
            Me.InvokeAsync("ModificarRetiros", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarRetirosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRetirosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRetirosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRetirosCompleted(Me, New ModificarRetirosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarSolicitudRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarSolicitudRetiro(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarSolicitudRetiro", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarSolicitudRetiro(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarSolicitudRetiro", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarSolicitudRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarSolicitudRetiroAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarSolicitudRetiroAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarSolicitudRetiroAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarSolicitudRetiroOperationCompleted Is Nothing) Then
                Me.ModificarSolicitudRetiroOperationCompleted = AddressOf Me.OnModificarSolicitudRetiroOperationCompleted
            End If
            Me.InvokeAsync("ModificarSolicitudRetiro", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarSolicitudRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarSolicitudRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarSolicitudRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarSolicitudRetiroCompleted(Me, New ModificarSolicitudRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarSucursales", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarSucursales(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarSucursales", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarSucursales(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarSucursales", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarSucursales(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarSucursalesAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarSucursalesAsync(pCondicion, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarSucursalesAsync(ByVal pCondicion As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarSucursalesOperationCompleted Is Nothing) Then
                Me.ModificarSucursalesOperationCompleted = AddressOf Me.OnModificarSucursalesOperationCompleted
            End If
            Me.InvokeAsync("ModificarSucursales", New Object() {pCondicion, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarSucursalesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarSucursalesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarSucursalesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarSucursalesCompleted(Me, New ModificarSucursalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ModificarTipoCuota", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarTipoCuota(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarTipoCuota", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarTipoCuota(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarTipoCuota", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarTipoCuota(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoCuotaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarTipoCuotaAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoCuotaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarTipoCuotaOperationCompleted Is Nothing) Then
                Me.ModificarTipoCuotaOperationCompleted = AddressOf Me.OnModificarTipoCuotaOperationCompleted
            End If
            Me.InvokeAsync("ModificarTipoCuota", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarTipoCuotaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarTipoCuotaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarTipoCuotaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarTipoCuotaCompleted(Me, New ModificarTipoCuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/NuevosAsociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NuevosAsociados(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pNoActa As String, ByVal pCodEjecutivo As String, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("NuevosAsociados", New Object() {pFecIni, pFecFin, pNoActa, pCodEjecutivo, pTodos, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginNuevosAsociados(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pNoActa As String, ByVal pCodEjecutivo As String, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NuevosAsociados", New Object() {pFecIni, pFecFin, pNoActa, pCodEjecutivo, pTodos, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNuevosAsociados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NuevosAsociadosAsync(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pNoActa As String, ByVal pCodEjecutivo As String, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.NuevosAsociadosAsync(pFecIni, pFecFin, pNoActa, pCodEjecutivo, pTodos, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NuevosAsociadosAsync(ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pNoActa As String, ByVal pCodEjecutivo As String, ByVal pTodos As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.NuevosAsociadosOperationCompleted Is Nothing) Then
                Me.NuevosAsociadosOperationCompleted = AddressOf Me.OnNuevosAsociadosOperationCompleted
            End If
            Me.InvokeAsync("NuevosAsociados", New Object() {pFecIni, pFecFin, pNoActa, pCodEjecutivo, pTodos, pUs, pPa, pSucursal}, Me.NuevosAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnNuevosAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.NuevosAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NuevosAsociadosCompleted(Me, New NuevosAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoAsociado(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoAsociado", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoAsociado(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoAsociado", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoAsociado(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoAsociadoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoAsociadoAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoAsociadoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoAsociadoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoAsociadoOperationCompleted = AddressOf Me.OnObtenerCorrelativoAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoAsociado", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoAsociadoCompleted(Me, New ObtenerCorrelativoAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoBeneficiarios(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoBeneficiarios", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoBeneficiarios(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoBeneficiarios", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoBeneficiarios(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoBeneficiariosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoBeneficiariosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoBeneficiariosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoBeneficiariosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoBeneficiariosOperationCompleted = AddressOf Me.OnObtenerCorrelativoBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoBeneficiarios", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoBeneficiariosCompleted(Me, New ObtenerCorrelativoBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoCobradores", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoCobradores(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoCobradores", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoCobradores(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoCobradores", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoCobradores(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoCobradoresAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoCobradoresAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoCobradoresAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoCobradoresOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoCobradoresOperationCompleted = AddressOf Me.OnObtenerCorrelativoCobradoresOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoCobradores", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoCobradoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoCobradoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoCobradoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoCobradoresCompleted(Me, New ObtenerCorrelativoCobradoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoComisionesMercadeo(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoComisionesMercadeo", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoComisionesMercadeo(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoComisionesMercadeo", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoComisionesMercadeoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoComisionesMercadeoAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoComisionesMercadeoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoComisionesMercadeoOperationCompleted = AddressOf Me.OnObtenerCorrelativoComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoComisionesMercadeo", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoComisionesMercadeoCompleted(Me, New ObtenerCorrelativoComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoCooperativas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoCooperativas(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoCooperativas", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoCooperativas(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoCooperativas", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoCooperativas(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoCooperativasAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoCooperativasAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoCooperativasAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoCooperativasOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoCooperativasOperationCompleted = AddressOf Me.OnObtenerCorrelativoCooperativasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoCooperativas", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoCooperativasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoCooperativasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoCooperativasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoCooperativasCompleted(Me, New ObtenerCorrelativoCooperativasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoDirectivos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoDirectivos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoDirectivos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoDirectivos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoDirectivos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDirectivosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoDirectivosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDirectivosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoDirectivosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoDirectivosOperationCompleted = AddressOf Me.OnObtenerCorrelativoDirectivosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoDirectivos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoDirectivosCompleted(Me, New ObtenerCorrelativoDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoExclusiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoExclusiones(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoExclusiones", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoExclusiones(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoExclusiones", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoExclusiones(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoExclusionesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoExclusionesAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoExclusionesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoExclusionesOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoExclusionesOperationCompleted = AddressOf Me.OnObtenerCorrelativoExclusionesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoExclusiones", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoExclusionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoExclusionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoExclusionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoExclusionesCompleted(Me, New ObtenerCorrelativoExclusionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoFallecidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoFallecidos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoFallecidos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoFallecidos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoFallecidos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoFallecidos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoFallecidosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoFallecidosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoFallecidosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoFallecidosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoFallecidosOperationCompleted = AddressOf Me.OnObtenerCorrelativoFallecidosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoFallecidos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoFallecidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoFallecidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoFallecidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoFallecidosCompleted(Me, New ObtenerCorrelativoFallecidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoInhabilitados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoInhabilitados(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoInhabilitados", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoInhabilitados(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoInhabilitados", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoInhabilitados(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoInhabilitadosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoInhabilitadosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoInhabilitadosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoInhabilitadosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoInhabilitadosOperationCompleted = AddressOf Me.OnObtenerCorrelativoInhabilitadosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoInhabilitados", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoInhabilitadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoInhabilitadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoInhabilitadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoInhabilitadosCompleted(Me, New ObtenerCorrelativoInhabilitadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoLibroRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoLibroRegistro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoLibroRegistro", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoLibroRegistro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoLibroRegistro", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoLibroRegistro(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoLibroRegistroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoLibroRegistroAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoLibroRegistroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoLibroRegistroOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoLibroRegistroOperationCompleted = AddressOf Me.OnObtenerCorrelativoLibroRegistroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoLibroRegistro", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoLibroRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoLibroRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoLibroRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoLibroRegistroCompleted(Me, New ObtenerCorrelativoLibroRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoNacionalidades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoNacionalidades(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoNacionalidades", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoNacionalidades(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoNacionalidades", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoNacionalidades(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoNacionalidadesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoNacionalidadesAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoNacionalidadesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoNacionalidadesOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoNacionalidadesOperationCompleted = AddressOf Me.OnObtenerCorrelativoNacionalidadesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoNacionalidades", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoNacionalidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoNacionalidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoNacionalidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoNacionalidadesCompleted(Me, New ObtenerCorrelativoNacionalidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoParentescos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoParentescos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoParentescos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoParentescos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoParentescos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoParentescos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoParentescosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoParentescosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoParentescosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoParentescosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoParentescosOperationCompleted = AddressOf Me.OnObtenerCorrelativoParentescosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoParentescos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoParentescosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoParentescosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoParentescosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoParentescosCompleted(Me, New ObtenerCorrelativoParentescosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoProfesiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoProfesiones(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoProfesiones", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoProfesiones(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoProfesiones", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoProfesiones(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoProfesionesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoProfesionesAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoProfesionesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoProfesionesOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoProfesionesOperationCompleted = AddressOf Me.OnObtenerCorrelativoProfesionesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoProfesiones", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoProfesionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoProfesionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoProfesionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoProfesionesCompleted(Me, New ObtenerCorrelativoProfesionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoReferencias", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoReferencias(ByVal pDui As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoReferencias", New Object() {pDui, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoReferencias(ByVal pDui As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoReferencias", New Object() {pDui, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoReferencias(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoReferenciasAsync(ByVal pDui As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoReferenciasAsync(pDui, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoReferenciasAsync(ByVal pDui As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoReferenciasOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoReferenciasOperationCompleted = AddressOf Me.OnObtenerCorrelativoReferenciasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoReferencias", New Object() {pDui, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoReferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoReferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoReferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoReferenciasCompleted(Me, New ObtenerCorrelativoReferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoRetiros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoRetiros(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoRetiros", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoRetiros(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoRetiros", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoRetiros(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRetirosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoRetirosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRetirosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoRetirosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoRetirosOperationCompleted = AddressOf Me.OnObtenerCorrelativoRetirosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoRetiros", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoRetirosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoRetirosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoRetirosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoRetirosCompleted(Me, New ObtenerCorrelativoRetirosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerCorrelativoSolicitudRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoSolicitudRetiro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoSolicitudRetiro", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoSolicitudRetiro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoSolicitudRetiro", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoSolicitudRetiro(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSolicitudRetiroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoSolicitudRetiroAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSolicitudRetiroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoSolicitudRetiroOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoSolicitudRetiroOperationCompleted = AddressOf Me.OnObtenerCorrelativoSolicitudRetiroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoSolicitudRetiro", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoSolicitudRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoSolicitudRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoSolicitudRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoSolicitudRetiroCompleted(Me, New ObtenerCorrelativoSolicitudRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ObtenerEstructuraSeleccion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerEstructuraSeleccion(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerEstructuraSeleccion", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerEstructuraSeleccion(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerEstructuraSeleccion", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerEstructuraSeleccion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerEstructuraSeleccionAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerEstructuraSeleccionAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerEstructuraSeleccionAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerEstructuraSeleccionOperationCompleted Is Nothing) Then
                Me.ObtenerEstructuraSeleccionOperationCompleted = AddressOf Me.OnObtenerEstructuraSeleccionOperationCompleted
            End If
            Me.InvokeAsync("ObtenerEstructuraSeleccion", New Object() {pUsuario, pPassword, pSucursal}, Me.ObtenerEstructuraSeleccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerEstructuraSeleccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerEstructuraSeleccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerEstructuraSeleccionCompleted(Me, New ObtenerEstructuraSeleccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ProcesoDividendo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesoDividendo(ByVal pAnnio As Date, ByVal pCodTipoAhorro As String, ByVal pFactorAportacion As Double, ByVal pFactorInteres As Double, ByVal pExcedente As Double, ByVal pCapitaliza As Double, ByVal pDistribuir As Double, ByVal pNoCuotasMora As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ProcesoDividendo", New Object() {pAnnio, pCodTipoAhorro, pFactorAportacion, pFactorInteres, pExcedente, pCapitaliza, pDistribuir, pNoCuotasMora, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesoDividendo(ByVal pAnnio As Date, ByVal pCodTipoAhorro As String, ByVal pFactorAportacion As Double, ByVal pFactorInteres As Double, ByVal pExcedente As Double, ByVal pCapitaliza As Double, ByVal pDistribuir As Double, ByVal pNoCuotasMora As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesoDividendo", New Object() {pAnnio, pCodTipoAhorro, pFactorAportacion, pFactorInteres, pExcedente, pCapitaliza, pDistribuir, pNoCuotasMora, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesoDividendo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesoDividendoAsync(ByVal pAnnio As Date, ByVal pCodTipoAhorro As String, ByVal pFactorAportacion As Double, ByVal pFactorInteres As Double, ByVal pExcedente As Double, ByVal pCapitaliza As Double, ByVal pDistribuir As Double, ByVal pNoCuotasMora As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ProcesoDividendoAsync(pAnnio, pCodTipoAhorro, pFactorAportacion, pFactorInteres, pExcedente, pCapitaliza, pDistribuir, pNoCuotasMora, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesoDividendoAsync(ByVal pAnnio As Date, ByVal pCodTipoAhorro As String, ByVal pFactorAportacion As Double, ByVal pFactorInteres As Double, ByVal pExcedente As Double, ByVal pCapitaliza As Double, ByVal pDistribuir As Double, ByVal pNoCuotasMora As Double, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ProcesoDividendoOperationCompleted Is Nothing) Then
                Me.ProcesoDividendoOperationCompleted = AddressOf Me.OnProcesoDividendoOperationCompleted
            End If
            Me.InvokeAsync("ProcesoDividendo", New Object() {pAnnio, pCodTipoAhorro, pFactorAportacion, pFactorInteres, pExcedente, pCapitaliza, pDistribuir, pNoCuotasMora, pUsuario, pPassword, pSucursal}, Me.ProcesoDividendoOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesoDividendoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesoDividendoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesoDividendoCompleted(Me, New ProcesoDividendoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ProcesoExclusionAsociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesoExclusionAsociados(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ProcesoExclusionAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesoExclusionAsociados(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesoExclusionAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesoExclusionAsociados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesoExclusionAsociadosAsync(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ProcesoExclusionAsociadosAsync(pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesoExclusionAsociadosAsync(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ProcesoExclusionAsociadosOperationCompleted Is Nothing) Then
                Me.ProcesoExclusionAsociadosOperationCompleted = AddressOf Me.OnProcesoExclusionAsociadosOperationCompleted
            End If
            Me.InvokeAsync("ProcesoExclusionAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal}, Me.ProcesoExclusionAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesoExclusionAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesoExclusionAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesoExclusionAsociadosCompleted(Me, New ProcesoExclusionAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ProcesoFallecidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesoFallecidos(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ProcesoFallecidos", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesoFallecidos(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesoFallecidos", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesoFallecidos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesoFallecidosAsync(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ProcesoFallecidosAsync(pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesoFallecidosAsync(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ProcesoFallecidosOperationCompleted Is Nothing) Then
                Me.ProcesoFallecidosOperationCompleted = AddressOf Me.OnProcesoFallecidosOperationCompleted
            End If
            Me.InvokeAsync("ProcesoFallecidos", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal}, Me.ProcesoFallecidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesoFallecidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesoFallecidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesoFallecidosCompleted(Me, New ProcesoFallecidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ProcesoInhabilitadosAsociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesoInhabilitadosAsociados(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ProcesoInhabilitadosAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesoInhabilitadosAsociados(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesoInhabilitadosAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesoInhabilitadosAsociados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesoInhabilitadosAsociadosAsync(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ProcesoInhabilitadosAsociadosAsync(pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesoInhabilitadosAsociadosAsync(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ProcesoInhabilitadosAsociadosOperationCompleted Is Nothing) Then
                Me.ProcesoInhabilitadosAsociadosOperationCompleted = AddressOf Me.OnProcesoInhabilitadosAsociadosOperationCompleted
            End If
            Me.InvokeAsync("ProcesoInhabilitadosAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal}, Me.ProcesoInhabilitadosAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesoInhabilitadosAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesoInhabilitadosAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesoInhabilitadosAsociadosCompleted(Me, New ProcesoInhabilitadosAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ProcesoRehabilitadosAsociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesoRehabilitadosAsociados(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ProcesoRehabilitadosAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesoRehabilitadosAsociados(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesoRehabilitadosAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesoRehabilitadosAsociados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesoRehabilitadosAsociadosAsync(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ProcesoRehabilitadosAsociadosAsync(pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesoRehabilitadosAsociadosAsync(ByVal pDui As String, ByVal pNoActa As String, ByVal pFechaActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ProcesoRehabilitadosAsociadosOperationCompleted Is Nothing) Then
                Me.ProcesoRehabilitadosAsociadosOperationCompleted = AddressOf Me.OnProcesoRehabilitadosAsociadosOperationCompleted
            End If
            Me.InvokeAsync("ProcesoRehabilitadosAsociados", New Object() {pDui, pNoActa, pFechaActa, pUs, pPa, pSucursal}, Me.ProcesoRehabilitadosAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesoRehabilitadosAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesoRehabilitadosAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesoRehabilitadosAsociadosCompleted(Me, New ProcesoRehabilitadosAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Recibo_Dividendos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Recibo_Dividendos(ByVal pFecha As Date, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pDui As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Recibo_Dividendos", New Object() {pFecha, pIdMovimiento, pAnnio, pTipo, pDui, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRecibo_Dividendos(ByVal pFecha As Date, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pDui As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Recibo_Dividendos", New Object() {pFecha, pIdMovimiento, pAnnio, pTipo, pDui, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRecibo_Dividendos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Recibo_DividendosAsync(ByVal pFecha As Date, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pDui As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Recibo_DividendosAsync(pFecha, pIdMovimiento, pAnnio, pTipo, pDui, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Recibo_DividendosAsync(ByVal pFecha As Date, ByVal pIdMovimiento As String, ByVal pAnnio As Date, ByVal pTipo As String, ByVal pDui As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Recibo_DividendosOperationCompleted Is Nothing) Then
                Me.Recibo_DividendosOperationCompleted = AddressOf Me.OnRecibo_DividendosOperationCompleted
            End If
            Me.InvokeAsync("Recibo_Dividendos", New Object() {pFecha, pIdMovimiento, pAnnio, pTipo, pDui, pUs, pPa, pSucursal}, Me.Recibo_DividendosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecibo_DividendosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Recibo_DividendosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Recibo_DividendosCompleted(Me, New Recibo_DividendosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RehabilitacionAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RehabilitacionAsociado(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("RehabilitacionAsociado", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginRehabilitacionAsociado(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RehabilitacionAsociado", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRehabilitacionAsociado(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RehabilitacionAsociadoAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RehabilitacionAsociadoAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RehabilitacionAsociadoAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RehabilitacionAsociadoOperationCompleted Is Nothing) Then
                Me.RehabilitacionAsociadoOperationCompleted = AddressOf Me.OnRehabilitacionAsociadoOperationCompleted
            End If
            Me.InvokeAsync("RehabilitacionAsociado", New Object() {pUsuario, pPassword, pSucursal}, Me.RehabilitacionAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRehabilitacionAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RehabilitacionAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RehabilitacionAsociadoCompleted(Me, New RehabilitacionAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepAsociadosCtas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepAsociadosCtas(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepAsociadosCtas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepAsociadosCtas(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepAsociadosCtas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepAsociadosCtas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepAsociadosCtasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepAsociadosCtasAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepAsociadosCtasAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepAsociadosCtasOperationCompleted Is Nothing) Then
                Me.RepAsociadosCtasOperationCompleted = AddressOf Me.OnRepAsociadosCtasOperationCompleted
            End If
            Me.InvokeAsync("RepAsociadosCtas", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepAsociadosCtasOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepAsociadosCtasOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepAsociadosCtasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepAsociadosCtasCompleted(Me, New RepAsociadosCtasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/RepAsociadosExcluidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepAsociadosExcluidos(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepAsociadosExcluidos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepAsociadosExcluidos(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepAsociadosExcluidos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepAsociadosExcluidos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepAsociadosExcluidosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepAsociadosExcluidosAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepAsociadosExcluidosAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepAsociadosExcluidosOperationCompleted Is Nothing) Then
                Me.RepAsociadosExcluidosOperationCompleted = AddressOf Me.OnRepAsociadosExcluidosOperationCompleted
            End If
            Me.InvokeAsync("RepAsociadosExcluidos", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepAsociadosExcluidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepAsociadosExcluidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepAsociadosExcluidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepAsociadosExcluidosCompleted(Me, New RepAsociadosExcluidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/CargaPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaPlanilla(ByVal pRutaArchivo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaPlanilla", New Object() {pRutaArchivo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaPlanilla(ByVal pRutaArchivo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaPlanilla", New Object() {pRutaArchivo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaPlanilla(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaPlanillaAsync(ByVal pRutaArchivo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaPlanillaAsync(pRutaArchivo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaPlanillaAsync(ByVal pRutaArchivo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaPlanillaOperationCompleted Is Nothing) Then
                Me.CargaPlanillaOperationCompleted = AddressOf Me.OnCargaPlanillaOperationCompleted
            End If
            Me.InvokeAsync("CargaPlanilla", New Object() {pRutaArchivo, pUsuario, pPassword, pSucursal}, Me.CargaPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaPlanillaCompleted(Me, New CargaPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAsociado(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAsociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAsociado(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAsociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAsociadoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarAsociadoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAsociadoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarAsociadoOperationCompleted Is Nothing) Then
                Me.ConsultarAsociadoOperationCompleted = AddressOf Me.OnConsultarAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAsociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAsociadoCompleted(Me, New ConsultarAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarAspectosCooperativos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAspectosCooperativos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAspectosCooperativos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAspectosCooperativos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAspectosCooperativos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAspectosCooperativos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAspectosCooperativosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarAspectosCooperativosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAspectosCooperativosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarAspectosCooperativosOperationCompleted Is Nothing) Then
                Me.ConsultarAspectosCooperativosOperationCompleted = AddressOf Me.OnConsultarAspectosCooperativosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAspectosCooperativos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarAspectosCooperativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAspectosCooperativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAspectosCooperativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAspectosCooperativosCompleted(Me, New ConsultarAspectosCooperativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarAspectosCooperativosxNombre", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAspectosCooperativosxNombre(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAspectosCooperativosxNombre", New Object() {pFiltro, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAspectosCooperativosxNombre(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAspectosCooperativosxNombre", New Object() {pFiltro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAspectosCooperativosxNombre(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAspectosCooperativosxNombreAsync(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarAspectosCooperativosxNombreAsync(pFiltro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAspectosCooperativosxNombreAsync(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarAspectosCooperativosxNombreOperationCompleted Is Nothing) Then
                Me.ConsultarAspectosCooperativosxNombreOperationCompleted = AddressOf Me.OnConsultarAspectosCooperativosxNombreOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAspectosCooperativosxNombre", New Object() {pFiltro, pUs, pPa, pSucursal}, Me.ConsultarAspectosCooperativosxNombreOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAspectosCooperativosxNombreOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAspectosCooperativosxNombreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAspectosCooperativosxNombreCompleted(Me, New ConsultarAspectosCooperativosxNombreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBeneficiarios(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBeneficiarios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBeneficiarios(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBeneficiarios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBeneficiarios(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBeneficiariosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarBeneficiariosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBeneficiariosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarBeneficiariosOperationCompleted Is Nothing) Then
                Me.ConsultarBeneficiariosOperationCompleted = AddressOf Me.OnConsultarBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBeneficiarios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBeneficiariosCompleted(Me, New ConsultarBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarCobradores", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCobradores(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCobradores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCobradores(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCobradores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCobradores(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCobradoresAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCobradoresAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCobradoresAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCobradoresOperationCompleted Is Nothing) Then
                Me.ConsultarCobradoresOperationCompleted = AddressOf Me.OnConsultarCobradoresOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCobradores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCobradoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCobradoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCobradoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCobradoresCompleted(Me, New ConsultarCobradoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarCobradoresxNombre", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCobradoresxNombre(ByVal pCodEjec As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCobradoresxNombre", New Object() {pCodEjec, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCobradoresxNombre(ByVal pCodEjec As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCobradoresxNombre", New Object() {pCodEjec, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCobradoresxNombre(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCobradoresxNombreAsync(ByVal pCodEjec As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCobradoresxNombreAsync(pCodEjec, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCobradoresxNombreAsync(ByVal pCodEjec As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCobradoresxNombreOperationCompleted Is Nothing) Then
                Me.ConsultarCobradoresxNombreOperationCompleted = AddressOf Me.OnConsultarCobradoresxNombreOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCobradoresxNombre", New Object() {pCodEjec, pUs, pPa, pSucursal}, Me.ConsultarCobradoresxNombreOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCobradoresxNombreOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCobradoresxNombreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCobradoresxNombreCompleted(Me, New ConsultarCobradoresxNombreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarComisionesMercadeo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarComisionesMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarComisionesMercadeo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarComisionesMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarComisionesMercadeoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarComisionesMercadeoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarComisionesMercadeoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.ConsultarComisionesMercadeoOperationCompleted = AddressOf Me.OnConsultarComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarComisionesMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarComisionesMercadeoCompleted(Me, New ConsultarComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarCooperativas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCooperativas(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCooperativas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCooperativas(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCooperativas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCooperativas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCooperativasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCooperativasAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCooperativasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCooperativasOperationCompleted Is Nothing) Then
                Me.ConsultarCooperativasOperationCompleted = AddressOf Me.OnConsultarCooperativasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCooperativas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCooperativasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCooperativasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCooperativasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCooperativasCompleted(Me, New ConsultarCooperativasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarCuerposDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCuerposDirectivos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCuerposDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCuerposDirectivos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCuerposDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCuerposDirectivos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuerposDirectivosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCuerposDirectivosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCuerposDirectivosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCuerposDirectivosOperationCompleted Is Nothing) Then
                Me.ConsultarCuerposDirectivosOperationCompleted = AddressOf Me.OnConsultarCuerposDirectivosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCuerposDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCuerposDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCuerposDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCuerposDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCuerposDirectivosCompleted(Me, New ConsultarCuerposDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDepartamentos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDepartamentos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDepartamentos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDepartamentos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDepartamentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDepartamentosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDepartamentosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDepartamentosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDepartamentosOperationCompleted Is Nothing) Then
                Me.ConsultarDepartamentosOperationCompleted = AddressOf Me.OnConsultarDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDepartamentos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDepartamentosCompleted(Me, New ConsultarDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarDetalleComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDetalleComisionesMercadeo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDetalleComisionesMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDetalleComisionesMercadeo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDetalleComisionesMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDetalleComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetalleComisionesMercadeoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDetalleComisionesMercadeoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetalleComisionesMercadeoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDetalleComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.ConsultarDetalleComisionesMercadeoOperationCompleted = AddressOf Me.OnConsultarDetalleComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDetalleComisionesMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDetalleComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDetalleComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDetalleComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDetalleComisionesMercadeoCompleted(Me, New ConsultarDetalleComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarDetDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDetDirectivos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDetDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDetDirectivos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDetDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDetDirectivos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetDirectivosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDetDirectivosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetDirectivosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDetDirectivosOperationCompleted Is Nothing) Then
                Me.ConsultarDetDirectivosOperationCompleted = AddressOf Me.OnConsultarDetDirectivosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDetDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDetDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDetDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDetDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDetDirectivosCompleted(Me, New ConsultarDetDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDirectivos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDirectivos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDirectivos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDirectivosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDirectivosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDirectivosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDirectivosOperationCompleted Is Nothing) Then
                Me.ConsultarDirectivosOperationCompleted = AddressOf Me.OnConsultarDirectivosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDirectivos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDirectivosCompleted(Me, New ConsultarDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarDividendos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDividendos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDividendos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDividendos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDividendos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDividendos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDividendosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDividendosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDividendosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDividendosOperationCompleted Is Nothing) Then
                Me.ConsultarDividendosOperationCompleted = AddressOf Me.OnConsultarDividendosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDividendos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDividendosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDividendosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDividendosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDividendosCompleted(Me, New ConsultarDividendosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarEjecutivosMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEjecutivosMercadeo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEjecutivosMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEjecutivosMercadeo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEjecutivosMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEjecutivosMercadeo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEjecutivosMercadeoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarEjecutivosMercadeoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEjecutivosMercadeoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEjecutivosMercadeoOperationCompleted Is Nothing) Then
                Me.ConsultarEjecutivosMercadeoOperationCompleted = AddressOf Me.OnConsultarEjecutivosMercadeoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEjecutivosMercadeo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarEjecutivosMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEjecutivosMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEjecutivosMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEjecutivosMercadeoCompleted(Me, New ConsultarEjecutivosMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarEjecutivosMercadeoxFiltro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEjecutivosMercadeoxFiltro(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEjecutivosMercadeoxFiltro", New Object() {pFiltro, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEjecutivosMercadeoxFiltro(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEjecutivosMercadeoxFiltro", New Object() {pFiltro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEjecutivosMercadeoxFiltro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEjecutivosMercadeoxFiltroAsync(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarEjecutivosMercadeoxFiltroAsync(pFiltro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEjecutivosMercadeoxFiltroAsync(ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEjecutivosMercadeoxFiltroOperationCompleted Is Nothing) Then
                Me.ConsultarEjecutivosMercadeoxFiltroOperationCompleted = AddressOf Me.OnConsultarEjecutivosMercadeoxFiltroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEjecutivosMercadeoxFiltro", New Object() {pFiltro, pUs, pPa, pSucursal}, Me.ConsultarEjecutivosMercadeoxFiltroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEjecutivosMercadeoxFiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEjecutivosMercadeoxFiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEjecutivosMercadeoxFiltroCompleted(Me, New ConsultarEjecutivosMercadeoxFiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarEjecutivosMercadeoxNombre", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEjecutivosMercadeoxNombre(ByVal pCodEjec As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEjecutivosMercadeoxNombre", New Object() {pCodEjec, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEjecutivosMercadeoxNombre(ByVal pCodEjec As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEjecutivosMercadeoxNombre", New Object() {pCodEjec, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEjecutivosMercadeoxNombre(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEjecutivosMercadeoxNombreAsync(ByVal pCodEjec As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarEjecutivosMercadeoxNombreAsync(pCodEjec, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEjecutivosMercadeoxNombreAsync(ByVal pCodEjec As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEjecutivosMercadeoxNombreOperationCompleted Is Nothing) Then
                Me.ConsultarEjecutivosMercadeoxNombreOperationCompleted = AddressOf Me.OnConsultarEjecutivosMercadeoxNombreOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEjecutivosMercadeoxNombre", New Object() {pCodEjec, pUs, pPa, pSucursal}, Me.ConsultarEjecutivosMercadeoxNombreOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEjecutivosMercadeoxNombreOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEjecutivosMercadeoxNombreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEjecutivosMercadeoxNombreCompleted(Me, New ConsultarEjecutivosMercadeoxNombreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarEstadoIngreso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEstadoIngreso(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEstadoIngreso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEstadoIngreso(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEstadoIngreso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEstadoIngreso(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEstadoIngresoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarEstadoIngresoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEstadoIngresoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEstadoIngresoOperationCompleted Is Nothing) Then
                Me.ConsultarEstadoIngresoOperationCompleted = AddressOf Me.OnConsultarEstadoIngresoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEstadoIngreso", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarEstadoIngresoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEstadoIngresoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEstadoIngresoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEstadoIngresoCompleted(Me, New ConsultarEstadoIngresoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarExclusion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarExclusion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarExclusion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarExclusion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarExclusion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarExclusion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarExclusionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarExclusionAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarExclusionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarExclusionOperationCompleted Is Nothing) Then
                Me.ConsultarExclusionOperationCompleted = AddressOf Me.OnConsultarExclusionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarExclusion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarExclusionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarExclusionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarExclusionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarExclusionCompleted(Me, New ConsultarExclusionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarFallecidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarFallecidos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarFallecidos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarFallecidos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarFallecidos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarFallecidos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarFallecidosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarFallecidosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarFallecidosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarFallecidosOperationCompleted Is Nothing) Then
                Me.ConsultarFallecidosOperationCompleted = AddressOf Me.OnConsultarFallecidosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarFallecidos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarFallecidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarFallecidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarFallecidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarFallecidosCompleted(Me, New ConsultarFallecidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarFirmas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarFirmas(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarFirmas", New Object() {pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarFirmas(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarFirmas", New Object() {pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarFirmas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarFirmasAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarFirmasAsync(pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarFirmasAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarFirmasOperationCompleted Is Nothing) Then
                Me.ConsultarFirmasOperationCompleted = AddressOf Me.OnConsultarFirmasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarFirmas", New Object() {pUs, pPa, pSucursal}, Me.ConsultarFirmasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarFirmasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarFirmasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarFirmasCompleted(Me, New ConsultarFirmasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarFormaPago", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarFormaPago(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarFormaPago", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarFormaPago(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarFormaPago", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarFormaPago(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarFormaPagoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarFormaPagoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarFormaPagoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarFormaPagoOperationCompleted Is Nothing) Then
                Me.ConsultarFormaPagoOperationCompleted = AddressOf Me.OnConsultarFormaPagoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarFormaPago", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarFormaPagoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarFormaPagoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarFormaPagoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarFormaPagoCompleted(Me, New ConsultarFormaPagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarInhabilitados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarInhabilitados(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarInhabilitados", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarInhabilitados(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarInhabilitados", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarInhabilitados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarInhabilitadosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarInhabilitadosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarInhabilitadosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarInhabilitadosOperationCompleted Is Nothing) Then
                Me.ConsultarInhabilitadosOperationCompleted = AddressOf Me.OnConsultarInhabilitadosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarInhabilitados", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarInhabilitadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarInhabilitadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarInhabilitadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarInhabilitadosCompleted(Me, New ConsultarInhabilitadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarLibroRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarLibroRegistro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarLibroRegistro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarLibroRegistro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarLibroRegistro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarLibroRegistro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarLibroRegistroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarLibroRegistroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarLibroRegistroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarLibroRegistroOperationCompleted Is Nothing) Then
                Me.ConsultarLibroRegistroOperationCompleted = AddressOf Me.OnConsultarLibroRegistroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarLibroRegistro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarLibroRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarLibroRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarLibroRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarLibroRegistroCompleted(Me, New ConsultarLibroRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarLibroRegistroxAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarLibroRegistroxAsociado(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarLibroRegistroxAsociado", New Object() {pListaCampos, pFiltro, pOrden, pMostrarNombre, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarLibroRegistroxAsociado(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarLibroRegistroxAsociado", New Object() {pListaCampos, pFiltro, pOrden, pMostrarNombre, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarLibroRegistroxAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarLibroRegistroxAsociadoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarLibroRegistroxAsociadoAsync(pListaCampos, pFiltro, pOrden, pMostrarNombre, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarLibroRegistroxAsociadoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarLibroRegistroxAsociadoOperationCompleted Is Nothing) Then
                Me.ConsultarLibroRegistroxAsociadoOperationCompleted = AddressOf Me.OnConsultarLibroRegistroxAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarLibroRegistroxAsociado", New Object() {pListaCampos, pFiltro, pOrden, pMostrarNombre, pUs, pPa, pSucursal}, Me.ConsultarLibroRegistroxAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarLibroRegistroxAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarLibroRegistroxAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarLibroRegistroxAsociadoCompleted(Me, New ConsultarLibroRegistroxAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarMunicipios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarMunicipios(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarMunicipios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarMunicipios(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarMunicipios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarMunicipios(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarMunicipiosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarMunicipiosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarMunicipiosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarMunicipiosOperationCompleted Is Nothing) Then
                Me.ConsultarMunicipiosOperationCompleted = AddressOf Me.OnConsultarMunicipiosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarMunicipios", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarMunicipiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarMunicipiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarMunicipiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarMunicipiosCompleted(Me, New ConsultarMunicipiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarNacionalidades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarNacionalidades(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarNacionalidades", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarNacionalidades(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarNacionalidades", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarNacionalidades(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarNacionalidadesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarNacionalidadesAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarNacionalidadesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarNacionalidadesOperationCompleted Is Nothing) Then
                Me.ConsultarNacionalidadesOperationCompleted = AddressOf Me.OnConsultarNacionalidadesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarNacionalidades", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarNacionalidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarNacionalidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarNacionalidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarNacionalidadesCompleted(Me, New ConsultarNacionalidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarObservacionesAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarObservacionesAsociado(ByVal pEstado As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarObservacionesAsociado", New Object() {pEstado, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarObservacionesAsociado(ByVal pEstado As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarObservacionesAsociado", New Object() {pEstado, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarObservacionesAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarObservacionesAsociadoAsync(ByVal pEstado As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarObservacionesAsociadoAsync(pEstado, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarObservacionesAsociadoAsync(ByVal pEstado As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarObservacionesAsociadoOperationCompleted Is Nothing) Then
                Me.ConsultarObservacionesAsociadoOperationCompleted = AddressOf Me.OnConsultarObservacionesAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarObservacionesAsociado", New Object() {pEstado, pUsuario, pPassword, pSucursal}, Me.ConsultarObservacionesAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarObservacionesAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarObservacionesAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarObservacionesAsociadoCompleted(Me, New ConsultarObservacionesAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarParametros(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarParametros", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarParametros(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarParametros", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarParametros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarParametrosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarParametrosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarParametrosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarParametrosOperationCompleted Is Nothing) Then
                Me.ConsultarParametrosOperationCompleted = AddressOf Me.OnConsultarParametrosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarParametros", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarParametrosCompleted(Me, New ConsultarParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarParentescos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarParentescos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarParentescos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarParentescos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarParentescos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarParentescos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarParentescosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarParentescosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarParentescosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarParentescosOperationCompleted Is Nothing) Then
                Me.ConsultarParentescosOperationCompleted = AddressOf Me.OnConsultarParentescosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarParentescos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarParentescosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarParentescosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarParentescosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarParentescosCompleted(Me, New ConsultarParentescosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarPlanificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPlanificacion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPlanificacion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPlanificacion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPlanificacion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPlanificacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPlanificacionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarPlanificacionAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPlanificacionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPlanificacionOperationCompleted Is Nothing) Then
                Me.ConsultarPlanificacionOperationCompleted = AddressOf Me.OnConsultarPlanificacionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPlanificacion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarPlanificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPlanificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPlanificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPlanificacionCompleted(Me, New ConsultarPlanificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarProfesiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarProfesiones(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarProfesiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarProfesiones(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarProfesiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarProfesiones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarProfesionesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarProfesionesAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarProfesionesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarProfesionesOperationCompleted Is Nothing) Then
                Me.ConsultarProfesionesOperationCompleted = AddressOf Me.OnConsultarProfesionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarProfesiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarProfesionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarProfesionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarProfesionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarProfesionesCompleted(Me, New ConsultarProfesionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarReferencias", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarReferencias(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarReferencias", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarReferencias(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarReferencias", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarReferencias(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarReferenciasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarReferenciasAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarReferenciasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarReferenciasOperationCompleted Is Nothing) Then
                Me.ConsultarReferenciasOperationCompleted = AddressOf Me.OnConsultarReferenciasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarReferencias", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarReferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarReferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarReferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarReferenciasCompleted(Me, New ConsultarReferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarRetiros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRetiros(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRetiros", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRetiros(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRetiros", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRetiros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRetirosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarRetirosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRetirosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRetirosOperationCompleted Is Nothing) Then
                Me.ConsultarRetirosOperationCompleted = AddressOf Me.OnConsultarRetirosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRetiros", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarRetirosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRetirosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRetirosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRetirosCompleted(Me, New ConsultarRetirosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarSolicitudRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarSolicitudRetiro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarSolicitudRetiro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarSolicitudRetiro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarSolicitudRetiro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarSolicitudRetiro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolicitudRetiroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarSolicitudRetiroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolicitudRetiroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarSolicitudRetiroOperationCompleted Is Nothing) Then
                Me.ConsultarSolicitudRetiroOperationCompleted = AddressOf Me.OnConsultarSolicitudRetiroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarSolicitudRetiro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarSolicitudRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarSolicitudRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarSolicitudRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarSolicitudRetiroCompleted(Me, New ConsultarSolicitudRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarSucursales", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarSucursales(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarSucursales", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarSucursales(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarSucursales", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarSucursales(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarSucursalesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarSucursalesAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarSucursalesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarSucursalesOperationCompleted Is Nothing) Then
                Me.ConsultarSucursalesOperationCompleted = AddressOf Me.OnConsultarSucursalesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarSucursales", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarSucursalesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarSucursalesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarSucursalesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarSucursalesCompleted(Me, New ConsultarSucursalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarTipoCuota", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipoCuota(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTipoCuota", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTipoCuota(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTipoCuota", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTipoCuota(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoCuotaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTipoCuotaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoCuotaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTipoCuotaOperationCompleted Is Nothing) Then
                Me.ConsultarTipoCuotaOperationCompleted = AddressOf Me.OnConsultarTipoCuotaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipoCuota", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarTipoCuotaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipoCuotaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipoCuotaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipoCuotaCompleted(Me, New ConsultarTipoCuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarAsociado(ByVal pCorrelativo As String, ByVal pDui As String, ByVal pNoSocio As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarAsociado", New Object() {pCorrelativo, pDui, pNoSocio, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarAsociado(ByVal pCorrelativo As String, ByVal pDui As String, ByVal pNoSocio As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarAsociado", New Object() {pCorrelativo, pDui, pNoSocio, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarAsociado(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarAsociadoAsync(ByVal pCorrelativo As String, ByVal pDui As String, ByVal pNoSocio As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarAsociadoAsync(pCorrelativo, pDui, pNoSocio, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarAsociadoAsync(ByVal pCorrelativo As String, ByVal pDui As String, ByVal pNoSocio As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarAsociadoOperationCompleted Is Nothing) Then
                Me.EliminarAsociadoOperationCompleted = AddressOf Me.OnEliminarAsociadoOperationCompleted
            End If
            Me.InvokeAsync("EliminarAsociado", New Object() {pCorrelativo, pDui, pNoSocio, pUs, pPa, pSucursal}, Me.EliminarAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarAsociadoCompleted(Me, New EliminarAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarAspectosCooperativos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarAspectosCooperativos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarAspectosCooperativos", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarAspectosCooperativos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarAspectosCooperativos", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarAspectosCooperativos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarAspectosCooperativosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarAspectosCooperativosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarAspectosCooperativosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarAspectosCooperativosOperationCompleted Is Nothing) Then
                Me.EliminarAspectosCooperativosOperationCompleted = AddressOf Me.OnEliminarAspectosCooperativosOperationCompleted
            End If
            Me.InvokeAsync("EliminarAspectosCooperativos", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarAspectosCooperativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarAspectosCooperativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarAspectosCooperativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarAspectosCooperativosCompleted(Me, New EliminarAspectosCooperativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBeneficiarios(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarBeneficiarios", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBeneficiarios(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBeneficiarios", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBeneficiarios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBeneficiariosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarBeneficiariosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBeneficiariosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarBeneficiariosOperationCompleted Is Nothing) Then
                Me.EliminarBeneficiariosOperationCompleted = AddressOf Me.OnEliminarBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("EliminarBeneficiarios", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBeneficiariosCompleted(Me, New EliminarBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarCobradores", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCobradores(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCobradores", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCobradores(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCobradores", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCobradores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCobradoresAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarCobradoresAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCobradoresAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCobradoresOperationCompleted Is Nothing) Then
                Me.EliminarCobradoresOperationCompleted = AddressOf Me.OnEliminarCobradoresOperationCompleted
            End If
            Me.InvokeAsync("EliminarCobradores", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarCobradoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCobradoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCobradoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCobradoresCompleted(Me, New EliminarCobradoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarComisionesMercadeo(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarComisionesMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarComisionesMercadeo(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarComisionesMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarComisionesMercadeoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarComisionesMercadeoAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarComisionesMercadeoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.EliminarComisionesMercadeoOperationCompleted = AddressOf Me.OnEliminarComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("EliminarComisionesMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarComisionesMercadeoCompleted(Me, New EliminarComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarCooperativas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCooperativas(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCooperativas", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCooperativas(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCooperativas", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCooperativas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCooperativasAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarCooperativasAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCooperativasAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCooperativasOperationCompleted Is Nothing) Then
                Me.EliminarCooperativasOperationCompleted = AddressOf Me.OnEliminarCooperativasOperationCompleted
            End If
            Me.InvokeAsync("EliminarCooperativas", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarCooperativasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCooperativasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCooperativasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCooperativasCompleted(Me, New EliminarCooperativasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarCuerposDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCuerposDirectivos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCuerposDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCuerposDirectivos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCuerposDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCuerposDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCuerposDirectivosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarCuerposDirectivosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCuerposDirectivosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCuerposDirectivosOperationCompleted Is Nothing) Then
                Me.EliminarCuerposDirectivosOperationCompleted = AddressOf Me.OnEliminarCuerposDirectivosOperationCompleted
            End If
            Me.InvokeAsync("EliminarCuerposDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarCuerposDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCuerposDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCuerposDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCuerposDirectivosCompleted(Me, New EliminarCuerposDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDepartamentos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDepartamentos", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDepartamentos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDepartamentos", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDepartamentosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDepartamentosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDepartamentosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDepartamentosOperationCompleted Is Nothing) Then
                Me.EliminarDepartamentosOperationCompleted = AddressOf Me.OnEliminarDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("EliminarDepartamentos", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDepartamentosCompleted(Me, New EliminarDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarDetalleComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDetalleComisionesMercadeo(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDetalleComisionesMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDetalleComisionesMercadeo(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDetalleComisionesMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDetalleComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDetalleComisionesMercadeoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDetalleComisionesMercadeoAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDetalleComisionesMercadeoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDetalleComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.EliminarDetalleComisionesMercadeoOperationCompleted = AddressOf Me.OnEliminarDetalleComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("EliminarDetalleComisionesMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarDetalleComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDetalleComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDetalleComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDetalleComisionesMercadeoCompleted(Me, New EliminarDetalleComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarDetDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDetDirectivos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDetDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDetDirectivos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDetDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDetDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDetDirectivosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDetDirectivosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDetDirectivosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDetDirectivosOperationCompleted Is Nothing) Then
                Me.EliminarDetDirectivosOperationCompleted = AddressOf Me.OnEliminarDetDirectivosOperationCompleted
            End If
            Me.InvokeAsync("EliminarDetDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarDetDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDetDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDetDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDetDirectivosCompleted(Me, New EliminarDetDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDirectivos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDirectivos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDirectivosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDirectivosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDirectivosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDirectivosOperationCompleted Is Nothing) Then
                Me.EliminarDirectivosOperationCompleted = AddressOf Me.OnEliminarDirectivosOperationCompleted
            End If
            Me.InvokeAsync("EliminarDirectivos", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDirectivosCompleted(Me, New EliminarDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarDividendos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDividendos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDividendos", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDividendos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDividendos", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDividendos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDividendosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDividendosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDividendosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDividendosOperationCompleted Is Nothing) Then
                Me.EliminarDividendosOperationCompleted = AddressOf Me.OnEliminarDividendosOperationCompleted
            End If
            Me.InvokeAsync("EliminarDividendos", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarDividendosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDividendosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDividendosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDividendosCompleted(Me, New EliminarDividendosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarEjecutivosMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarEjecutivosMercadeo(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarEjecutivosMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarEjecutivosMercadeo(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarEjecutivosMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarEjecutivosMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarEjecutivosMercadeoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarEjecutivosMercadeoAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarEjecutivosMercadeoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarEjecutivosMercadeoOperationCompleted Is Nothing) Then
                Me.EliminarEjecutivosMercadeoOperationCompleted = AddressOf Me.OnEliminarEjecutivosMercadeoOperationCompleted
            End If
            Me.InvokeAsync("EliminarEjecutivosMercadeo", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarEjecutivosMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarEjecutivosMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarEjecutivosMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarEjecutivosMercadeoCompleted(Me, New EliminarEjecutivosMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarEstadoIngreso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarEstadoIngreso(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarEstadoIngreso", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarEstadoIngreso(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarEstadoIngreso", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarEstadoIngreso(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarEstadoIngresoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarEstadoIngresoAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarEstadoIngresoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarEstadoIngresoOperationCompleted Is Nothing) Then
                Me.EliminarEstadoIngresoOperationCompleted = AddressOf Me.OnEliminarEstadoIngresoOperationCompleted
            End If
            Me.InvokeAsync("EliminarEstadoIngreso", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarEstadoIngresoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarEstadoIngresoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarEstadoIngresoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarEstadoIngresoCompleted(Me, New EliminarEstadoIngresoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarExclusion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarExclusion(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarExclusion", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarExclusion(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarExclusion", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarExclusion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarExclusionAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarExclusionAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarExclusionAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarExclusionOperationCompleted Is Nothing) Then
                Me.EliminarExclusionOperationCompleted = AddressOf Me.OnEliminarExclusionOperationCompleted
            End If
            Me.InvokeAsync("EliminarExclusion", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarExclusionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarExclusionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarExclusionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarExclusionCompleted(Me, New EliminarExclusionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarFallecidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarFallecidos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarFallecidos", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarFallecidos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarFallecidos", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarFallecidos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarFallecidosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarFallecidosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarFallecidosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarFallecidosOperationCompleted Is Nothing) Then
                Me.EliminarFallecidosOperationCompleted = AddressOf Me.OnEliminarFallecidosOperationCompleted
            End If
            Me.InvokeAsync("EliminarFallecidos", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarFallecidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarFallecidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarFallecidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarFallecidosCompleted(Me, New EliminarFallecidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarFirmas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarFirmas(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarFirmas", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarFirmas(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarFirmas", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarFirmas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarFirmasAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarFirmasAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarFirmasAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarFirmasOperationCompleted Is Nothing) Then
                Me.EliminarFirmasOperationCompleted = AddressOf Me.OnEliminarFirmasOperationCompleted
            End If
            Me.InvokeAsync("EliminarFirmas", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarFirmasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarFirmasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarFirmasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarFirmasCompleted(Me, New EliminarFirmasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarFormaPago", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarFormaPago(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarFormaPago", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarFormaPago(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarFormaPago", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarFormaPago(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarFormaPagoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarFormaPagoAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarFormaPagoAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarFormaPagoOperationCompleted Is Nothing) Then
                Me.EliminarFormaPagoOperationCompleted = AddressOf Me.OnEliminarFormaPagoOperationCompleted
            End If
            Me.InvokeAsync("EliminarFormaPago", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarFormaPagoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarFormaPagoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarFormaPagoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarFormaPagoCompleted(Me, New EliminarFormaPagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarInhabilitados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarInhabilitados(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarInhabilitados", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarInhabilitados(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarInhabilitados", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarInhabilitados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarInhabilitadosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarInhabilitadosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarInhabilitadosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarInhabilitadosOperationCompleted Is Nothing) Then
                Me.EliminarInhabilitadosOperationCompleted = AddressOf Me.OnEliminarInhabilitadosOperationCompleted
            End If
            Me.InvokeAsync("EliminarInhabilitados", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarInhabilitadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarInhabilitadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarInhabilitadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarInhabilitadosCompleted(Me, New EliminarInhabilitadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarLibroRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarLibroRegistro(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarLibroRegistro", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarLibroRegistro(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarLibroRegistro", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarLibroRegistro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarLibroRegistroAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarLibroRegistroAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarLibroRegistroAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarLibroRegistroOperationCompleted Is Nothing) Then
                Me.EliminarLibroRegistroOperationCompleted = AddressOf Me.OnEliminarLibroRegistroOperationCompleted
            End If
            Me.InvokeAsync("EliminarLibroRegistro", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarLibroRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarLibroRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarLibroRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarLibroRegistroCompleted(Me, New EliminarLibroRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarMunicipios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarMunicipios(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarMunicipios", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarMunicipios(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarMunicipios", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarMunicipios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarMunicipiosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarMunicipiosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarMunicipiosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarMunicipiosOperationCompleted Is Nothing) Then
                Me.EliminarMunicipiosOperationCompleted = AddressOf Me.OnEliminarMunicipiosOperationCompleted
            End If
            Me.InvokeAsync("EliminarMunicipios", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarMunicipiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarMunicipiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarMunicipiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarMunicipiosCompleted(Me, New EliminarMunicipiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarNacionalidades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarNacionalidades(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarNacionalidades", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarNacionalidades(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarNacionalidades", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarNacionalidades(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarNacionalidadesAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarNacionalidadesAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarNacionalidadesAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarNacionalidadesOperationCompleted Is Nothing) Then
                Me.EliminarNacionalidadesOperationCompleted = AddressOf Me.OnEliminarNacionalidadesOperationCompleted
            End If
            Me.InvokeAsync("EliminarNacionalidades", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarNacionalidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarNacionalidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarNacionalidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarNacionalidadesCompleted(Me, New EliminarNacionalidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarParametros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarParametros(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarParametros", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarParametros(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarParametros", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarParametros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarParametrosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarParametrosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarParametrosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarParametrosOperationCompleted Is Nothing) Then
                Me.EliminarParametrosOperationCompleted = AddressOf Me.OnEliminarParametrosOperationCompleted
            End If
            Me.InvokeAsync("EliminarParametros", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarParametrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarParametrosCompleted(Me, New EliminarParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarParentescos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarParentescos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarParentescos", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarParentescos(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarParentescos", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarParentescos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarParentescosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarParentescosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarParentescosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarParentescosOperationCompleted Is Nothing) Then
                Me.EliminarParentescosOperationCompleted = AddressOf Me.OnEliminarParentescosOperationCompleted
            End If
            Me.InvokeAsync("EliminarParentescos", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarParentescosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarParentescosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarParentescosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarParentescosCompleted(Me, New EliminarParentescosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarPlanificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPlanificacion(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPlanificacion", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPlanificacion(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPlanificacion", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPlanificacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPlanificacionAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarPlanificacionAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPlanificacionAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPlanificacionOperationCompleted Is Nothing) Then
                Me.EliminarPlanificacionOperationCompleted = AddressOf Me.OnEliminarPlanificacionOperationCompleted
            End If
            Me.InvokeAsync("EliminarPlanificacion", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarPlanificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPlanificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPlanificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPlanificacionCompleted(Me, New EliminarPlanificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarProfesiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarProfesiones(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarProfesiones", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarProfesiones(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarProfesiones", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarProfesiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarProfesionesAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarProfesionesAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarProfesionesAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarProfesionesOperationCompleted Is Nothing) Then
                Me.EliminarProfesionesOperationCompleted = AddressOf Me.OnEliminarProfesionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarProfesiones", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarProfesionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarProfesionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarProfesionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarProfesionesCompleted(Me, New EliminarProfesionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarReferencias", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarReferencias(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarReferencias", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarReferencias(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarReferencias", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarReferencias(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarReferenciasAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarReferenciasAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarReferenciasAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarReferenciasOperationCompleted Is Nothing) Then
                Me.EliminarReferenciasOperationCompleted = AddressOf Me.OnEliminarReferenciasOperationCompleted
            End If
            Me.InvokeAsync("EliminarReferencias", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarReferenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarReferenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarReferenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarReferenciasCompleted(Me, New EliminarReferenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarRetiros", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarRetiros(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarRetiros", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarRetiros(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarRetiros", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarRetiros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarRetirosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarRetirosAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarRetirosAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarRetirosOperationCompleted Is Nothing) Then
                Me.EliminarRetirosOperationCompleted = AddressOf Me.OnEliminarRetirosOperationCompleted
            End If
            Me.InvokeAsync("EliminarRetiros", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarRetirosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarRetirosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarRetirosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarRetirosCompleted(Me, New EliminarRetirosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarSolicitudRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarSolicitudRetiro(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarSolicitudRetiro", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarSolicitudRetiro(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarSolicitudRetiro", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarSolicitudRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarSolicitudRetiroAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarSolicitudRetiroAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarSolicitudRetiroAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarSolicitudRetiroOperationCompleted Is Nothing) Then
                Me.EliminarSolicitudRetiroOperationCompleted = AddressOf Me.OnEliminarSolicitudRetiroOperationCompleted
            End If
            Me.InvokeAsync("EliminarSolicitudRetiro", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarSolicitudRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarSolicitudRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarSolicitudRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarSolicitudRetiroCompleted(Me, New EliminarSolicitudRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarSucursales", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarSucursales(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarSucursales", New Object() {pCondicion, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarSucursales(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarSucursales", New Object() {pCondicion, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarSucursales(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarSucursalesAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarSucursalesAsync(pCondicion, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarSucursalesAsync(ByVal pCondicion As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarSucursalesOperationCompleted Is Nothing) Then
                Me.EliminarSucursalesOperationCompleted = AddressOf Me.OnEliminarSucursalesOperationCompleted
            End If
            Me.InvokeAsync("EliminarSucursales", New Object() {pCondicion, pUs, pPa, pSucursal}, Me.EliminarSucursalesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarSucursalesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarSucursalesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarSucursalesCompleted(Me, New EliminarSucursalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/EliminarTipoCuota", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarTipoCuota(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarTipoCuota", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarTipoCuota(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarTipoCuota", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarTipoCuota(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoCuotaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarTipoCuotaAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoCuotaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarTipoCuotaOperationCompleted Is Nothing) Then
                Me.EliminarTipoCuotaOperationCompleted = AddressOf Me.OnEliminarTipoCuotaOperationCompleted
            End If
            Me.InvokeAsync("EliminarTipoCuota", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarTipoCuotaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarTipoCuotaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarTipoCuotaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarTipoCuotaCompleted(Me, New EliminarTipoCuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ExclusionAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExclusionAsociado(ByVal pFecha As Date, ByVal pNoActa As String, ByVal pFechaActa As Date, ByVal pNoActaJV As String, ByVal pFechaActaJV As Date, ByVal dsExc As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ExclusionAsociado", New Object() {pFecha, pNoActa, pFechaActa, pNoActaJV, pFechaActaJV, dsExc, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginExclusionAsociado(ByVal pFecha As Date, ByVal pNoActa As String, ByVal pFechaActa As Date, ByVal pNoActaJV As String, ByVal pFechaActaJV As Date, ByVal dsExc As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExclusionAsociado", New Object() {pFecha, pNoActa, pFechaActa, pNoActaJV, pFechaActaJV, dsExc, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndExclusionAsociado(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExclusionAsociadoAsync(ByVal pFecha As Date, ByVal pNoActa As String, ByVal pFechaActa As Date, ByVal pNoActaJV As String, ByVal pFechaActaJV As Date, ByVal dsExc As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ExclusionAsociadoAsync(pFecha, pNoActa, pFechaActa, pNoActaJV, pFechaActaJV, dsExc, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExclusionAsociadoAsync(ByVal pFecha As Date, ByVal pNoActa As String, ByVal pFechaActa As Date, ByVal pNoActaJV As String, ByVal pFechaActaJV As Date, ByVal dsExc As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ExclusionAsociadoOperationCompleted Is Nothing) Then
                Me.ExclusionAsociadoOperationCompleted = AddressOf Me.OnExclusionAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ExclusionAsociado", New Object() {pFecha, pNoActa, pFechaActa, pNoActaJV, pFechaActaJV, dsExc, pUsuario, pPassword, pSucursal}, Me.ExclusionAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnExclusionAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExclusionAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExclusionAsociadoCompleted(Me, New ExclusionAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ExportarDatosAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExportarDatosAsociado(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ExportarDatosAsociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginExportarDatosAsociado(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExportarDatosAsociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndExportarDatosAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExportarDatosAsociadoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ExportarDatosAsociadoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportarDatosAsociadoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ExportarDatosAsociadoOperationCompleted Is Nothing) Then
                Me.ExportarDatosAsociadoOperationCompleted = AddressOf Me.OnExportarDatosAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ExportarDatosAsociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ExportarDatosAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnExportarDatosAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExportarDatosAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExportarDatosAsociadoCompleted(Me, New ExportarDatosAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Generar_Movimiento_Retiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Generar_Movimiento_Retiro(ByVal pDui As String, ByVal pCodEjecutivo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("Generar_Movimiento_Retiro", New Object() {pDui, pCodEjecutivo, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerar_Movimiento_Retiro(ByVal pDui As String, ByVal pCodEjecutivo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Generar_Movimiento_Retiro", New Object() {pDui, pCodEjecutivo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerar_Movimiento_Retiro(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Generar_Movimiento_RetiroAsync(ByVal pDui As String, ByVal pCodEjecutivo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Generar_Movimiento_RetiroAsync(pDui, pCodEjecutivo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Generar_Movimiento_RetiroAsync(ByVal pDui As String, ByVal pCodEjecutivo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Generar_Movimiento_RetiroOperationCompleted Is Nothing) Then
                Me.Generar_Movimiento_RetiroOperationCompleted = AddressOf Me.OnGenerar_Movimiento_RetiroOperationCompleted
            End If
            Me.InvokeAsync("Generar_Movimiento_Retiro", New Object() {pDui, pCodEjecutivo, pUs, pPa, pSucursal}, Me.Generar_Movimiento_RetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerar_Movimiento_RetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Generar_Movimiento_RetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Generar_Movimiento_RetiroCompleted(Me, New Generar_Movimiento_RetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/GenerarPartida_AspiranteAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerarPartida_AspiranteAsociado(ByVal pDui As String, ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal origenAsociado As String) As String
            Dim results() As Object = Me.Invoke("GenerarPartida_AspiranteAsociado", New Object() {pDui, pFecha, pUs, pPa, pSucursal, origenAsociado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerarPartida_AspiranteAsociado(ByVal pDui As String, ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal origenAsociado As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerarPartida_AspiranteAsociado", New Object() {pDui, pFecha, pUs, pPa, pSucursal, origenAsociado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerarPartida_AspiranteAsociado(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerarPartida_AspiranteAsociadoAsync(ByVal pDui As String, ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal origenAsociado As String)
            Me.GenerarPartida_AspiranteAsociadoAsync(pDui, pFecha, pUs, pPa, pSucursal, origenAsociado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerarPartida_AspiranteAsociadoAsync(ByVal pDui As String, ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal origenAsociado As String, ByVal userState As Object)
            If (Me.GenerarPartida_AspiranteAsociadoOperationCompleted Is Nothing) Then
                Me.GenerarPartida_AspiranteAsociadoOperationCompleted = AddressOf Me.OnGenerarPartida_AspiranteAsociadoOperationCompleted
            End If
            Me.InvokeAsync("GenerarPartida_AspiranteAsociado", New Object() {pDui, pFecha, pUs, pPa, pSucursal, origenAsociado}, Me.GenerarPartida_AspiranteAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerarPartida_AspiranteAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerarPartida_AspiranteAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerarPartida_AspiranteAsociadoCompleted(Me, New GenerarPartida_AspiranteAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Impresion_DividendosNoCobrados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Impresion_DividendosNoCobrados(ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Impresion_DividendosNoCobrados", New Object() {pAnnio, pTipo, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginImpresion_DividendosNoCobrados(ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Impresion_DividendosNoCobrados", New Object() {pAnnio, pTipo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndImpresion_DividendosNoCobrados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Impresion_DividendosNoCobradosAsync(ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Impresion_DividendosNoCobradosAsync(pAnnio, pTipo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Impresion_DividendosNoCobradosAsync(ByVal pAnnio As Integer, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Impresion_DividendosNoCobradosOperationCompleted Is Nothing) Then
                Me.Impresion_DividendosNoCobradosOperationCompleted = AddressOf Me.OnImpresion_DividendosNoCobradosOperationCompleted
            End If
            Me.InvokeAsync("Impresion_DividendosNoCobrados", New Object() {pAnnio, pTipo, pUs, pPa, pSucursal}, Me.Impresion_DividendosNoCobradosOperationCompleted, userState)
        End Sub
        
        Private Sub OnImpresion_DividendosNoCobradosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Impresion_DividendosNoCobradosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Impresion_DividendosNoCobradosCompleted(Me, New Impresion_DividendosNoCobradosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Impresion_DividendosxPagar", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Impresion_DividendosxPagar(ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Impresion_DividendosxPagar", New Object() {pFecha, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginImpresion_DividendosxPagar(ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Impresion_DividendosxPagar", New Object() {pFecha, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndImpresion_DividendosxPagar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Impresion_DividendosxPagarAsync(ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Impresion_DividendosxPagarAsync(pFecha, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Impresion_DividendosxPagarAsync(ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Impresion_DividendosxPagarOperationCompleted Is Nothing) Then
                Me.Impresion_DividendosxPagarOperationCompleted = AddressOf Me.OnImpresion_DividendosxPagarOperationCompleted
            End If
            Me.InvokeAsync("Impresion_DividendosxPagar", New Object() {pFecha, pUs, pPa, pSucursal}, Me.Impresion_DividendosxPagarOperationCompleted, userState)
        End Sub
        
        Private Sub OnImpresion_DividendosxPagarOperationCompleted(ByVal arg As Object)
            If (Not (Me.Impresion_DividendosxPagarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Impresion_DividendosxPagarCompleted(Me, New Impresion_DividendosxPagarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/IngresoAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IngresoAsociado(ByVal pMostrarAsociados As Boolean, ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pComite As String, ByVal pRealiza As String, ByVal pRevisa As String, ByVal pCargoRealiza As String, ByVal pCargoRevisa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("IngresoAsociado", New Object() {pMostrarAsociados, pFecIni, pFecFin, pComite, pRealiza, pRevisa, pCargoRealiza, pCargoRevisa, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginIngresoAsociado(ByVal pMostrarAsociados As Boolean, ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pComite As String, ByVal pRealiza As String, ByVal pRevisa As String, ByVal pCargoRealiza As String, ByVal pCargoRevisa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IngresoAsociado", New Object() {pMostrarAsociados, pFecIni, pFecFin, pComite, pRealiza, pRevisa, pCargoRealiza, pCargoRevisa, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndIngresoAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IngresoAsociadoAsync(ByVal pMostrarAsociados As Boolean, ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pComite As String, ByVal pRealiza As String, ByVal pRevisa As String, ByVal pCargoRealiza As String, ByVal pCargoRevisa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.IngresoAsociadoAsync(pMostrarAsociados, pFecIni, pFecFin, pComite, pRealiza, pRevisa, pCargoRealiza, pCargoRevisa, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IngresoAsociadoAsync(ByVal pMostrarAsociados As Boolean, ByVal pFecIni As Date, ByVal pFecFin As Date, ByVal pComite As String, ByVal pRealiza As String, ByVal pRevisa As String, ByVal pCargoRealiza As String, ByVal pCargoRevisa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.IngresoAsociadoOperationCompleted Is Nothing) Then
                Me.IngresoAsociadoOperationCompleted = AddressOf Me.OnIngresoAsociadoOperationCompleted
            End If
            Me.InvokeAsync("IngresoAsociado", New Object() {pMostrarAsociados, pFecIni, pFecFin, pComite, pRealiza, pRevisa, pCargoRealiza, pCargoRevisa, pUs, pPa, pSucursal}, Me.IngresoAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnIngresoAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.IngresoAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IngresoAsociadoCompleted(Me, New IngresoAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InhabilitacionAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InhabilitacionAsociado(ByVal pTodos As Boolean, ByVal pDui As String, ByVal pFecha As Date, ByVal pNumCuotas_Aportacion As Integer, ByVal pNumCuotas_Prestamo As Integer, ByVal pTipo As TipoInhabilitacion, ByVal pDel As Date, ByVal pAl As Date, ByVal pNoActa As String, ByVal pFechaActa As Date, ByVal pNoActaJV As String, ByVal pFechaActaJV As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("InhabilitacionAsociado", New Object() {pTodos, pDui, pFecha, pNumCuotas_Aportacion, pNumCuotas_Prestamo, pTipo, pDel, pAl, pNoActa, pFechaActa, pNoActaJV, pFechaActaJV, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginInhabilitacionAsociado( _
                    ByVal pTodos As Boolean,  _
                    ByVal pDui As String,  _
                    ByVal pFecha As Date,  _
                    ByVal pNumCuotas_Aportacion As Integer,  _
                    ByVal pNumCuotas_Prestamo As Integer,  _
                    ByVal pTipo As TipoInhabilitacion,  _
                    ByVal pDel As Date,  _
                    ByVal pAl As Date,  _
                    ByVal pNoActa As String,  _
                    ByVal pFechaActa As Date,  _
                    ByVal pNoActaJV As String,  _
                    ByVal pFechaActaJV As Date,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InhabilitacionAsociado", New Object() {pTodos, pDui, pFecha, pNumCuotas_Aportacion, pNumCuotas_Prestamo, pTipo, pDel, pAl, pNoActa, pFechaActa, pNoActaJV, pFechaActaJV, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInhabilitacionAsociado(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InhabilitacionAsociadoAsync(ByVal pTodos As Boolean, ByVal pDui As String, ByVal pFecha As Date, ByVal pNumCuotas_Aportacion As Integer, ByVal pNumCuotas_Prestamo As Integer, ByVal pTipo As TipoInhabilitacion, ByVal pDel As Date, ByVal pAl As Date, ByVal pNoActa As String, ByVal pFechaActa As Date, ByVal pNoActaJV As String, ByVal pFechaActaJV As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InhabilitacionAsociadoAsync(pTodos, pDui, pFecha, pNumCuotas_Aportacion, pNumCuotas_Prestamo, pTipo, pDel, pAl, pNoActa, pFechaActa, pNoActaJV, pFechaActaJV, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InhabilitacionAsociadoAsync( _
                    ByVal pTodos As Boolean,  _
                    ByVal pDui As String,  _
                    ByVal pFecha As Date,  _
                    ByVal pNumCuotas_Aportacion As Integer,  _
                    ByVal pNumCuotas_Prestamo As Integer,  _
                    ByVal pTipo As TipoInhabilitacion,  _
                    ByVal pDel As Date,  _
                    ByVal pAl As Date,  _
                    ByVal pNoActa As String,  _
                    ByVal pFechaActa As Date,  _
                    ByVal pNoActaJV As String,  _
                    ByVal pFechaActaJV As Date,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal userState As Object)
            If (Me.InhabilitacionAsociadoOperationCompleted Is Nothing) Then
                Me.InhabilitacionAsociadoOperationCompleted = AddressOf Me.OnInhabilitacionAsociadoOperationCompleted
            End If
            Me.InvokeAsync("InhabilitacionAsociado", New Object() {pTodos, pDui, pFecha, pNumCuotas_Aportacion, pNumCuotas_Prestamo, pTipo, pDel, pAl, pNoActa, pFechaActa, pNoActaJV, pFechaActaJV, pUsuario, pPassword, pSucursal}, Me.InhabilitacionAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInhabilitacionAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InhabilitacionAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InhabilitacionAsociadoCompleted(Me, New InhabilitacionAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarAsociado(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarAsociado", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarAsociado(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarAsociado", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarAsociado(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarAsociadoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarAsociadoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarAsociadoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarAsociadoOperationCompleted Is Nothing) Then
                Me.InsertarAsociadoOperationCompleted = AddressOf Me.OnInsertarAsociadoOperationCompleted
            End If
            Me.InvokeAsync("InsertarAsociado", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarAsociadoCompleted(Me, New InsertarAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarAspectosCooperativos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarAspectosCooperativos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarAspectosCooperativos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarAspectosCooperativos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarAspectosCooperativos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarAspectosCooperativos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarAspectosCooperativosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarAspectosCooperativosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarAspectosCooperativosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarAspectosCooperativosOperationCompleted Is Nothing) Then
                Me.InsertarAspectosCooperativosOperationCompleted = AddressOf Me.OnInsertarAspectosCooperativosOperationCompleted
            End If
            Me.InvokeAsync("InsertarAspectosCooperativos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarAspectosCooperativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarAspectosCooperativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarAspectosCooperativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarAspectosCooperativosCompleted(Me, New InsertarAspectosCooperativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarBeneficiarios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBeneficiarios(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarBeneficiarios", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBeneficiarios(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBeneficiarios", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBeneficiarios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBeneficiariosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarBeneficiariosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBeneficiariosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarBeneficiariosOperationCompleted Is Nothing) Then
                Me.InsertarBeneficiariosOperationCompleted = AddressOf Me.OnInsertarBeneficiariosOperationCompleted
            End If
            Me.InvokeAsync("InsertarBeneficiarios", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarBeneficiariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBeneficiariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBeneficiariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBeneficiariosCompleted(Me, New InsertarBeneficiariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarCobradores", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCobradores(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCobradores", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCobradores(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCobradores", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCobradores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCobradoresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarCobradoresAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCobradoresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCobradoresOperationCompleted Is Nothing) Then
                Me.InsertarCobradoresOperationCompleted = AddressOf Me.OnInsertarCobradoresOperationCompleted
            End If
            Me.InvokeAsync("InsertarCobradores", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarCobradoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCobradoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCobradoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCobradoresCompleted(Me, New InsertarCobradoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarComisionesMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarComisionesMercadeo(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarComisionesMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarComisionesMercadeo(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarComisionesMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarComisionesMercadeo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarComisionesMercadeoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarComisionesMercadeoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarComisionesMercadeoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarComisionesMercadeoOperationCompleted Is Nothing) Then
                Me.InsertarComisionesMercadeoOperationCompleted = AddressOf Me.OnInsertarComisionesMercadeoOperationCompleted
            End If
            Me.InvokeAsync("InsertarComisionesMercadeo", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarComisionesMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarComisionesMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarComisionesMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarComisionesMercadeoCompleted(Me, New InsertarComisionesMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarCooperativas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCooperativas(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCooperativas", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCooperativas(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCooperativas", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCooperativas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCooperativasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarCooperativasAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCooperativasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCooperativasOperationCompleted Is Nothing) Then
                Me.InsertarCooperativasOperationCompleted = AddressOf Me.OnInsertarCooperativasOperationCompleted
            End If
            Me.InvokeAsync("InsertarCooperativas", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarCooperativasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCooperativasOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCooperativasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCooperativasCompleted(Me, New InsertarCooperativasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarCuerposDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCuerposDirectivos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCuerposDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCuerposDirectivos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCuerposDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCuerposDirectivos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCuerposDirectivosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarCuerposDirectivosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCuerposDirectivosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCuerposDirectivosOperationCompleted Is Nothing) Then
                Me.InsertarCuerposDirectivosOperationCompleted = AddressOf Me.OnInsertarCuerposDirectivosOperationCompleted
            End If
            Me.InvokeAsync("InsertarCuerposDirectivos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarCuerposDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCuerposDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCuerposDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCuerposDirectivosCompleted(Me, New InsertarCuerposDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/InsertarDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDepartamentos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDepartamentos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDepartamentos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDepartamentos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDepartamentosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDepartamentosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDepartamentosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDepartamentosOperationCompleted Is Nothing) Then
                Me.InsertarDepartamentosOperationCompleted = AddressOf Me.OnInsertarDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("InsertarDepartamentos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDepartamentosCompleted(Me, New InsertarDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ingresarFormularioUIF", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ingresarFormularioUIF( _
                    ByVal distincaCliente As Integer,  _
                    ByVal apellidosInvolucrado As String,  _
                    ByVal apellidoCasadaInvolucrado As String,  _
                    ByVal nombresInvolucrado As String,  _
                    ByVal codMunNacimientoInvolucrado As String,  _
                    ByVal codDeptoNacimientoInvolucrado As String,  _
                    ByVal fechaNacimientoInvolucrado As Date,  _
                    ByVal codNacionalidadInvolucrado As String,  _
                    ByVal codEstadoFamiliarInvolucrado As String,  _
                    ByVal tipoDocumentoInvolucrado As String,  _
                    ByVal noDocumentoInvolucrado As String,  _
                    ByVal codProfesionInvolucrado As String,  _
                    ByVal domicilioInvolucrado As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal apellidosPropietario As String,  _
                    ByVal apellidoCasPropietario As String,  _
                    ByVal nombresPropietario As String,  _
                    ByVal codMunNacimientoPropietario As String,  _
                    ByVal codDeptoNacimientoPropietario As String,  _
                    ByVal codEstadoFamiliarPropietario As String,  _
                    ByVal tipoDocumentoPropietario As String,  _
                    ByVal noDocumentoPropietario As String,  _
                    ByVal codProfesionPropietario As String,  _
                    ByVal domicilioPropietario As String,  _
                    ByVal razonSocial As String,  _
                    ByVal direccionComercial As String,  _
                    ByVal codigoActividadEconomica As String,  _
                    ByVal nit As String,  _
                    ByVal nrf As String,  _
                    ByVal personaJuridicaBeneficiario As Boolean,  _
                    ByVal apellidosBeneficiario As String,  _
                    ByVal apellidoCasBeneficiario As String,  _
                    ByVal nombresBeneficiario As String,  _
                    ByVal codMunNacimientoBeneficiario As String,  _
                    ByVal codDeptoNacimientoBeneficiario As String,  _
                    ByVal codEstadoFamiliarBeneficiario As String,  _
                    ByVal tipoDocumentoBeneficiario As String,  _
                    ByVal noDocumentoBeneficiario As String,  _
                    ByVal codProfesionBeneficiario As String,  _
                    ByVal domicilioBeneficiario As String,  _
                    ByVal razonSocialBeneficiario As String,  _
                    ByVal direccionComercialBeneficiario As String,  _
                    ByVal codigoActividadEconomicaBeneficiario As String,  _
                    ByVal nitBeneficiario As String,  _
                    ByVal nrfBeneficiario As String,  _
                    ByVal direcciónAgencia As String,  _
                    ByVal codMunAgencia As String,  _
                    ByVal codDeptoAgencia As String,  _
                    ByVal fechaTransaccion As Date,  _
                    ByVal noComrobante As String,  _
                    ByVal claseProducto As String,  _
                    ByVal ingreso As Boolean,  _
                    ByVal conceptoTransaccion As String,  _
                    ByVal montoTransaccion As Double,  _
                    ByVal esEfectivo As Boolean,  _
                    ByVal procedenciaDestino As String,  _
                    ByVal codigoColaborador As String,  _
                    ByVal codCargoColaborador As String,  _
                    ByVal fechaEnvioReporte As Date,  _
                    ByVal apellidosObligado As String,  _
                    ByVal apellidoCasObligado As String,  _
                    ByVal nombresObligado As String,  _
                    ByVal duiObligado As String,  _
                    ByVal nitObligado As String,  _
                    ByVal nrfObligado As String,  _
                    ByVal codigoActividadEconomicaObligado As String,  _
                    ByVal direccionComercialObligado As String,  _
                    ByVal pcCrea As String,  _
                    ByVal usuarioCrea As String,  _
                    ByVal correoEnviado As Boolean) As Integer
            Dim results() As Object = Me.Invoke("ingresarFormularioUIF", New Object() {distincaCliente, apellidosInvolucrado, apellidoCasadaInvolucrado, nombresInvolucrado, codMunNacimientoInvolucrado, codDeptoNacimientoInvolucrado, fechaNacimientoInvolucrado, codNacionalidadInvolucrado, codEstadoFamiliarInvolucrado, tipoDocumentoInvolucrado, noDocumentoInvolucrado, codProfesionInvolucrado, domicilioInvolucrado, personaJuridica, apellidosPropietario, apellidoCasPropietario, nombresPropietario, codMunNacimientoPropietario, codDeptoNacimientoPropietario, codEstadoFamiliarPropietario, tipoDocumentoPropietario, noDocumentoPropietario, codProfesionPropietario, domicilioPropietario, razonSocial, direccionComercial, codigoActividadEconomica, nit, nrf, personaJuridicaBeneficiario, apellidosBeneficiario, apellidoCasBeneficiario, nombresBeneficiario, codMunNacimientoBeneficiario, codDeptoNacimientoBeneficiario, codEstadoFamiliarBeneficiario, tipoDocumentoBeneficiario, noDocumentoBeneficiario, codProfesionBeneficiario, domicilioBeneficiario, razonSocialBeneficiario, direccionComercialBeneficiario, codigoActividadEconomicaBeneficiario, nitBeneficiario, nrfBeneficiario, direcciónAgencia, codMunAgencia, codDeptoAgencia, fechaTransaccion, noComrobante, claseProducto, ingreso, conceptoTransaccion, montoTransaccion, esEfectivo, procedenciaDestino, codigoColaborador, codCargoColaborador, fechaEnvioReporte, apellidosObligado, apellidoCasObligado, nombresObligado, duiObligado, nitObligado, nrfObligado, codigoActividadEconomicaObligado, direccionComercialObligado, pcCrea, usuarioCrea, correoEnviado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginingresarFormularioUIF( _
                    ByVal distincaCliente As Integer,  _
                    ByVal apellidosInvolucrado As String,  _
                    ByVal apellidoCasadaInvolucrado As String,  _
                    ByVal nombresInvolucrado As String,  _
                    ByVal codMunNacimientoInvolucrado As String,  _
                    ByVal codDeptoNacimientoInvolucrado As String,  _
                    ByVal fechaNacimientoInvolucrado As Date,  _
                    ByVal codNacionalidadInvolucrado As String,  _
                    ByVal codEstadoFamiliarInvolucrado As String,  _
                    ByVal tipoDocumentoInvolucrado As String,  _
                    ByVal noDocumentoInvolucrado As String,  _
                    ByVal codProfesionInvolucrado As String,  _
                    ByVal domicilioInvolucrado As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal apellidosPropietario As String,  _
                    ByVal apellidoCasPropietario As String,  _
                    ByVal nombresPropietario As String,  _
                    ByVal codMunNacimientoPropietario As String,  _
                    ByVal codDeptoNacimientoPropietario As String,  _
                    ByVal codEstadoFamiliarPropietario As String,  _
                    ByVal tipoDocumentoPropietario As String,  _
                    ByVal noDocumentoPropietario As String,  _
                    ByVal codProfesionPropietario As String,  _
                    ByVal domicilioPropietario As String,  _
                    ByVal razonSocial As String,  _
                    ByVal direccionComercial As String,  _
                    ByVal codigoActividadEconomica As String,  _
                    ByVal nit As String,  _
                    ByVal nrf As String,  _
                    ByVal personaJuridicaBeneficiario As Boolean,  _
                    ByVal apellidosBeneficiario As String,  _
                    ByVal apellidoCasBeneficiario As String,  _
                    ByVal nombresBeneficiario As String,  _
                    ByVal codMunNacimientoBeneficiario As String,  _
                    ByVal codDeptoNacimientoBeneficiario As String,  _
                    ByVal codEstadoFamiliarBeneficiario As String,  _
                    ByVal tipoDocumentoBeneficiario As String,  _
                    ByVal noDocumentoBeneficiario As String,  _
                    ByVal codProfesionBeneficiario As String,  _
                    ByVal domicilioBeneficiario As String,  _
                    ByVal razonSocialBeneficiario As String,  _
                    ByVal direccionComercialBeneficiario As String,  _
                    ByVal codigoActividadEconomicaBeneficiario As String,  _
                    ByVal nitBeneficiario As String,  _
                    ByVal nrfBeneficiario As String,  _
                    ByVal direcciónAgencia As String,  _
                    ByVal codMunAgencia As String,  _
                    ByVal codDeptoAgencia As String,  _
                    ByVal fechaTransaccion As Date,  _
                    ByVal noComrobante As String,  _
                    ByVal claseProducto As String,  _
                    ByVal ingreso As Boolean,  _
                    ByVal conceptoTransaccion As String,  _
                    ByVal montoTransaccion As Double,  _
                    ByVal esEfectivo As Boolean,  _
                    ByVal procedenciaDestino As String,  _
                    ByVal codigoColaborador As String,  _
                    ByVal codCargoColaborador As String,  _
                    ByVal fechaEnvioReporte As Date,  _
                    ByVal apellidosObligado As String,  _
                    ByVal apellidoCasObligado As String,  _
                    ByVal nombresObligado As String,  _
                    ByVal duiObligado As String,  _
                    ByVal nitObligado As String,  _
                    ByVal nrfObligado As String,  _
                    ByVal codigoActividadEconomicaObligado As String,  _
                    ByVal direccionComercialObligado As String,  _
                    ByVal pcCrea As String,  _
                    ByVal usuarioCrea As String,  _
                    ByVal correoEnviado As Boolean,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ingresarFormularioUIF", New Object() {distincaCliente, apellidosInvolucrado, apellidoCasadaInvolucrado, nombresInvolucrado, codMunNacimientoInvolucrado, codDeptoNacimientoInvolucrado, fechaNacimientoInvolucrado, codNacionalidadInvolucrado, codEstadoFamiliarInvolucrado, tipoDocumentoInvolucrado, noDocumentoInvolucrado, codProfesionInvolucrado, domicilioInvolucrado, personaJuridica, apellidosPropietario, apellidoCasPropietario, nombresPropietario, codMunNacimientoPropietario, codDeptoNacimientoPropietario, codEstadoFamiliarPropietario, tipoDocumentoPropietario, noDocumentoPropietario, codProfesionPropietario, domicilioPropietario, razonSocial, direccionComercial, codigoActividadEconomica, nit, nrf, personaJuridicaBeneficiario, apellidosBeneficiario, apellidoCasBeneficiario, nombresBeneficiario, codMunNacimientoBeneficiario, codDeptoNacimientoBeneficiario, codEstadoFamiliarBeneficiario, tipoDocumentoBeneficiario, noDocumentoBeneficiario, codProfesionBeneficiario, domicilioBeneficiario, razonSocialBeneficiario, direccionComercialBeneficiario, codigoActividadEconomicaBeneficiario, nitBeneficiario, nrfBeneficiario, direcciónAgencia, codMunAgencia, codDeptoAgencia, fechaTransaccion, noComrobante, claseProducto, ingreso, conceptoTransaccion, montoTransaccion, esEfectivo, procedenciaDestino, codigoColaborador, codCargoColaborador, fechaEnvioReporte, apellidosObligado, apellidoCasObligado, nombresObligado, duiObligado, nitObligado, nrfObligado, codigoActividadEconomicaObligado, direccionComercialObligado, pcCrea, usuarioCrea, correoEnviado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndingresarFormularioUIF(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ingresarFormularioUIFAsync( _
                    ByVal distincaCliente As Integer,  _
                    ByVal apellidosInvolucrado As String,  _
                    ByVal apellidoCasadaInvolucrado As String,  _
                    ByVal nombresInvolucrado As String,  _
                    ByVal codMunNacimientoInvolucrado As String,  _
                    ByVal codDeptoNacimientoInvolucrado As String,  _
                    ByVal fechaNacimientoInvolucrado As Date,  _
                    ByVal codNacionalidadInvolucrado As String,  _
                    ByVal codEstadoFamiliarInvolucrado As String,  _
                    ByVal tipoDocumentoInvolucrado As String,  _
                    ByVal noDocumentoInvolucrado As String,  _
                    ByVal codProfesionInvolucrado As String,  _
                    ByVal domicilioInvolucrado As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal apellidosPropietario As String,  _
                    ByVal apellidoCasPropietario As String,  _
                    ByVal nombresPropietario As String,  _
                    ByVal codMunNacimientoPropietario As String,  _
                    ByVal codDeptoNacimientoPropietario As String,  _
                    ByVal codEstadoFamiliarPropietario As String,  _
                    ByVal tipoDocumentoPropietario As String,  _
                    ByVal noDocumentoPropietario As String,  _
                    ByVal codProfesionPropietario As String,  _
                    ByVal domicilioPropietario As String,  _
                    ByVal razonSocial As String,  _
                    ByVal direccionComercial As String,  _
                    ByVal codigoActividadEconomica As String,  _
                    ByVal nit As String,  _
                    ByVal nrf As String,  _
                    ByVal personaJuridicaBeneficiario As Boolean,  _
                    ByVal apellidosBeneficiario As String,  _
                    ByVal apellidoCasBeneficiario As String,  _
                    ByVal nombresBeneficiario As String,  _
                    ByVal codMunNacimientoBeneficiario As String,  _
                    ByVal codDeptoNacimientoBeneficiario As String,  _
                    ByVal codEstadoFamiliarBeneficiario As String,  _
                    ByVal tipoDocumentoBeneficiario As String,  _
                    ByVal noDocumentoBeneficiario As String,  _
                    ByVal codProfesionBeneficiario As String,  _
                    ByVal domicilioBeneficiario As String,  _
                    ByVal razonSocialBeneficiario As String,  _
                    ByVal direccionComercialBeneficiario As String,  _
                    ByVal codigoActividadEconomicaBeneficiario As String,  _
                    ByVal nitBeneficiario As String,  _
                    ByVal nrfBeneficiario As String,  _
                    ByVal direcciónAgencia As String,  _
                    ByVal codMunAgencia As String,  _
                    ByVal codDeptoAgencia As String,  _
                    ByVal fechaTransaccion As Date,  _
                    ByVal noComrobante As String,  _
                    ByVal claseProducto As String,  _
                    ByVal ingreso As Boolean,  _
                    ByVal conceptoTransaccion As String,  _
                    ByVal montoTransaccion As Double,  _
                    ByVal esEfectivo As Boolean,  _
                    ByVal procedenciaDestino As String,  _
                    ByVal codigoColaborador As String,  _
                    ByVal codCargoColaborador As String,  _
                    ByVal fechaEnvioReporte As Date,  _
                    ByVal apellidosObligado As String,  _
                    ByVal apellidoCasObligado As String,  _
                    ByVal nombresObligado As String,  _
                    ByVal duiObligado As String,  _
                    ByVal nitObligado As String,  _
                    ByVal nrfObligado As String,  _
                    ByVal codigoActividadEconomicaObligado As String,  _
                    ByVal direccionComercialObligado As String,  _
                    ByVal pcCrea As String,  _
                    ByVal usuarioCrea As String,  _
                    ByVal correoEnviado As Boolean)
            Me.ingresarFormularioUIFAsync(distincaCliente, apellidosInvolucrado, apellidoCasadaInvolucrado, nombresInvolucrado, codMunNacimientoInvolucrado, codDeptoNacimientoInvolucrado, fechaNacimientoInvolucrado, codNacionalidadInvolucrado, codEstadoFamiliarInvolucrado, tipoDocumentoInvolucrado, noDocumentoInvolucrado, codProfesionInvolucrado, domicilioInvolucrado, personaJuridica, apellidosPropietario, apellidoCasPropietario, nombresPropietario, codMunNacimientoPropietario, codDeptoNacimientoPropietario, codEstadoFamiliarPropietario, tipoDocumentoPropietario, noDocumentoPropietario, codProfesionPropietario, domicilioPropietario, razonSocial, direccionComercial, codigoActividadEconomica, nit, nrf, personaJuridicaBeneficiario, apellidosBeneficiario, apellidoCasBeneficiario, nombresBeneficiario, codMunNacimientoBeneficiario, codDeptoNacimientoBeneficiario, codEstadoFamiliarBeneficiario, tipoDocumentoBeneficiario, noDocumentoBeneficiario, codProfesionBeneficiario, domicilioBeneficiario, razonSocialBeneficiario, direccionComercialBeneficiario, codigoActividadEconomicaBeneficiario, nitBeneficiario, nrfBeneficiario, direcciónAgencia, codMunAgencia, codDeptoAgencia, fechaTransaccion, noComrobante, claseProducto, ingreso, conceptoTransaccion, montoTransaccion, esEfectivo, procedenciaDestino, codigoColaborador, codCargoColaborador, fechaEnvioReporte, apellidosObligado, apellidoCasObligado, nombresObligado, duiObligado, nitObligado, nrfObligado, codigoActividadEconomicaObligado, direccionComercialObligado, pcCrea, usuarioCrea, correoEnviado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ingresarFormularioUIFAsync( _
                    ByVal distincaCliente As Integer,  _
                    ByVal apellidosInvolucrado As String,  _
                    ByVal apellidoCasadaInvolucrado As String,  _
                    ByVal nombresInvolucrado As String,  _
                    ByVal codMunNacimientoInvolucrado As String,  _
                    ByVal codDeptoNacimientoInvolucrado As String,  _
                    ByVal fechaNacimientoInvolucrado As Date,  _
                    ByVal codNacionalidadInvolucrado As String,  _
                    ByVal codEstadoFamiliarInvolucrado As String,  _
                    ByVal tipoDocumentoInvolucrado As String,  _
                    ByVal noDocumentoInvolucrado As String,  _
                    ByVal codProfesionInvolucrado As String,  _
                    ByVal domicilioInvolucrado As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal apellidosPropietario As String,  _
                    ByVal apellidoCasPropietario As String,  _
                    ByVal nombresPropietario As String,  _
                    ByVal codMunNacimientoPropietario As String,  _
                    ByVal codDeptoNacimientoPropietario As String,  _
                    ByVal codEstadoFamiliarPropietario As String,  _
                    ByVal tipoDocumentoPropietario As String,  _
                    ByVal noDocumentoPropietario As String,  _
                    ByVal codProfesionPropietario As String,  _
                    ByVal domicilioPropietario As String,  _
                    ByVal razonSocial As String,  _
                    ByVal direccionComercial As String,  _
                    ByVal codigoActividadEconomica As String,  _
                    ByVal nit As String,  _
                    ByVal nrf As String,  _
                    ByVal personaJuridicaBeneficiario As Boolean,  _
                    ByVal apellidosBeneficiario As String,  _
                    ByVal apellidoCasBeneficiario As String,  _
                    ByVal nombresBeneficiario As String,  _
                    ByVal codMunNacimientoBeneficiario As String,  _
                    ByVal codDeptoNacimientoBeneficiario As String,  _
                    ByVal codEstadoFamiliarBeneficiario As String,  _
                    ByVal tipoDocumentoBeneficiario As String,  _
                    ByVal noDocumentoBeneficiario As String,  _
                    ByVal codProfesionBeneficiario As String,  _
                    ByVal domicilioBeneficiario As String,  _
                    ByVal razonSocialBeneficiario As String,  _
                    ByVal direccionComercialBeneficiario As String,  _
                    ByVal codigoActividadEconomicaBeneficiario As String,  _
                    ByVal nitBeneficiario As String,  _
                    ByVal nrfBeneficiario As String,  _
                    ByVal direcciónAgencia As String,  _
                    ByVal codMunAgencia As String,  _
                    ByVal codDeptoAgencia As String,  _
                    ByVal fechaTransaccion As Date,  _
                    ByVal noComrobante As String,  _
                    ByVal claseProducto As String,  _
                    ByVal ingreso As Boolean,  _
                    ByVal conceptoTransaccion As String,  _
                    ByVal montoTransaccion As Double,  _
                    ByVal esEfectivo As Boolean,  _
                    ByVal procedenciaDestino As String,  _
                    ByVal codigoColaborador As String,  _
                    ByVal codCargoColaborador As String,  _
                    ByVal fechaEnvioReporte As Date,  _
                    ByVal apellidosObligado As String,  _
                    ByVal apellidoCasObligado As String,  _
                    ByVal nombresObligado As String,  _
                    ByVal duiObligado As String,  _
                    ByVal nitObligado As String,  _
                    ByVal nrfObligado As String,  _
                    ByVal codigoActividadEconomicaObligado As String,  _
                    ByVal direccionComercialObligado As String,  _
                    ByVal pcCrea As String,  _
                    ByVal usuarioCrea As String,  _
                    ByVal correoEnviado As Boolean,  _
                    ByVal userState As Object)
            If (Me.ingresarFormularioUIFOperationCompleted Is Nothing) Then
                Me.ingresarFormularioUIFOperationCompleted = AddressOf Me.OningresarFormularioUIFOperationCompleted
            End If
            Me.InvokeAsync("ingresarFormularioUIF", New Object() {distincaCliente, apellidosInvolucrado, apellidoCasadaInvolucrado, nombresInvolucrado, codMunNacimientoInvolucrado, codDeptoNacimientoInvolucrado, fechaNacimientoInvolucrado, codNacionalidadInvolucrado, codEstadoFamiliarInvolucrado, tipoDocumentoInvolucrado, noDocumentoInvolucrado, codProfesionInvolucrado, domicilioInvolucrado, personaJuridica, apellidosPropietario, apellidoCasPropietario, nombresPropietario, codMunNacimientoPropietario, codDeptoNacimientoPropietario, codEstadoFamiliarPropietario, tipoDocumentoPropietario, noDocumentoPropietario, codProfesionPropietario, domicilioPropietario, razonSocial, direccionComercial, codigoActividadEconomica, nit, nrf, personaJuridicaBeneficiario, apellidosBeneficiario, apellidoCasBeneficiario, nombresBeneficiario, codMunNacimientoBeneficiario, codDeptoNacimientoBeneficiario, codEstadoFamiliarBeneficiario, tipoDocumentoBeneficiario, noDocumentoBeneficiario, codProfesionBeneficiario, domicilioBeneficiario, razonSocialBeneficiario, direccionComercialBeneficiario, codigoActividadEconomicaBeneficiario, nitBeneficiario, nrfBeneficiario, direcciónAgencia, codMunAgencia, codDeptoAgencia, fechaTransaccion, noComrobante, claseProducto, ingreso, conceptoTransaccion, montoTransaccion, esEfectivo, procedenciaDestino, codigoColaborador, codCargoColaborador, fechaEnvioReporte, apellidosObligado, apellidoCasObligado, nombresObligado, duiObligado, nitObligado, nrfObligado, codigoActividadEconomicaObligado, direccionComercialObligado, pcCrea, usuarioCrea, correoEnviado}, Me.ingresarFormularioUIFOperationCompleted, userState)
        End Sub
        
        Private Sub OningresarFormularioUIFOperationCompleted(ByVal arg As Object)
            If (Not (Me.ingresarFormularioUIFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ingresarFormularioUIFCompleted(Me, New ingresarFormularioUIFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/AperturaCtaAportacionesTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AperturaCtaAportacionesTransferencia(ByVal noDocumento As String, ByVal tipoTransferencia As String, ByVal fecha As Date, ByVal dui As String, ByVal noSocio As String, ByVal responsable As String, ByVal valorTransferencia As Double, ByVal observacion As String, ByVal usuario As String, ByVal procesada As String, ByVal estado As String, ByVal origen As String, ByVal membresia As String, ByVal idCuentaOrigen As String, ByVal ccOrigen As String) As Integer
            Dim results() As Object = Me.Invoke("AperturaCtaAportacionesTransferencia", New Object() {noDocumento, tipoTransferencia, fecha, dui, noSocio, responsable, valorTransferencia, observacion, usuario, procesada, estado, origen, membresia, idCuentaOrigen, ccOrigen})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginAperturaCtaAportacionesTransferencia( _
                    ByVal noDocumento As String,  _
                    ByVal tipoTransferencia As String,  _
                    ByVal fecha As Date,  _
                    ByVal dui As String,  _
                    ByVal noSocio As String,  _
                    ByVal responsable As String,  _
                    ByVal valorTransferencia As Double,  _
                    ByVal observacion As String,  _
                    ByVal usuario As String,  _
                    ByVal procesada As String,  _
                    ByVal estado As String,  _
                    ByVal origen As String,  _
                    ByVal membresia As String,  _
                    ByVal idCuentaOrigen As String,  _
                    ByVal ccOrigen As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AperturaCtaAportacionesTransferencia", New Object() {noDocumento, tipoTransferencia, fecha, dui, noSocio, responsable, valorTransferencia, observacion, usuario, procesada, estado, origen, membresia, idCuentaOrigen, ccOrigen}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAperturaCtaAportacionesTransferencia(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AperturaCtaAportacionesTransferenciaAsync(ByVal noDocumento As String, ByVal tipoTransferencia As String, ByVal fecha As Date, ByVal dui As String, ByVal noSocio As String, ByVal responsable As String, ByVal valorTransferencia As Double, ByVal observacion As String, ByVal usuario As String, ByVal procesada As String, ByVal estado As String, ByVal origen As String, ByVal membresia As String, ByVal idCuentaOrigen As String, ByVal ccOrigen As String)
            Me.AperturaCtaAportacionesTransferenciaAsync(noDocumento, tipoTransferencia, fecha, dui, noSocio, responsable, valorTransferencia, observacion, usuario, procesada, estado, origen, membresia, idCuentaOrigen, ccOrigen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AperturaCtaAportacionesTransferenciaAsync( _
                    ByVal noDocumento As String,  _
                    ByVal tipoTransferencia As String,  _
                    ByVal fecha As Date,  _
                    ByVal dui As String,  _
                    ByVal noSocio As String,  _
                    ByVal responsable As String,  _
                    ByVal valorTransferencia As Double,  _
                    ByVal observacion As String,  _
                    ByVal usuario As String,  _
                    ByVal procesada As String,  _
                    ByVal estado As String,  _
                    ByVal origen As String,  _
                    ByVal membresia As String,  _
                    ByVal idCuentaOrigen As String,  _
                    ByVal ccOrigen As String,  _
                    ByVal userState As Object)
            If (Me.AperturaCtaAportacionesTransferenciaOperationCompleted Is Nothing) Then
                Me.AperturaCtaAportacionesTransferenciaOperationCompleted = AddressOf Me.OnAperturaCtaAportacionesTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("AperturaCtaAportacionesTransferencia", New Object() {noDocumento, tipoTransferencia, fecha, dui, noSocio, responsable, valorTransferencia, observacion, usuario, procesada, estado, origen, membresia, idCuentaOrigen, ccOrigen}, Me.AperturaCtaAportacionesTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAperturaCtaAportacionesTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AperturaCtaAportacionesTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AperturaCtaAportacionesTransferenciaCompleted(Me, New AperturaCtaAportacionesTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/cambioDui", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function cambioDui(ByVal duiAnt As String, ByVal duiNuevo As String) As Integer
            Dim results() As Object = Me.Invoke("cambioDui", New Object() {duiAnt, duiNuevo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegincambioDui(ByVal duiAnt As String, ByVal duiNuevo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("cambioDui", New Object() {duiAnt, duiNuevo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndcambioDui(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub cambioDuiAsync(ByVal duiAnt As String, ByVal duiNuevo As String)
            Me.cambioDuiAsync(duiAnt, duiNuevo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub cambioDuiAsync(ByVal duiAnt As String, ByVal duiNuevo As String, ByVal userState As Object)
            If (Me.cambioDuiOperationCompleted Is Nothing) Then
                Me.cambioDuiOperationCompleted = AddressOf Me.OncambioDuiOperationCompleted
            End If
            Me.InvokeAsync("cambioDui", New Object() {duiAnt, duiNuevo}, Me.cambioDuiOperationCompleted, userState)
        End Sub
        
        Private Sub OncambioDuiOperationCompleted(ByVal arg As Object)
            If (Not (Me.cambioDuiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent cambioDuiCompleted(Me, New cambioDuiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarListaNegra", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarListaNegra(ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarListaNegra", New Object() {opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarListaNegra(ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarListaNegra", New Object() {opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarListaNegra(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarListaNegraAsync(ByVal opcion As Integer)
            Me.consultarListaNegraAsync(opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarListaNegraAsync(ByVal opcion As Integer, ByVal userState As Object)
            If (Me.consultarListaNegraOperationCompleted Is Nothing) Then
                Me.consultarListaNegraOperationCompleted = AddressOf Me.OnconsultarListaNegraOperationCompleted
            End If
            Me.InvokeAsync("consultarListaNegra", New Object() {opcion}, Me.consultarListaNegraOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarListaNegraOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarListaNegraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarListaNegraCompleted(Me, New consultarListaNegraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/cambiarEstadoListaNegra", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function cambiarEstadoListaNegra(ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal activo As Boolean, ByVal idLista As Integer) As Integer
            Dim results() As Object = Me.Invoke("cambiarEstadoListaNegra", New Object() {usuarioActu, fechaActu, activo, idLista})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegincambiarEstadoListaNegra(ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal activo As Boolean, ByVal idLista As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("cambiarEstadoListaNegra", New Object() {usuarioActu, fechaActu, activo, idLista}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndcambiarEstadoListaNegra(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub cambiarEstadoListaNegraAsync(ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal activo As Boolean, ByVal idLista As Integer)
            Me.cambiarEstadoListaNegraAsync(usuarioActu, fechaActu, activo, idLista, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub cambiarEstadoListaNegraAsync(ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal activo As Boolean, ByVal idLista As Integer, ByVal userState As Object)
            If (Me.cambiarEstadoListaNegraOperationCompleted Is Nothing) Then
                Me.cambiarEstadoListaNegraOperationCompleted = AddressOf Me.OncambiarEstadoListaNegraOperationCompleted
            End If
            Me.InvokeAsync("cambiarEstadoListaNegra", New Object() {usuarioActu, fechaActu, activo, idLista}, Me.cambiarEstadoListaNegraOperationCompleted, userState)
        End Sub
        
        Private Sub OncambiarEstadoListaNegraOperationCompleted(ByVal arg As Object)
            If (Not (Me.cambiarEstadoListaNegraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent cambiarEstadoListaNegraCompleted(Me, New cambiarEstadoListaNegraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificartarListaNegra", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificartarListaNegra( _
                    ByVal nombreReportado As String,  _
                    ByVal fechaHoraIngreso As Date,  _
                    ByVal instReporta As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal noPasaporte As String,  _
                    ByVal carneResidente As String,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As String,  _
                    ByVal activo As Boolean,  _
                    ByVal idLista As Integer,  _
                    ByVal codNacionalidad As String,  _
                    ByVal motivoIngreso As String,  _
                    ByVal vAlias As String,  _
                    ByVal noOficio As String,  _
                    ByVal referenciaOficio As String,  _
                    ByVal infComplementaria As String,  _
                    ByVal estado As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificartarListaNegra", New Object() {nombreReportado, fechaHoraIngreso, instReporta, dui, nit, noPasaporte, carneResidente, usuarioActu, fechaActu, activo, idLista, codNacionalidad, motivoIngreso, vAlias, noOficio, referenciaOficio, infComplementaria, estado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificartarListaNegra( _
                    ByVal nombreReportado As String,  _
                    ByVal fechaHoraIngreso As Date,  _
                    ByVal instReporta As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal noPasaporte As String,  _
                    ByVal carneResidente As String,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As String,  _
                    ByVal activo As Boolean,  _
                    ByVal idLista As Integer,  _
                    ByVal codNacionalidad As String,  _
                    ByVal motivoIngreso As String,  _
                    ByVal vAlias As String,  _
                    ByVal noOficio As String,  _
                    ByVal referenciaOficio As String,  _
                    ByVal infComplementaria As String,  _
                    ByVal estado As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificartarListaNegra", New Object() {nombreReportado, fechaHoraIngreso, instReporta, dui, nit, noPasaporte, carneResidente, usuarioActu, fechaActu, activo, idLista, codNacionalidad, motivoIngreso, vAlias, noOficio, referenciaOficio, infComplementaria, estado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificartarListaNegra(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificartarListaNegraAsync( _
                    ByVal nombreReportado As String,  _
                    ByVal fechaHoraIngreso As Date,  _
                    ByVal instReporta As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal noPasaporte As String,  _
                    ByVal carneResidente As String,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As String,  _
                    ByVal activo As Boolean,  _
                    ByVal idLista As Integer,  _
                    ByVal codNacionalidad As String,  _
                    ByVal motivoIngreso As String,  _
                    ByVal vAlias As String,  _
                    ByVal noOficio As String,  _
                    ByVal referenciaOficio As String,  _
                    ByVal infComplementaria As String,  _
                    ByVal estado As Integer)
            Me.modificartarListaNegraAsync(nombreReportado, fechaHoraIngreso, instReporta, dui, nit, noPasaporte, carneResidente, usuarioActu, fechaActu, activo, idLista, codNacionalidad, motivoIngreso, vAlias, noOficio, referenciaOficio, infComplementaria, estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificartarListaNegraAsync( _
                    ByVal nombreReportado As String,  _
                    ByVal fechaHoraIngreso As Date,  _
                    ByVal instReporta As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal noPasaporte As String,  _
                    ByVal carneResidente As String,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As String,  _
                    ByVal activo As Boolean,  _
                    ByVal idLista As Integer,  _
                    ByVal codNacionalidad As String,  _
                    ByVal motivoIngreso As String,  _
                    ByVal vAlias As String,  _
                    ByVal noOficio As String,  _
                    ByVal referenciaOficio As String,  _
                    ByVal infComplementaria As String,  _
                    ByVal estado As Integer,  _
                    ByVal userState As Object)
            If (Me.modificartarListaNegraOperationCompleted Is Nothing) Then
                Me.modificartarListaNegraOperationCompleted = AddressOf Me.OnmodificartarListaNegraOperationCompleted
            End If
            Me.InvokeAsync("modificartarListaNegra", New Object() {nombreReportado, fechaHoraIngreso, instReporta, dui, nit, noPasaporte, carneResidente, usuarioActu, fechaActu, activo, idLista, codNacionalidad, motivoIngreso, vAlias, noOficio, referenciaOficio, infComplementaria, estado}, Me.modificartarListaNegraOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificartarListaNegraOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificartarListaNegraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificartarListaNegraCompleted(Me, New modificartarListaNegraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarListaNegra", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarListaNegra( _
                    ByVal nombreReportado As String,  _
                    ByVal fechaHoraIngreso As Date,  _
                    ByVal instReporta As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal noPasaporte As String,  _
                    ByVal carneResidente As String,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As String,  _
                    ByVal activo As Boolean,  _
                    ByVal codNacionalidad As String,  _
                    ByVal motivoIngreso As String,  _
                    ByVal vAlias As String,  _
                    ByVal noOficio As String,  _
                    ByVal referenciaOficio As String,  _
                    ByVal infComplementaria As String,  _
                    ByVal estado As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarListaNegra", New Object() {nombreReportado, fechaHoraIngreso, instReporta, dui, nit, noPasaporte, carneResidente, usuarioActu, fechaActu, activo, codNacionalidad, motivoIngreso, vAlias, noOficio, referenciaOficio, infComplementaria, estado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarListaNegra( _
                    ByVal nombreReportado As String,  _
                    ByVal fechaHoraIngreso As Date,  _
                    ByVal instReporta As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal noPasaporte As String,  _
                    ByVal carneResidente As String,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As String,  _
                    ByVal activo As Boolean,  _
                    ByVal codNacionalidad As String,  _
                    ByVal motivoIngreso As String,  _
                    ByVal vAlias As String,  _
                    ByVal noOficio As String,  _
                    ByVal referenciaOficio As String,  _
                    ByVal infComplementaria As String,  _
                    ByVal estado As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarListaNegra", New Object() {nombreReportado, fechaHoraIngreso, instReporta, dui, nit, noPasaporte, carneResidente, usuarioActu, fechaActu, activo, codNacionalidad, motivoIngreso, vAlias, noOficio, referenciaOficio, infComplementaria, estado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarListaNegra(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarListaNegraAsync( _
                    ByVal nombreReportado As String,  _
                    ByVal fechaHoraIngreso As Date,  _
                    ByVal instReporta As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal noPasaporte As String,  _
                    ByVal carneResidente As String,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As String,  _
                    ByVal activo As Boolean,  _
                    ByVal codNacionalidad As String,  _
                    ByVal motivoIngreso As String,  _
                    ByVal vAlias As String,  _
                    ByVal noOficio As String,  _
                    ByVal referenciaOficio As String,  _
                    ByVal infComplementaria As String,  _
                    ByVal estado As Integer)
            Me.insertarListaNegraAsync(nombreReportado, fechaHoraIngreso, instReporta, dui, nit, noPasaporte, carneResidente, usuarioActu, fechaActu, activo, codNacionalidad, motivoIngreso, vAlias, noOficio, referenciaOficio, infComplementaria, estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarListaNegraAsync( _
                    ByVal nombreReportado As String,  _
                    ByVal fechaHoraIngreso As Date,  _
                    ByVal instReporta As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal noPasaporte As String,  _
                    ByVal carneResidente As String,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As String,  _
                    ByVal activo As Boolean,  _
                    ByVal codNacionalidad As String,  _
                    ByVal motivoIngreso As String,  _
                    ByVal vAlias As String,  _
                    ByVal noOficio As String,  _
                    ByVal referenciaOficio As String,  _
                    ByVal infComplementaria As String,  _
                    ByVal estado As Integer,  _
                    ByVal userState As Object)
            If (Me.insertarListaNegraOperationCompleted Is Nothing) Then
                Me.insertarListaNegraOperationCompleted = AddressOf Me.OninsertarListaNegraOperationCompleted
            End If
            Me.InvokeAsync("insertarListaNegra", New Object() {nombreReportado, fechaHoraIngreso, instReporta, dui, nit, noPasaporte, carneResidente, usuarioActu, fechaActu, activo, codNacionalidad, motivoIngreso, vAlias, noOficio, referenciaOficio, infComplementaria, estado}, Me.insertarListaNegraOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarListaNegraOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarListaNegraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarListaNegraCompleted(Me, New insertarListaNegraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertar_CatAsociados_Domicilio", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertar_CatAsociados_Domicilio(ByVal tipoOperacion As Integer, ByVal Correlativo As Integer, ByVal dui As String, ByVal direccion As String, ByVal codMunicipio As String, ByVal codDepartamento As String, ByVal Estado As Boolean) As Integer
            Dim results() As Object = Me.Invoke("insertar_CatAsociados_Domicilio", New Object() {tipoOperacion, Correlativo, dui, direccion, codMunicipio, codDepartamento, Estado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function Begininsertar_CatAsociados_Domicilio(ByVal tipoOperacion As Integer, ByVal Correlativo As Integer, ByVal dui As String, ByVal direccion As String, ByVal codMunicipio As String, ByVal codDepartamento As String, ByVal Estado As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertar_CatAsociados_Domicilio", New Object() {tipoOperacion, Correlativo, dui, direccion, codMunicipio, codDepartamento, Estado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function Endinsertar_CatAsociados_Domicilio(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertar_CatAsociados_DomicilioAsync(ByVal tipoOperacion As Integer, ByVal Correlativo As Integer, ByVal dui As String, ByVal direccion As String, ByVal codMunicipio As String, ByVal codDepartamento As String, ByVal Estado As Boolean)
            Me.insertar_CatAsociados_DomicilioAsync(tipoOperacion, Correlativo, dui, direccion, codMunicipio, codDepartamento, Estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertar_CatAsociados_DomicilioAsync(ByVal tipoOperacion As Integer, ByVal Correlativo As Integer, ByVal dui As String, ByVal direccion As String, ByVal codMunicipio As String, ByVal codDepartamento As String, ByVal Estado As Boolean, ByVal userState As Object)
            If (Me.insertar_CatAsociados_DomicilioOperationCompleted Is Nothing) Then
                Me.insertar_CatAsociados_DomicilioOperationCompleted = AddressOf Me.Oninsertar_CatAsociados_DomicilioOperationCompleted
            End If
            Me.InvokeAsync("insertar_CatAsociados_Domicilio", New Object() {tipoOperacion, Correlativo, dui, direccion, codMunicipio, codDepartamento, Estado}, Me.insertar_CatAsociados_DomicilioOperationCompleted, userState)
        End Sub
        
        Private Sub Oninsertar_CatAsociados_DomicilioOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertar_CatAsociados_DomicilioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertar_CatAsociados_DomicilioCompleted(Me, New insertar_CatAsociados_DomicilioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarDomicilios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDomicilios(ByVal opcion As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDomicilios", New Object() {opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDomicilios(ByVal opcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDomicilios", New Object() {opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDomicilios(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDomiciliosAsync(ByVal opcion As String)
            Me.ConsultarDomiciliosAsync(opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDomiciliosAsync(ByVal opcion As String, ByVal userState As Object)
            If (Me.ConsultarDomiciliosOperationCompleted Is Nothing) Then
                Me.ConsultarDomiciliosOperationCompleted = AddressOf Me.OnConsultarDomiciliosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDomicilios", New Object() {opcion}, Me.ConsultarDomiciliosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDomiciliosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDomiciliosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDomiciliosCompleted(Me, New ConsultarDomiciliosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarAsocRelacionesAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocRelacionesAsociado(ByVal dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocRelacionesAsociado", New Object() {dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocRelacionesAsociado(ByVal dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocRelacionesAsociado", New Object() {dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocRelacionesAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocRelacionesAsociadoAsync(ByVal dui As String)
            Me.consultarAsocRelacionesAsociadoAsync(dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocRelacionesAsociadoAsync(ByVal dui As String, ByVal userState As Object)
            If (Me.consultarAsocRelacionesAsociadoOperationCompleted Is Nothing) Then
                Me.consultarAsocRelacionesAsociadoOperationCompleted = AddressOf Me.OnconsultarAsocRelacionesAsociadoOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocRelacionesAsociado", New Object() {dui}, Me.consultarAsocRelacionesAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocRelacionesAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocRelacionesAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocRelacionesAsociadoCompleted(Me, New consultarAsocRelacionesAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarAsocRelacionesAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarAsocRelacionesAsociado(ByVal dui As String, ByVal duiRelacion As String, ByVal codParentesco As String) As Integer
            Dim results() As Object = Me.Invoke("insertarAsocRelacionesAsociado", New Object() {dui, duiRelacion, codParentesco})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarAsocRelacionesAsociado(ByVal dui As String, ByVal duiRelacion As String, ByVal codParentesco As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarAsocRelacionesAsociado", New Object() {dui, duiRelacion, codParentesco}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarAsocRelacionesAsociado(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarAsocRelacionesAsociadoAsync(ByVal dui As String, ByVal duiRelacion As String, ByVal codParentesco As String)
            Me.insertarAsocRelacionesAsociadoAsync(dui, duiRelacion, codParentesco, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarAsocRelacionesAsociadoAsync(ByVal dui As String, ByVal duiRelacion As String, ByVal codParentesco As String, ByVal userState As Object)
            If (Me.insertarAsocRelacionesAsociadoOperationCompleted Is Nothing) Then
                Me.insertarAsocRelacionesAsociadoOperationCompleted = AddressOf Me.OninsertarAsocRelacionesAsociadoOperationCompleted
            End If
            Me.InvokeAsync("insertarAsocRelacionesAsociado", New Object() {dui, duiRelacion, codParentesco}, Me.insertarAsocRelacionesAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarAsocRelacionesAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarAsocRelacionesAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarAsocRelacionesAsociadoCompleted(Me, New insertarAsocRelacionesAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificarAsocRelacionesAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarAsocRelacionesAsociado(ByVal dui As String, ByVal duiRelacion As String, ByVal codParentesco As String, ByVal correlativo As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarAsocRelacionesAsociado", New Object() {dui, duiRelacion, codParentesco, correlativo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarAsocRelacionesAsociado(ByVal dui As String, ByVal duiRelacion As String, ByVal codParentesco As String, ByVal correlativo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarAsocRelacionesAsociado", New Object() {dui, duiRelacion, codParentesco, correlativo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarAsocRelacionesAsociado(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarAsocRelacionesAsociadoAsync(ByVal dui As String, ByVal duiRelacion As String, ByVal codParentesco As String, ByVal correlativo As Integer)
            Me.modificarAsocRelacionesAsociadoAsync(dui, duiRelacion, codParentesco, correlativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarAsocRelacionesAsociadoAsync(ByVal dui As String, ByVal duiRelacion As String, ByVal codParentesco As String, ByVal correlativo As Integer, ByVal userState As Object)
            If (Me.modificarAsocRelacionesAsociadoOperationCompleted Is Nothing) Then
                Me.modificarAsocRelacionesAsociadoOperationCompleted = AddressOf Me.OnmodificarAsocRelacionesAsociadoOperationCompleted
            End If
            Me.InvokeAsync("modificarAsocRelacionesAsociado", New Object() {dui, duiRelacion, codParentesco, correlativo}, Me.modificarAsocRelacionesAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarAsocRelacionesAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarAsocRelacionesAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarAsocRelacionesAsociadoCompleted(Me, New modificarAsocRelacionesAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/eliminarAsocRelacionesAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarAsocRelacionesAsociado(ByVal correlativo As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarAsocRelacionesAsociado", New Object() {correlativo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarAsocRelacionesAsociado(ByVal correlativo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarAsocRelacionesAsociado", New Object() {correlativo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarAsocRelacionesAsociado(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarAsocRelacionesAsociadoAsync(ByVal correlativo As Integer)
            Me.eliminarAsocRelacionesAsociadoAsync(correlativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarAsocRelacionesAsociadoAsync(ByVal correlativo As Integer, ByVal userState As Object)
            If (Me.eliminarAsocRelacionesAsociadoOperationCompleted Is Nothing) Then
                Me.eliminarAsocRelacionesAsociadoOperationCompleted = AddressOf Me.OneliminarAsocRelacionesAsociadoOperationCompleted
            End If
            Me.InvokeAsync("eliminarAsocRelacionesAsociado", New Object() {correlativo}, Me.eliminarAsocRelacionesAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarAsocRelacionesAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarAsocRelacionesAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarAsocRelacionesAsociadoCompleted(Me, New eliminarAsocRelacionesAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/validarCamposActividadEconomica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarCamposActividadEconomica( _
                    ByVal codLugarTrabajo As String,  _
                    ByVal codActEconomica As String,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal esContribuyente As Boolean,  _
                    ByVal numRegContri As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal estadoLaboral As String,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioLabor As Date,  _
                    ByVal cargo As String,  _
                    ByVal ingreso As Double,  _
                    ByVal totalIngreso As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepto As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String) As String
            Dim results() As Object = Me.Invoke("validarCamposActividadEconomica", New Object() {codLugarTrabajo, codActEconomica, negocioFormal, esContribuyente, numRegContri, nombreComercial, razonSocial, giro, estadoLaboral, areaTrabajo, fechaInicioLabor, cargo, ingreso, totalIngreso, telOficina, extOficina, codDepto, codMunicipio, direccion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarCamposActividadEconomica( _
                    ByVal codLugarTrabajo As String,  _
                    ByVal codActEconomica As String,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal esContribuyente As Boolean,  _
                    ByVal numRegContri As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal estadoLaboral As String,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioLabor As Date,  _
                    ByVal cargo As String,  _
                    ByVal ingreso As Double,  _
                    ByVal totalIngreso As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepto As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarCamposActividadEconomica", New Object() {codLugarTrabajo, codActEconomica, negocioFormal, esContribuyente, numRegContri, nombreComercial, razonSocial, giro, estadoLaboral, areaTrabajo, fechaInicioLabor, cargo, ingreso, totalIngreso, telOficina, extOficina, codDepto, codMunicipio, direccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarCamposActividadEconomica(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarCamposActividadEconomicaAsync( _
                    ByVal codLugarTrabajo As String,  _
                    ByVal codActEconomica As String,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal esContribuyente As Boolean,  _
                    ByVal numRegContri As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal estadoLaboral As String,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioLabor As Date,  _
                    ByVal cargo As String,  _
                    ByVal ingreso As Double,  _
                    ByVal totalIngreso As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepto As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String)
            Me.validarCamposActividadEconomicaAsync(codLugarTrabajo, codActEconomica, negocioFormal, esContribuyente, numRegContri, nombreComercial, razonSocial, giro, estadoLaboral, areaTrabajo, fechaInicioLabor, cargo, ingreso, totalIngreso, telOficina, extOficina, codDepto, codMunicipio, direccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarCamposActividadEconomicaAsync( _
                    ByVal codLugarTrabajo As String,  _
                    ByVal codActEconomica As String,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal esContribuyente As Boolean,  _
                    ByVal numRegContri As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal estadoLaboral As String,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioLabor As Date,  _
                    ByVal cargo As String,  _
                    ByVal ingreso As Double,  _
                    ByVal totalIngreso As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepto As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal userState As Object)
            If (Me.validarCamposActividadEconomicaOperationCompleted Is Nothing) Then
                Me.validarCamposActividadEconomicaOperationCompleted = AddressOf Me.OnvalidarCamposActividadEconomicaOperationCompleted
            End If
            Me.InvokeAsync("validarCamposActividadEconomica", New Object() {codLugarTrabajo, codActEconomica, negocioFormal, esContribuyente, numRegContri, nombreComercial, razonSocial, giro, estadoLaboral, areaTrabajo, fechaInicioLabor, cargo, ingreso, totalIngreso, telOficina, extOficina, codDepto, codMunicipio, direccion}, Me.validarCamposActividadEconomicaOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarCamposActividadEconomicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarCamposActividadEconomicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarCamposActividadEconomicaCompleted(Me, New validarCamposActividadEconomicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/validarInfComplementaria", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarInfComplementaria( _
                    ByVal nivelEducativo As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal nombreConyugue As String,  _
                    ByVal fechaNac As Date,  _
                    ByVal profesion As String,  _
                    ByVal oficio As String,  _
                    ByVal lugarTrabajo As String,  _
                    ByVal telefono As String,  _
                    ByVal codActEco As String,  _
                    ByVal ingreso As Double,  _
                    ByVal ingresoPromMensual As Double,  _
                    ByVal numDep As Integer,  _
                    ByVal numGrupoFam As Integer,  _
                    ByVal estadoVivienda As String,  _
                    ByVal tiempoResidir As Integer,  _
                    ByVal fueDir As Boolean,  _
                    ByVal directivo As Boolean,  _
                    ByVal periodoFueDir As String,  _
                    ByVal periodoDir As String,  _
                    ByVal codDirectivo As String) As String
            Dim results() As Object = Me.Invoke("validarInfComplementaria", New Object() {nivelEducativo, tituloObtenido, nombreConyugue, fechaNac, profesion, oficio, lugarTrabajo, telefono, codActEco, ingreso, ingresoPromMensual, numDep, numGrupoFam, estadoVivienda, tiempoResidir, fueDir, directivo, periodoFueDir, periodoDir, codDirectivo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarInfComplementaria( _
                    ByVal nivelEducativo As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal nombreConyugue As String,  _
                    ByVal fechaNac As Date,  _
                    ByVal profesion As String,  _
                    ByVal oficio As String,  _
                    ByVal lugarTrabajo As String,  _
                    ByVal telefono As String,  _
                    ByVal codActEco As String,  _
                    ByVal ingreso As Double,  _
                    ByVal ingresoPromMensual As Double,  _
                    ByVal numDep As Integer,  _
                    ByVal numGrupoFam As Integer,  _
                    ByVal estadoVivienda As String,  _
                    ByVal tiempoResidir As Integer,  _
                    ByVal fueDir As Boolean,  _
                    ByVal directivo As Boolean,  _
                    ByVal periodoFueDir As String,  _
                    ByVal periodoDir As String,  _
                    ByVal codDirectivo As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarInfComplementaria", New Object() {nivelEducativo, tituloObtenido, nombreConyugue, fechaNac, profesion, oficio, lugarTrabajo, telefono, codActEco, ingreso, ingresoPromMensual, numDep, numGrupoFam, estadoVivienda, tiempoResidir, fueDir, directivo, periodoFueDir, periodoDir, codDirectivo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarInfComplementaria(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarInfComplementariaAsync( _
                    ByVal nivelEducativo As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal nombreConyugue As String,  _
                    ByVal fechaNac As Date,  _
                    ByVal profesion As String,  _
                    ByVal oficio As String,  _
                    ByVal lugarTrabajo As String,  _
                    ByVal telefono As String,  _
                    ByVal codActEco As String,  _
                    ByVal ingreso As Double,  _
                    ByVal ingresoPromMensual As Double,  _
                    ByVal numDep As Integer,  _
                    ByVal numGrupoFam As Integer,  _
                    ByVal estadoVivienda As String,  _
                    ByVal tiempoResidir As Integer,  _
                    ByVal fueDir As Boolean,  _
                    ByVal directivo As Boolean,  _
                    ByVal periodoFueDir As String,  _
                    ByVal periodoDir As String,  _
                    ByVal codDirectivo As String)
            Me.validarInfComplementariaAsync(nivelEducativo, tituloObtenido, nombreConyugue, fechaNac, profesion, oficio, lugarTrabajo, telefono, codActEco, ingreso, ingresoPromMensual, numDep, numGrupoFam, estadoVivienda, tiempoResidir, fueDir, directivo, periodoFueDir, periodoDir, codDirectivo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarInfComplementariaAsync( _
                    ByVal nivelEducativo As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal nombreConyugue As String,  _
                    ByVal fechaNac As Date,  _
                    ByVal profesion As String,  _
                    ByVal oficio As String,  _
                    ByVal lugarTrabajo As String,  _
                    ByVal telefono As String,  _
                    ByVal codActEco As String,  _
                    ByVal ingreso As Double,  _
                    ByVal ingresoPromMensual As Double,  _
                    ByVal numDep As Integer,  _
                    ByVal numGrupoFam As Integer,  _
                    ByVal estadoVivienda As String,  _
                    ByVal tiempoResidir As Integer,  _
                    ByVal fueDir As Boolean,  _
                    ByVal directivo As Boolean,  _
                    ByVal periodoFueDir As String,  _
                    ByVal periodoDir As String,  _
                    ByVal codDirectivo As String,  _
                    ByVal userState As Object)
            If (Me.validarInfComplementariaOperationCompleted Is Nothing) Then
                Me.validarInfComplementariaOperationCompleted = AddressOf Me.OnvalidarInfComplementariaOperationCompleted
            End If
            Me.InvokeAsync("validarInfComplementaria", New Object() {nivelEducativo, tituloObtenido, nombreConyugue, fechaNac, profesion, oficio, lugarTrabajo, telefono, codActEco, ingreso, ingresoPromMensual, numDep, numGrupoFam, estadoVivienda, tiempoResidir, fueDir, directivo, periodoFueDir, periodoDir, codDirectivo}, Me.validarInfComplementariaOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarInfComplementariaOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarInfComplementariaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarInfComplementariaCompleted(Me, New validarInfComplementariaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/validarPEP", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarPEP(ByVal fechaNom As Date, ByVal periodoNom As String, ByVal tipoPep As Integer, ByVal tiempoLaboral As Integer) As String
            Dim results() As Object = Me.Invoke("validarPEP", New Object() {fechaNom, periodoNom, tipoPep, tiempoLaboral})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarPEP(ByVal fechaNom As Date, ByVal periodoNom As String, ByVal tipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarPEP", New Object() {fechaNom, periodoNom, tipoPep, tiempoLaboral}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarPEP(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarPEPAsync(ByVal fechaNom As Date, ByVal periodoNom As String, ByVal tipoPep As Integer, ByVal tiempoLaboral As Integer)
            Me.validarPEPAsync(fechaNom, periodoNom, tipoPep, tiempoLaboral, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarPEPAsync(ByVal fechaNom As Date, ByVal periodoNom As String, ByVal tipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal userState As Object)
            If (Me.validarPEPOperationCompleted Is Nothing) Then
                Me.validarPEPOperationCompleted = AddressOf Me.OnvalidarPEPOperationCompleted
            End If
            Me.InvokeAsync("validarPEP", New Object() {fechaNom, periodoNom, tipoPep, tiempoLaboral}, Me.validarPEPOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarPEPOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarPEPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarPEPCompleted(Me, New validarPEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/validarOtrosDatos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarOtrosDatos(ByVal estadoAsoc As Integer, ByVal codEjecutivo As String, ByVal observaciones As String, ByVal tipoCuota As Integer) As String
            Dim results() As Object = Me.Invoke("validarOtrosDatos", New Object() {estadoAsoc, codEjecutivo, observaciones, tipoCuota})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarOtrosDatos(ByVal estadoAsoc As Integer, ByVal codEjecutivo As String, ByVal observaciones As String, ByVal tipoCuota As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarOtrosDatos", New Object() {estadoAsoc, codEjecutivo, observaciones, tipoCuota}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarOtrosDatos(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarOtrosDatosAsync(ByVal estadoAsoc As Integer, ByVal codEjecutivo As String, ByVal observaciones As String, ByVal tipoCuota As Integer)
            Me.validarOtrosDatosAsync(estadoAsoc, codEjecutivo, observaciones, tipoCuota, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarOtrosDatosAsync(ByVal estadoAsoc As Integer, ByVal codEjecutivo As String, ByVal observaciones As String, ByVal tipoCuota As Integer, ByVal userState As Object)
            If (Me.validarOtrosDatosOperationCompleted Is Nothing) Then
                Me.validarOtrosDatosOperationCompleted = AddressOf Me.OnvalidarOtrosDatosOperationCompleted
            End If
            Me.InvokeAsync("validarOtrosDatos", New Object() {estadoAsoc, codEjecutivo, observaciones, tipoCuota}, Me.validarOtrosDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarOtrosDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarOtrosDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarOtrosDatosCompleted(Me, New validarOtrosDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/validarCamposDeclaracionJurada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarCamposDeclaracionJurada(ByVal depositosPromedioMen As Double, ByVal inversionista As Boolean, ByVal retirosPromMen As Double, ByVal destino As String, ByVal origenFondos As String, ByVal montoPromDPF As Double, ByVal presentoDocOrigenFondos As Boolean, ByVal origenFondosDpf As String) As String
            Dim results() As Object = Me.Invoke("validarCamposDeclaracionJurada", New Object() {depositosPromedioMen, inversionista, retirosPromMen, destino, origenFondos, montoPromDPF, presentoDocOrigenFondos, origenFondosDpf})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarCamposDeclaracionJurada(ByVal depositosPromedioMen As Double, ByVal inversionista As Boolean, ByVal retirosPromMen As Double, ByVal destino As String, ByVal origenFondos As String, ByVal montoPromDPF As Double, ByVal presentoDocOrigenFondos As Boolean, ByVal origenFondosDpf As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarCamposDeclaracionJurada", New Object() {depositosPromedioMen, inversionista, retirosPromMen, destino, origenFondos, montoPromDPF, presentoDocOrigenFondos, origenFondosDpf}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarCamposDeclaracionJurada(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarCamposDeclaracionJuradaAsync(ByVal depositosPromedioMen As Double, ByVal inversionista As Boolean, ByVal retirosPromMen As Double, ByVal destino As String, ByVal origenFondos As String, ByVal montoPromDPF As Double, ByVal presentoDocOrigenFondos As Boolean, ByVal origenFondosDpf As String)
            Me.validarCamposDeclaracionJuradaAsync(depositosPromedioMen, inversionista, retirosPromMen, destino, origenFondos, montoPromDPF, presentoDocOrigenFondos, origenFondosDpf, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarCamposDeclaracionJuradaAsync(ByVal depositosPromedioMen As Double, ByVal inversionista As Boolean, ByVal retirosPromMen As Double, ByVal destino As String, ByVal origenFondos As String, ByVal montoPromDPF As Double, ByVal presentoDocOrigenFondos As Boolean, ByVal origenFondosDpf As String, ByVal userState As Object)
            If (Me.validarCamposDeclaracionJuradaOperationCompleted Is Nothing) Then
                Me.validarCamposDeclaracionJuradaOperationCompleted = AddressOf Me.OnvalidarCamposDeclaracionJuradaOperationCompleted
            End If
            Me.InvokeAsync("validarCamposDeclaracionJurada", New Object() {depositosPromedioMen, inversionista, retirosPromMen, destino, origenFondos, montoPromDPF, presentoDocOrigenFondos, origenFondosDpf}, Me.validarCamposDeclaracionJuradaOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarCamposDeclaracionJuradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarCamposDeclaracionJuradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarCamposDeclaracionJuradaCompleted(Me, New validarCamposDeclaracionJuradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/validarCamposObligatorios", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarCamposObligatorios( _
                    ByVal nombre As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal direccion As String,  _
                    ByVal numeroTelefono As String,  _
                    ByVal fechaNacimiento As Date,  _
                    ByVal sexo As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal actividadActual As String,  _
                    ByVal lugarTrabajo As String,  _
                    ByVal departamentoTrabajo As String,  _
                    ByVal fechaIngresoTrabajo As Date,  _
                    ByVal direccionTrabajo As String,  _
                    ByVal NumeroTelefonoTrabajo As String,  _
                    ByVal celular As String,  _
                    ByVal salario As Double,  _
                    ByVal codEstadoFamiliar As String,  _
                    ByVal opcion As Integer) As String
            Dim results() As Object = Me.Invoke("validarCamposObligatorios", New Object() {nombre, dui, nit, direccion, numeroTelefono, fechaNacimiento, sexo, lugarExtDui, fechaExtDui, codNacionalidad, tituloObtenido, actividadActual, lugarTrabajo, departamentoTrabajo, fechaIngresoTrabajo, direccionTrabajo, NumeroTelefonoTrabajo, celular, salario, codEstadoFamiliar, opcion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarCamposObligatorios( _
                    ByVal nombre As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal direccion As String,  _
                    ByVal numeroTelefono As String,  _
                    ByVal fechaNacimiento As Date,  _
                    ByVal sexo As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal actividadActual As String,  _
                    ByVal lugarTrabajo As String,  _
                    ByVal departamentoTrabajo As String,  _
                    ByVal fechaIngresoTrabajo As Date,  _
                    ByVal direccionTrabajo As String,  _
                    ByVal NumeroTelefonoTrabajo As String,  _
                    ByVal celular As String,  _
                    ByVal salario As Double,  _
                    ByVal codEstadoFamiliar As String,  _
                    ByVal opcion As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarCamposObligatorios", New Object() {nombre, dui, nit, direccion, numeroTelefono, fechaNacimiento, sexo, lugarExtDui, fechaExtDui, codNacionalidad, tituloObtenido, actividadActual, lugarTrabajo, departamentoTrabajo, fechaIngresoTrabajo, direccionTrabajo, NumeroTelefonoTrabajo, celular, salario, codEstadoFamiliar, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarCamposObligatorios(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarCamposObligatoriosAsync( _
                    ByVal nombre As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal direccion As String,  _
                    ByVal numeroTelefono As String,  _
                    ByVal fechaNacimiento As Date,  _
                    ByVal sexo As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal actividadActual As String,  _
                    ByVal lugarTrabajo As String,  _
                    ByVal departamentoTrabajo As String,  _
                    ByVal fechaIngresoTrabajo As Date,  _
                    ByVal direccionTrabajo As String,  _
                    ByVal NumeroTelefonoTrabajo As String,  _
                    ByVal celular As String,  _
                    ByVal salario As Double,  _
                    ByVal codEstadoFamiliar As String,  _
                    ByVal opcion As Integer)
            Me.validarCamposObligatoriosAsync(nombre, dui, nit, direccion, numeroTelefono, fechaNacimiento, sexo, lugarExtDui, fechaExtDui, codNacionalidad, tituloObtenido, actividadActual, lugarTrabajo, departamentoTrabajo, fechaIngresoTrabajo, direccionTrabajo, NumeroTelefonoTrabajo, celular, salario, codEstadoFamiliar, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarCamposObligatoriosAsync( _
                    ByVal nombre As String,  _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal direccion As String,  _
                    ByVal numeroTelefono As String,  _
                    ByVal fechaNacimiento As Date,  _
                    ByVal sexo As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal actividadActual As String,  _
                    ByVal lugarTrabajo As String,  _
                    ByVal departamentoTrabajo As String,  _
                    ByVal fechaIngresoTrabajo As Date,  _
                    ByVal direccionTrabajo As String,  _
                    ByVal NumeroTelefonoTrabajo As String,  _
                    ByVal celular As String,  _
                    ByVal salario As Double,  _
                    ByVal codEstadoFamiliar As String,  _
                    ByVal opcion As Integer,  _
                    ByVal userState As Object)
            If (Me.validarCamposObligatoriosOperationCompleted Is Nothing) Then
                Me.validarCamposObligatoriosOperationCompleted = AddressOf Me.OnvalidarCamposObligatoriosOperationCompleted
            End If
            Me.InvokeAsync("validarCamposObligatorios", New Object() {nombre, dui, nit, direccion, numeroTelefono, fechaNacimiento, sexo, lugarExtDui, fechaExtDui, codNacionalidad, tituloObtenido, actividadActual, lugarTrabajo, departamentoTrabajo, fechaIngresoTrabajo, direccionTrabajo, NumeroTelefonoTrabajo, celular, salario, codEstadoFamiliar, opcion}, Me.validarCamposObligatoriosOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarCamposObligatoriosOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarCamposObligatoriosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarCamposObligatoriosCompleted(Me, New validarCamposObligatoriosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/rptSolicitudIngreso", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function rptSolicitudIngreso(ByVal dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("rptSolicitudIngreso", New Object() {dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginrptSolicitudIngreso(ByVal dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("rptSolicitudIngreso", New Object() {dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndrptSolicitudIngreso(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub rptSolicitudIngresoAsync(ByVal dui As String)
            Me.rptSolicitudIngresoAsync(dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub rptSolicitudIngresoAsync(ByVal dui As String, ByVal userState As Object)
            If (Me.rptSolicitudIngresoOperationCompleted Is Nothing) Then
                Me.rptSolicitudIngresoOperationCompleted = AddressOf Me.OnrptSolicitudIngresoOperationCompleted
            End If
            Me.InvokeAsync("rptSolicitudIngreso", New Object() {dui}, Me.rptSolicitudIngresoOperationCompleted, userState)
        End Sub
        
        Private Sub OnrptSolicitudIngresoOperationCompleted(ByVal arg As Object)
            If (Not (Me.rptSolicitudIngresoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent rptSolicitudIngresoCompleted(Me, New rptSolicitudIngresoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/anularAsocDeclaracionJuradaDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function anularAsocDeclaracionJuradaDocumentos(ByVal idDoc As Integer, ByVal estado As Boolean) As Integer
            Dim results() As Object = Me.Invoke("anularAsocDeclaracionJuradaDocumentos", New Object() {idDoc, estado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginanularAsocDeclaracionJuradaDocumentos(ByVal idDoc As Integer, ByVal estado As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("anularAsocDeclaracionJuradaDocumentos", New Object() {idDoc, estado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndanularAsocDeclaracionJuradaDocumentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub anularAsocDeclaracionJuradaDocumentosAsync(ByVal idDoc As Integer, ByVal estado As Boolean)
            Me.anularAsocDeclaracionJuradaDocumentosAsync(idDoc, estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub anularAsocDeclaracionJuradaDocumentosAsync(ByVal idDoc As Integer, ByVal estado As Boolean, ByVal userState As Object)
            If (Me.anularAsocDeclaracionJuradaDocumentosOperationCompleted Is Nothing) Then
                Me.anularAsocDeclaracionJuradaDocumentosOperationCompleted = AddressOf Me.OnanularAsocDeclaracionJuradaDocumentosOperationCompleted
            End If
            Me.InvokeAsync("anularAsocDeclaracionJuradaDocumentos", New Object() {idDoc, estado}, Me.anularAsocDeclaracionJuradaDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnanularAsocDeclaracionJuradaDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.anularAsocDeclaracionJuradaDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent anularAsocDeclaracionJuradaDocumentosCompleted(Me, New anularAsocDeclaracionJuradaDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificarAsocDeclaracionJuradaDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarAsocDeclaracionJuradaDocumentos(ByVal idDocumento As Integer, ByVal plazoPresentacion As Integer, ByVal fechaPresentacion As Date, ByVal presentoDocumentacion As Boolean, ByVal idDoc As Integer, ByVal usuarioModifica As String, ByVal fechaModificacion As Date, ByVal estado As Boolean) As Integer
            Dim results() As Object = Me.Invoke("modificarAsocDeclaracionJuradaDocumentos", New Object() {idDocumento, plazoPresentacion, fechaPresentacion, presentoDocumentacion, idDoc, usuarioModifica, fechaModificacion, estado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarAsocDeclaracionJuradaDocumentos(ByVal idDocumento As Integer, ByVal plazoPresentacion As Integer, ByVal fechaPresentacion As Date, ByVal presentoDocumentacion As Boolean, ByVal idDoc As Integer, ByVal usuarioModifica As String, ByVal fechaModificacion As Date, ByVal estado As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarAsocDeclaracionJuradaDocumentos", New Object() {idDocumento, plazoPresentacion, fechaPresentacion, presentoDocumentacion, idDoc, usuarioModifica, fechaModificacion, estado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarAsocDeclaracionJuradaDocumentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarAsocDeclaracionJuradaDocumentosAsync(ByVal idDocumento As Integer, ByVal plazoPresentacion As Integer, ByVal fechaPresentacion As Date, ByVal presentoDocumentacion As Boolean, ByVal idDoc As Integer, ByVal usuarioModifica As String, ByVal fechaModificacion As Date, ByVal estado As Boolean)
            Me.modificarAsocDeclaracionJuradaDocumentosAsync(idDocumento, plazoPresentacion, fechaPresentacion, presentoDocumentacion, idDoc, usuarioModifica, fechaModificacion, estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarAsocDeclaracionJuradaDocumentosAsync(ByVal idDocumento As Integer, ByVal plazoPresentacion As Integer, ByVal fechaPresentacion As Date, ByVal presentoDocumentacion As Boolean, ByVal idDoc As Integer, ByVal usuarioModifica As String, ByVal fechaModificacion As Date, ByVal estado As Boolean, ByVal userState As Object)
            If (Me.modificarAsocDeclaracionJuradaDocumentosOperationCompleted Is Nothing) Then
                Me.modificarAsocDeclaracionJuradaDocumentosOperationCompleted = AddressOf Me.OnmodificarAsocDeclaracionJuradaDocumentosOperationCompleted
            End If
            Me.InvokeAsync("modificarAsocDeclaracionJuradaDocumentos", New Object() {idDocumento, plazoPresentacion, fechaPresentacion, presentoDocumentacion, idDoc, usuarioModifica, fechaModificacion, estado}, Me.modificarAsocDeclaracionJuradaDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarAsocDeclaracionJuradaDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarAsocDeclaracionJuradaDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarAsocDeclaracionJuradaDocumentosCompleted(Me, New modificarAsocDeclaracionJuradaDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarAsocDeclaracionJuradaDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocDeclaracionJuradaDocumentos(ByVal idDeclaracionJurada As Integer, ByVal idDoc As Integer, ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocDeclaracionJuradaDocumentos", New Object() {idDeclaracionJurada, idDoc, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocDeclaracionJuradaDocumentos(ByVal idDeclaracionJurada As Integer, ByVal idDoc As Integer, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocDeclaracionJuradaDocumentos", New Object() {idDeclaracionJurada, idDoc, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocDeclaracionJuradaDocumentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocDeclaracionJuradaDocumentosAsync(ByVal idDeclaracionJurada As Integer, ByVal idDoc As Integer, ByVal opcion As Integer)
            Me.consultarAsocDeclaracionJuradaDocumentosAsync(idDeclaracionJurada, idDoc, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocDeclaracionJuradaDocumentosAsync(ByVal idDeclaracionJurada As Integer, ByVal idDoc As Integer, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.consultarAsocDeclaracionJuradaDocumentosOperationCompleted Is Nothing) Then
                Me.consultarAsocDeclaracionJuradaDocumentosOperationCompleted = AddressOf Me.OnconsultarAsocDeclaracionJuradaDocumentosOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocDeclaracionJuradaDocumentos", New Object() {idDeclaracionJurada, idDoc, opcion}, Me.consultarAsocDeclaracionJuradaDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocDeclaracionJuradaDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocDeclaracionJuradaDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocDeclaracionJuradaDocumentosCompleted(Me, New consultarAsocDeclaracionJuradaDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarAsocDeclaracionJuradaDocumentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarAsocDeclaracionJuradaDocumentos(ByVal idDeclaracionJurada As Integer, ByVal idDocumento As Integer, ByVal plazoPresentacion As Integer, ByVal fechaPresentacion As Date, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal PresentoDocumento As Boolean, ByVal estado As Boolean) As Integer
            Dim results() As Object = Me.Invoke("insertarAsocDeclaracionJuradaDocumentos", New Object() {idDeclaracionJurada, idDocumento, plazoPresentacion, fechaPresentacion, usuarioIngresa, fechaIngreso, PresentoDocumento, estado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarAsocDeclaracionJuradaDocumentos(ByVal idDeclaracionJurada As Integer, ByVal idDocumento As Integer, ByVal plazoPresentacion As Integer, ByVal fechaPresentacion As Date, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal PresentoDocumento As Boolean, ByVal estado As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarAsocDeclaracionJuradaDocumentos", New Object() {idDeclaracionJurada, idDocumento, plazoPresentacion, fechaPresentacion, usuarioIngresa, fechaIngreso, PresentoDocumento, estado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarAsocDeclaracionJuradaDocumentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarAsocDeclaracionJuradaDocumentosAsync(ByVal idDeclaracionJurada As Integer, ByVal idDocumento As Integer, ByVal plazoPresentacion As Integer, ByVal fechaPresentacion As Date, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal PresentoDocumento As Boolean, ByVal estado As Boolean)
            Me.insertarAsocDeclaracionJuradaDocumentosAsync(idDeclaracionJurada, idDocumento, plazoPresentacion, fechaPresentacion, usuarioIngresa, fechaIngreso, PresentoDocumento, estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarAsocDeclaracionJuradaDocumentosAsync(ByVal idDeclaracionJurada As Integer, ByVal idDocumento As Integer, ByVal plazoPresentacion As Integer, ByVal fechaPresentacion As Date, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal PresentoDocumento As Boolean, ByVal estado As Boolean, ByVal userState As Object)
            If (Me.insertarAsocDeclaracionJuradaDocumentosOperationCompleted Is Nothing) Then
                Me.insertarAsocDeclaracionJuradaDocumentosOperationCompleted = AddressOf Me.OninsertarAsocDeclaracionJuradaDocumentosOperationCompleted
            End If
            Me.InvokeAsync("insertarAsocDeclaracionJuradaDocumentos", New Object() {idDeclaracionJurada, idDocumento, plazoPresentacion, fechaPresentacion, usuarioIngresa, fechaIngreso, PresentoDocumento, estado}, Me.insertarAsocDeclaracionJuradaDocumentosOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarAsocDeclaracionJuradaDocumentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarAsocDeclaracionJuradaDocumentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarAsocDeclaracionJuradaDocumentosCompleted(Me, New insertarAsocDeclaracionJuradaDocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificarAsocDeclaracionJurada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarAsocDeclaracionJurada(ByVal idDeclaracionJurada As Integer, ByVal depositosPromMensual As Double, ByVal inversionista As Boolean, ByVal retirosPromMensual As Double, ByVal propositoCuenta As String, ByVal origenFondos As String, ByVal montoPromedioDpf As Double, ByVal origenFondosDpf As String) As Integer
            Dim results() As Object = Me.Invoke("modificarAsocDeclaracionJurada", New Object() {idDeclaracionJurada, depositosPromMensual, inversionista, retirosPromMensual, propositoCuenta, origenFondos, montoPromedioDpf, origenFondosDpf})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarAsocDeclaracionJurada(ByVal idDeclaracionJurada As Integer, ByVal depositosPromMensual As Double, ByVal inversionista As Boolean, ByVal retirosPromMensual As Double, ByVal propositoCuenta As String, ByVal origenFondos As String, ByVal montoPromedioDpf As Double, ByVal origenFondosDpf As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarAsocDeclaracionJurada", New Object() {idDeclaracionJurada, depositosPromMensual, inversionista, retirosPromMensual, propositoCuenta, origenFondos, montoPromedioDpf, origenFondosDpf}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarAsocDeclaracionJurada(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarAsocDeclaracionJuradaAsync(ByVal idDeclaracionJurada As Integer, ByVal depositosPromMensual As Double, ByVal inversionista As Boolean, ByVal retirosPromMensual As Double, ByVal propositoCuenta As String, ByVal origenFondos As String, ByVal montoPromedioDpf As Double, ByVal origenFondosDpf As String)
            Me.modificarAsocDeclaracionJuradaAsync(idDeclaracionJurada, depositosPromMensual, inversionista, retirosPromMensual, propositoCuenta, origenFondos, montoPromedioDpf, origenFondosDpf, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarAsocDeclaracionJuradaAsync(ByVal idDeclaracionJurada As Integer, ByVal depositosPromMensual As Double, ByVal inversionista As Boolean, ByVal retirosPromMensual As Double, ByVal propositoCuenta As String, ByVal origenFondos As String, ByVal montoPromedioDpf As Double, ByVal origenFondosDpf As String, ByVal userState As Object)
            If (Me.modificarAsocDeclaracionJuradaOperationCompleted Is Nothing) Then
                Me.modificarAsocDeclaracionJuradaOperationCompleted = AddressOf Me.OnmodificarAsocDeclaracionJuradaOperationCompleted
            End If
            Me.InvokeAsync("modificarAsocDeclaracionJurada", New Object() {idDeclaracionJurada, depositosPromMensual, inversionista, retirosPromMensual, propositoCuenta, origenFondos, montoPromedioDpf, origenFondosDpf}, Me.modificarAsocDeclaracionJuradaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarAsocDeclaracionJuradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarAsocDeclaracionJuradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarAsocDeclaracionJuradaCompleted(Me, New modificarAsocDeclaracionJuradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarAsocDeclaracionJurada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocDeclaracionJurada(ByVal noSocio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocDeclaracionJurada", New Object() {noSocio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocDeclaracionJurada(ByVal noSocio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocDeclaracionJurada", New Object() {noSocio}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocDeclaracionJurada(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocDeclaracionJuradaAsync(ByVal noSocio As Integer)
            Me.consultarAsocDeclaracionJuradaAsync(noSocio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocDeclaracionJuradaAsync(ByVal noSocio As Integer, ByVal userState As Object)
            If (Me.consultarAsocDeclaracionJuradaOperationCompleted Is Nothing) Then
                Me.consultarAsocDeclaracionJuradaOperationCompleted = AddressOf Me.OnconsultarAsocDeclaracionJuradaOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocDeclaracionJurada", New Object() {noSocio}, Me.consultarAsocDeclaracionJuradaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocDeclaracionJuradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocDeclaracionJuradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocDeclaracionJuradaCompleted(Me, New consultarAsocDeclaracionJuradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/generarIdDeclaracionJurada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function generarIdDeclaracionJurada() As Integer
            Dim results() As Object = Me.Invoke("generarIdDeclaracionJurada", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegingenerarIdDeclaracionJurada(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("generarIdDeclaracionJurada", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgenerarIdDeclaracionJurada(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub generarIdDeclaracionJuradaAsync()
            Me.generarIdDeclaracionJuradaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub generarIdDeclaracionJuradaAsync(ByVal userState As Object)
            If (Me.generarIdDeclaracionJuradaOperationCompleted Is Nothing) Then
                Me.generarIdDeclaracionJuradaOperationCompleted = AddressOf Me.OngenerarIdDeclaracionJuradaOperationCompleted
            End If
            Me.InvokeAsync("generarIdDeclaracionJurada", New Object(-1) {}, Me.generarIdDeclaracionJuradaOperationCompleted, userState)
        End Sub
        
        Private Sub OngenerarIdDeclaracionJuradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.generarIdDeclaracionJuradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent generarIdDeclaracionJuradaCompleted(Me, New generarIdDeclaracionJuradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarAsocDeclaracionJurada", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarAsocDeclaracionJurada(ByVal nosocio As Integer, ByVal depositoPromMensual As Double, ByVal inversionista As Boolean, ByVal retirosPromMensual As Double, ByVal propositoCuenta As String, ByVal origenFondos As String, ByVal montoPromedioDpf As Double, ByVal origenFondosDpf As String, ByVal idDeclaracionJurada As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarAsocDeclaracionJurada", New Object() {nosocio, depositoPromMensual, inversionista, retirosPromMensual, propositoCuenta, origenFondos, montoPromedioDpf, origenFondosDpf, idDeclaracionJurada})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarAsocDeclaracionJurada(ByVal nosocio As Integer, ByVal depositoPromMensual As Double, ByVal inversionista As Boolean, ByVal retirosPromMensual As Double, ByVal propositoCuenta As String, ByVal origenFondos As String, ByVal montoPromedioDpf As Double, ByVal origenFondosDpf As String, ByVal idDeclaracionJurada As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarAsocDeclaracionJurada", New Object() {nosocio, depositoPromMensual, inversionista, retirosPromMensual, propositoCuenta, origenFondos, montoPromedioDpf, origenFondosDpf, idDeclaracionJurada}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarAsocDeclaracionJurada(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarAsocDeclaracionJuradaAsync(ByVal nosocio As Integer, ByVal depositoPromMensual As Double, ByVal inversionista As Boolean, ByVal retirosPromMensual As Double, ByVal propositoCuenta As String, ByVal origenFondos As String, ByVal montoPromedioDpf As Double, ByVal origenFondosDpf As String, ByVal idDeclaracionJurada As Integer)
            Me.insertarAsocDeclaracionJuradaAsync(nosocio, depositoPromMensual, inversionista, retirosPromMensual, propositoCuenta, origenFondos, montoPromedioDpf, origenFondosDpf, idDeclaracionJurada, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarAsocDeclaracionJuradaAsync(ByVal nosocio As Integer, ByVal depositoPromMensual As Double, ByVal inversionista As Boolean, ByVal retirosPromMensual As Double, ByVal propositoCuenta As String, ByVal origenFondos As String, ByVal montoPromedioDpf As Double, ByVal origenFondosDpf As String, ByVal idDeclaracionJurada As Integer, ByVal userState As Object)
            If (Me.insertarAsocDeclaracionJuradaOperationCompleted Is Nothing) Then
                Me.insertarAsocDeclaracionJuradaOperationCompleted = AddressOf Me.OninsertarAsocDeclaracionJuradaOperationCompleted
            End If
            Me.InvokeAsync("insertarAsocDeclaracionJurada", New Object() {nosocio, depositoPromMensual, inversionista, retirosPromMensual, propositoCuenta, origenFondos, montoPromedioDpf, origenFondosDpf, idDeclaracionJurada}, Me.insertarAsocDeclaracionJuradaOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarAsocDeclaracionJuradaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarAsocDeclaracionJuradaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarAsocDeclaracionJuradaCompleted(Me, New insertarAsocDeclaracionJuradaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/generarIdPep", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function generarIdPep() As Integer
            Dim results() As Object = Me.Invoke("generarIdPep", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegingenerarIdPep(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("generarIdPep", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgenerarIdPep(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub generarIdPepAsync()
            Me.generarIdPepAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub generarIdPepAsync(ByVal userState As Object)
            If (Me.generarIdPepOperationCompleted Is Nothing) Then
                Me.generarIdPepOperationCompleted = AddressOf Me.OngenerarIdPepOperationCompleted
            End If
            Me.InvokeAsync("generarIdPep", New Object(-1) {}, Me.generarIdPepOperationCompleted, userState)
        End Sub
        
        Private Sub OngenerarIdPepOperationCompleted(ByVal arg As Object)
            If (Not (Me.generarIdPepCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent generarIdPepCompleted(Me, New generarIdPepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarAsocPep", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocPep(ByVal dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocPep", New Object() {dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocPep(ByVal dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocPep", New Object() {dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocPep(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocPepAsync(ByVal dui As String)
            Me.consultarAsocPepAsync(dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocPepAsync(ByVal dui As String, ByVal userState As Object)
            If (Me.consultarAsocPepOperationCompleted Is Nothing) Then
                Me.consultarAsocPepOperationCompleted = AddressOf Me.OnconsultarAsocPepOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocPep", New Object() {dui}, Me.consultarAsocPepOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocPepOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocPepCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocPepCompleted(Me, New consultarAsocPepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertar_AsocPep", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertar_AsocPep(ByVal dui As String, ByVal fechaNombramiento As Date, ByVal codTipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal idPep As Integer, ByVal PeriodoNombramiento As String, ByVal activo As Boolean, ByVal codParentesco As String) As Integer
            Dim results() As Object = Me.Invoke("insertar_AsocPep", New Object() {dui, fechaNombramiento, codTipoPep, tiempoLaboral, idPep, PeriodoNombramiento, activo, codParentesco})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function Begininsertar_AsocPep(ByVal dui As String, ByVal fechaNombramiento As Date, ByVal codTipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal idPep As Integer, ByVal PeriodoNombramiento As String, ByVal activo As Boolean, ByVal codParentesco As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertar_AsocPep", New Object() {dui, fechaNombramiento, codTipoPep, tiempoLaboral, idPep, PeriodoNombramiento, activo, codParentesco}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function Endinsertar_AsocPep(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertar_AsocPepAsync(ByVal dui As String, ByVal fechaNombramiento As Date, ByVal codTipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal idPep As Integer, ByVal PeriodoNombramiento As String, ByVal activo As Boolean, ByVal codParentesco As String)
            Me.insertar_AsocPepAsync(dui, fechaNombramiento, codTipoPep, tiempoLaboral, idPep, PeriodoNombramiento, activo, codParentesco, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertar_AsocPepAsync(ByVal dui As String, ByVal fechaNombramiento As Date, ByVal codTipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal idPep As Integer, ByVal PeriodoNombramiento As String, ByVal activo As Boolean, ByVal codParentesco As String, ByVal userState As Object)
            If (Me.insertar_AsocPepOperationCompleted Is Nothing) Then
                Me.insertar_AsocPepOperationCompleted = AddressOf Me.Oninsertar_AsocPepOperationCompleted
            End If
            Me.InvokeAsync("insertar_AsocPep", New Object() {dui, fechaNombramiento, codTipoPep, tiempoLaboral, idPep, PeriodoNombramiento, activo, codParentesco}, Me.insertar_AsocPepOperationCompleted, userState)
        End Sub
        
        Private Sub Oninsertar_AsocPepOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertar_AsocPepCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertar_AsocPepCompleted(Me, New insertar_AsocPepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificarAsocPep", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarAsocPep(ByVal idPep As Integer, ByVal fechaNombramiento As Date, ByVal codTipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal periodoNombramiento As String, ByVal activo As Boolean, ByVal codParentesco As String) As Integer
            Dim results() As Object = Me.Invoke("modificarAsocPep", New Object() {idPep, fechaNombramiento, codTipoPep, tiempoLaboral, periodoNombramiento, activo, codParentesco})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarAsocPep(ByVal idPep As Integer, ByVal fechaNombramiento As Date, ByVal codTipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal periodoNombramiento As String, ByVal activo As Boolean, ByVal codParentesco As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarAsocPep", New Object() {idPep, fechaNombramiento, codTipoPep, tiempoLaboral, periodoNombramiento, activo, codParentesco}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarAsocPep(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarAsocPepAsync(ByVal idPep As Integer, ByVal fechaNombramiento As Date, ByVal codTipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal periodoNombramiento As String, ByVal activo As Boolean, ByVal codParentesco As String)
            Me.modificarAsocPepAsync(idPep, fechaNombramiento, codTipoPep, tiempoLaboral, periodoNombramiento, activo, codParentesco, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarAsocPepAsync(ByVal idPep As Integer, ByVal fechaNombramiento As Date, ByVal codTipoPep As Integer, ByVal tiempoLaboral As Integer, ByVal periodoNombramiento As String, ByVal activo As Boolean, ByVal codParentesco As String, ByVal userState As Object)
            If (Me.modificarAsocPepOperationCompleted Is Nothing) Then
                Me.modificarAsocPepOperationCompleted = AddressOf Me.OnmodificarAsocPepOperationCompleted
            End If
            Me.InvokeAsync("modificarAsocPep", New Object() {idPep, fechaNombramiento, codTipoPep, tiempoLaboral, periodoNombramiento, activo, codParentesco}, Me.modificarAsocPepOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarAsocPepOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarAsocPepCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarAsocPepCompleted(Me, New modificarAsocPepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarAsocPep_Familiares", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocPep_Familiares(ByVal idPep As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocPep_Familiares", New Object() {idPep})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocPep_Familiares(ByVal idPep As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocPep_Familiares", New Object() {idPep}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocPep_Familiares(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocPep_FamiliaresAsync(ByVal idPep As Integer)
            Me.consultarAsocPep_FamiliaresAsync(idPep, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocPep_FamiliaresAsync(ByVal idPep As Integer, ByVal userState As Object)
            If (Me.consultarAsocPep_FamiliaresOperationCompleted Is Nothing) Then
                Me.consultarAsocPep_FamiliaresOperationCompleted = AddressOf Me.OnconsultarAsocPep_FamiliaresOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocPep_Familiares", New Object() {idPep}, Me.consultarAsocPep_FamiliaresOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocPep_FamiliaresOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocPep_FamiliaresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocPep_FamiliaresCompleted(Me, New consultarAsocPep_FamiliaresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertar_AsocPep_Familiares", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertar_AsocPep_Familiares(ByVal idPep As Integer, ByVal codTipoFamiliar As Integer, ByVal nombres As String) As Integer
            Dim results() As Object = Me.Invoke("insertar_AsocPep_Familiares", New Object() {idPep, codTipoFamiliar, nombres})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function Begininsertar_AsocPep_Familiares(ByVal idPep As Integer, ByVal codTipoFamiliar As Integer, ByVal nombres As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertar_AsocPep_Familiares", New Object() {idPep, codTipoFamiliar, nombres}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function Endinsertar_AsocPep_Familiares(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertar_AsocPep_FamiliaresAsync(ByVal idPep As Integer, ByVal codTipoFamiliar As Integer, ByVal nombres As String)
            Me.insertar_AsocPep_FamiliaresAsync(idPep, codTipoFamiliar, nombres, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertar_AsocPep_FamiliaresAsync(ByVal idPep As Integer, ByVal codTipoFamiliar As Integer, ByVal nombres As String, ByVal userState As Object)
            If (Me.insertar_AsocPep_FamiliaresOperationCompleted Is Nothing) Then
                Me.insertar_AsocPep_FamiliaresOperationCompleted = AddressOf Me.Oninsertar_AsocPep_FamiliaresOperationCompleted
            End If
            Me.InvokeAsync("insertar_AsocPep_Familiares", New Object() {idPep, codTipoFamiliar, nombres}, Me.insertar_AsocPep_FamiliaresOperationCompleted, userState)
        End Sub
        
        Private Sub Oninsertar_AsocPep_FamiliaresOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertar_AsocPep_FamiliaresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertar_AsocPep_FamiliaresCompleted(Me, New insertar_AsocPep_FamiliaresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificarAsocPep_Familiares", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarAsocPep_Familiares(ByVal idFamiliarPep As Integer, ByVal idPep As Integer, ByVal codTipoFamiliar As Integer, ByVal nombres As String) As Integer
            Dim results() As Object = Me.Invoke("modificarAsocPep_Familiares", New Object() {idFamiliarPep, idPep, codTipoFamiliar, nombres})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarAsocPep_Familiares(ByVal idFamiliarPep As Integer, ByVal idPep As Integer, ByVal codTipoFamiliar As Integer, ByVal nombres As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarAsocPep_Familiares", New Object() {idFamiliarPep, idPep, codTipoFamiliar, nombres}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarAsocPep_Familiares(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarAsocPep_FamiliaresAsync(ByVal idFamiliarPep As Integer, ByVal idPep As Integer, ByVal codTipoFamiliar As Integer, ByVal nombres As String)
            Me.modificarAsocPep_FamiliaresAsync(idFamiliarPep, idPep, codTipoFamiliar, nombres, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarAsocPep_FamiliaresAsync(ByVal idFamiliarPep As Integer, ByVal idPep As Integer, ByVal codTipoFamiliar As Integer, ByVal nombres As String, ByVal userState As Object)
            If (Me.modificarAsocPep_FamiliaresOperationCompleted Is Nothing) Then
                Me.modificarAsocPep_FamiliaresOperationCompleted = AddressOf Me.OnmodificarAsocPep_FamiliaresOperationCompleted
            End If
            Me.InvokeAsync("modificarAsocPep_Familiares", New Object() {idFamiliarPep, idPep, codTipoFamiliar, nombres}, Me.modificarAsocPep_FamiliaresOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarAsocPep_FamiliaresOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarAsocPep_FamiliaresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarAsocPep_FamiliaresCompleted(Me, New modificarAsocPep_FamiliaresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/eliminarAsocPep_Familiares", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarAsocPep_Familiares(ByVal idFamiliarPep As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarAsocPep_Familiares", New Object() {idFamiliarPep})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarAsocPep_Familiares(ByVal idFamiliarPep As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarAsocPep_Familiares", New Object() {idFamiliarPep}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarAsocPep_Familiares(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarAsocPep_FamiliaresAsync(ByVal idFamiliarPep As Integer)
            Me.eliminarAsocPep_FamiliaresAsync(idFamiliarPep, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarAsocPep_FamiliaresAsync(ByVal idFamiliarPep As Integer, ByVal userState As Object)
            If (Me.eliminarAsocPep_FamiliaresOperationCompleted Is Nothing) Then
                Me.eliminarAsocPep_FamiliaresOperationCompleted = AddressOf Me.OneliminarAsocPep_FamiliaresOperationCompleted
            End If
            Me.InvokeAsync("eliminarAsocPep_Familiares", New Object() {idFamiliarPep}, Me.eliminarAsocPep_FamiliaresOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarAsocPep_FamiliaresOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarAsocPep_FamiliaresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarAsocPep_FamiliaresCompleted(Me, New eliminarAsocPep_FamiliaresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertar_AsocPep_Sociedades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertar_AsocPep_Sociedades(ByVal idPep As Integer, ByVal sociedad As String, ByVal porcentajeParticipacion As Double) As Integer
            Dim results() As Object = Me.Invoke("insertar_AsocPep_Sociedades", New Object() {idPep, sociedad, porcentajeParticipacion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function Begininsertar_AsocPep_Sociedades(ByVal idPep As Integer, ByVal sociedad As String, ByVal porcentajeParticipacion As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertar_AsocPep_Sociedades", New Object() {idPep, sociedad, porcentajeParticipacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function Endinsertar_AsocPep_Sociedades(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertar_AsocPep_SociedadesAsync(ByVal idPep As Integer, ByVal sociedad As String, ByVal porcentajeParticipacion As Double)
            Me.insertar_AsocPep_SociedadesAsync(idPep, sociedad, porcentajeParticipacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertar_AsocPep_SociedadesAsync(ByVal idPep As Integer, ByVal sociedad As String, ByVal porcentajeParticipacion As Double, ByVal userState As Object)
            If (Me.insertar_AsocPep_SociedadesOperationCompleted Is Nothing) Then
                Me.insertar_AsocPep_SociedadesOperationCompleted = AddressOf Me.Oninsertar_AsocPep_SociedadesOperationCompleted
            End If
            Me.InvokeAsync("insertar_AsocPep_Sociedades", New Object() {idPep, sociedad, porcentajeParticipacion}, Me.insertar_AsocPep_SociedadesOperationCompleted, userState)
        End Sub
        
        Private Sub Oninsertar_AsocPep_SociedadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertar_AsocPep_SociedadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertar_AsocPep_SociedadesCompleted(Me, New insertar_AsocPep_SociedadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarAsocPep_Sociedades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocPep_Sociedades(ByVal idPep As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocPep_Sociedades", New Object() {idPep})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocPep_Sociedades(ByVal idPep As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocPep_Sociedades", New Object() {idPep}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocPep_Sociedades(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocPep_SociedadesAsync(ByVal idPep As Integer)
            Me.consultarAsocPep_SociedadesAsync(idPep, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocPep_SociedadesAsync(ByVal idPep As Integer, ByVal userState As Object)
            If (Me.consultarAsocPep_SociedadesOperationCompleted Is Nothing) Then
                Me.consultarAsocPep_SociedadesOperationCompleted = AddressOf Me.OnconsultarAsocPep_SociedadesOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocPep_Sociedades", New Object() {idPep}, Me.consultarAsocPep_SociedadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocPep_SociedadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocPep_SociedadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocPep_SociedadesCompleted(Me, New consultarAsocPep_SociedadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificarAsocPep_Sociedades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarAsocPep_Sociedades(ByVal idSociedad As Integer, ByVal idPep As Integer, ByVal sociedad As String, ByVal porcentajeParticipacion As Double) As Integer
            Dim results() As Object = Me.Invoke("modificarAsocPep_Sociedades", New Object() {idSociedad, idPep, sociedad, porcentajeParticipacion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarAsocPep_Sociedades(ByVal idSociedad As Integer, ByVal idPep As Integer, ByVal sociedad As String, ByVal porcentajeParticipacion As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarAsocPep_Sociedades", New Object() {idSociedad, idPep, sociedad, porcentajeParticipacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarAsocPep_Sociedades(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarAsocPep_SociedadesAsync(ByVal idSociedad As Integer, ByVal idPep As Integer, ByVal sociedad As String, ByVal porcentajeParticipacion As Double)
            Me.modificarAsocPep_SociedadesAsync(idSociedad, idPep, sociedad, porcentajeParticipacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarAsocPep_SociedadesAsync(ByVal idSociedad As Integer, ByVal idPep As Integer, ByVal sociedad As String, ByVal porcentajeParticipacion As Double, ByVal userState As Object)
            If (Me.modificarAsocPep_SociedadesOperationCompleted Is Nothing) Then
                Me.modificarAsocPep_SociedadesOperationCompleted = AddressOf Me.OnmodificarAsocPep_SociedadesOperationCompleted
            End If
            Me.InvokeAsync("modificarAsocPep_Sociedades", New Object() {idSociedad, idPep, sociedad, porcentajeParticipacion}, Me.modificarAsocPep_SociedadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarAsocPep_SociedadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarAsocPep_SociedadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarAsocPep_SociedadesCompleted(Me, New modificarAsocPep_SociedadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/eliminarAsocPep_Sociedades", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarAsocPep_Sociedades(ByVal idSociedad As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarAsocPep_Sociedades", New Object() {idSociedad})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarAsocPep_Sociedades(ByVal idSociedad As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarAsocPep_Sociedades", New Object() {idSociedad}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarAsocPep_Sociedades(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarAsocPep_SociedadesAsync(ByVal idSociedad As Integer)
            Me.eliminarAsocPep_SociedadesAsync(idSociedad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarAsocPep_SociedadesAsync(ByVal idSociedad As Integer, ByVal userState As Object)
            If (Me.eliminarAsocPep_SociedadesOperationCompleted Is Nothing) Then
                Me.eliminarAsocPep_SociedadesOperationCompleted = AddressOf Me.OneliminarAsocPep_SociedadesOperationCompleted
            End If
            Me.InvokeAsync("eliminarAsocPep_Sociedades", New Object() {idSociedad}, Me.eliminarAsocPep_SociedadesOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarAsocPep_SociedadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarAsocPep_SociedadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarAsocPep_SociedadesCompleted(Me, New eliminarAsocPep_SociedadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/inactivarAsocActividadEconomica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function inactivarAsocActividadEconomica(ByVal idActividadEconomica As Integer, ByVal activo As Boolean) As Integer
            Dim results() As Object = Me.Invoke("inactivarAsocActividadEconomica", New Object() {idActividadEconomica, activo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininactivarAsocActividadEconomica(ByVal idActividadEconomica As Integer, ByVal activo As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("inactivarAsocActividadEconomica", New Object() {idActividadEconomica, activo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinactivarAsocActividadEconomica(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub inactivarAsocActividadEconomicaAsync(ByVal idActividadEconomica As Integer, ByVal activo As Boolean)
            Me.inactivarAsocActividadEconomicaAsync(idActividadEconomica, activo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub inactivarAsocActividadEconomicaAsync(ByVal idActividadEconomica As Integer, ByVal activo As Boolean, ByVal userState As Object)
            If (Me.inactivarAsocActividadEconomicaOperationCompleted Is Nothing) Then
                Me.inactivarAsocActividadEconomicaOperationCompleted = AddressOf Me.OninactivarAsocActividadEconomicaOperationCompleted
            End If
            Me.InvokeAsync("inactivarAsocActividadEconomica", New Object() {idActividadEconomica, activo}, Me.inactivarAsocActividadEconomicaOperationCompleted, userState)
        End Sub
        
        Private Sub OninactivarAsocActividadEconomicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.inactivarAsocActividadEconomicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent inactivarAsocActividadEconomicaCompleted(Me, New inactivarAsocActividadEconomicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarAsocActividadEconomia", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocActividadEconomia(ByVal dui As String, ByVal primaria As Boolean, ByVal opcion As Integer, ByVal idActividadEconomica As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocActividadEconomia", New Object() {dui, primaria, opcion, idActividadEconomica})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocActividadEconomia(ByVal dui As String, ByVal primaria As Boolean, ByVal opcion As Integer, ByVal idActividadEconomica As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocActividadEconomia", New Object() {dui, primaria, opcion, idActividadEconomica}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocActividadEconomia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocActividadEconomiaAsync(ByVal dui As String, ByVal primaria As Boolean, ByVal opcion As Integer, ByVal idActividadEconomica As Integer)
            Me.consultarAsocActividadEconomiaAsync(dui, primaria, opcion, idActividadEconomica, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocActividadEconomiaAsync(ByVal dui As String, ByVal primaria As Boolean, ByVal opcion As Integer, ByVal idActividadEconomica As Integer, ByVal userState As Object)
            If (Me.consultarAsocActividadEconomiaOperationCompleted Is Nothing) Then
                Me.consultarAsocActividadEconomiaOperationCompleted = AddressOf Me.OnconsultarAsocActividadEconomiaOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocActividadEconomia", New Object() {dui, primaria, opcion, idActividadEconomica}, Me.consultarAsocActividadEconomiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocActividadEconomiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocActividadEconomiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocActividadEconomiaCompleted(Me, New consultarAsocActividadEconomiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarAsocActividadEconomica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarAsocActividadEconomica( _
                    ByVal dui As String,  _
                    ByVal codLugarTrabajo As String,  _
                    ByVal noAcreditacio As String,  _
                    ByVal fechaAcreditacion As Date,  _
                    ByVal fechaVencimiento As Date,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal contribuyente As Boolean,  _
                    ByVal numRegistroContribuyente As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal estadoLaboral As Integer,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioTrabajo As Date,  _
                    ByVal cargo As String,  _
                    ByVal salario As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepartamento As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal primaria As Boolean,  _
                    ByVal CodigoActividadEconomica As String,  _
                    ByVal activo As Boolean) As Integer
            Dim results() As Object = Me.Invoke("insertarAsocActividadEconomica", New Object() {dui, codLugarTrabajo, noAcreditacio, fechaAcreditacion, fechaVencimiento, negocioFormal, contribuyente, numRegistroContribuyente, nombreComercial, estadoLaboral, areaTrabajo, fechaInicioTrabajo, cargo, salario, telOficina, extOficina, codDepartamento, codMunicipio, direccion, razonSocial, giro, primaria, CodigoActividadEconomica, activo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarAsocActividadEconomica( _
                    ByVal dui As String,  _
                    ByVal codLugarTrabajo As String,  _
                    ByVal noAcreditacio As String,  _
                    ByVal fechaAcreditacion As Date,  _
                    ByVal fechaVencimiento As Date,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal contribuyente As Boolean,  _
                    ByVal numRegistroContribuyente As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal estadoLaboral As Integer,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioTrabajo As Date,  _
                    ByVal cargo As String,  _
                    ByVal salario As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepartamento As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal primaria As Boolean,  _
                    ByVal CodigoActividadEconomica As String,  _
                    ByVal activo As Boolean,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarAsocActividadEconomica", New Object() {dui, codLugarTrabajo, noAcreditacio, fechaAcreditacion, fechaVencimiento, negocioFormal, contribuyente, numRegistroContribuyente, nombreComercial, estadoLaboral, areaTrabajo, fechaInicioTrabajo, cargo, salario, telOficina, extOficina, codDepartamento, codMunicipio, direccion, razonSocial, giro, primaria, CodigoActividadEconomica, activo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarAsocActividadEconomica(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarAsocActividadEconomicaAsync( _
                    ByVal dui As String,  _
                    ByVal codLugarTrabajo As String,  _
                    ByVal noAcreditacio As String,  _
                    ByVal fechaAcreditacion As Date,  _
                    ByVal fechaVencimiento As Date,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal contribuyente As Boolean,  _
                    ByVal numRegistroContribuyente As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal estadoLaboral As Integer,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioTrabajo As Date,  _
                    ByVal cargo As String,  _
                    ByVal salario As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepartamento As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal primaria As Boolean,  _
                    ByVal CodigoActividadEconomica As String,  _
                    ByVal activo As Boolean)
            Me.insertarAsocActividadEconomicaAsync(dui, codLugarTrabajo, noAcreditacio, fechaAcreditacion, fechaVencimiento, negocioFormal, contribuyente, numRegistroContribuyente, nombreComercial, estadoLaboral, areaTrabajo, fechaInicioTrabajo, cargo, salario, telOficina, extOficina, codDepartamento, codMunicipio, direccion, razonSocial, giro, primaria, CodigoActividadEconomica, activo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarAsocActividadEconomicaAsync( _
                    ByVal dui As String,  _
                    ByVal codLugarTrabajo As String,  _
                    ByVal noAcreditacio As String,  _
                    ByVal fechaAcreditacion As Date,  _
                    ByVal fechaVencimiento As Date,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal contribuyente As Boolean,  _
                    ByVal numRegistroContribuyente As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal estadoLaboral As Integer,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioTrabajo As Date,  _
                    ByVal cargo As String,  _
                    ByVal salario As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepartamento As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal primaria As Boolean,  _
                    ByVal CodigoActividadEconomica As String,  _
                    ByVal activo As Boolean,  _
                    ByVal userState As Object)
            If (Me.insertarAsocActividadEconomicaOperationCompleted Is Nothing) Then
                Me.insertarAsocActividadEconomicaOperationCompleted = AddressOf Me.OninsertarAsocActividadEconomicaOperationCompleted
            End If
            Me.InvokeAsync("insertarAsocActividadEconomica", New Object() {dui, codLugarTrabajo, noAcreditacio, fechaAcreditacion, fechaVencimiento, negocioFormal, contribuyente, numRegistroContribuyente, nombreComercial, estadoLaboral, areaTrabajo, fechaInicioTrabajo, cargo, salario, telOficina, extOficina, codDepartamento, codMunicipio, direccion, razonSocial, giro, primaria, CodigoActividadEconomica, activo}, Me.insertarAsocActividadEconomicaOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarAsocActividadEconomicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarAsocActividadEconomicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarAsocActividadEconomicaCompleted(Me, New insertarAsocActividadEconomicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/actulizarAsocActividadEconomica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function actulizarAsocActividadEconomica( _
                    ByVal dui As String,  _
                    ByVal codLugarTrabajo As String,  _
                    ByVal noAcreditacio As String,  _
                    ByVal fechaAcreditacion As Date,  _
                    ByVal fechaVencimiento As Date,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal contribuyente As Boolean,  _
                    ByVal numRegistroContribuyente As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal estadoLaboral As Integer,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioTrabajo As Date,  _
                    ByVal cargo As String,  _
                    ByVal salario As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepartamento As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal idActividadEconomica As Integer,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal primaria As Boolean,  _
                    ByVal CodigoActividadEconomica As String,  _
                    ByVal activo As Boolean) As Integer
            Dim results() As Object = Me.Invoke("actulizarAsocActividadEconomica", New Object() {dui, codLugarTrabajo, noAcreditacio, fechaAcreditacion, fechaVencimiento, negocioFormal, contribuyente, numRegistroContribuyente, nombreComercial, estadoLaboral, areaTrabajo, fechaInicioTrabajo, cargo, salario, telOficina, extOficina, codDepartamento, codMunicipio, direccion, idActividadEconomica, razonSocial, giro, primaria, CodigoActividadEconomica, activo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginactulizarAsocActividadEconomica( _
                    ByVal dui As String,  _
                    ByVal codLugarTrabajo As String,  _
                    ByVal noAcreditacio As String,  _
                    ByVal fechaAcreditacion As Date,  _
                    ByVal fechaVencimiento As Date,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal contribuyente As Boolean,  _
                    ByVal numRegistroContribuyente As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal estadoLaboral As Integer,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioTrabajo As Date,  _
                    ByVal cargo As String,  _
                    ByVal salario As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepartamento As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal idActividadEconomica As Integer,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal primaria As Boolean,  _
                    ByVal CodigoActividadEconomica As String,  _
                    ByVal activo As Boolean,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("actulizarAsocActividadEconomica", New Object() {dui, codLugarTrabajo, noAcreditacio, fechaAcreditacion, fechaVencimiento, negocioFormal, contribuyente, numRegistroContribuyente, nombreComercial, estadoLaboral, areaTrabajo, fechaInicioTrabajo, cargo, salario, telOficina, extOficina, codDepartamento, codMunicipio, direccion, idActividadEconomica, razonSocial, giro, primaria, CodigoActividadEconomica, activo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndactulizarAsocActividadEconomica(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub actulizarAsocActividadEconomicaAsync( _
                    ByVal dui As String,  _
                    ByVal codLugarTrabajo As String,  _
                    ByVal noAcreditacio As String,  _
                    ByVal fechaAcreditacion As Date,  _
                    ByVal fechaVencimiento As Date,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal contribuyente As Boolean,  _
                    ByVal numRegistroContribuyente As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal estadoLaboral As Integer,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioTrabajo As Date,  _
                    ByVal cargo As String,  _
                    ByVal salario As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepartamento As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal idActividadEconomica As Integer,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal primaria As Boolean,  _
                    ByVal CodigoActividadEconomica As String,  _
                    ByVal activo As Boolean)
            Me.actulizarAsocActividadEconomicaAsync(dui, codLugarTrabajo, noAcreditacio, fechaAcreditacion, fechaVencimiento, negocioFormal, contribuyente, numRegistroContribuyente, nombreComercial, estadoLaboral, areaTrabajo, fechaInicioTrabajo, cargo, salario, telOficina, extOficina, codDepartamento, codMunicipio, direccion, idActividadEconomica, razonSocial, giro, primaria, CodigoActividadEconomica, activo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub actulizarAsocActividadEconomicaAsync( _
                    ByVal dui As String,  _
                    ByVal codLugarTrabajo As String,  _
                    ByVal noAcreditacio As String,  _
                    ByVal fechaAcreditacion As Date,  _
                    ByVal fechaVencimiento As Date,  _
                    ByVal negocioFormal As Boolean,  _
                    ByVal contribuyente As Boolean,  _
                    ByVal numRegistroContribuyente As String,  _
                    ByVal nombreComercial As String,  _
                    ByVal estadoLaboral As Integer,  _
                    ByVal areaTrabajo As String,  _
                    ByVal fechaInicioTrabajo As Date,  _
                    ByVal cargo As String,  _
                    ByVal salario As Double,  _
                    ByVal telOficina As String,  _
                    ByVal extOficina As String,  _
                    ByVal codDepartamento As String,  _
                    ByVal codMunicipio As String,  _
                    ByVal direccion As String,  _
                    ByVal idActividadEconomica As Integer,  _
                    ByVal razonSocial As String,  _
                    ByVal giro As String,  _
                    ByVal primaria As Boolean,  _
                    ByVal CodigoActividadEconomica As String,  _
                    ByVal activo As Boolean,  _
                    ByVal userState As Object)
            If (Me.actulizarAsocActividadEconomicaOperationCompleted Is Nothing) Then
                Me.actulizarAsocActividadEconomicaOperationCompleted = AddressOf Me.OnactulizarAsocActividadEconomicaOperationCompleted
            End If
            Me.InvokeAsync("actulizarAsocActividadEconomica", New Object() {dui, codLugarTrabajo, noAcreditacio, fechaAcreditacion, fechaVencimiento, negocioFormal, contribuyente, numRegistroContribuyente, nombreComercial, estadoLaboral, areaTrabajo, fechaInicioTrabajo, cargo, salario, telOficina, extOficina, codDepartamento, codMunicipio, direccion, idActividadEconomica, razonSocial, giro, primaria, CodigoActividadEconomica, activo}, Me.actulizarAsocActividadEconomicaOperationCompleted, userState)
        End Sub
        
        Private Sub OnactulizarAsocActividadEconomicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.actulizarAsocActividadEconomicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent actulizarAsocActividadEconomicaCompleted(Me, New actulizarAsocActividadEconomicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificarCat_Asociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarCat_Asociados( _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal isss As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As Date,  _
                    ByVal numPasaporte As String,  _
                    ByVal estadoIngreso As String,  _
                    ByVal apellido1 As String,  _
                    ByVal apellido2 As String,  _
                    ByVal apellidoCas As String,  _
                    ByVal nombres As String,  _
                    ByVal fechaNac As String,  _
                    ByVal telCasa As String,  _
                    ByVal celular As String,  _
                    ByVal email As String,  _
                    ByVal codProfesion As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal sexo As String,  _
                    ByVal residente As Boolean,  _
                    ByVal noresidente As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal conocidoPor As String,  _
                    ByVal dobleNacionalidad As Boolean,  _
                    ByVal codNacionalidad2 As Integer,  _
                    ByVal noSocio As String,  _
                    ByVal codEstadoCivil As Integer,  _
                    ByVal codPaisresidencia As String,  _
                    ByVal LugarNacimiento As String,  _
                    ByVal FechaVenDUI As Date,  _
                    ByVal EsEmpleado As Boolean,  _
                    ByVal usuarioModifica As String,  _
                    ByVal pcModifica As String) As Integer
            Dim results() As Object = Me.Invoke("modificarCat_Asociados", New Object() {dui, nit, isss, lugarExtDui, fechaExtDui, numPasaporte, estadoIngreso, apellido1, apellido2, apellidoCas, nombres, fechaNac, telCasa, celular, email, codProfesion, codNacionalidad, sexo, residente, noresidente, personaJuridica, conocidoPor, dobleNacionalidad, codNacionalidad2, noSocio, codEstadoCivil, codPaisresidencia, LugarNacimiento, FechaVenDUI, EsEmpleado, usuarioModifica, pcModifica})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarCat_Asociados( _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal isss As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As Date,  _
                    ByVal numPasaporte As String,  _
                    ByVal estadoIngreso As String,  _
                    ByVal apellido1 As String,  _
                    ByVal apellido2 As String,  _
                    ByVal apellidoCas As String,  _
                    ByVal nombres As String,  _
                    ByVal fechaNac As String,  _
                    ByVal telCasa As String,  _
                    ByVal celular As String,  _
                    ByVal email As String,  _
                    ByVal codProfesion As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal sexo As String,  _
                    ByVal residente As Boolean,  _
                    ByVal noresidente As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal conocidoPor As String,  _
                    ByVal dobleNacionalidad As Boolean,  _
                    ByVal codNacionalidad2 As Integer,  _
                    ByVal noSocio As String,  _
                    ByVal codEstadoCivil As Integer,  _
                    ByVal codPaisresidencia As String,  _
                    ByVal LugarNacimiento As String,  _
                    ByVal FechaVenDUI As Date,  _
                    ByVal EsEmpleado As Boolean,  _
                    ByVal usuarioModifica As String,  _
                    ByVal pcModifica As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarCat_Asociados", New Object() {dui, nit, isss, lugarExtDui, fechaExtDui, numPasaporte, estadoIngreso, apellido1, apellido2, apellidoCas, nombres, fechaNac, telCasa, celular, email, codProfesion, codNacionalidad, sexo, residente, noresidente, personaJuridica, conocidoPor, dobleNacionalidad, codNacionalidad2, noSocio, codEstadoCivil, codPaisresidencia, LugarNacimiento, FechaVenDUI, EsEmpleado, usuarioModifica, pcModifica}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarCat_Asociados(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarCat_AsociadosAsync( _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal isss As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As Date,  _
                    ByVal numPasaporte As String,  _
                    ByVal estadoIngreso As String,  _
                    ByVal apellido1 As String,  _
                    ByVal apellido2 As String,  _
                    ByVal apellidoCas As String,  _
                    ByVal nombres As String,  _
                    ByVal fechaNac As String,  _
                    ByVal telCasa As String,  _
                    ByVal celular As String,  _
                    ByVal email As String,  _
                    ByVal codProfesion As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal sexo As String,  _
                    ByVal residente As Boolean,  _
                    ByVal noresidente As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal conocidoPor As String,  _
                    ByVal dobleNacionalidad As Boolean,  _
                    ByVal codNacionalidad2 As Integer,  _
                    ByVal noSocio As String,  _
                    ByVal codEstadoCivil As Integer,  _
                    ByVal codPaisresidencia As String,  _
                    ByVal LugarNacimiento As String,  _
                    ByVal FechaVenDUI As Date,  _
                    ByVal EsEmpleado As Boolean,  _
                    ByVal usuarioModifica As String,  _
                    ByVal pcModifica As String)
            Me.modificarCat_AsociadosAsync(dui, nit, isss, lugarExtDui, fechaExtDui, numPasaporte, estadoIngreso, apellido1, apellido2, apellidoCas, nombres, fechaNac, telCasa, celular, email, codProfesion, codNacionalidad, sexo, residente, noresidente, personaJuridica, conocidoPor, dobleNacionalidad, codNacionalidad2, noSocio, codEstadoCivil, codPaisresidencia, LugarNacimiento, FechaVenDUI, EsEmpleado, usuarioModifica, pcModifica, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarCat_AsociadosAsync( _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal isss As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As Date,  _
                    ByVal numPasaporte As String,  _
                    ByVal estadoIngreso As String,  _
                    ByVal apellido1 As String,  _
                    ByVal apellido2 As String,  _
                    ByVal apellidoCas As String,  _
                    ByVal nombres As String,  _
                    ByVal fechaNac As String,  _
                    ByVal telCasa As String,  _
                    ByVal celular As String,  _
                    ByVal email As String,  _
                    ByVal codProfesion As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal sexo As String,  _
                    ByVal residente As Boolean,  _
                    ByVal noresidente As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal conocidoPor As String,  _
                    ByVal dobleNacionalidad As Boolean,  _
                    ByVal codNacionalidad2 As Integer,  _
                    ByVal noSocio As String,  _
                    ByVal codEstadoCivil As Integer,  _
                    ByVal codPaisresidencia As String,  _
                    ByVal LugarNacimiento As String,  _
                    ByVal FechaVenDUI As Date,  _
                    ByVal EsEmpleado As Boolean,  _
                    ByVal usuarioModifica As String,  _
                    ByVal pcModifica As String,  _
                    ByVal userState As Object)
            If (Me.modificarCat_AsociadosOperationCompleted Is Nothing) Then
                Me.modificarCat_AsociadosOperationCompleted = AddressOf Me.OnmodificarCat_AsociadosOperationCompleted
            End If
            Me.InvokeAsync("modificarCat_Asociados", New Object() {dui, nit, isss, lugarExtDui, fechaExtDui, numPasaporte, estadoIngreso, apellido1, apellido2, apellidoCas, nombres, fechaNac, telCasa, celular, email, codProfesion, codNacionalidad, sexo, residente, noresidente, personaJuridica, conocidoPor, dobleNacionalidad, codNacionalidad2, noSocio, codEstadoCivil, codPaisresidencia, LugarNacimiento, FechaVenDUI, EsEmpleado, usuarioModifica, pcModifica}, Me.modificarCat_AsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarCat_AsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarCat_AsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarCat_AsociadosCompleted(Me, New modificarCat_AsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarCat_Asociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCat_Asociados( _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal isss As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As Date,  _
                    ByVal numPasaporte As String,  _
                    ByVal estadoIngreso As String,  _
                    ByVal apellido1 As String,  _
                    ByVal apellido2 As String,  _
                    ByVal apellidoCas As String,  _
                    ByVal nombres As String,  _
                    ByVal fechaNac As String,  _
                    ByVal telCasa As String,  _
                    ByVal celular As String,  _
                    ByVal email As String,  _
                    ByVal codProfesion As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal sexo As String,  _
                    ByVal residente As Boolean,  _
                    ByVal noresidente As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal conocidoPor As String,  _
                    ByVal dobleNacionalidad As Boolean,  _
                    ByVal codNacionalidad2 As String,  _
                    ByVal noSocio As String,  _
                    ByVal codEstadoCivil As Integer,  _
                    ByVal codPaisresidencia As String,  _
                    ByVal LugarNacimiento As String,  _
                    ByVal FechaVenDUI As Date,  _
                    ByVal EsEmpleado As Boolean,  _
                    ByVal usuarioIngresa As String,  _
                    ByVal pcIngresa As String) As Integer
            Dim results() As Object = Me.Invoke("insertarCat_Asociados", New Object() {dui, nit, isss, lugarExtDui, fechaExtDui, numPasaporte, estadoIngreso, apellido1, apellido2, apellidoCas, nombres, fechaNac, telCasa, celular, email, codProfesion, codNacionalidad, sexo, residente, noresidente, personaJuridica, conocidoPor, dobleNacionalidad, codNacionalidad2, noSocio, codEstadoCivil, codPaisresidencia, LugarNacimiento, FechaVenDUI, EsEmpleado, usuarioIngresa, pcIngresa})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCat_Asociados( _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal isss As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As Date,  _
                    ByVal numPasaporte As String,  _
                    ByVal estadoIngreso As String,  _
                    ByVal apellido1 As String,  _
                    ByVal apellido2 As String,  _
                    ByVal apellidoCas As String,  _
                    ByVal nombres As String,  _
                    ByVal fechaNac As String,  _
                    ByVal telCasa As String,  _
                    ByVal celular As String,  _
                    ByVal email As String,  _
                    ByVal codProfesion As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal sexo As String,  _
                    ByVal residente As Boolean,  _
                    ByVal noresidente As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal conocidoPor As String,  _
                    ByVal dobleNacionalidad As Boolean,  _
                    ByVal codNacionalidad2 As String,  _
                    ByVal noSocio As String,  _
                    ByVal codEstadoCivil As Integer,  _
                    ByVal codPaisresidencia As String,  _
                    ByVal LugarNacimiento As String,  _
                    ByVal FechaVenDUI As Date,  _
                    ByVal EsEmpleado As Boolean,  _
                    ByVal usuarioIngresa As String,  _
                    ByVal pcIngresa As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCat_Asociados", New Object() {dui, nit, isss, lugarExtDui, fechaExtDui, numPasaporte, estadoIngreso, apellido1, apellido2, apellidoCas, nombres, fechaNac, telCasa, celular, email, codProfesion, codNacionalidad, sexo, residente, noresidente, personaJuridica, conocidoPor, dobleNacionalidad, codNacionalidad2, noSocio, codEstadoCivil, codPaisresidencia, LugarNacimiento, FechaVenDUI, EsEmpleado, usuarioIngresa, pcIngresa}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCat_Asociados(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCat_AsociadosAsync( _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal isss As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As Date,  _
                    ByVal numPasaporte As String,  _
                    ByVal estadoIngreso As String,  _
                    ByVal apellido1 As String,  _
                    ByVal apellido2 As String,  _
                    ByVal apellidoCas As String,  _
                    ByVal nombres As String,  _
                    ByVal fechaNac As String,  _
                    ByVal telCasa As String,  _
                    ByVal celular As String,  _
                    ByVal email As String,  _
                    ByVal codProfesion As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal sexo As String,  _
                    ByVal residente As Boolean,  _
                    ByVal noresidente As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal conocidoPor As String,  _
                    ByVal dobleNacionalidad As Boolean,  _
                    ByVal codNacionalidad2 As String,  _
                    ByVal noSocio As String,  _
                    ByVal codEstadoCivil As Integer,  _
                    ByVal codPaisresidencia As String,  _
                    ByVal LugarNacimiento As String,  _
                    ByVal FechaVenDUI As Date,  _
                    ByVal EsEmpleado As Boolean,  _
                    ByVal usuarioIngresa As String,  _
                    ByVal pcIngresa As String)
            Me.insertarCat_AsociadosAsync(dui, nit, isss, lugarExtDui, fechaExtDui, numPasaporte, estadoIngreso, apellido1, apellido2, apellidoCas, nombres, fechaNac, telCasa, celular, email, codProfesion, codNacionalidad, sexo, residente, noresidente, personaJuridica, conocidoPor, dobleNacionalidad, codNacionalidad2, noSocio, codEstadoCivil, codPaisresidencia, LugarNacimiento, FechaVenDUI, EsEmpleado, usuarioIngresa, pcIngresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCat_AsociadosAsync( _
                    ByVal dui As String,  _
                    ByVal nit As String,  _
                    ByVal isss As String,  _
                    ByVal lugarExtDui As String,  _
                    ByVal fechaExtDui As Date,  _
                    ByVal numPasaporte As String,  _
                    ByVal estadoIngreso As String,  _
                    ByVal apellido1 As String,  _
                    ByVal apellido2 As String,  _
                    ByVal apellidoCas As String,  _
                    ByVal nombres As String,  _
                    ByVal fechaNac As String,  _
                    ByVal telCasa As String,  _
                    ByVal celular As String,  _
                    ByVal email As String,  _
                    ByVal codProfesion As String,  _
                    ByVal codNacionalidad As String,  _
                    ByVal sexo As String,  _
                    ByVal residente As Boolean,  _
                    ByVal noresidente As String,  _
                    ByVal personaJuridica As Boolean,  _
                    ByVal conocidoPor As String,  _
                    ByVal dobleNacionalidad As Boolean,  _
                    ByVal codNacionalidad2 As String,  _
                    ByVal noSocio As String,  _
                    ByVal codEstadoCivil As Integer,  _
                    ByVal codPaisresidencia As String,  _
                    ByVal LugarNacimiento As String,  _
                    ByVal FechaVenDUI As Date,  _
                    ByVal EsEmpleado As Boolean,  _
                    ByVal usuarioIngresa As String,  _
                    ByVal pcIngresa As String,  _
                    ByVal userState As Object)
            If (Me.insertarCat_AsociadosOperationCompleted Is Nothing) Then
                Me.insertarCat_AsociadosOperationCompleted = AddressOf Me.OninsertarCat_AsociadosOperationCompleted
            End If
            Me.InvokeAsync("insertarCat_Asociados", New Object() {dui, nit, isss, lugarExtDui, fechaExtDui, numPasaporte, estadoIngreso, apellido1, apellido2, apellidoCas, nombres, fechaNac, telCasa, celular, email, codProfesion, codNacionalidad, sexo, residente, noresidente, personaJuridica, conocidoPor, dobleNacionalidad, codNacionalidad2, noSocio, codEstadoCivil, codPaisresidencia, LugarNacimiento, FechaVenDUI, EsEmpleado, usuarioIngresa, pcIngresa}, Me.insertarCat_AsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCat_AsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCat_AsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCat_AsociadosCompleted(Me, New insertarCat_AsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertar_CatAsociados_OtrosDatos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertar_CatAsociados_OtrosDatos(ByVal dui As String, ByVal estadoAsociado As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal foto() As Byte, ByVal codEjecutivo As String, ByVal observacion As String, ByVal noSocio As String, ByVal usuario As String, ByVal fecha As Date, ByVal codSucursal As String, ByVal codCuota As String, ByVal accion As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal firma() As Byte) As Integer
            Dim results() As Object = Me.Invoke("insertar_CatAsociados_OtrosDatos", New Object() {dui, estadoAsociado, foto, codEjecutivo, observacion, noSocio, usuario, fecha, codSucursal, codCuota, accion, firma})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function Begininsertar_CatAsociados_OtrosDatos(ByVal dui As String, ByVal estadoAsociado As String, ByVal foto() As Byte, ByVal codEjecutivo As String, ByVal observacion As String, ByVal noSocio As String, ByVal usuario As String, ByVal fecha As Date, ByVal codSucursal As String, ByVal codCuota As String, ByVal accion As Integer, ByVal firma() As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertar_CatAsociados_OtrosDatos", New Object() {dui, estadoAsociado, foto, codEjecutivo, observacion, noSocio, usuario, fecha, codSucursal, codCuota, accion, firma}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function Endinsertar_CatAsociados_OtrosDatos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertar_CatAsociados_OtrosDatosAsync(ByVal dui As String, ByVal estadoAsociado As String, ByVal foto() As Byte, ByVal codEjecutivo As String, ByVal observacion As String, ByVal noSocio As String, ByVal usuario As String, ByVal fecha As Date, ByVal codSucursal As String, ByVal codCuota As String, ByVal accion As Integer, ByVal firma() As Byte)
            Me.insertar_CatAsociados_OtrosDatosAsync(dui, estadoAsociado, foto, codEjecutivo, observacion, noSocio, usuario, fecha, codSucursal, codCuota, accion, firma, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertar_CatAsociados_OtrosDatosAsync(ByVal dui As String, ByVal estadoAsociado As String, ByVal foto() As Byte, ByVal codEjecutivo As String, ByVal observacion As String, ByVal noSocio As String, ByVal usuario As String, ByVal fecha As Date, ByVal codSucursal As String, ByVal codCuota As String, ByVal accion As Integer, ByVal firma() As Byte, ByVal userState As Object)
            If (Me.insertar_CatAsociados_OtrosDatosOperationCompleted Is Nothing) Then
                Me.insertar_CatAsociados_OtrosDatosOperationCompleted = AddressOf Me.Oninsertar_CatAsociados_OtrosDatosOperationCompleted
            End If
            Me.InvokeAsync("insertar_CatAsociados_OtrosDatos", New Object() {dui, estadoAsociado, foto, codEjecutivo, observacion, noSocio, usuario, fecha, codSucursal, codCuota, accion, firma}, Me.insertar_CatAsociados_OtrosDatosOperationCompleted, userState)
        End Sub
        
        Private Sub Oninsertar_CatAsociados_OtrosDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertar_CatAsociados_OtrosDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertar_CatAsociados_OtrosDatosCompleted(Me, New insertar_CatAsociados_OtrosDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertar_CatAsociados_InfComplementaria", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertar_CatAsociados_InfComplementaria(ByVal dui As String, ByVal tituloObtenido As String, ByVal nombreConyugue As String, ByVal numGrupoFa As Integer, ByVal numDependientes As Integer, ByVal idEstadoVivienda As Integer, ByVal tiempoResidencia As String, ByVal idNivelEducativo As Integer, ByVal fechaNacConyugue As Date, ByVal codProfesionConyugue As String, ByVal oficio As String, ByVal codActividadEconomica As String, ByVal sueldo As Double, ByVal codLugarTrabajoConyugue As String, ByVal telefonoConyugue As String) As Integer
            Dim results() As Object = Me.Invoke("insertar_CatAsociados_InfComplementaria", New Object() {dui, tituloObtenido, nombreConyugue, numGrupoFa, numDependientes, idEstadoVivienda, tiempoResidencia, idNivelEducativo, fechaNacConyugue, codProfesionConyugue, oficio, codActividadEconomica, sueldo, codLugarTrabajoConyugue, telefonoConyugue})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function Begininsertar_CatAsociados_InfComplementaria( _
                    ByVal dui As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal nombreConyugue As String,  _
                    ByVal numGrupoFa As Integer,  _
                    ByVal numDependientes As Integer,  _
                    ByVal idEstadoVivienda As Integer,  _
                    ByVal tiempoResidencia As String,  _
                    ByVal idNivelEducativo As Integer,  _
                    ByVal fechaNacConyugue As Date,  _
                    ByVal codProfesionConyugue As String,  _
                    ByVal oficio As String,  _
                    ByVal codActividadEconomica As String,  _
                    ByVal sueldo As Double,  _
                    ByVal codLugarTrabajoConyugue As String,  _
                    ByVal telefonoConyugue As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertar_CatAsociados_InfComplementaria", New Object() {dui, tituloObtenido, nombreConyugue, numGrupoFa, numDependientes, idEstadoVivienda, tiempoResidencia, idNivelEducativo, fechaNacConyugue, codProfesionConyugue, oficio, codActividadEconomica, sueldo, codLugarTrabajoConyugue, telefonoConyugue}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function Endinsertar_CatAsociados_InfComplementaria(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertar_CatAsociados_InfComplementariaAsync(ByVal dui As String, ByVal tituloObtenido As String, ByVal nombreConyugue As String, ByVal numGrupoFa As Integer, ByVal numDependientes As Integer, ByVal idEstadoVivienda As Integer, ByVal tiempoResidencia As String, ByVal idNivelEducativo As Integer, ByVal fechaNacConyugue As Date, ByVal codProfesionConyugue As String, ByVal oficio As String, ByVal codActividadEconomica As String, ByVal sueldo As Double, ByVal codLugarTrabajoConyugue As String, ByVal telefonoConyugue As String)
            Me.insertar_CatAsociados_InfComplementariaAsync(dui, tituloObtenido, nombreConyugue, numGrupoFa, numDependientes, idEstadoVivienda, tiempoResidencia, idNivelEducativo, fechaNacConyugue, codProfesionConyugue, oficio, codActividadEconomica, sueldo, codLugarTrabajoConyugue, telefonoConyugue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertar_CatAsociados_InfComplementariaAsync( _
                    ByVal dui As String,  _
                    ByVal tituloObtenido As String,  _
                    ByVal nombreConyugue As String,  _
                    ByVal numGrupoFa As Integer,  _
                    ByVal numDependientes As Integer,  _
                    ByVal idEstadoVivienda As Integer,  _
                    ByVal tiempoResidencia As String,  _
                    ByVal idNivelEducativo As Integer,  _
                    ByVal fechaNacConyugue As Date,  _
                    ByVal codProfesionConyugue As String,  _
                    ByVal oficio As String,  _
                    ByVal codActividadEconomica As String,  _
                    ByVal sueldo As Double,  _
                    ByVal codLugarTrabajoConyugue As String,  _
                    ByVal telefonoConyugue As String,  _
                    ByVal userState As Object)
            If (Me.insertar_CatAsociados_InfComplementariaOperationCompleted Is Nothing) Then
                Me.insertar_CatAsociados_InfComplementariaOperationCompleted = AddressOf Me.Oninsertar_CatAsociados_InfComplementariaOperationCompleted
            End If
            Me.InvokeAsync("insertar_CatAsociados_InfComplementaria", New Object() {dui, tituloObtenido, nombreConyugue, numGrupoFa, numDependientes, idEstadoVivienda, tiempoResidencia, idNivelEducativo, fechaNacConyugue, codProfesionConyugue, oficio, codActividadEconomica, sueldo, codLugarTrabajoConyugue, telefonoConyugue}, Me.insertar_CatAsociados_InfComplementariaOperationCompleted, userState)
        End Sub
        
        Private Sub Oninsertar_CatAsociados_InfComplementariaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertar_CatAsociados_InfComplementariaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertar_CatAsociados_InfComplementariaCompleted(Me, New insertar_CatAsociados_InfComplementariaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarCat_Asociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCat_Asociados(ByVal dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCat_Asociados", New Object() {dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCat_Asociados(ByVal dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCat_Asociados", New Object() {dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCat_Asociados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCat_AsociadosAsync(ByVal dui As String)
            Me.consultarCat_AsociadosAsync(dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCat_AsociadosAsync(ByVal dui As String, ByVal userState As Object)
            If (Me.consultarCat_AsociadosOperationCompleted Is Nothing) Then
                Me.consultarCat_AsociadosOperationCompleted = AddressOf Me.OnconsultarCat_AsociadosOperationCompleted
            End If
            Me.InvokeAsync("consultarCat_Asociados", New Object() {dui}, Me.consultarCat_AsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCat_AsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCat_AsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCat_AsociadosCompleted(Me, New consultarCat_AsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarCatPersonaJuridica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCatPersonaJuridica(ByVal nosocio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCatPersonaJuridica", New Object() {nosocio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCatPersonaJuridica(ByVal nosocio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCatPersonaJuridica", New Object() {nosocio}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCatPersonaJuridica(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCatPersonaJuridicaAsync(ByVal nosocio As Integer)
            Me.consultarCatPersonaJuridicaAsync(nosocio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCatPersonaJuridicaAsync(ByVal nosocio As Integer, ByVal userState As Object)
            If (Me.consultarCatPersonaJuridicaOperationCompleted Is Nothing) Then
                Me.consultarCatPersonaJuridicaOperationCompleted = AddressOf Me.OnconsultarCatPersonaJuridicaOperationCompleted
            End If
            Me.InvokeAsync("consultarCatPersonaJuridica", New Object() {nosocio}, Me.consultarCatPersonaJuridicaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCatPersonaJuridicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCatPersonaJuridicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCatPersonaJuridicaCompleted(Me, New consultarCatPersonaJuridicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertar_catPersonaJuridica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertar_catPersonaJuridica(ByVal dui As String, ByVal razonSocial As String, ByVal nombreComercial As String, ByVal representanteLegal As String, ByVal noRegContribuyente As String, ByVal nitEmpresa As String, ByVal telefonos As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal direccion As String, ByVal noSocio As String) As Integer
            Dim results() As Object = Me.Invoke("insertar_catPersonaJuridica", New Object() {dui, razonSocial, nombreComercial, representanteLegal, noRegContribuyente, nitEmpresa, telefonos, codDepartamento, codMunicipio, direccion, noSocio})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function Begininsertar_catPersonaJuridica(ByVal dui As String, ByVal razonSocial As String, ByVal nombreComercial As String, ByVal representanteLegal As String, ByVal noRegContribuyente As String, ByVal nitEmpresa As String, ByVal telefonos As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal direccion As String, ByVal noSocio As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertar_catPersonaJuridica", New Object() {dui, razonSocial, nombreComercial, representanteLegal, noRegContribuyente, nitEmpresa, telefonos, codDepartamento, codMunicipio, direccion, noSocio}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function Endinsertar_catPersonaJuridica(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertar_catPersonaJuridicaAsync(ByVal dui As String, ByVal razonSocial As String, ByVal nombreComercial As String, ByVal representanteLegal As String, ByVal noRegContribuyente As String, ByVal nitEmpresa As String, ByVal telefonos As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal direccion As String, ByVal noSocio As String)
            Me.insertar_catPersonaJuridicaAsync(dui, razonSocial, nombreComercial, representanteLegal, noRegContribuyente, nitEmpresa, telefonos, codDepartamento, codMunicipio, direccion, noSocio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertar_catPersonaJuridicaAsync(ByVal dui As String, ByVal razonSocial As String, ByVal nombreComercial As String, ByVal representanteLegal As String, ByVal noRegContribuyente As String, ByVal nitEmpresa As String, ByVal telefonos As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal direccion As String, ByVal noSocio As String, ByVal userState As Object)
            If (Me.insertar_catPersonaJuridicaOperationCompleted Is Nothing) Then
                Me.insertar_catPersonaJuridicaOperationCompleted = AddressOf Me.Oninsertar_catPersonaJuridicaOperationCompleted
            End If
            Me.InvokeAsync("insertar_catPersonaJuridica", New Object() {dui, razonSocial, nombreComercial, representanteLegal, noRegContribuyente, nitEmpresa, telefonos, codDepartamento, codMunicipio, direccion, noSocio}, Me.insertar_catPersonaJuridicaOperationCompleted, userState)
        End Sub
        
        Private Sub Oninsertar_catPersonaJuridicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertar_catPersonaJuridicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertar_catPersonaJuridicaCompleted(Me, New insertar_catPersonaJuridicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/recuperarIdPersonaJuridica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function recuperarIdPersonaJuridica(ByVal noSocio As String) As Integer
            Dim results() As Object = Me.Invoke("recuperarIdPersonaJuridica", New Object() {noSocio})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginrecuperarIdPersonaJuridica(ByVal noSocio As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("recuperarIdPersonaJuridica", New Object() {noSocio}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndrecuperarIdPersonaJuridica(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub recuperarIdPersonaJuridicaAsync(ByVal noSocio As String)
            Me.recuperarIdPersonaJuridicaAsync(noSocio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub recuperarIdPersonaJuridicaAsync(ByVal noSocio As String, ByVal userState As Object)
            If (Me.recuperarIdPersonaJuridicaOperationCompleted Is Nothing) Then
                Me.recuperarIdPersonaJuridicaOperationCompleted = AddressOf Me.OnrecuperarIdPersonaJuridicaOperationCompleted
            End If
            Me.InvokeAsync("recuperarIdPersonaJuridica", New Object() {noSocio}, Me.recuperarIdPersonaJuridicaOperationCompleted, userState)
        End Sub
        
        Private Sub OnrecuperarIdPersonaJuridicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.recuperarIdPersonaJuridicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent recuperarIdPersonaJuridicaCompleted(Me, New recuperarIdPersonaJuridicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/modificarPersonaJuridica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarPersonaJuridica(ByVal dui As String, ByVal razonSocial As String, ByVal nombreComercial As String, ByVal representanteLegal As String, ByVal noRegContribuyente As String, ByVal nitEmpresa As String, ByVal telefonos As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal direccion As String, ByVal idCatPerJuridica As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarPersonaJuridica", New Object() {dui, razonSocial, nombreComercial, representanteLegal, noRegContribuyente, nitEmpresa, telefonos, codDepartamento, codMunicipio, direccion, idCatPerJuridica})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarPersonaJuridica(ByVal dui As String, ByVal razonSocial As String, ByVal nombreComercial As String, ByVal representanteLegal As String, ByVal noRegContribuyente As String, ByVal nitEmpresa As String, ByVal telefonos As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal direccion As String, ByVal idCatPerJuridica As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarPersonaJuridica", New Object() {dui, razonSocial, nombreComercial, representanteLegal, noRegContribuyente, nitEmpresa, telefonos, codDepartamento, codMunicipio, direccion, idCatPerJuridica}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarPersonaJuridica(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarPersonaJuridicaAsync(ByVal dui As String, ByVal razonSocial As String, ByVal nombreComercial As String, ByVal representanteLegal As String, ByVal noRegContribuyente As String, ByVal nitEmpresa As String, ByVal telefonos As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal direccion As String, ByVal idCatPerJuridica As Integer)
            Me.modificarPersonaJuridicaAsync(dui, razonSocial, nombreComercial, representanteLegal, noRegContribuyente, nitEmpresa, telefonos, codDepartamento, codMunicipio, direccion, idCatPerJuridica, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarPersonaJuridicaAsync(ByVal dui As String, ByVal razonSocial As String, ByVal nombreComercial As String, ByVal representanteLegal As String, ByVal noRegContribuyente As String, ByVal nitEmpresa As String, ByVal telefonos As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal direccion As String, ByVal idCatPerJuridica As Integer, ByVal userState As Object)
            If (Me.modificarPersonaJuridicaOperationCompleted Is Nothing) Then
                Me.modificarPersonaJuridicaOperationCompleted = AddressOf Me.OnmodificarPersonaJuridicaOperationCompleted
            End If
            Me.InvokeAsync("modificarPersonaJuridica", New Object() {dui, razonSocial, nombreComercial, representanteLegal, noRegContribuyente, nitEmpresa, telefonos, codDepartamento, codMunicipio, direccion, idCatPerJuridica}, Me.modificarPersonaJuridicaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarPersonaJuridicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarPersonaJuridicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarPersonaJuridicaCompleted(Me, New modificarPersonaJuridicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarAsocPersonaJuridicaDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarAsocPersonaJuridicaDirectivos(ByVal IdCatPerJuridica As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarAsocPersonaJuridicaDirectivos", New Object() {IdCatPerJuridica})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarAsocPersonaJuridicaDirectivos(ByVal IdCatPerJuridica As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarAsocPersonaJuridicaDirectivos", New Object() {IdCatPerJuridica}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarAsocPersonaJuridicaDirectivos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarAsocPersonaJuridicaDirectivosAsync(ByVal IdCatPerJuridica As Integer)
            Me.consultarAsocPersonaJuridicaDirectivosAsync(IdCatPerJuridica, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarAsocPersonaJuridicaDirectivosAsync(ByVal IdCatPerJuridica As Integer, ByVal userState As Object)
            If (Me.consultarAsocPersonaJuridicaDirectivosOperationCompleted Is Nothing) Then
                Me.consultarAsocPersonaJuridicaDirectivosOperationCompleted = AddressOf Me.OnconsultarAsocPersonaJuridicaDirectivosOperationCompleted
            End If
            Me.InvokeAsync("consultarAsocPersonaJuridicaDirectivos", New Object() {IdCatPerJuridica}, Me.consultarAsocPersonaJuridicaDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarAsocPersonaJuridicaDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarAsocPersonaJuridicaDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarAsocPersonaJuridicaDirectivosCompleted(Me, New consultarAsocPersonaJuridicaDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/actualizarAsocPersonaJuridicaDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function actualizarAsocPersonaJuridicaDirectivos(ByVal nombres As String, ByVal cargo As String, ByVal activo As Boolean, ByVal IdCatPerJuridica As Integer, ByVal idJuntaDirectiva As Integer) As Integer
            Dim results() As Object = Me.Invoke("actualizarAsocPersonaJuridicaDirectivos", New Object() {nombres, cargo, activo, IdCatPerJuridica, idJuntaDirectiva})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginactualizarAsocPersonaJuridicaDirectivos(ByVal nombres As String, ByVal cargo As String, ByVal activo As Boolean, ByVal IdCatPerJuridica As Integer, ByVal idJuntaDirectiva As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("actualizarAsocPersonaJuridicaDirectivos", New Object() {nombres, cargo, activo, IdCatPerJuridica, idJuntaDirectiva}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndactualizarAsocPersonaJuridicaDirectivos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub actualizarAsocPersonaJuridicaDirectivosAsync(ByVal nombres As String, ByVal cargo As String, ByVal activo As Boolean, ByVal IdCatPerJuridica As Integer, ByVal idJuntaDirectiva As Integer)
            Me.actualizarAsocPersonaJuridicaDirectivosAsync(nombres, cargo, activo, IdCatPerJuridica, idJuntaDirectiva, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub actualizarAsocPersonaJuridicaDirectivosAsync(ByVal nombres As String, ByVal cargo As String, ByVal activo As Boolean, ByVal IdCatPerJuridica As Integer, ByVal idJuntaDirectiva As Integer, ByVal userState As Object)
            If (Me.actualizarAsocPersonaJuridicaDirectivosOperationCompleted Is Nothing) Then
                Me.actualizarAsocPersonaJuridicaDirectivosOperationCompleted = AddressOf Me.OnactualizarAsocPersonaJuridicaDirectivosOperationCompleted
            End If
            Me.InvokeAsync("actualizarAsocPersonaJuridicaDirectivos", New Object() {nombres, cargo, activo, IdCatPerJuridica, idJuntaDirectiva}, Me.actualizarAsocPersonaJuridicaDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnactualizarAsocPersonaJuridicaDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.actualizarAsocPersonaJuridicaDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent actualizarAsocPersonaJuridicaDirectivosCompleted(Me, New actualizarAsocPersonaJuridicaDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarAsocPersonaJuridicaDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarAsocPersonaJuridicaDirectivos(ByVal nombres As String, ByVal cargo As String, ByVal activo As Boolean, ByVal IdCatPerJuridica As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarAsocPersonaJuridicaDirectivos", New Object() {nombres, cargo, activo, IdCatPerJuridica})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarAsocPersonaJuridicaDirectivos(ByVal nombres As String, ByVal cargo As String, ByVal activo As Boolean, ByVal IdCatPerJuridica As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarAsocPersonaJuridicaDirectivos", New Object() {nombres, cargo, activo, IdCatPerJuridica}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarAsocPersonaJuridicaDirectivos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarAsocPersonaJuridicaDirectivosAsync(ByVal nombres As String, ByVal cargo As String, ByVal activo As Boolean, ByVal IdCatPerJuridica As Integer)
            Me.insertarAsocPersonaJuridicaDirectivosAsync(nombres, cargo, activo, IdCatPerJuridica, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarAsocPersonaJuridicaDirectivosAsync(ByVal nombres As String, ByVal cargo As String, ByVal activo As Boolean, ByVal IdCatPerJuridica As Integer, ByVal userState As Object)
            If (Me.insertarAsocPersonaJuridicaDirectivosOperationCompleted Is Nothing) Then
                Me.insertarAsocPersonaJuridicaDirectivosOperationCompleted = AddressOf Me.OninsertarAsocPersonaJuridicaDirectivosOperationCompleted
            End If
            Me.InvokeAsync("insertarAsocPersonaJuridicaDirectivos", New Object() {nombres, cargo, activo, IdCatPerJuridica}, Me.insertarAsocPersonaJuridicaDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarAsocPersonaJuridicaDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarAsocPersonaJuridicaDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarAsocPersonaJuridicaDirectivosCompleted(Me, New insertarAsocPersonaJuridicaDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/eliminarAsocPersonaJuridicaDirectivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarAsocPersonaJuridicaDirectivos(ByVal idJuntaDirectiva As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarAsocPersonaJuridicaDirectivos", New Object() {idJuntaDirectiva})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarAsocPersonaJuridicaDirectivos(ByVal idJuntaDirectiva As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarAsocPersonaJuridicaDirectivos", New Object() {idJuntaDirectiva}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarAsocPersonaJuridicaDirectivos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarAsocPersonaJuridicaDirectivosAsync(ByVal idJuntaDirectiva As Integer)
            Me.eliminarAsocPersonaJuridicaDirectivosAsync(idJuntaDirectiva, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarAsocPersonaJuridicaDirectivosAsync(ByVal idJuntaDirectiva As Integer, ByVal userState As Object)
            If (Me.eliminarAsocPersonaJuridicaDirectivosOperationCompleted Is Nothing) Then
                Me.eliminarAsocPersonaJuridicaDirectivosOperationCompleted = AddressOf Me.OneliminarAsocPersonaJuridicaDirectivosOperationCompleted
            End If
            Me.InvokeAsync("eliminarAsocPersonaJuridicaDirectivos", New Object() {idJuntaDirectiva}, Me.eliminarAsocPersonaJuridicaDirectivosOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarAsocPersonaJuridicaDirectivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarAsocPersonaJuridicaDirectivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarAsocPersonaJuridicaDirectivosCompleted(Me, New eliminarAsocPersonaJuridicaDirectivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarCatActividadEconomica", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCatActividadEconomica(ByVal nivel As String, ByVal codigoDependencia As String, ByVal opcion As Integer, ByVal codigoActividad As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCatActividadEconomica", New Object() {nivel, codigoDependencia, opcion, codigoActividad})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCatActividadEconomica(ByVal nivel As String, ByVal codigoDependencia As String, ByVal opcion As Integer, ByVal codigoActividad As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCatActividadEconomica", New Object() {nivel, codigoDependencia, opcion, codigoActividad}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCatActividadEconomica(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCatActividadEconomicaAsync(ByVal nivel As String, ByVal codigoDependencia As String, ByVal opcion As Integer, ByVal codigoActividad As String)
            Me.consultarCatActividadEconomicaAsync(nivel, codigoDependencia, opcion, codigoActividad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCatActividadEconomicaAsync(ByVal nivel As String, ByVal codigoDependencia As String, ByVal opcion As Integer, ByVal codigoActividad As String, ByVal userState As Object)
            If (Me.consultarCatActividadEconomicaOperationCompleted Is Nothing) Then
                Me.consultarCatActividadEconomicaOperationCompleted = AddressOf Me.OnconsultarCatActividadEconomicaOperationCompleted
            End If
            Me.InvokeAsync("consultarCatActividadEconomica", New Object() {nivel, codigoDependencia, opcion, codigoActividad}, Me.consultarCatActividadEconomicaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCatActividadEconomicaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCatActividadEconomicaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCatActividadEconomicaCompleted(Me, New consultarCatActividadEconomicaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarCatalogosTiposCatalogo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCatalogosTiposCatalogo(ByVal descripcion As String) As Integer
            Dim results() As Object = Me.Invoke("insertarCatalogosTiposCatalogo", New Object() {descripcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCatalogosTiposCatalogo(ByVal descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCatalogosTiposCatalogo", New Object() {descripcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCatalogosTiposCatalogo(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCatalogosTiposCatalogoAsync(ByVal descripcion As String)
            Me.insertarCatalogosTiposCatalogoAsync(descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCatalogosTiposCatalogoAsync(ByVal descripcion As String, ByVal userState As Object)
            If (Me.insertarCatalogosTiposCatalogoOperationCompleted Is Nothing) Then
                Me.insertarCatalogosTiposCatalogoOperationCompleted = AddressOf Me.OninsertarCatalogosTiposCatalogoOperationCompleted
            End If
            Me.InvokeAsync("insertarCatalogosTiposCatalogo", New Object() {descripcion}, Me.insertarCatalogosTiposCatalogoOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCatalogosTiposCatalogoOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCatalogosTiposCatalogoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCatalogosTiposCatalogoCompleted(Me, New insertarCatalogosTiposCatalogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/actualizarCatalogosTiposCatalogo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function actualizarCatalogosTiposCatalogo(ByVal descripcion As String, ByVal idTipo As Integer) As Integer
            Dim results() As Object = Me.Invoke("actualizarCatalogosTiposCatalogo", New Object() {descripcion, idTipo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginactualizarCatalogosTiposCatalogo(ByVal descripcion As String, ByVal idTipo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("actualizarCatalogosTiposCatalogo", New Object() {descripcion, idTipo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndactualizarCatalogosTiposCatalogo(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub actualizarCatalogosTiposCatalogoAsync(ByVal descripcion As String, ByVal idTipo As Integer)
            Me.actualizarCatalogosTiposCatalogoAsync(descripcion, idTipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub actualizarCatalogosTiposCatalogoAsync(ByVal descripcion As String, ByVal idTipo As Integer, ByVal userState As Object)
            If (Me.actualizarCatalogosTiposCatalogoOperationCompleted Is Nothing) Then
                Me.actualizarCatalogosTiposCatalogoOperationCompleted = AddressOf Me.OnactualizarCatalogosTiposCatalogoOperationCompleted
            End If
            Me.InvokeAsync("actualizarCatalogosTiposCatalogo", New Object() {descripcion, idTipo}, Me.actualizarCatalogosTiposCatalogoOperationCompleted, userState)
        End Sub
        
        Private Sub OnactualizarCatalogosTiposCatalogoOperationCompleted(ByVal arg As Object)
            If (Not (Me.actualizarCatalogosTiposCatalogoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent actualizarCatalogosTiposCatalogoCompleted(Me, New actualizarCatalogosTiposCatalogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarCatalogosTiposCatalogo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCatalogosTiposCatalogo(ByVal idtipo As Integer, ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCatalogosTiposCatalogo", New Object() {idtipo, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCatalogosTiposCatalogo(ByVal idtipo As Integer, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCatalogosTiposCatalogo", New Object() {idtipo, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCatalogosTiposCatalogo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCatalogosTiposCatalogoAsync(ByVal idtipo As Integer, ByVal opcion As Integer)
            Me.consultarCatalogosTiposCatalogoAsync(idtipo, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCatalogosTiposCatalogoAsync(ByVal idtipo As Integer, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.consultarCatalogosTiposCatalogoOperationCompleted Is Nothing) Then
                Me.consultarCatalogosTiposCatalogoOperationCompleted = AddressOf Me.OnconsultarCatalogosTiposCatalogoOperationCompleted
            End If
            Me.InvokeAsync("consultarCatalogosTiposCatalogo", New Object() {idtipo, opcion}, Me.consultarCatalogosTiposCatalogoOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCatalogosTiposCatalogoOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCatalogosTiposCatalogoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCatalogosTiposCatalogoCompleted(Me, New consultarCatalogosTiposCatalogoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarDbCatalogosCatalogos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarDbCatalogosCatalogos(ByVal idTipoCatalogo As Integer, ByVal descripcion As String) As Integer
            Dim results() As Object = Me.Invoke("insertarDbCatalogosCatalogos", New Object() {idTipoCatalogo, descripcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarDbCatalogosCatalogos(ByVal idTipoCatalogo As Integer, ByVal descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarDbCatalogosCatalogos", New Object() {idTipoCatalogo, descripcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarDbCatalogosCatalogos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarDbCatalogosCatalogosAsync(ByVal idTipoCatalogo As Integer, ByVal descripcion As String)
            Me.insertarDbCatalogosCatalogosAsync(idTipoCatalogo, descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarDbCatalogosCatalogosAsync(ByVal idTipoCatalogo As Integer, ByVal descripcion As String, ByVal userState As Object)
            If (Me.insertarDbCatalogosCatalogosOperationCompleted Is Nothing) Then
                Me.insertarDbCatalogosCatalogosOperationCompleted = AddressOf Me.OninsertarDbCatalogosCatalogosOperationCompleted
            End If
            Me.InvokeAsync("insertarDbCatalogosCatalogos", New Object() {idTipoCatalogo, descripcion}, Me.insertarDbCatalogosCatalogosOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarDbCatalogosCatalogosOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarDbCatalogosCatalogosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarDbCatalogosCatalogosCompleted(Me, New insertarDbCatalogosCatalogosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/actualizarDbCatalogosCatalogos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function actualizarDbCatalogosCatalogos(ByVal idCatalogo As Integer, ByVal descripcion As String) As Integer
            Dim results() As Object = Me.Invoke("actualizarDbCatalogosCatalogos", New Object() {idCatalogo, descripcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginactualizarDbCatalogosCatalogos(ByVal idCatalogo As Integer, ByVal descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("actualizarDbCatalogosCatalogos", New Object() {idCatalogo, descripcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndactualizarDbCatalogosCatalogos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub actualizarDbCatalogosCatalogosAsync(ByVal idCatalogo As Integer, ByVal descripcion As String)
            Me.actualizarDbCatalogosCatalogosAsync(idCatalogo, descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub actualizarDbCatalogosCatalogosAsync(ByVal idCatalogo As Integer, ByVal descripcion As String, ByVal userState As Object)
            If (Me.actualizarDbCatalogosCatalogosOperationCompleted Is Nothing) Then
                Me.actualizarDbCatalogosCatalogosOperationCompleted = AddressOf Me.OnactualizarDbCatalogosCatalogosOperationCompleted
            End If
            Me.InvokeAsync("actualizarDbCatalogosCatalogos", New Object() {idCatalogo, descripcion}, Me.actualizarDbCatalogosCatalogosOperationCompleted, userState)
        End Sub
        
        Private Sub OnactualizarDbCatalogosCatalogosOperationCompleted(ByVal arg As Object)
            If (Not (Me.actualizarDbCatalogosCatalogosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent actualizarDbCatalogosCatalogosCompleted(Me, New actualizarDbCatalogosCatalogosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarDbCatalogosCatalogos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarDbCatalogosCatalogos(ByVal idCatalogo As Integer, ByVal idTipoCatalogo As tipoCatalogo, ByVal opcion As tipoConsultaCatalogos) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarDbCatalogosCatalogos", New Object() {idCatalogo, idTipoCatalogo, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarDbCatalogosCatalogos(ByVal idCatalogo As Integer, ByVal idTipoCatalogo As tipoCatalogo, ByVal opcion As tipoConsultaCatalogos, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarDbCatalogosCatalogos", New Object() {idCatalogo, idTipoCatalogo, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarDbCatalogosCatalogos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarDbCatalogosCatalogosAsync(ByVal idCatalogo As Integer, ByVal idTipoCatalogo As tipoCatalogo, ByVal opcion As tipoConsultaCatalogos)
            Me.consultarDbCatalogosCatalogosAsync(idCatalogo, idTipoCatalogo, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarDbCatalogosCatalogosAsync(ByVal idCatalogo As Integer, ByVal idTipoCatalogo As tipoCatalogo, ByVal opcion As tipoConsultaCatalogos, ByVal userState As Object)
            If (Me.consultarDbCatalogosCatalogosOperationCompleted Is Nothing) Then
                Me.consultarDbCatalogosCatalogosOperationCompleted = AddressOf Me.OnconsultarDbCatalogosCatalogosOperationCompleted
            End If
            Me.InvokeAsync("consultarDbCatalogosCatalogos", New Object() {idCatalogo, idTipoCatalogo, opcion}, Me.consultarDbCatalogosCatalogosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarDbCatalogosCatalogosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarDbCatalogosCatalogosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarDbCatalogosCatalogosCompleted(Me, New consultarDbCatalogosCatalogosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarMercaRutasAsesores", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarMercaRutasAsesores(ByVal codSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarMercaRutasAsesores", New Object() {codSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarMercaRutasAsesores(ByVal codSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarMercaRutasAsesores", New Object() {codSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarMercaRutasAsesores(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarMercaRutasAsesoresAsync(ByVal codSucursal As String)
            Me.consultarMercaRutasAsesoresAsync(codSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarMercaRutasAsesoresAsync(ByVal codSucursal As String, ByVal userState As Object)
            If (Me.consultarMercaRutasAsesoresOperationCompleted Is Nothing) Then
                Me.consultarMercaRutasAsesoresOperationCompleted = AddressOf Me.OnconsultarMercaRutasAsesoresOperationCompleted
            End If
            Me.InvokeAsync("consultarMercaRutasAsesores", New Object() {codSucursal}, Me.consultarMercaRutasAsesoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarMercaRutasAsesoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarMercaRutasAsesoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarMercaRutasAsesoresCompleted(Me, New consultarMercaRutasAsesoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarNuevaVistaMercaRutas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarNuevaVistaMercaRutas(ByVal idRuta As Integer, ByVal fechaVisita As Date, ByVal observacion As String, ByVal revisado As Boolean, ByVal idActividad As Integer, ByVal idTipoGestion As Integer, ByVal fechaActu As Date, ByVal usuario As String) As Integer
            Dim results() As Object = Me.Invoke("insertarNuevaVistaMercaRutas", New Object() {idRuta, fechaVisita, observacion, revisado, idActividad, idTipoGestion, fechaActu, usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarNuevaVistaMercaRutas(ByVal idRuta As Integer, ByVal fechaVisita As Date, ByVal observacion As String, ByVal revisado As Boolean, ByVal idActividad As Integer, ByVal idTipoGestion As Integer, ByVal fechaActu As Date, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarNuevaVistaMercaRutas", New Object() {idRuta, fechaVisita, observacion, revisado, idActividad, idTipoGestion, fechaActu, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarNuevaVistaMercaRutas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarNuevaVistaMercaRutasAsync(ByVal idRuta As Integer, ByVal fechaVisita As Date, ByVal observacion As String, ByVal revisado As Boolean, ByVal idActividad As Integer, ByVal idTipoGestion As Integer, ByVal fechaActu As Date, ByVal usuario As String)
            Me.insertarNuevaVistaMercaRutasAsync(idRuta, fechaVisita, observacion, revisado, idActividad, idTipoGestion, fechaActu, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarNuevaVistaMercaRutasAsync(ByVal idRuta As Integer, ByVal fechaVisita As Date, ByVal observacion As String, ByVal revisado As Boolean, ByVal idActividad As Integer, ByVal idTipoGestion As Integer, ByVal fechaActu As Date, ByVal usuario As String, ByVal userState As Object)
            If (Me.insertarNuevaVistaMercaRutasOperationCompleted Is Nothing) Then
                Me.insertarNuevaVistaMercaRutasOperationCompleted = AddressOf Me.OninsertarNuevaVistaMercaRutasOperationCompleted
            End If
            Me.InvokeAsync("insertarNuevaVistaMercaRutas", New Object() {idRuta, fechaVisita, observacion, revisado, idActividad, idTipoGestion, fechaActu, usuario}, Me.insertarNuevaVistaMercaRutasOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarNuevaVistaMercaRutasOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarNuevaVistaMercaRutasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarNuevaVistaMercaRutasCompleted(Me, New insertarNuevaVistaMercaRutasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarMercaRutas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarMercaRutas(ByVal opcion As Integer, ByVal codSucursal As String, ByVal usuario As String, ByVal fechaIni As Date, ByVal fechaFin As Date, ByVal idRuta As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarMercaRutas", New Object() {opcion, codSucursal, usuario, fechaIni, fechaFin, idRuta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarMercaRutas(ByVal opcion As Integer, ByVal codSucursal As String, ByVal usuario As String, ByVal fechaIni As Date, ByVal fechaFin As Date, ByVal idRuta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarMercaRutas", New Object() {opcion, codSucursal, usuario, fechaIni, fechaFin, idRuta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarMercaRutas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarMercaRutasAsync(ByVal opcion As Integer, ByVal codSucursal As String, ByVal usuario As String, ByVal fechaIni As Date, ByVal fechaFin As Date, ByVal idRuta As String)
            Me.consultarMercaRutasAsync(opcion, codSucursal, usuario, fechaIni, fechaFin, idRuta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarMercaRutasAsync(ByVal opcion As Integer, ByVal codSucursal As String, ByVal usuario As String, ByVal fechaIni As Date, ByVal fechaFin As Date, ByVal idRuta As String, ByVal userState As Object)
            If (Me.consultarMercaRutasOperationCompleted Is Nothing) Then
                Me.consultarMercaRutasOperationCompleted = AddressOf Me.OnconsultarMercaRutasOperationCompleted
            End If
            Me.InvokeAsync("consultarMercaRutas", New Object() {opcion, codSucursal, usuario, fechaIni, fechaFin, idRuta}, Me.consultarMercaRutasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarMercaRutasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarMercaRutasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarMercaRutasCompleted(Me, New consultarMercaRutasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarMercaRutas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarMercaRutas(ByVal usuario As String, ByVal fechaVisita As Date, ByVal cliente As String, ByVal telCliente As String, ByVal codPagaduria As String, ByVal idActividad As Integer, ByVal observacion As String, ByVal idTipoGestion As Integer, ByVal revisado As Boolean, ByVal fechaActu As Date, ByVal usuarioActu As String, ByVal correoCliente As String) As Integer
            Dim results() As Object = Me.Invoke("insertarMercaRutas", New Object() {usuario, fechaVisita, cliente, telCliente, codPagaduria, idActividad, observacion, idTipoGestion, revisado, fechaActu, usuarioActu, correoCliente})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarMercaRutas(ByVal usuario As String, ByVal fechaVisita As Date, ByVal cliente As String, ByVal telCliente As String, ByVal codPagaduria As String, ByVal idActividad As Integer, ByVal observacion As String, ByVal idTipoGestion As Integer, ByVal revisado As Boolean, ByVal fechaActu As Date, ByVal usuarioActu As String, ByVal correoCliente As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarMercaRutas", New Object() {usuario, fechaVisita, cliente, telCliente, codPagaduria, idActividad, observacion, idTipoGestion, revisado, fechaActu, usuarioActu, correoCliente}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarMercaRutas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarMercaRutasAsync(ByVal usuario As String, ByVal fechaVisita As Date, ByVal cliente As String, ByVal telCliente As String, ByVal codPagaduria As String, ByVal idActividad As Integer, ByVal observacion As String, ByVal idTipoGestion As Integer, ByVal revisado As Boolean, ByVal fechaActu As Date, ByVal usuarioActu As String, ByVal correoCliente As String)
            Me.insertarMercaRutasAsync(usuario, fechaVisita, cliente, telCliente, codPagaduria, idActividad, observacion, idTipoGestion, revisado, fechaActu, usuarioActu, correoCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarMercaRutasAsync(ByVal usuario As String, ByVal fechaVisita As Date, ByVal cliente As String, ByVal telCliente As String, ByVal codPagaduria As String, ByVal idActividad As Integer, ByVal observacion As String, ByVal idTipoGestion As Integer, ByVal revisado As Boolean, ByVal fechaActu As Date, ByVal usuarioActu As String, ByVal correoCliente As String, ByVal userState As Object)
            If (Me.insertarMercaRutasOperationCompleted Is Nothing) Then
                Me.insertarMercaRutasOperationCompleted = AddressOf Me.OninsertarMercaRutasOperationCompleted
            End If
            Me.InvokeAsync("insertarMercaRutas", New Object() {usuario, fechaVisita, cliente, telCliente, codPagaduria, idActividad, observacion, idTipoGestion, revisado, fechaActu, usuarioActu, correoCliente}, Me.insertarMercaRutasOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarMercaRutasOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarMercaRutasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarMercaRutasCompleted(Me, New insertarMercaRutasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/insertarRevisionMercaRutas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarRevisionMercaRutas(ByVal usuarioRevisa As String, ByVal fechaRevision As String, ByVal idVisitaRuta As Integer, ByVal observacion As String) As Integer
            Dim results() As Object = Me.Invoke("insertarRevisionMercaRutas", New Object() {usuarioRevisa, fechaRevision, idVisitaRuta, observacion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarRevisionMercaRutas(ByVal usuarioRevisa As String, ByVal fechaRevision As String, ByVal idVisitaRuta As Integer, ByVal observacion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarRevisionMercaRutas", New Object() {usuarioRevisa, fechaRevision, idVisitaRuta, observacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarRevisionMercaRutas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarRevisionMercaRutasAsync(ByVal usuarioRevisa As String, ByVal fechaRevision As String, ByVal idVisitaRuta As Integer, ByVal observacion As String)
            Me.insertarRevisionMercaRutasAsync(usuarioRevisa, fechaRevision, idVisitaRuta, observacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarRevisionMercaRutasAsync(ByVal usuarioRevisa As String, ByVal fechaRevision As String, ByVal idVisitaRuta As Integer, ByVal observacion As String, ByVal userState As Object)
            If (Me.insertarRevisionMercaRutasOperationCompleted Is Nothing) Then
                Me.insertarRevisionMercaRutasOperationCompleted = AddressOf Me.OninsertarRevisionMercaRutasOperationCompleted
            End If
            Me.InvokeAsync("insertarRevisionMercaRutas", New Object() {usuarioRevisa, fechaRevision, idVisitaRuta, observacion}, Me.insertarRevisionMercaRutasOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarRevisionMercaRutasOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarRevisionMercaRutasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarRevisionMercaRutasCompleted(Me, New insertarRevisionMercaRutasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/impuestosTransacccionesFinancieras", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function impuestosTransacccionesFinancieras(ByVal dui As String, ByVal monto As Double, ByVal nocuenta As String, ByVal fecha As Date, ByVal usuario As String) As Integer
            Dim results() As Object = Me.Invoke("impuestosTransacccionesFinancieras", New Object() {dui, monto, nocuenta, fecha, usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginimpuestosTransacccionesFinancieras(ByVal dui As String, ByVal monto As Double, ByVal nocuenta As String, ByVal fecha As Date, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("impuestosTransacccionesFinancieras", New Object() {dui, monto, nocuenta, fecha, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndimpuestosTransacccionesFinancieras(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub impuestosTransacccionesFinancierasAsync(ByVal dui As String, ByVal monto As Double, ByVal nocuenta As String, ByVal fecha As Date, ByVal usuario As String)
            Me.impuestosTransacccionesFinancierasAsync(dui, monto, nocuenta, fecha, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub impuestosTransacccionesFinancierasAsync(ByVal dui As String, ByVal monto As Double, ByVal nocuenta As String, ByVal fecha As Date, ByVal usuario As String, ByVal userState As Object)
            If (Me.impuestosTransacccionesFinancierasOperationCompleted Is Nothing) Then
                Me.impuestosTransacccionesFinancierasOperationCompleted = AddressOf Me.OnimpuestosTransacccionesFinancierasOperationCompleted
            End If
            Me.InvokeAsync("impuestosTransacccionesFinancieras", New Object() {dui, monto, nocuenta, fecha, usuario}, Me.impuestosTransacccionesFinancierasOperationCompleted, userState)
        End Sub
        
        Private Sub OnimpuestosTransacccionesFinancierasOperationCompleted(ByVal arg As Object)
            If (Not (Me.impuestosTransacccionesFinancierasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent impuestosTransacccionesFinancierasCompleted(Me, New impuestosTransacccionesFinancierasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/capitalzarDividendosNoCobrados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function capitalzarDividendosNoCobrados( _
                    ByVal codTipoAhorro As String,  _
                    ByVal noCuenta As String,  _
                    ByVal codTransaccion As String,  _
                    ByVal nolibreta As String,  _
                    ByVal fecha As Date,  _
                    ByVal tipoPago As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldo As Double,  _
                    ByVal tasaInteres As Double,  _
                    ByVal codTipo As String,  _
                    ByVal noCaja As Integer,  _
                    ByVal codCajero As Integer,  _
                    ByVal pagoLibreta As String,  _
                    ByVal observacion As String,  _
                    ByVal idmovimiento As String,  _
                    ByVal annio As Integer,  _
                    ByVal tipo As String,  _
                    ByVal num As Integer,  _
                    ByVal posteado As String,  _
                    ByVal idBanco As Integer,  _
                    ByVal origen As String,  _
                    ByVal hora As String,  _
                    ByVal noDpf As String,  _
                    ByVal corr_Libreta As Integer,  _
                    ByVal idLibreta As Integer,  _
                    ByVal noFactura As String,  _
                    ByVal annioNoFactura As Integer,  _
                    ByVal tipoNoFactura As String,  _
                    ByVal montoIsr As Double,  _
                    ByVal idMovIsr As String,  _
                    ByVal observacionIsr As String,  _
                    ByVal saldoAnteriorIsr As Double,  _
                    ByVal saldoDispIsr As Double,  _
                    ByVal saldoIsr As Double,  _
                    ByVal numIsr As Integer,  _
                    ByVal cooLibretaIsr As Integer,  _
                    ByVal idLibretaIsr As Integer,  _
                    ByVal saldoDisp As Double,  _
                    ByVal capitaliza As Boolean,  _
                    ByVal dui As String) As Integer
            Dim results() As Object = Me.Invoke("capitalzarDividendosNoCobrados", New Object() {codTipoAhorro, noCuenta, codTransaccion, nolibreta, fecha, tipoPago, saldoAnterior, monto, saldo, tasaInteres, codTipo, noCaja, codCajero, pagoLibreta, observacion, idmovimiento, annio, tipo, num, posteado, idBanco, origen, hora, noDpf, corr_Libreta, idLibreta, noFactura, annioNoFactura, tipoNoFactura, montoIsr, idMovIsr, observacionIsr, saldoAnteriorIsr, saldoDispIsr, saldoIsr, numIsr, cooLibretaIsr, idLibretaIsr, saldoDisp, capitaliza, dui})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegincapitalzarDividendosNoCobrados( _
                    ByVal codTipoAhorro As String,  _
                    ByVal noCuenta As String,  _
                    ByVal codTransaccion As String,  _
                    ByVal nolibreta As String,  _
                    ByVal fecha As Date,  _
                    ByVal tipoPago As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldo As Double,  _
                    ByVal tasaInteres As Double,  _
                    ByVal codTipo As String,  _
                    ByVal noCaja As Integer,  _
                    ByVal codCajero As Integer,  _
                    ByVal pagoLibreta As String,  _
                    ByVal observacion As String,  _
                    ByVal idmovimiento As String,  _
                    ByVal annio As Integer,  _
                    ByVal tipo As String,  _
                    ByVal num As Integer,  _
                    ByVal posteado As String,  _
                    ByVal idBanco As Integer,  _
                    ByVal origen As String,  _
                    ByVal hora As String,  _
                    ByVal noDpf As String,  _
                    ByVal corr_Libreta As Integer,  _
                    ByVal idLibreta As Integer,  _
                    ByVal noFactura As String,  _
                    ByVal annioNoFactura As Integer,  _
                    ByVal tipoNoFactura As String,  _
                    ByVal montoIsr As Double,  _
                    ByVal idMovIsr As String,  _
                    ByVal observacionIsr As String,  _
                    ByVal saldoAnteriorIsr As Double,  _
                    ByVal saldoDispIsr As Double,  _
                    ByVal saldoIsr As Double,  _
                    ByVal numIsr As Integer,  _
                    ByVal cooLibretaIsr As Integer,  _
                    ByVal idLibretaIsr As Integer,  _
                    ByVal saldoDisp As Double,  _
                    ByVal capitaliza As Boolean,  _
                    ByVal dui As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("capitalzarDividendosNoCobrados", New Object() {codTipoAhorro, noCuenta, codTransaccion, nolibreta, fecha, tipoPago, saldoAnterior, monto, saldo, tasaInteres, codTipo, noCaja, codCajero, pagoLibreta, observacion, idmovimiento, annio, tipo, num, posteado, idBanco, origen, hora, noDpf, corr_Libreta, idLibreta, noFactura, annioNoFactura, tipoNoFactura, montoIsr, idMovIsr, observacionIsr, saldoAnteriorIsr, saldoDispIsr, saldoIsr, numIsr, cooLibretaIsr, idLibretaIsr, saldoDisp, capitaliza, dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndcapitalzarDividendosNoCobrados(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub capitalzarDividendosNoCobradosAsync( _
                    ByVal codTipoAhorro As String,  _
                    ByVal noCuenta As String,  _
                    ByVal codTransaccion As String,  _
                    ByVal nolibreta As String,  _
                    ByVal fecha As Date,  _
                    ByVal tipoPago As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldo As Double,  _
                    ByVal tasaInteres As Double,  _
                    ByVal codTipo As String,  _
                    ByVal noCaja As Integer,  _
                    ByVal codCajero As Integer,  _
                    ByVal pagoLibreta As String,  _
                    ByVal observacion As String,  _
                    ByVal idmovimiento As String,  _
                    ByVal annio As Integer,  _
                    ByVal tipo As String,  _
                    ByVal num As Integer,  _
                    ByVal posteado As String,  _
                    ByVal idBanco As Integer,  _
                    ByVal origen As String,  _
                    ByVal hora As String,  _
                    ByVal noDpf As String,  _
                    ByVal corr_Libreta As Integer,  _
                    ByVal idLibreta As Integer,  _
                    ByVal noFactura As String,  _
                    ByVal annioNoFactura As Integer,  _
                    ByVal tipoNoFactura As String,  _
                    ByVal montoIsr As Double,  _
                    ByVal idMovIsr As String,  _
                    ByVal observacionIsr As String,  _
                    ByVal saldoAnteriorIsr As Double,  _
                    ByVal saldoDispIsr As Double,  _
                    ByVal saldoIsr As Double,  _
                    ByVal numIsr As Integer,  _
                    ByVal cooLibretaIsr As Integer,  _
                    ByVal idLibretaIsr As Integer,  _
                    ByVal saldoDisp As Double,  _
                    ByVal capitaliza As Boolean,  _
                    ByVal dui As String)
            Me.capitalzarDividendosNoCobradosAsync(codTipoAhorro, noCuenta, codTransaccion, nolibreta, fecha, tipoPago, saldoAnterior, monto, saldo, tasaInteres, codTipo, noCaja, codCajero, pagoLibreta, observacion, idmovimiento, annio, tipo, num, posteado, idBanco, origen, hora, noDpf, corr_Libreta, idLibreta, noFactura, annioNoFactura, tipoNoFactura, montoIsr, idMovIsr, observacionIsr, saldoAnteriorIsr, saldoDispIsr, saldoIsr, numIsr, cooLibretaIsr, idLibretaIsr, saldoDisp, capitaliza, dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub capitalzarDividendosNoCobradosAsync( _
                    ByVal codTipoAhorro As String,  _
                    ByVal noCuenta As String,  _
                    ByVal codTransaccion As String,  _
                    ByVal nolibreta As String,  _
                    ByVal fecha As Date,  _
                    ByVal tipoPago As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldo As Double,  _
                    ByVal tasaInteres As Double,  _
                    ByVal codTipo As String,  _
                    ByVal noCaja As Integer,  _
                    ByVal codCajero As Integer,  _
                    ByVal pagoLibreta As String,  _
                    ByVal observacion As String,  _
                    ByVal idmovimiento As String,  _
                    ByVal annio As Integer,  _
                    ByVal tipo As String,  _
                    ByVal num As Integer,  _
                    ByVal posteado As String,  _
                    ByVal idBanco As Integer,  _
                    ByVal origen As String,  _
                    ByVal hora As String,  _
                    ByVal noDpf As String,  _
                    ByVal corr_Libreta As Integer,  _
                    ByVal idLibreta As Integer,  _
                    ByVal noFactura As String,  _
                    ByVal annioNoFactura As Integer,  _
                    ByVal tipoNoFactura As String,  _
                    ByVal montoIsr As Double,  _
                    ByVal idMovIsr As String,  _
                    ByVal observacionIsr As String,  _
                    ByVal saldoAnteriorIsr As Double,  _
                    ByVal saldoDispIsr As Double,  _
                    ByVal saldoIsr As Double,  _
                    ByVal numIsr As Integer,  _
                    ByVal cooLibretaIsr As Integer,  _
                    ByVal idLibretaIsr As Integer,  _
                    ByVal saldoDisp As Double,  _
                    ByVal capitaliza As Boolean,  _
                    ByVal dui As String,  _
                    ByVal userState As Object)
            If (Me.capitalzarDividendosNoCobradosOperationCompleted Is Nothing) Then
                Me.capitalzarDividendosNoCobradosOperationCompleted = AddressOf Me.OncapitalzarDividendosNoCobradosOperationCompleted
            End If
            Me.InvokeAsync("capitalzarDividendosNoCobrados", New Object() {codTipoAhorro, noCuenta, codTransaccion, nolibreta, fecha, tipoPago, saldoAnterior, monto, saldo, tasaInteres, codTipo, noCaja, codCajero, pagoLibreta, observacion, idmovimiento, annio, tipo, num, posteado, idBanco, origen, hora, noDpf, corr_Libreta, idLibreta, noFactura, annioNoFactura, tipoNoFactura, montoIsr, idMovIsr, observacionIsr, saldoAnteriorIsr, saldoDispIsr, saldoIsr, numIsr, cooLibretaIsr, idLibretaIsr, saldoDisp, capitaliza, dui}, Me.capitalzarDividendosNoCobradosOperationCompleted, userState)
        End Sub
        
        Private Sub OncapitalzarDividendosNoCobradosOperationCompleted(ByVal arg As Object)
            If (Not (Me.capitalzarDividendosNoCobradosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent capitalzarDividendosNoCobradosCompleted(Me, New capitalzarDividendosNoCobradosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/consultarDividendosNoCobrados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarDividendosNoCobrados(ByVal opcion As Integer, ByVal anio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarDividendosNoCobrados", New Object() {opcion, anio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarDividendosNoCobrados(ByVal opcion As Integer, ByVal anio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarDividendosNoCobrados", New Object() {opcion, anio}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarDividendosNoCobrados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarDividendosNoCobradosAsync(ByVal opcion As Integer, ByVal anio As Integer)
            Me.consultarDividendosNoCobradosAsync(opcion, anio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarDividendosNoCobradosAsync(ByVal opcion As Integer, ByVal anio As Integer, ByVal userState As Object)
            If (Me.consultarDividendosNoCobradosOperationCompleted Is Nothing) Then
                Me.consultarDividendosNoCobradosOperationCompleted = AddressOf Me.OnconsultarDividendosNoCobradosOperationCompleted
            End If
            Me.InvokeAsync("consultarDividendosNoCobrados", New Object() {opcion, anio}, Me.consultarDividendosNoCobradosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarDividendosNoCobradosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarDividendosNoCobradosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarDividendosNoCobradosCompleted(Me, New consultarDividendosNoCobradosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Consultar_InversionistasMora", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_InversionistasMora(ByVal Fecha As Date, ByVal Opcion As Integer, ByVal Dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_InversionistasMora", New Object() {Fecha, Opcion, Dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_InversionistasMora(ByVal Fecha As Date, ByVal Opcion As Integer, ByVal Dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_InversionistasMora", New Object() {Fecha, Opcion, Dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_InversionistasMora(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_InversionistasMoraAsync(ByVal Fecha As Date, ByVal Opcion As Integer, ByVal Dui As String)
            Me.Consultar_InversionistasMoraAsync(Fecha, Opcion, Dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_InversionistasMoraAsync(ByVal Fecha As Date, ByVal Opcion As Integer, ByVal Dui As String, ByVal userState As Object)
            If (Me.Consultar_InversionistasMoraOperationCompleted Is Nothing) Then
                Me.Consultar_InversionistasMoraOperationCompleted = AddressOf Me.OnConsultar_InversionistasMoraOperationCompleted
            End If
            Me.InvokeAsync("Consultar_InversionistasMora", New Object() {Fecha, Opcion, Dui}, Me.Consultar_InversionistasMoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_InversionistasMoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_InversionistasMoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_InversionistasMoraCompleted(Me, New Consultar_InversionistasMoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Consultar_CatAsociados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_CatAsociados(ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_CatAsociados", New Object() {Opcion, FechaInicio, FechaFin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_CatAsociados(ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_CatAsociados", New Object() {Opcion, FechaInicio, FechaFin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_CatAsociados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_CatAsociadosAsync(ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date)
            Me.Consultar_CatAsociadosAsync(Opcion, FechaInicio, FechaFin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_CatAsociadosAsync(ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal userState As Object)
            If (Me.Consultar_CatAsociadosOperationCompleted Is Nothing) Then
                Me.Consultar_CatAsociadosOperationCompleted = AddressOf Me.OnConsultar_CatAsociadosOperationCompleted
            End If
            Me.InvokeAsync("Consultar_CatAsociados", New Object() {Opcion, FechaInicio, FechaFin}, Me.Consultar_CatAsociadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_CatAsociadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_CatAsociadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_CatAsociadosCompleted(Me, New Consultar_CatAsociadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ConsultarAsociados_AhDividendos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarAsociados_AhDividendos(ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarAsociados_AhDividendos", New Object() {Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarAsociados_AhDividendos(ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarAsociados_AhDividendos", New Object() {Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarAsociados_AhDividendos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAsociados_AhDividendosAsync(ByVal Opcion As Integer)
            Me.ConsultarAsociados_AhDividendosAsync(Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAsociados_AhDividendosAsync(ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.ConsultarAsociados_AhDividendosOperationCompleted Is Nothing) Then
                Me.ConsultarAsociados_AhDividendosOperationCompleted = AddressOf Me.OnConsultarAsociados_AhDividendosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarAsociados_AhDividendos", New Object() {Opcion}, Me.ConsultarAsociados_AhDividendosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarAsociados_AhDividendosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarAsociados_AhDividendosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarAsociados_AhDividendosCompleted(Me, New ConsultarAsociados_AhDividendosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Consultar_EjecutivosMercadeo", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_EjecutivosMercadeo(ByVal Opcion As Integer, ByVal CodSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_EjecutivosMercadeo", New Object() {Opcion, CodSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_EjecutivosMercadeo(ByVal Opcion As Integer, ByVal CodSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_EjecutivosMercadeo", New Object() {Opcion, CodSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_EjecutivosMercadeo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_EjecutivosMercadeoAsync(ByVal Opcion As Integer, ByVal CodSucursal As String)
            Me.Consultar_EjecutivosMercadeoAsync(Opcion, CodSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_EjecutivosMercadeoAsync(ByVal Opcion As Integer, ByVal CodSucursal As String, ByVal userState As Object)
            If (Me.Consultar_EjecutivosMercadeoOperationCompleted Is Nothing) Then
                Me.Consultar_EjecutivosMercadeoOperationCompleted = AddressOf Me.OnConsultar_EjecutivosMercadeoOperationCompleted
            End If
            Me.InvokeAsync("Consultar_EjecutivosMercadeo", New Object() {Opcion, CodSucursal}, Me.Consultar_EjecutivosMercadeoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_EjecutivosMercadeoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_EjecutivosMercadeoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_EjecutivosMercadeoCompleted(Me, New Consultar_EjecutivosMercadeoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/ActivacionCuentasAportacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActivacionCuentasAportacion(ByVal pNoActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ActivacionCuentasAportacion", New Object() {pNoActa, pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginActivacionCuentasAportacion(ByVal pNoActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActivacionCuentasAportacion", New Object() {pNoActa, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActivacionCuentasAportacion(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActivacionCuentasAportacionAsync(ByVal pNoActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ActivacionCuentasAportacionAsync(pNoActa, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivacionCuentasAportacionAsync(ByVal pNoActa As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ActivacionCuentasAportacionOperationCompleted Is Nothing) Then
                Me.ActivacionCuentasAportacionOperationCompleted = AddressOf Me.OnActivacionCuentasAportacionOperationCompleted
            End If
            Me.InvokeAsync("ActivacionCuentasAportacion", New Object() {pNoActa, pUs, pPa, pSucursal}, Me.ActivacionCuentasAportacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivacionCuentasAportacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivacionCuentasAportacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivacionCuentasAportacionCompleted(Me, New ActivacionCuentasAportacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/AlmacenaEstructuraSeleccion", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AlmacenaEstructuraSeleccion(ByVal pVal As Boolean, ByVal pNoSocio As String, ByVal pDui As String, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("AlmacenaEstructuraSeleccion", New Object() {pVal, pNoSocio, pDui, ds, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginAlmacenaEstructuraSeleccion(ByVal pVal As Boolean, ByVal pNoSocio As String, ByVal pDui As String, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AlmacenaEstructuraSeleccion", New Object() {pVal, pNoSocio, pDui, ds, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAlmacenaEstructuraSeleccion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AlmacenaEstructuraSeleccionAsync(ByVal pVal As Boolean, ByVal pNoSocio As String, ByVal pDui As String, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AlmacenaEstructuraSeleccionAsync(pVal, pNoSocio, pDui, ds, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlmacenaEstructuraSeleccionAsync(ByVal pVal As Boolean, ByVal pNoSocio As String, ByVal pDui As String, ByVal ds As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AlmacenaEstructuraSeleccionOperationCompleted Is Nothing) Then
                Me.AlmacenaEstructuraSeleccionOperationCompleted = AddressOf Me.OnAlmacenaEstructuraSeleccionOperationCompleted
            End If
            Me.InvokeAsync("AlmacenaEstructuraSeleccion", New Object() {pVal, pNoSocio, pDui, ds, pUsuario, pPassword, pSucursal}, Me.AlmacenaEstructuraSeleccionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlmacenaEstructuraSeleccionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlmacenaEstructuraSeleccionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlmacenaEstructuraSeleccionCompleted(Me, New AlmacenaEstructuraSeleccionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/AlmacenarMatrizDividendos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AlmacenarMatrizDividendos(ByVal pAnnio As Integer, ByVal pFactorAportacion As Double, ByVal pFactorInteres As Double, ByVal pExcedente As Double, ByVal pCapitaliza As Double, ByVal pDistribuir As Double, ByVal pNoCuotasMora As Double, ByVal pDesde As Date, ByVal pHasta As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("AlmacenarMatrizDividendos", New Object() {pAnnio, pFactorAportacion, pFactorInteres, pExcedente, pCapitaliza, pDistribuir, pNoCuotasMora, pDesde, pHasta, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAlmacenarMatrizDividendos(ByVal pAnnio As Integer, ByVal pFactorAportacion As Double, ByVal pFactorInteres As Double, ByVal pExcedente As Double, ByVal pCapitaliza As Double, ByVal pDistribuir As Double, ByVal pNoCuotasMora As Double, ByVal pDesde As Date, ByVal pHasta As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AlmacenarMatrizDividendos", New Object() {pAnnio, pFactorAportacion, pFactorInteres, pExcedente, pCapitaliza, pDistribuir, pNoCuotasMora, pDesde, pHasta, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAlmacenarMatrizDividendos(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AlmacenarMatrizDividendosAsync(ByVal pAnnio As Integer, ByVal pFactorAportacion As Double, ByVal pFactorInteres As Double, ByVal pExcedente As Double, ByVal pCapitaliza As Double, ByVal pDistribuir As Double, ByVal pNoCuotasMora As Double, ByVal pDesde As Date, ByVal pHasta As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AlmacenarMatrizDividendosAsync(pAnnio, pFactorAportacion, pFactorInteres, pExcedente, pCapitaliza, pDistribuir, pNoCuotasMora, pDesde, pHasta, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlmacenarMatrizDividendosAsync(ByVal pAnnio As Integer, ByVal pFactorAportacion As Double, ByVal pFactorInteres As Double, ByVal pExcedente As Double, ByVal pCapitaliza As Double, ByVal pDistribuir As Double, ByVal pNoCuotasMora As Double, ByVal pDesde As Date, ByVal pHasta As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AlmacenarMatrizDividendosOperationCompleted Is Nothing) Then
                Me.AlmacenarMatrizDividendosOperationCompleted = AddressOf Me.OnAlmacenarMatrizDividendosOperationCompleted
            End If
            Me.InvokeAsync("AlmacenarMatrizDividendos", New Object() {pAnnio, pFactorAportacion, pFactorInteres, pExcedente, pCapitaliza, pDistribuir, pNoCuotasMora, pDesde, pHasta, pUsuario, pPassword, pSucursal}, Me.AlmacenarMatrizDividendosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlmacenarMatrizDividendosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlmacenarMatrizDividendosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlmacenarMatrizDividendosCompleted(Me, New AlmacenarMatrizDividendosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Aplicacion_Dividendos_Cuentas", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Aplicacion_Dividendos_Cuentas(ByVal vTipoCuenta As Integer, ByVal pAnnio As Integer, ByVal pNoCuotasMora As Double, ByVal pCodTipoAhorro As String, ByVal pIndividual As Boolean, ByVal pDuiAsoc As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("Aplicacion_Dividendos_Cuentas", New Object() {vTipoCuenta, pAnnio, pNoCuotasMora, pCodTipoAhorro, pIndividual, pDuiAsoc, pNoCuenta, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAplicacion_Dividendos_Cuentas(ByVal vTipoCuenta As Integer, ByVal pAnnio As Integer, ByVal pNoCuotasMora As Double, ByVal pCodTipoAhorro As String, ByVal pIndividual As Boolean, ByVal pDuiAsoc As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Aplicacion_Dividendos_Cuentas", New Object() {vTipoCuenta, pAnnio, pNoCuotasMora, pCodTipoAhorro, pIndividual, pDuiAsoc, pNoCuenta, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAplicacion_Dividendos_Cuentas(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Aplicacion_Dividendos_CuentasAsync(ByVal vTipoCuenta As Integer, ByVal pAnnio As Integer, ByVal pNoCuotasMora As Double, ByVal pCodTipoAhorro As String, ByVal pIndividual As Boolean, ByVal pDuiAsoc As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Aplicacion_Dividendos_CuentasAsync(vTipoCuenta, pAnnio, pNoCuotasMora, pCodTipoAhorro, pIndividual, pDuiAsoc, pNoCuenta, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Aplicacion_Dividendos_CuentasAsync(ByVal vTipoCuenta As Integer, ByVal pAnnio As Integer, ByVal pNoCuotasMora As Double, ByVal pCodTipoAhorro As String, ByVal pIndividual As Boolean, ByVal pDuiAsoc As String, ByVal pNoCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Aplicacion_Dividendos_CuentasOperationCompleted Is Nothing) Then
                Me.Aplicacion_Dividendos_CuentasOperationCompleted = AddressOf Me.OnAplicacion_Dividendos_CuentasOperationCompleted
            End If
            Me.InvokeAsync("Aplicacion_Dividendos_Cuentas", New Object() {vTipoCuenta, pAnnio, pNoCuotasMora, pCodTipoAhorro, pIndividual, pDuiAsoc, pNoCuenta, pUsuario, pPassword, pSucursal}, Me.Aplicacion_Dividendos_CuentasOperationCompleted, userState)
        End Sub
        
        Private Sub OnAplicacion_Dividendos_CuentasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Aplicacion_Dividendos_CuentasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Aplicacion_Dividendos_CuentasCompleted(Me, New Aplicacion_Dividendos_CuentasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/Aplicacion_Dividendos_NoCobrados", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Aplicacion_Dividendos_NoCobrados(ByVal pAnnio As Integer, ByVal dVr As System.Data.DataSet, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("Aplicacion_Dividendos_NoCobrados", New Object() {pAnnio, dVr, pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAplicacion_Dividendos_NoCobrados(ByVal pAnnio As Integer, ByVal dVr As System.Data.DataSet, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Aplicacion_Dividendos_NoCobrados", New Object() {pAnnio, dVr, pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAplicacion_Dividendos_NoCobrados(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Aplicacion_Dividendos_NoCobradosAsync(ByVal pAnnio As Integer, ByVal dVr As System.Data.DataSet, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Aplicacion_Dividendos_NoCobradosAsync(pAnnio, dVr, pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Aplicacion_Dividendos_NoCobradosAsync(ByVal pAnnio As Integer, ByVal dVr As System.Data.DataSet, ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Aplicacion_Dividendos_NoCobradosOperationCompleted Is Nothing) Then
                Me.Aplicacion_Dividendos_NoCobradosOperationCompleted = AddressOf Me.OnAplicacion_Dividendos_NoCobradosOperationCompleted
            End If
            Me.InvokeAsync("Aplicacion_Dividendos_NoCobrados", New Object() {pAnnio, dVr, pFecha, pUsuario, pPassword, pSucursal}, Me.Aplicacion_Dividendos_NoCobradosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAplicacion_Dividendos_NoCobradosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Aplicacion_Dividendos_NoCobradosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Aplicacion_Dividendos_NoCobradosCompleted(Me, New Aplicacion_Dividendos_NoCobradosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/AutorizaDatos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutorizaDatos(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String) As Integer
            Dim results() As Object = Me.Invoke("AutorizaDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginAutorizaDatos(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AutorizaDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAutorizaDatos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutorizaDatosAsync(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String)
            Me.AutorizaDatosAsync(pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutorizaDatosAsync(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String, ByVal userState As Object)
            If (Me.AutorizaDatosOperationCompleted Is Nothing) Then
                Me.AutorizaDatosOperationCompleted = AddressOf Me.OnAutorizaDatosOperationCompleted
            End If
            Me.InvokeAsync("AutorizaDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5}, Me.AutorizaDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutorizaDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutorizaDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutorizaDatosCompleted(Me, New AutorizaDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibAsoc/CalculaComisionesEjecutivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibAsoc", ResponseNamespace:="http://tempuri.org/wsSif/wsLibAsoc", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CalculaComisionesEjecutivos(ByVal pF1 As Date, ByVal pF2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CalculaComisionesEjecutivos", New Object() {pF1, pF2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCalculaComisionesEjecutivos(ByVal pF1 As Date, ByVal pF2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CalculaComisionesEjecutivos", New Object() {pF1, pF2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCalculaComisionesEjecutivos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CalculaComisionesEjecutivosAsync(ByVal pF1 As Date, ByVal pF2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CalculaComisionesEjecutivosAsync(pF1, pF2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CalculaComisionesEjecutivosAsync(ByVal pF1 As Date, ByVal pF2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CalculaComisionesEjecutivosOperationCompleted Is Nothing) Then
                Me.CalculaComisionesEjecutivosOperationCompleted = AddressOf Me.OnCalculaComisionesEjecutivosOperationCompleted
            End If
            Me.InvokeAsync("CalculaComisionesEjecutivos", New Object() {pF1, pF2, pUsuario, pPassword, pSucursal}, Me.CalculaComisionesEjecutivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalculaComisionesEjecutivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CalculaComisionesEjecutivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CalculaComisionesEjecutivosCompleted(Me, New CalculaComisionesEjecutivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAsoc")>  _
    Public Enum TipoInhabilitacion
        
        '''<remarks/>
        Ambas
        
        '''<remarks/>
        Aportacion
        
        '''<remarks/>
        Prestamos
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAsoc")>  _
    Public Enum tipoCatalogo
        
        '''<remarks/>
        nulo
        
        '''<remarks/>
        estadoIngreso
        
        '''<remarks/>
        estadoCivil
        
        '''<remarks/>
        tipoPEP
        
        '''<remarks/>
        gradoParentesco
        
        '''<remarks/>
        nivelEducativo
        
        '''<remarks/>
        estadoVivienda
        
        '''<remarks/>
        estadoAsociado
        
        '''<remarks/>
        estadoLaboral
        
        '''<remarks/>
        tipoDocumentoDeclaracionJurada
        
        '''<remarks/>
        plazoDocumentoDeclaracionJurada
        
        '''<remarks/>
        estadoListaNegraInterna
        
        '''<remarks/>
        tipoContribuyente
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibAsoc")>  _
    Public Enum tipoConsultaCatalogos
        
        '''<remarks/>
        nulo
        
        '''<remarks/>
        todos
        
        '''<remarks/>
        detalleCatalogo
        
        '''<remarks/>
        itemCatalogo
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepAsociadosFallecidosCompletedEventHandler(ByVal sender As Object, ByVal e As RepAsociadosFallecidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepAsociadosFallecidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepAsociadosInhabilitadosCompletedEventHandler(ByVal sender As Object, ByVal e As RepAsociadosInhabilitadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepAsociadosInhabilitadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepConsolidadoResultadosMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As RepConsolidadoResultadosMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepConsolidadoResultadosMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepGerencial_AcumuladoMetasCompletedEventHandler(ByVal sender As Object, ByVal e As RepGerencial_AcumuladoMetasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepGerencial_AcumuladoMetasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepGerencial_EvaluacionxAnioCompletedEventHandler(ByVal sender As Object, ByVal e As RepGerencial_EvaluacionxAnioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepGerencial_EvaluacionxAnioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepGerencial_ResultadosHistoricosCompletedEventHandler(ByVal sender As Object, ByVal e As RepGerencial_ResultadosHistoricosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepGerencial_ResultadosHistoricosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepInformeMetasMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As RepInformeMetasMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepInformeMetasMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepInformeMetasxProductoCompletedEventHandler(ByVal sender As Object, ByVal e As RepInformeMetasxProductoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepInformeMetasxProductoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_Mora_AsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_Mora_AsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_Mora_AsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_RetiroAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_RetiroAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_RetiroAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_RetiroAsociadosGrCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_RetiroAsociadosGrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_RetiroAsociadosGrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_SaldosAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_SaldosAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_SaldosAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteCuentasAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteCuentasAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteCuentasAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteDividendosAhCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteDividendosAhCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteDividendosAhCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteDividendosApCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteDividendosApCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteDividendosApCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteDividendosCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteDividendosCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteDividendosCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteDividendosPrestCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteDividendosPrestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteDividendosPrestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteDividendosRetiradosCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteDividendosRetiradosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteDividendosRetiradosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteRenunciaAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteRenunciaAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteRenunciaAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepReingresosAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As RepReingresosAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepReingresosAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepResultadosComparadosCompletedEventHandler(ByVal sender As Object, ByVal e As RepResultadosComparadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepResultadosComparadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RetiroAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As RetiroAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetiroAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaAsociados_ExclusionCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaAsociados_ExclusionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaAsociados_ExclusionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaAsociados_MoraInhabilitacionCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaAsociados_MoraInhabilitacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaAsociados_MoraInhabilitacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Verificacion_DividendosNoCobradosCompletedEventHandler(ByVal sender As Object, ByVal e As Verificacion_DividendosNoCobradosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Verificacion_DividendosNoCobradosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificaNitCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaNitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaNitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarProcesoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarProcesoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarProcesoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarDetalleComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDetalleComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDetalleComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarDetDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDetDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDetDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarDividendosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDividendosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDividendosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarEjecutivosMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarEjecutivosMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarEjecutivosMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarEstadoIngresoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarEstadoIngresoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarEstadoIngresoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarExclusionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarExclusionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarExclusionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarFallecidosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarFallecidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarFallecidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarFirmasCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarFirmasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarFirmasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarFormaPagoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarFormaPagoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarFormaPagoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarInhabilitadosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarInhabilitadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarInhabilitadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarLibroRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarLibroRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarLibroRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarMunicipiosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarMunicipiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarMunicipiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarNacionalidadesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarNacionalidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarNacionalidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarParentescosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarParentescosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarParentescosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPlanificacionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPlanificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPlanificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarProfesionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarProfesionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarProfesionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarReferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarReferenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarReferenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarRetirosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRetirosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRetirosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarSolicitudRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarSolicitudRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarSolicitudRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarSucursalesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarSucursalesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarSucursalesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarTipoCuotaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarTipoCuotaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarTipoCuotaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub LiquidacionAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As LiquidacionAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LiquidacionAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarAsociadoxFiltroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAsociadoxFiltroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAsociadoxFiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarAspectosCooperativosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAspectosCooperativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAspectosCooperativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCobradoresCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCobradoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCobradoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCooperativasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCooperativasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCooperativasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarCuerposDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCuerposDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCuerposDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarDetalleComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDetalleComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDetalleComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarDetDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDetDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDetDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarDividendosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDividendosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDividendosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarEjecutivosMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarEjecutivosMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarEjecutivosMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarEstadoIngresoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarEstadoIngresoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarEstadoIngresoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarExclusionCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarExclusionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarExclusionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarFallecidosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarFallecidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarFallecidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarFirmasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarFirmasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarFirmasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarFormaPagoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarFormaPagoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarFormaPagoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarInhabilitadosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarInhabilitadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarInhabilitadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarLibroRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarLibroRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarLibroRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarMunicipiosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarMunicipiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarMunicipiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarNacionalidadesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarNacionalidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarNacionalidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarParentescosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarParentescosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarParentescosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPlanificacionCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPlanificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPlanificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarProfesionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarProfesionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarProfesionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarReferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarReferenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarReferenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarRetirosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRetirosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRetirosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarSolicitudRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarSolicitudRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarSolicitudRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarSucursalesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarSucursalesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarSucursalesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarTipoCuotaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarTipoCuotaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarTipoCuotaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub NuevosAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As NuevosAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NuevosAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoCobradoresCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoCobradoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoCobradoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoCooperativasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoCooperativasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoCooperativasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoExclusionesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoExclusionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoExclusionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoFallecidosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoFallecidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoFallecidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoInhabilitadosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoInhabilitadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoInhabilitadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoLibroRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoLibroRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoLibroRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoNacionalidadesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoNacionalidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoNacionalidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoParentescosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoParentescosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoParentescosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoProfesionesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoProfesionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoProfesionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoReferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoReferenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoReferenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoRetirosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoRetirosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoRetirosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoSolicitudRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoSolicitudRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoSolicitudRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerEstructuraSeleccionCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerEstructuraSeleccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerEstructuraSeleccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ProcesoDividendoCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesoDividendoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesoDividendoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ProcesoExclusionAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesoExclusionAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesoExclusionAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ProcesoFallecidosCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesoFallecidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesoFallecidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ProcesoInhabilitadosAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesoInhabilitadosAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesoInhabilitadosAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ProcesoRehabilitadosAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesoRehabilitadosAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesoRehabilitadosAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Recibo_DividendosCompletedEventHandler(ByVal sender As Object, ByVal e As Recibo_DividendosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Recibo_DividendosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RehabilitacionAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As RehabilitacionAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RehabilitacionAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepAsociadosCtasCompletedEventHandler(ByVal sender As Object, ByVal e As RepAsociadosCtasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepAsociadosCtasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RepAsociadosExcluidosCompletedEventHandler(ByVal sender As Object, ByVal e As RepAsociadosExcluidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepAsociadosExcluidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CargaPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As CargaPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAspectosCooperativosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAspectosCooperativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAspectosCooperativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAspectosCooperativosxNombreCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAspectosCooperativosxNombreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAspectosCooperativosxNombreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCobradoresCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCobradoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCobradoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCobradoresxNombreCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCobradoresxNombreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCobradoresxNombreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCooperativasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCooperativasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCooperativasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarCuerposDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCuerposDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCuerposDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDetalleComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDetalleComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDetalleComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDetDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDetDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDetDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDividendosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDividendosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDividendosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEjecutivosMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEjecutivosMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEjecutivosMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEjecutivosMercadeoxFiltroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEjecutivosMercadeoxFiltroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEjecutivosMercadeoxFiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEjecutivosMercadeoxNombreCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEjecutivosMercadeoxNombreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEjecutivosMercadeoxNombreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEstadoIngresoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEstadoIngresoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEstadoIngresoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarExclusionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarExclusionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarExclusionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarFallecidosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarFallecidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarFallecidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarFirmasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarFirmasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarFirmasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarFormaPagoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarFormaPagoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarFormaPagoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarInhabilitadosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarInhabilitadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarInhabilitadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarLibroRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarLibroRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarLibroRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarLibroRegistroxAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarLibroRegistroxAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarLibroRegistroxAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarMunicipiosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarMunicipiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarMunicipiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarNacionalidadesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarNacionalidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarNacionalidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarObservacionesAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarObservacionesAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarObservacionesAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarParentescosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarParentescosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarParentescosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPlanificacionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPlanificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPlanificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarProfesionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarProfesionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarProfesionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarReferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarReferenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarReferenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarRetirosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRetirosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRetirosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarSolicitudRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarSolicitudRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarSolicitudRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarSucursalesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarSucursalesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarSucursalesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarTipoCuotaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipoCuotaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipoCuotaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarAspectosCooperativosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarAspectosCooperativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarAspectosCooperativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCobradoresCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCobradoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCobradoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCooperativasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCooperativasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCooperativasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarCuerposDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCuerposDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCuerposDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarDetalleComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDetalleComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDetalleComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarDetDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDetDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDetDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarDividendosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDividendosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDividendosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarEjecutivosMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarEjecutivosMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarEjecutivosMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarEstadoIngresoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarEstadoIngresoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarEstadoIngresoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarExclusionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarExclusionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarExclusionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarFallecidosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarFallecidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarFallecidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarFirmasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarFirmasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarFirmasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarFormaPagoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarFormaPagoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarFormaPagoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarInhabilitadosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarInhabilitadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarInhabilitadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarLibroRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarLibroRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarLibroRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarMunicipiosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarMunicipiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarMunicipiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarNacionalidadesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarNacionalidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarNacionalidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarParametrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarParentescosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarParentescosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarParentescosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPlanificacionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPlanificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPlanificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarProfesionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarProfesionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarProfesionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarReferenciasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarReferenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarReferenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarRetirosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarRetirosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarRetirosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarSolicitudRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarSolicitudRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarSolicitudRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarSucursalesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarSucursalesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarSucursalesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarTipoCuotaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarTipoCuotaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarTipoCuotaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ExclusionAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ExclusionAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExclusionAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ExportarDatosAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ExportarDatosAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExportarDatosAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Generar_Movimiento_RetiroCompletedEventHandler(ByVal sender As Object, ByVal e As Generar_Movimiento_RetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Generar_Movimiento_RetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GenerarPartida_AspiranteAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As GenerarPartida_AspiranteAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerarPartida_AspiranteAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Impresion_DividendosNoCobradosCompletedEventHandler(ByVal sender As Object, ByVal e As Impresion_DividendosNoCobradosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Impresion_DividendosNoCobradosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Impresion_DividendosxPagarCompletedEventHandler(ByVal sender As Object, ByVal e As Impresion_DividendosxPagarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Impresion_DividendosxPagarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub IngresoAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As IngresoAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IngresoAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InhabilitacionAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As InhabilitacionAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InhabilitacionAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarAspectosCooperativosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarAspectosCooperativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarAspectosCooperativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarBeneficiariosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBeneficiariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBeneficiariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCobradoresCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCobradoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCobradoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarComisionesMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarComisionesMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarComisionesMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCooperativasCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCooperativasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCooperativasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarCuerposDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCuerposDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCuerposDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ingresarFormularioUIFCompletedEventHandler(ByVal sender As Object, ByVal e As ingresarFormularioUIFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ingresarFormularioUIFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AperturaCtaAportacionesTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As AperturaCtaAportacionesTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AperturaCtaAportacionesTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub cambioDuiCompletedEventHandler(ByVal sender As Object, ByVal e As cambioDuiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class cambioDuiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarListaNegraCompletedEventHandler(ByVal sender As Object, ByVal e As consultarListaNegraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarListaNegraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub cambiarEstadoListaNegraCompletedEventHandler(ByVal sender As Object, ByVal e As cambiarEstadoListaNegraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class cambiarEstadoListaNegraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificartarListaNegraCompletedEventHandler(ByVal sender As Object, ByVal e As modificartarListaNegraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificartarListaNegraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarListaNegraCompletedEventHandler(ByVal sender As Object, ByVal e As insertarListaNegraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarListaNegraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertar_CatAsociados_DomicilioCompletedEventHandler(ByVal sender As Object, ByVal e As insertar_CatAsociados_DomicilioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertar_CatAsociados_DomicilioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDomiciliosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDomiciliosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDomiciliosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocRelacionesAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocRelacionesAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocRelacionesAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarAsocRelacionesAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As insertarAsocRelacionesAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarAsocRelacionesAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarAsocRelacionesAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As modificarAsocRelacionesAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarAsocRelacionesAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub eliminarAsocRelacionesAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarAsocRelacionesAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarAsocRelacionesAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub validarCamposActividadEconomicaCompletedEventHandler(ByVal sender As Object, ByVal e As validarCamposActividadEconomicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarCamposActividadEconomicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub validarInfComplementariaCompletedEventHandler(ByVal sender As Object, ByVal e As validarInfComplementariaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarInfComplementariaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub validarPEPCompletedEventHandler(ByVal sender As Object, ByVal e As validarPEPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarPEPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub validarOtrosDatosCompletedEventHandler(ByVal sender As Object, ByVal e As validarOtrosDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarOtrosDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub validarCamposDeclaracionJuradaCompletedEventHandler(ByVal sender As Object, ByVal e As validarCamposDeclaracionJuradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarCamposDeclaracionJuradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub validarCamposObligatoriosCompletedEventHandler(ByVal sender As Object, ByVal e As validarCamposObligatoriosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarCamposObligatoriosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub rptSolicitudIngresoCompletedEventHandler(ByVal sender As Object, ByVal e As rptSolicitudIngresoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class rptSolicitudIngresoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub anularAsocDeclaracionJuradaDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As anularAsocDeclaracionJuradaDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class anularAsocDeclaracionJuradaDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarAsocDeclaracionJuradaDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As modificarAsocDeclaracionJuradaDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarAsocDeclaracionJuradaDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocDeclaracionJuradaDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocDeclaracionJuradaDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocDeclaracionJuradaDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarAsocDeclaracionJuradaDocumentosCompletedEventHandler(ByVal sender As Object, ByVal e As insertarAsocDeclaracionJuradaDocumentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarAsocDeclaracionJuradaDocumentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarAsocDeclaracionJuradaCompletedEventHandler(ByVal sender As Object, ByVal e As modificarAsocDeclaracionJuradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarAsocDeclaracionJuradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocDeclaracionJuradaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocDeclaracionJuradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocDeclaracionJuradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub generarIdDeclaracionJuradaCompletedEventHandler(ByVal sender As Object, ByVal e As generarIdDeclaracionJuradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class generarIdDeclaracionJuradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarAsocDeclaracionJuradaCompletedEventHandler(ByVal sender As Object, ByVal e As insertarAsocDeclaracionJuradaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarAsocDeclaracionJuradaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub generarIdPepCompletedEventHandler(ByVal sender As Object, ByVal e As generarIdPepCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class generarIdPepCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocPepCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocPepCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocPepCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertar_AsocPepCompletedEventHandler(ByVal sender As Object, ByVal e As insertar_AsocPepCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertar_AsocPepCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarAsocPepCompletedEventHandler(ByVal sender As Object, ByVal e As modificarAsocPepCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarAsocPepCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocPep_FamiliaresCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocPep_FamiliaresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocPep_FamiliaresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertar_AsocPep_FamiliaresCompletedEventHandler(ByVal sender As Object, ByVal e As insertar_AsocPep_FamiliaresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertar_AsocPep_FamiliaresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarAsocPep_FamiliaresCompletedEventHandler(ByVal sender As Object, ByVal e As modificarAsocPep_FamiliaresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarAsocPep_FamiliaresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub eliminarAsocPep_FamiliaresCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarAsocPep_FamiliaresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarAsocPep_FamiliaresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertar_AsocPep_SociedadesCompletedEventHandler(ByVal sender As Object, ByVal e As insertar_AsocPep_SociedadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertar_AsocPep_SociedadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocPep_SociedadesCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocPep_SociedadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocPep_SociedadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarAsocPep_SociedadesCompletedEventHandler(ByVal sender As Object, ByVal e As modificarAsocPep_SociedadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarAsocPep_SociedadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub eliminarAsocPep_SociedadesCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarAsocPep_SociedadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarAsocPep_SociedadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub inactivarAsocActividadEconomicaCompletedEventHandler(ByVal sender As Object, ByVal e As inactivarAsocActividadEconomicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class inactivarAsocActividadEconomicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocActividadEconomiaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocActividadEconomiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocActividadEconomiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarAsocActividadEconomicaCompletedEventHandler(ByVal sender As Object, ByVal e As insertarAsocActividadEconomicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarAsocActividadEconomicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub actulizarAsocActividadEconomicaCompletedEventHandler(ByVal sender As Object, ByVal e As actulizarAsocActividadEconomicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class actulizarAsocActividadEconomicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarCat_AsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As modificarCat_AsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarCat_AsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarCat_AsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCat_AsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCat_AsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertar_CatAsociados_OtrosDatosCompletedEventHandler(ByVal sender As Object, ByVal e As insertar_CatAsociados_OtrosDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertar_CatAsociados_OtrosDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertar_CatAsociados_InfComplementariaCompletedEventHandler(ByVal sender As Object, ByVal e As insertar_CatAsociados_InfComplementariaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertar_CatAsociados_InfComplementariaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarCat_AsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCat_AsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCat_AsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarCatPersonaJuridicaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCatPersonaJuridicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCatPersonaJuridicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertar_catPersonaJuridicaCompletedEventHandler(ByVal sender As Object, ByVal e As insertar_catPersonaJuridicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertar_catPersonaJuridicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub recuperarIdPersonaJuridicaCompletedEventHandler(ByVal sender As Object, ByVal e As recuperarIdPersonaJuridicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class recuperarIdPersonaJuridicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub modificarPersonaJuridicaCompletedEventHandler(ByVal sender As Object, ByVal e As modificarPersonaJuridicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarPersonaJuridicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarAsocPersonaJuridicaDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As consultarAsocPersonaJuridicaDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarAsocPersonaJuridicaDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub actualizarAsocPersonaJuridicaDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As actualizarAsocPersonaJuridicaDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class actualizarAsocPersonaJuridicaDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarAsocPersonaJuridicaDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As insertarAsocPersonaJuridicaDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarAsocPersonaJuridicaDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub eliminarAsocPersonaJuridicaDirectivosCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarAsocPersonaJuridicaDirectivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarAsocPersonaJuridicaDirectivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarCatActividadEconomicaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCatActividadEconomicaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCatActividadEconomicaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarCatalogosTiposCatalogoCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCatalogosTiposCatalogoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCatalogosTiposCatalogoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub actualizarCatalogosTiposCatalogoCompletedEventHandler(ByVal sender As Object, ByVal e As actualizarCatalogosTiposCatalogoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class actualizarCatalogosTiposCatalogoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarCatalogosTiposCatalogoCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCatalogosTiposCatalogoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCatalogosTiposCatalogoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarDbCatalogosCatalogosCompletedEventHandler(ByVal sender As Object, ByVal e As insertarDbCatalogosCatalogosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarDbCatalogosCatalogosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub actualizarDbCatalogosCatalogosCompletedEventHandler(ByVal sender As Object, ByVal e As actualizarDbCatalogosCatalogosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class actualizarDbCatalogosCatalogosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarDbCatalogosCatalogosCompletedEventHandler(ByVal sender As Object, ByVal e As consultarDbCatalogosCatalogosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarDbCatalogosCatalogosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarMercaRutasAsesoresCompletedEventHandler(ByVal sender As Object, ByVal e As consultarMercaRutasAsesoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarMercaRutasAsesoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarNuevaVistaMercaRutasCompletedEventHandler(ByVal sender As Object, ByVal e As insertarNuevaVistaMercaRutasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarNuevaVistaMercaRutasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarMercaRutasCompletedEventHandler(ByVal sender As Object, ByVal e As consultarMercaRutasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarMercaRutasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarMercaRutasCompletedEventHandler(ByVal sender As Object, ByVal e As insertarMercaRutasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarMercaRutasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub insertarRevisionMercaRutasCompletedEventHandler(ByVal sender As Object, ByVal e As insertarRevisionMercaRutasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarRevisionMercaRutasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub impuestosTransacccionesFinancierasCompletedEventHandler(ByVal sender As Object, ByVal e As impuestosTransacccionesFinancierasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class impuestosTransacccionesFinancierasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub capitalzarDividendosNoCobradosCompletedEventHandler(ByVal sender As Object, ByVal e As capitalzarDividendosNoCobradosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class capitalzarDividendosNoCobradosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub consultarDividendosNoCobradosCompletedEventHandler(ByVal sender As Object, ByVal e As consultarDividendosNoCobradosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarDividendosNoCobradosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_InversionistasMoraCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_InversionistasMoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_InversionistasMoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_CatAsociadosCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_CatAsociadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_CatAsociadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarAsociados_AhDividendosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarAsociados_AhDividendosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarAsociados_AhDividendosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_EjecutivosMercadeoCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_EjecutivosMercadeoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_EjecutivosMercadeoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ActivacionCuentasAportacionCompletedEventHandler(ByVal sender As Object, ByVal e As ActivacionCuentasAportacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActivacionCuentasAportacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AlmacenaEstructuraSeleccionCompletedEventHandler(ByVal sender As Object, ByVal e As AlmacenaEstructuraSeleccionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AlmacenaEstructuraSeleccionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AlmacenarMatrizDividendosCompletedEventHandler(ByVal sender As Object, ByVal e As AlmacenarMatrizDividendosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AlmacenarMatrizDividendosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Aplicacion_Dividendos_CuentasCompletedEventHandler(ByVal sender As Object, ByVal e As Aplicacion_Dividendos_CuentasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Aplicacion_Dividendos_CuentasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Aplicacion_Dividendos_NoCobradosCompletedEventHandler(ByVal sender As Object, ByVal e As Aplicacion_Dividendos_NoCobradosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Aplicacion_Dividendos_NoCobradosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AutorizaDatosCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizaDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutorizaDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CalculaComisionesEjecutivosCompletedEventHandler(ByVal sender As Object, ByVal e As CalculaComisionesEjecutivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CalculaComisionesEjecutivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
