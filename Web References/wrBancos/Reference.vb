'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrBancos
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibBancosSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibBancos")>  _
    Partial Public Class wsLibBancos
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private validarDenominacionesBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBcCatCtasContablesChequesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarBcCatCtasContablesChequesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarBcCatCtasContablesChequesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarBcCatCtasContablesChequesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private anularSolicitudBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarDetalleRemesaBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiosEfectivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private movimientosBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarBcMovimientosBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarBcMovimientosBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarBcMovimientosBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarBcMovimientosBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBcSucursales_TransaccionesBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBcSucursales_TransaccionesBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarBcSucursales_TransaccionesBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBcSucursales_TransaccionesBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivarSolicitudBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidarMontoMaxBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidarMontoMinBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBcSolicitudes_BovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarBcSolicitudes_BovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBcSolicitudes_BovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBcSolicitudes_BovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBcBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarBcBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBcBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBcBovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBcCatTransacciones_BovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarBcCatTransacciones_BovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBcCatTransacciones_BovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBCCatTransacciones_BovedaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_BcMovChequesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBCDet_SaldosBancosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarBCDet_SaldosBancosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBCDet_SaldosBancosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBCDet_SaldosBancosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBCSaldos_BancosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarBCSaldos_BancosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBCSaldos_BancosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBCSaldos_BancosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AnulaChequeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaChequeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaCuentaBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImprimeChequeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaChequeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaCuentaBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaChequeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaCuentaBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerChequeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCuentaBancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepChequesEmitidosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrasladaPartidasChequesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrBancos_wsLibBancos
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event validarDenominacionesBovedaCompleted As validarDenominacionesBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBcCatCtasContablesChequesCompleted As ConsultarBcCatCtasContablesChequesCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarBcCatCtasContablesChequesCompleted As insertarBcCatCtasContablesChequesCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarBcCatCtasContablesChequesCompleted As modificarBcCatCtasContablesChequesCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarBcCatCtasContablesChequesCompleted As eliminarBcCatCtasContablesChequesCompletedEventHandler
        
        '''<remarks/>
        Public Event anularSolicitudBovedaCompleted As anularSolicitudBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarDetalleRemesaBancoCompleted As insertarDetalleRemesaBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiosEfectivoCompleted As CambiosEfectivoCompletedEventHandler
        
        '''<remarks/>
        Public Event movimientosBovedaCompleted As movimientosBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarBcMovimientosBovedaCompleted As insertarBcMovimientosBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarBcMovimientosBovedaCompleted As modificarBcMovimientosBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarBcMovimientosBovedaCompleted As eliminarBcMovimientosBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarBcMovimientosBovedaCompleted As consultarBcMovimientosBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBcSucursales_TransaccionesBovedaCompleted As EliminarBcSucursales_TransaccionesBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBcSucursales_TransaccionesBovedaCompleted As ConsultarBcSucursales_TransaccionesBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarBcSucursales_TransaccionesBovedaCompleted As ActualizarBcSucursales_TransaccionesBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBcSucursales_TransaccionesBovedaCompleted As InsertarBcSucursales_TransaccionesBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivarSolicitudBovedaCompleted As ActivarSolicitudBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidarMontoMaxBovedaCompleted As ValidarMontoMaxBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidarMontoMinBovedaCompleted As ValidarMontoMinBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBcSolicitudes_BovedaCompleted As InsertarBcSolicitudes_BovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarBcSolicitudes_BovedaCompleted As ModificarBcSolicitudes_BovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBcSolicitudes_BovedaCompleted As EliminarBcSolicitudes_BovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBcSolicitudes_BovedaCompleted As ConsultarBcSolicitudes_BovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBcBovedaCompleted As InsertarBcBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarBcBovedaCompleted As ModificarBcBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBcBovedaCompleted As EliminarBcBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBcBovedaCompleted As ConsultarBcBovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBcCatTransacciones_BovedaCompleted As InsertarBcCatTransacciones_BovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarBcCatTransacciones_BovedaCompleted As ModificarBcCatTransacciones_BovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBcCatTransacciones_BovedaCompleted As EliminarBcCatTransacciones_BovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBCCatTransacciones_BovedaCompleted As ConsultarBCCatTransacciones_BovedaCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_BcMovChequesCompleted As Consultar_BcMovChequesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBCDet_SaldosBancosCompleted As EliminarBCDet_SaldosBancosCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarBCDet_SaldosBancosCompleted As ActualizarBCDet_SaldosBancosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBCDet_SaldosBancosCompleted As InsertarBCDet_SaldosBancosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBCDet_SaldosBancosCompleted As ConsultarBCDet_SaldosBancosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBCSaldos_BancosCompleted As EliminarBCSaldos_BancosCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarBCSaldos_BancosCompleted As ActualizarBCSaldos_BancosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBCSaldos_BancosCompleted As InsertarBCSaldos_BancosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBCSaldos_BancosCompleted As ConsultarBCSaldos_BancosCompletedEventHandler
        
        '''<remarks/>
        Public Event AnulaChequeCompleted As AnulaChequeCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaBancoCompleted As EliminaBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaChequeCompleted As EliminaChequeCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaCuentaBancoCompleted As EliminaCuentaBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event ImprimeChequeCompleted As ImprimeChequeCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaBancoCompleted As InsertaBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaChequeCompleted As InsertaChequeCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaCuentaBancoCompleted As InsertaCuentaBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaBancoCompleted As ModificaBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaChequeCompleted As ModificaChequeCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaCuentaBancoCompleted As ModificaCuentaBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerBancoCompleted As ObtenerBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerChequeCompleted As ObtenerChequeCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCuentaBancoCompleted As ObtenerCuentaBancoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPartidaCompleted As ObtenerPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event RepChequesEmitidosCompleted As RepChequesEmitidosCompletedEventHandler
        
        '''<remarks/>
        Public Event TrasladaPartidasChequesCompleted As TrasladaPartidasChequesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/validarDenominacionesBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarDenominacionesBoveda(ByVal idBoveda As Integer, ByVal codTransaccion As Integer, ByVal uno As Integer, ByVal cinco As Integer, ByVal diez As Integer, ByVal veinte As Integer, ByVal cincuenta As Integer, ByVal cien As Integer, ByVal monedaUno As Integer, ByVal fraccion As Double) As Integer
            Dim results() As Object = Me.Invoke("validarDenominacionesBoveda", New Object() {idBoveda, codTransaccion, uno, cinco, diez, veinte, cincuenta, cien, monedaUno, fraccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarDenominacionesBoveda(ByVal idBoveda As Integer, ByVal codTransaccion As Integer, ByVal uno As Integer, ByVal cinco As Integer, ByVal diez As Integer, ByVal veinte As Integer, ByVal cincuenta As Integer, ByVal cien As Integer, ByVal monedaUno As Integer, ByVal fraccion As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarDenominacionesBoveda", New Object() {idBoveda, codTransaccion, uno, cinco, diez, veinte, cincuenta, cien, monedaUno, fraccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarDenominacionesBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarDenominacionesBovedaAsync(ByVal idBoveda As Integer, ByVal codTransaccion As Integer, ByVal uno As Integer, ByVal cinco As Integer, ByVal diez As Integer, ByVal veinte As Integer, ByVal cincuenta As Integer, ByVal cien As Integer, ByVal monedaUno As Integer, ByVal fraccion As Double)
            Me.validarDenominacionesBovedaAsync(idBoveda, codTransaccion, uno, cinco, diez, veinte, cincuenta, cien, monedaUno, fraccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarDenominacionesBovedaAsync(ByVal idBoveda As Integer, ByVal codTransaccion As Integer, ByVal uno As Integer, ByVal cinco As Integer, ByVal diez As Integer, ByVal veinte As Integer, ByVal cincuenta As Integer, ByVal cien As Integer, ByVal monedaUno As Integer, ByVal fraccion As Double, ByVal userState As Object)
            If (Me.validarDenominacionesBovedaOperationCompleted Is Nothing) Then
                Me.validarDenominacionesBovedaOperationCompleted = AddressOf Me.OnvalidarDenominacionesBovedaOperationCompleted
            End If
            Me.InvokeAsync("validarDenominacionesBoveda", New Object() {idBoveda, codTransaccion, uno, cinco, diez, veinte, cincuenta, cien, monedaUno, fraccion}, Me.validarDenominacionesBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarDenominacionesBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarDenominacionesBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarDenominacionesBovedaCompleted(Me, New validarDenominacionesBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ConsultarBcCatCtasContablesCheques", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBcCatCtasContablesCheques(ByVal codSucursal As String, ByVal codRol As String, ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBcCatCtasContablesCheques", New Object() {codSucursal, codRol, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBcCatCtasContablesCheques(ByVal codSucursal As String, ByVal codRol As String, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBcCatCtasContablesCheques", New Object() {codSucursal, codRol, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBcCatCtasContablesCheques(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBcCatCtasContablesChequesAsync(ByVal codSucursal As String, ByVal codRol As String, ByVal opcion As Integer)
            Me.ConsultarBcCatCtasContablesChequesAsync(codSucursal, codRol, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBcCatCtasContablesChequesAsync(ByVal codSucursal As String, ByVal codRol As String, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.ConsultarBcCatCtasContablesChequesOperationCompleted Is Nothing) Then
                Me.ConsultarBcCatCtasContablesChequesOperationCompleted = AddressOf Me.OnConsultarBcCatCtasContablesChequesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBcCatCtasContablesCheques", New Object() {codSucursal, codRol, opcion}, Me.ConsultarBcCatCtasContablesChequesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBcCatCtasContablesChequesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBcCatCtasContablesChequesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBcCatCtasContablesChequesCompleted(Me, New ConsultarBcCatCtasContablesChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/insertarBcCatCtasContablesCheques", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarBcCatCtasContablesCheques(ByVal codsucursal As String, ByVal codRol As String, ByVal idcuenta As String, ByVal descripcion As String, ByVal fechaCreacion As Date, ByVal usuarioActu As String, ByVal fechaActu As Date) As Integer
            Dim results() As Object = Me.Invoke("insertarBcCatCtasContablesCheques", New Object() {codsucursal, codRol, idcuenta, descripcion, fechaCreacion, usuarioActu, fechaActu})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarBcCatCtasContablesCheques(ByVal codsucursal As String, ByVal codRol As String, ByVal idcuenta As String, ByVal descripcion As String, ByVal fechaCreacion As Date, ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarBcCatCtasContablesCheques", New Object() {codsucursal, codRol, idcuenta, descripcion, fechaCreacion, usuarioActu, fechaActu}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarBcCatCtasContablesCheques(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarBcCatCtasContablesChequesAsync(ByVal codsucursal As String, ByVal codRol As String, ByVal idcuenta As String, ByVal descripcion As String, ByVal fechaCreacion As Date, ByVal usuarioActu As String, ByVal fechaActu As Date)
            Me.insertarBcCatCtasContablesChequesAsync(codsucursal, codRol, idcuenta, descripcion, fechaCreacion, usuarioActu, fechaActu, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarBcCatCtasContablesChequesAsync(ByVal codsucursal As String, ByVal codRol As String, ByVal idcuenta As String, ByVal descripcion As String, ByVal fechaCreacion As Date, ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal userState As Object)
            If (Me.insertarBcCatCtasContablesChequesOperationCompleted Is Nothing) Then
                Me.insertarBcCatCtasContablesChequesOperationCompleted = AddressOf Me.OninsertarBcCatCtasContablesChequesOperationCompleted
            End If
            Me.InvokeAsync("insertarBcCatCtasContablesCheques", New Object() {codsucursal, codRol, idcuenta, descripcion, fechaCreacion, usuarioActu, fechaActu}, Me.insertarBcCatCtasContablesChequesOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarBcCatCtasContablesChequesOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarBcCatCtasContablesChequesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarBcCatCtasContablesChequesCompleted(Me, New insertarBcCatCtasContablesChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/modificarBcCatCtasContablesCheques", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarBcCatCtasContablesCheques(ByVal codsucursal As String, ByVal codRol As String, ByVal idcuenta As String, ByVal descripcion As String, ByVal fechaCreacion As Date, ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal idCtasContCheques As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarBcCatCtasContablesCheques", New Object() {codsucursal, codRol, idcuenta, descripcion, fechaCreacion, usuarioActu, fechaActu, idCtasContCheques})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarBcCatCtasContablesCheques(ByVal codsucursal As String, ByVal codRol As String, ByVal idcuenta As String, ByVal descripcion As String, ByVal fechaCreacion As Date, ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal idCtasContCheques As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarBcCatCtasContablesCheques", New Object() {codsucursal, codRol, idcuenta, descripcion, fechaCreacion, usuarioActu, fechaActu, idCtasContCheques}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarBcCatCtasContablesCheques(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarBcCatCtasContablesChequesAsync(ByVal codsucursal As String, ByVal codRol As String, ByVal idcuenta As String, ByVal descripcion As String, ByVal fechaCreacion As Date, ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal idCtasContCheques As Integer)
            Me.modificarBcCatCtasContablesChequesAsync(codsucursal, codRol, idcuenta, descripcion, fechaCreacion, usuarioActu, fechaActu, idCtasContCheques, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarBcCatCtasContablesChequesAsync(ByVal codsucursal As String, ByVal codRol As String, ByVal idcuenta As String, ByVal descripcion As String, ByVal fechaCreacion As Date, ByVal usuarioActu As String, ByVal fechaActu As Date, ByVal idCtasContCheques As Integer, ByVal userState As Object)
            If (Me.modificarBcCatCtasContablesChequesOperationCompleted Is Nothing) Then
                Me.modificarBcCatCtasContablesChequesOperationCompleted = AddressOf Me.OnmodificarBcCatCtasContablesChequesOperationCompleted
            End If
            Me.InvokeAsync("modificarBcCatCtasContablesCheques", New Object() {codsucursal, codRol, idcuenta, descripcion, fechaCreacion, usuarioActu, fechaActu, idCtasContCheques}, Me.modificarBcCatCtasContablesChequesOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarBcCatCtasContablesChequesOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarBcCatCtasContablesChequesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarBcCatCtasContablesChequesCompleted(Me, New modificarBcCatCtasContablesChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/eliminarBcCatCtasContablesCheques", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarBcCatCtasContablesCheques(ByVal idCtasContCheques As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarBcCatCtasContablesCheques", New Object() {idCtasContCheques})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarBcCatCtasContablesCheques(ByVal idCtasContCheques As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarBcCatCtasContablesCheques", New Object() {idCtasContCheques}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarBcCatCtasContablesCheques(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarBcCatCtasContablesChequesAsync(ByVal idCtasContCheques As Integer)
            Me.eliminarBcCatCtasContablesChequesAsync(idCtasContCheques, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarBcCatCtasContablesChequesAsync(ByVal idCtasContCheques As Integer, ByVal userState As Object)
            If (Me.eliminarBcCatCtasContablesChequesOperationCompleted Is Nothing) Then
                Me.eliminarBcCatCtasContablesChequesOperationCompleted = AddressOf Me.OneliminarBcCatCtasContablesChequesOperationCompleted
            End If
            Me.InvokeAsync("eliminarBcCatCtasContablesCheques", New Object() {idCtasContCheques}, Me.eliminarBcCatCtasContablesChequesOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarBcCatCtasContablesChequesOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarBcCatCtasContablesChequesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarBcCatCtasContablesChequesCompleted(Me, New eliminarBcCatCtasContablesChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/anularSolicitudBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function anularSolicitudBoveda(ByVal codSolicitud As Integer) As Integer
            Dim results() As Object = Me.Invoke("anularSolicitudBoveda", New Object() {codSolicitud})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginanularSolicitudBoveda(ByVal codSolicitud As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("anularSolicitudBoveda", New Object() {codSolicitud}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndanularSolicitudBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub anularSolicitudBovedaAsync(ByVal codSolicitud As Integer)
            Me.anularSolicitudBovedaAsync(codSolicitud, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub anularSolicitudBovedaAsync(ByVal codSolicitud As Integer, ByVal userState As Object)
            If (Me.anularSolicitudBovedaOperationCompleted Is Nothing) Then
                Me.anularSolicitudBovedaOperationCompleted = AddressOf Me.OnanularSolicitudBovedaOperationCompleted
            End If
            Me.InvokeAsync("anularSolicitudBoveda", New Object() {codSolicitud}, Me.anularSolicitudBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnanularSolicitudBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.anularSolicitudBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent anularSolicitudBovedaCompleted(Me, New anularSolicitudBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/insertarDetalleRemesaBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarDetalleRemesaBanco(ByVal correlativo As Integer, ByVal folio As String, ByVal noRemesa As String, ByVal nombreCuenta As String, ByVal observacion As String, ByVal usuarioRemesa As String, ByVal fechaRemesa As String) As Integer
            Dim results() As Object = Me.Invoke("insertarDetalleRemesaBanco", New Object() {correlativo, folio, noRemesa, nombreCuenta, observacion, usuarioRemesa, fechaRemesa})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarDetalleRemesaBanco(ByVal correlativo As Integer, ByVal folio As String, ByVal noRemesa As String, ByVal nombreCuenta As String, ByVal observacion As String, ByVal usuarioRemesa As String, ByVal fechaRemesa As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarDetalleRemesaBanco", New Object() {correlativo, folio, noRemesa, nombreCuenta, observacion, usuarioRemesa, fechaRemesa}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarDetalleRemesaBanco(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarDetalleRemesaBancoAsync(ByVal correlativo As Integer, ByVal folio As String, ByVal noRemesa As String, ByVal nombreCuenta As String, ByVal observacion As String, ByVal usuarioRemesa As String, ByVal fechaRemesa As String)
            Me.insertarDetalleRemesaBancoAsync(correlativo, folio, noRemesa, nombreCuenta, observacion, usuarioRemesa, fechaRemesa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarDetalleRemesaBancoAsync(ByVal correlativo As Integer, ByVal folio As String, ByVal noRemesa As String, ByVal nombreCuenta As String, ByVal observacion As String, ByVal usuarioRemesa As String, ByVal fechaRemesa As String, ByVal userState As Object)
            If (Me.insertarDetalleRemesaBancoOperationCompleted Is Nothing) Then
                Me.insertarDetalleRemesaBancoOperationCompleted = AddressOf Me.OninsertarDetalleRemesaBancoOperationCompleted
            End If
            Me.InvokeAsync("insertarDetalleRemesaBanco", New Object() {correlativo, folio, noRemesa, nombreCuenta, observacion, usuarioRemesa, fechaRemesa}, Me.insertarDetalleRemesaBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarDetalleRemesaBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarDetalleRemesaBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarDetalleRemesaBancoCompleted(Me, New insertarDetalleRemesaBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/CambiosEfectivo", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiosEfectivo( _
                    ByVal id_boveda As Integer,  _
                    ByVal fecha As Date,  _
                    ByVal saldoAntEnt As Double,  _
                    ByVal montoEnt As Double,  _
                    ByVal saldoActualEnt As Double,  _
                    ByVal SaldoAntRec As Double,  _
                    ByVal montoRec As Double,  _
                    ByVal saldoActualRec As Double,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal observacion As String,  _
                    ByVal cantidadBilletesUnoEnt As Integer,  _
                    ByVal cantidadBilletesCincoEnt As Integer,  _
                    ByVal cantidadBilletesDiezEnt As Integer,  _
                    ByVal cantidadBilletesVeinteEnt As Integer,  _
                    ByVal cantidadBilletesCincuentaEnt As Integer,  _
                    ByVal cantidadBilletesCienEnt As Integer,  _
                    ByVal cantidadMonedasUnoEnt As Integer,  _
                    ByVal montoMonedaFraccionarioEnt As Integer,  _
                    ByVal cantidadBilletesUnoRec As Integer,  _
                    ByVal cantidadBilletesCincoRec As Integer,  _
                    ByVal cantidadBilletesDiezRec As Integer,  _
                    ByVal cantidadBilletesVeinteRec As Integer,  _
                    ByVal cantidadBilletesCincuentaRec As Integer,  _
                    ByVal cantidadBilletesCienRec As Integer,  _
                    ByVal cantidadMonedasUnoRec As Integer,  _
                    ByVal montoMonedaFraccionarioRec As Integer) As Integer
            Dim results() As Object = Me.Invoke("CambiosEfectivo", New Object() {id_boveda, fecha, saldoAntEnt, montoEnt, saldoActualEnt, SaldoAntRec, montoRec, saldoActualRec, usuario, hora, observacion, cantidadBilletesUnoEnt, cantidadBilletesCincoEnt, cantidadBilletesDiezEnt, cantidadBilletesVeinteEnt, cantidadBilletesCincuentaEnt, cantidadBilletesCienEnt, cantidadMonedasUnoEnt, montoMonedaFraccionarioEnt, cantidadBilletesUnoRec, cantidadBilletesCincoRec, cantidadBilletesDiezRec, cantidadBilletesVeinteRec, cantidadBilletesCincuentaRec, cantidadBilletesCienRec, cantidadMonedasUnoRec, montoMonedaFraccionarioRec})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginCambiosEfectivo( _
                    ByVal id_boveda As Integer,  _
                    ByVal fecha As Date,  _
                    ByVal saldoAntEnt As Double,  _
                    ByVal montoEnt As Double,  _
                    ByVal saldoActualEnt As Double,  _
                    ByVal SaldoAntRec As Double,  _
                    ByVal montoRec As Double,  _
                    ByVal saldoActualRec As Double,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal observacion As String,  _
                    ByVal cantidadBilletesUnoEnt As Integer,  _
                    ByVal cantidadBilletesCincoEnt As Integer,  _
                    ByVal cantidadBilletesDiezEnt As Integer,  _
                    ByVal cantidadBilletesVeinteEnt As Integer,  _
                    ByVal cantidadBilletesCincuentaEnt As Integer,  _
                    ByVal cantidadBilletesCienEnt As Integer,  _
                    ByVal cantidadMonedasUnoEnt As Integer,  _
                    ByVal montoMonedaFraccionarioEnt As Integer,  _
                    ByVal cantidadBilletesUnoRec As Integer,  _
                    ByVal cantidadBilletesCincoRec As Integer,  _
                    ByVal cantidadBilletesDiezRec As Integer,  _
                    ByVal cantidadBilletesVeinteRec As Integer,  _
                    ByVal cantidadBilletesCincuentaRec As Integer,  _
                    ByVal cantidadBilletesCienRec As Integer,  _
                    ByVal cantidadMonedasUnoRec As Integer,  _
                    ByVal montoMonedaFraccionarioRec As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CambiosEfectivo", New Object() {id_boveda, fecha, saldoAntEnt, montoEnt, saldoActualEnt, SaldoAntRec, montoRec, saldoActualRec, usuario, hora, observacion, cantidadBilletesUnoEnt, cantidadBilletesCincoEnt, cantidadBilletesDiezEnt, cantidadBilletesVeinteEnt, cantidadBilletesCincuentaEnt, cantidadBilletesCienEnt, cantidadMonedasUnoEnt, montoMonedaFraccionarioEnt, cantidadBilletesUnoRec, cantidadBilletesCincoRec, cantidadBilletesDiezRec, cantidadBilletesVeinteRec, cantidadBilletesCincuentaRec, cantidadBilletesCienRec, cantidadMonedasUnoRec, montoMonedaFraccionarioRec}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCambiosEfectivo(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiosEfectivoAsync( _
                    ByVal id_boveda As Integer,  _
                    ByVal fecha As Date,  _
                    ByVal saldoAntEnt As Double,  _
                    ByVal montoEnt As Double,  _
                    ByVal saldoActualEnt As Double,  _
                    ByVal SaldoAntRec As Double,  _
                    ByVal montoRec As Double,  _
                    ByVal saldoActualRec As Double,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal observacion As String,  _
                    ByVal cantidadBilletesUnoEnt As Integer,  _
                    ByVal cantidadBilletesCincoEnt As Integer,  _
                    ByVal cantidadBilletesDiezEnt As Integer,  _
                    ByVal cantidadBilletesVeinteEnt As Integer,  _
                    ByVal cantidadBilletesCincuentaEnt As Integer,  _
                    ByVal cantidadBilletesCienEnt As Integer,  _
                    ByVal cantidadMonedasUnoEnt As Integer,  _
                    ByVal montoMonedaFraccionarioEnt As Integer,  _
                    ByVal cantidadBilletesUnoRec As Integer,  _
                    ByVal cantidadBilletesCincoRec As Integer,  _
                    ByVal cantidadBilletesDiezRec As Integer,  _
                    ByVal cantidadBilletesVeinteRec As Integer,  _
                    ByVal cantidadBilletesCincuentaRec As Integer,  _
                    ByVal cantidadBilletesCienRec As Integer,  _
                    ByVal cantidadMonedasUnoRec As Integer,  _
                    ByVal montoMonedaFraccionarioRec As Integer)
            Me.CambiosEfectivoAsync(id_boveda, fecha, saldoAntEnt, montoEnt, saldoActualEnt, SaldoAntRec, montoRec, saldoActualRec, usuario, hora, observacion, cantidadBilletesUnoEnt, cantidadBilletesCincoEnt, cantidadBilletesDiezEnt, cantidadBilletesVeinteEnt, cantidadBilletesCincuentaEnt, cantidadBilletesCienEnt, cantidadMonedasUnoEnt, montoMonedaFraccionarioEnt, cantidadBilletesUnoRec, cantidadBilletesCincoRec, cantidadBilletesDiezRec, cantidadBilletesVeinteRec, cantidadBilletesCincuentaRec, cantidadBilletesCienRec, cantidadMonedasUnoRec, montoMonedaFraccionarioRec, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiosEfectivoAsync( _
                    ByVal id_boveda As Integer,  _
                    ByVal fecha As Date,  _
                    ByVal saldoAntEnt As Double,  _
                    ByVal montoEnt As Double,  _
                    ByVal saldoActualEnt As Double,  _
                    ByVal SaldoAntRec As Double,  _
                    ByVal montoRec As Double,  _
                    ByVal saldoActualRec As Double,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal observacion As String,  _
                    ByVal cantidadBilletesUnoEnt As Integer,  _
                    ByVal cantidadBilletesCincoEnt As Integer,  _
                    ByVal cantidadBilletesDiezEnt As Integer,  _
                    ByVal cantidadBilletesVeinteEnt As Integer,  _
                    ByVal cantidadBilletesCincuentaEnt As Integer,  _
                    ByVal cantidadBilletesCienEnt As Integer,  _
                    ByVal cantidadMonedasUnoEnt As Integer,  _
                    ByVal montoMonedaFraccionarioEnt As Integer,  _
                    ByVal cantidadBilletesUnoRec As Integer,  _
                    ByVal cantidadBilletesCincoRec As Integer,  _
                    ByVal cantidadBilletesDiezRec As Integer,  _
                    ByVal cantidadBilletesVeinteRec As Integer,  _
                    ByVal cantidadBilletesCincuentaRec As Integer,  _
                    ByVal cantidadBilletesCienRec As Integer,  _
                    ByVal cantidadMonedasUnoRec As Integer,  _
                    ByVal montoMonedaFraccionarioRec As Integer,  _
                    ByVal userState As Object)
            If (Me.CambiosEfectivoOperationCompleted Is Nothing) Then
                Me.CambiosEfectivoOperationCompleted = AddressOf Me.OnCambiosEfectivoOperationCompleted
            End If
            Me.InvokeAsync("CambiosEfectivo", New Object() {id_boveda, fecha, saldoAntEnt, montoEnt, saldoActualEnt, SaldoAntRec, montoRec, saldoActualRec, usuario, hora, observacion, cantidadBilletesUnoEnt, cantidadBilletesCincoEnt, cantidadBilletesDiezEnt, cantidadBilletesVeinteEnt, cantidadBilletesCincuentaEnt, cantidadBilletesCienEnt, cantidadMonedasUnoEnt, montoMonedaFraccionarioEnt, cantidadBilletesUnoRec, cantidadBilletesCincoRec, cantidadBilletesDiezRec, cantidadBilletesVeinteRec, cantidadBilletesCincuentaRec, cantidadBilletesCienRec, cantidadMonedasUnoRec, montoMonedaFraccionarioRec}, Me.CambiosEfectivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiosEfectivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiosEfectivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiosEfectivoCompleted(Me, New CambiosEfectivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/movimientosBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function movimientosBoveda( _
                    ByVal idBoveda As Integer,  _
                    ByVal fechaMov As Date,  _
                    ByVal tipoMov As String,  _
                    ByVal numPartida As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldoActual As Double,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal anulado As Boolean,  _
                    ByVal descripcionPartida As String,  _
                    ByVal prefijo As String,  _
                    ByVal tipoPartida As String,  _
                    ByVal annio As Integer,  _
                    ByVal cod_CBeneficio As String,  _
                    ByVal cod_CCosto As String,  _
                    ByVal idCuentaA As String,  _
                    ByVal idCuentaC As String,  _
                    ByVal codSucursal As String,  _
                    ByVal corrPartida As Integer,  _
                    ByVal mes As Integer,  _
                    ByVal observacion As String,  _
                    ByVal idMovimiento As String,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double) As Integer
            Dim results() As Object = Me.Invoke("movimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, descripcionPartida, prefijo, tipoPartida, annio, cod_CBeneficio, cod_CCosto, idCuentaA, idCuentaC, codSucursal, corrPartida, mes, observacion, idMovimiento, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmovimientosBoveda( _
                    ByVal idBoveda As Integer,  _
                    ByVal fechaMov As Date,  _
                    ByVal tipoMov As String,  _
                    ByVal numPartida As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldoActual As Double,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal anulado As Boolean,  _
                    ByVal descripcionPartida As String,  _
                    ByVal prefijo As String,  _
                    ByVal tipoPartida As String,  _
                    ByVal annio As Integer,  _
                    ByVal cod_CBeneficio As String,  _
                    ByVal cod_CCosto As String,  _
                    ByVal idCuentaA As String,  _
                    ByVal idCuentaC As String,  _
                    ByVal codSucursal As String,  _
                    ByVal corrPartida As Integer,  _
                    ByVal mes As Integer,  _
                    ByVal observacion As String,  _
                    ByVal idMovimiento As String,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("movimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, descripcionPartida, prefijo, tipoPartida, annio, cod_CBeneficio, cod_CCosto, idCuentaA, idCuentaC, codSucursal, corrPartida, mes, observacion, idMovimiento, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmovimientosBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub movimientosBovedaAsync( _
                    ByVal idBoveda As Integer,  _
                    ByVal fechaMov As Date,  _
                    ByVal tipoMov As String,  _
                    ByVal numPartida As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldoActual As Double,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal anulado As Boolean,  _
                    ByVal descripcionPartida As String,  _
                    ByVal prefijo As String,  _
                    ByVal tipoPartida As String,  _
                    ByVal annio As Integer,  _
                    ByVal cod_CBeneficio As String,  _
                    ByVal cod_CCosto As String,  _
                    ByVal idCuentaA As String,  _
                    ByVal idCuentaC As String,  _
                    ByVal codSucursal As String,  _
                    ByVal corrPartida As Integer,  _
                    ByVal mes As Integer,  _
                    ByVal observacion As String,  _
                    ByVal idMovimiento As String,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double)
            Me.movimientosBovedaAsync(idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, descripcionPartida, prefijo, tipoPartida, annio, cod_CBeneficio, cod_CCosto, idCuentaA, idCuentaC, codSucursal, corrPartida, mes, observacion, idMovimiento, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub movimientosBovedaAsync( _
                    ByVal idBoveda As Integer,  _
                    ByVal fechaMov As Date,  _
                    ByVal tipoMov As String,  _
                    ByVal numPartida As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldoActual As Double,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal anulado As Boolean,  _
                    ByVal descripcionPartida As String,  _
                    ByVal prefijo As String,  _
                    ByVal tipoPartida As String,  _
                    ByVal annio As Integer,  _
                    ByVal cod_CBeneficio As String,  _
                    ByVal cod_CCosto As String,  _
                    ByVal idCuentaA As String,  _
                    ByVal idCuentaC As String,  _
                    ByVal codSucursal As String,  _
                    ByVal corrPartida As Integer,  _
                    ByVal mes As Integer,  _
                    ByVal observacion As String,  _
                    ByVal idMovimiento As String,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal userState As Object)
            If (Me.movimientosBovedaOperationCompleted Is Nothing) Then
                Me.movimientosBovedaOperationCompleted = AddressOf Me.OnmovimientosBovedaOperationCompleted
            End If
            Me.InvokeAsync("movimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, descripcionPartida, prefijo, tipoPartida, annio, cod_CBeneficio, cod_CCosto, idCuentaA, idCuentaC, codSucursal, corrPartida, mes, observacion, idMovimiento, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario}, Me.movimientosBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmovimientosBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.movimientosBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent movimientosBovedaCompleted(Me, New movimientosBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/insertarBcMovimientosBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarBcMovimientosBoveda(ByVal idBoveda As Integer, ByVal fechaMov As Date, ByVal tipoMov As String, ByVal numPartida As String, ByVal saldoAnterior As Double, ByVal monto As Double, ByVal saldoActual As Double, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal hora As String, ByVal anulado As Boolean) As Integer
            Dim results() As Object = Me.Invoke("insertarBcMovimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarBcMovimientosBoveda(ByVal idBoveda As Integer, ByVal fechaMov As Date, ByVal tipoMov As String, ByVal numPartida As String, ByVal saldoAnterior As Double, ByVal monto As Double, ByVal saldoActual As Double, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal hora As String, ByVal anulado As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarBcMovimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarBcMovimientosBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarBcMovimientosBovedaAsync(ByVal idBoveda As Integer, ByVal fechaMov As Date, ByVal tipoMov As String, ByVal numPartida As String, ByVal saldoAnterior As Double, ByVal monto As Double, ByVal saldoActual As Double, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal hora As String, ByVal anulado As Boolean)
            Me.insertarBcMovimientosBovedaAsync(idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarBcMovimientosBovedaAsync(ByVal idBoveda As Integer, ByVal fechaMov As Date, ByVal tipoMov As String, ByVal numPartida As String, ByVal saldoAnterior As Double, ByVal monto As Double, ByVal saldoActual As Double, ByVal codTransaccion As Integer, ByVal usuario As String, ByVal hora As String, ByVal anulado As Boolean, ByVal userState As Object)
            If (Me.insertarBcMovimientosBovedaOperationCompleted Is Nothing) Then
                Me.insertarBcMovimientosBovedaOperationCompleted = AddressOf Me.OninsertarBcMovimientosBovedaOperationCompleted
            End If
            Me.InvokeAsync("insertarBcMovimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado}, Me.insertarBcMovimientosBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarBcMovimientosBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarBcMovimientosBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarBcMovimientosBovedaCompleted(Me, New insertarBcMovimientosBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/modificarBcMovimientosBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarBcMovimientosBoveda( _
                    ByVal idBoveda As Integer,  _
                    ByVal fechaMov As Date,  _
                    ByVal tipoMov As String,  _
                    ByVal numPartida As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldoActual As Double,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal anulado As Boolean,  _
                    ByVal correlativo As Integer,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal opcion As Integer,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As Date) As Integer
            Dim results() As Object = Me.Invoke("modificarBcMovimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, correlativo, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario, opcion, usuarioActu, fechaActu})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarBcMovimientosBoveda( _
                    ByVal idBoveda As Integer,  _
                    ByVal fechaMov As Date,  _
                    ByVal tipoMov As String,  _
                    ByVal numPartida As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldoActual As Double,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal anulado As Boolean,  _
                    ByVal correlativo As Integer,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal opcion As Integer,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarBcMovimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, correlativo, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario, opcion, usuarioActu, fechaActu}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarBcMovimientosBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarBcMovimientosBovedaAsync( _
                    ByVal idBoveda As Integer,  _
                    ByVal fechaMov As Date,  _
                    ByVal tipoMov As String,  _
                    ByVal numPartida As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldoActual As Double,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal anulado As Boolean,  _
                    ByVal correlativo As Integer,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal opcion As Integer,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As Date)
            Me.modificarBcMovimientosBovedaAsync(idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, correlativo, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario, opcion, usuarioActu, fechaActu, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarBcMovimientosBovedaAsync( _
                    ByVal idBoveda As Integer,  _
                    ByVal fechaMov As Date,  _
                    ByVal tipoMov As String,  _
                    ByVal numPartida As String,  _
                    ByVal saldoAnterior As Double,  _
                    ByVal monto As Double,  _
                    ByVal saldoActual As Double,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuario As String,  _
                    ByVal hora As String,  _
                    ByVal anulado As Boolean,  _
                    ByVal correlativo As Integer,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal opcion As Integer,  _
                    ByVal usuarioActu As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal userState As Object)
            If (Me.modificarBcMovimientosBovedaOperationCompleted Is Nothing) Then
                Me.modificarBcMovimientosBovedaOperationCompleted = AddressOf Me.OnmodificarBcMovimientosBovedaOperationCompleted
            End If
            Me.InvokeAsync("modificarBcMovimientosBoveda", New Object() {idBoveda, fechaMov, tipoMov, numPartida, saldoAnterior, monto, saldoActual, codTransaccion, usuario, hora, anulado, correlativo, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario, opcion, usuarioActu, fechaActu}, Me.modificarBcMovimientosBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarBcMovimientosBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarBcMovimientosBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarBcMovimientosBovedaCompleted(Me, New modificarBcMovimientosBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/eliminarBcMovimientosBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarBcMovimientosBoveda(ByVal correlativo As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarBcMovimientosBoveda", New Object() {correlativo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarBcMovimientosBoveda(ByVal correlativo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarBcMovimientosBoveda", New Object() {correlativo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarBcMovimientosBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarBcMovimientosBovedaAsync(ByVal correlativo As Integer)
            Me.eliminarBcMovimientosBovedaAsync(correlativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarBcMovimientosBovedaAsync(ByVal correlativo As Integer, ByVal userState As Object)
            If (Me.eliminarBcMovimientosBovedaOperationCompleted Is Nothing) Then
                Me.eliminarBcMovimientosBovedaOperationCompleted = AddressOf Me.OneliminarBcMovimientosBovedaOperationCompleted
            End If
            Me.InvokeAsync("eliminarBcMovimientosBoveda", New Object() {correlativo}, Me.eliminarBcMovimientosBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarBcMovimientosBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarBcMovimientosBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarBcMovimientosBovedaCompleted(Me, New eliminarBcMovimientosBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/consultarBcMovimientosBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarBcMovimientosBoveda(ByVal opcion As Integer, ByVal codSucursal As String, ByVal fecha As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarBcMovimientosBoveda", New Object() {opcion, codSucursal, fecha})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarBcMovimientosBoveda(ByVal opcion As Integer, ByVal codSucursal As String, ByVal fecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarBcMovimientosBoveda", New Object() {opcion, codSucursal, fecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarBcMovimientosBoveda(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarBcMovimientosBovedaAsync(ByVal opcion As Integer, ByVal codSucursal As String, ByVal fecha As Date)
            Me.consultarBcMovimientosBovedaAsync(opcion, codSucursal, fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarBcMovimientosBovedaAsync(ByVal opcion As Integer, ByVal codSucursal As String, ByVal fecha As Date, ByVal userState As Object)
            If (Me.consultarBcMovimientosBovedaOperationCompleted Is Nothing) Then
                Me.consultarBcMovimientosBovedaOperationCompleted = AddressOf Me.OnconsultarBcMovimientosBovedaOperationCompleted
            End If
            Me.InvokeAsync("consultarBcMovimientosBoveda", New Object() {opcion, codSucursal, fecha}, Me.consultarBcMovimientosBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarBcMovimientosBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarBcMovimientosBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarBcMovimientosBovedaCompleted(Me, New consultarBcMovimientosBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminarBcSucursales_TransaccionesBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBcSucursales_TransaccionesBoveda(ByVal idSucursalesTransacciones As Integer) As Integer
            Dim results() As Object = Me.Invoke("EliminarBcSucursales_TransaccionesBoveda", New Object() {idSucursalesTransacciones})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBcSucursales_TransaccionesBoveda(ByVal idSucursalesTransacciones As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBcSucursales_TransaccionesBoveda", New Object() {idSucursalesTransacciones}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBcSucursales_TransaccionesBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBcSucursales_TransaccionesBovedaAsync(ByVal idSucursalesTransacciones As Integer)
            Me.EliminarBcSucursales_TransaccionesBovedaAsync(idSucursalesTransacciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBcSucursales_TransaccionesBovedaAsync(ByVal idSucursalesTransacciones As Integer, ByVal userState As Object)
            If (Me.EliminarBcSucursales_TransaccionesBovedaOperationCompleted Is Nothing) Then
                Me.EliminarBcSucursales_TransaccionesBovedaOperationCompleted = AddressOf Me.OnEliminarBcSucursales_TransaccionesBovedaOperationCompleted
            End If
            Me.InvokeAsync("EliminarBcSucursales_TransaccionesBoveda", New Object() {idSucursalesTransacciones}, Me.EliminarBcSucursales_TransaccionesBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBcSucursales_TransaccionesBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBcSucursales_TransaccionesBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBcSucursales_TransaccionesBovedaCompleted(Me, New EliminarBcSucursales_TransaccionesBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ConsultarBcSucursales_TransaccionesBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBcSucursales_TransaccionesBoveda(ByVal codSucursal As String, ByVal CodTransaccion As Integer, ByVal idSucursalTransaccionBov As Integer, ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, CodTransaccion, idSucursalTransaccionBov, Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBcSucursales_TransaccionesBoveda(ByVal codSucursal As String, ByVal CodTransaccion As Integer, ByVal idSucursalTransaccionBov As Integer, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, CodTransaccion, idSucursalTransaccionBov, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBcSucursales_TransaccionesBoveda(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBcSucursales_TransaccionesBovedaAsync(ByVal codSucursal As String, ByVal CodTransaccion As Integer, ByVal idSucursalTransaccionBov As Integer, ByVal Opcion As Integer)
            Me.ConsultarBcSucursales_TransaccionesBovedaAsync(codSucursal, CodTransaccion, idSucursalTransaccionBov, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBcSucursales_TransaccionesBovedaAsync(ByVal codSucursal As String, ByVal CodTransaccion As Integer, ByVal idSucursalTransaccionBov As Integer, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.ConsultarBcSucursales_TransaccionesBovedaOperationCompleted Is Nothing) Then
                Me.ConsultarBcSucursales_TransaccionesBovedaOperationCompleted = AddressOf Me.OnConsultarBcSucursales_TransaccionesBovedaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, CodTransaccion, idSucursalTransaccionBov, Opcion}, Me.ConsultarBcSucursales_TransaccionesBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBcSucursales_TransaccionesBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBcSucursales_TransaccionesBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBcSucursales_TransaccionesBovedaCompleted(Me, New ConsultarBcSucursales_TransaccionesBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ActualizarBcSucursales_TransaccionesBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarBcSucursales_TransaccionesBoveda(ByVal codSucursal As String, ByVal codTransaccion As Integer, ByVal idCuentaA As String, ByVal idCuentaC As String, ByVal idSucursalTransaccionBoveda As Integer) As Integer
            Dim results() As Object = Me.Invoke("ActualizarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, codTransaccion, idCuentaA, idCuentaC, idSucursalTransaccionBoveda})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizarBcSucursales_TransaccionesBoveda(ByVal codSucursal As String, ByVal codTransaccion As Integer, ByVal idCuentaA As String, ByVal idCuentaC As String, ByVal idSucursalTransaccionBoveda As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, codTransaccion, idCuentaA, idCuentaC, idSucursalTransaccionBoveda}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizarBcSucursales_TransaccionesBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarBcSucursales_TransaccionesBovedaAsync(ByVal codSucursal As String, ByVal codTransaccion As Integer, ByVal idCuentaA As String, ByVal idCuentaC As String, ByVal idSucursalTransaccionBoveda As Integer)
            Me.ActualizarBcSucursales_TransaccionesBovedaAsync(codSucursal, codTransaccion, idCuentaA, idCuentaC, idSucursalTransaccionBoveda, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarBcSucursales_TransaccionesBovedaAsync(ByVal codSucursal As String, ByVal codTransaccion As Integer, ByVal idCuentaA As String, ByVal idCuentaC As String, ByVal idSucursalTransaccionBoveda As Integer, ByVal userState As Object)
            If (Me.ActualizarBcSucursales_TransaccionesBovedaOperationCompleted Is Nothing) Then
                Me.ActualizarBcSucursales_TransaccionesBovedaOperationCompleted = AddressOf Me.OnActualizarBcSucursales_TransaccionesBovedaOperationCompleted
            End If
            Me.InvokeAsync("ActualizarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, codTransaccion, idCuentaA, idCuentaC, idSucursalTransaccionBoveda}, Me.ActualizarBcSucursales_TransaccionesBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarBcSucursales_TransaccionesBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarBcSucursales_TransaccionesBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarBcSucursales_TransaccionesBovedaCompleted(Me, New ActualizarBcSucursales_TransaccionesBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertarBcSucursales_TransaccionesBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBcSucursales_TransaccionesBoveda(ByVal codSucursal As String, ByVal codTransaccion As Integer, ByVal idCuentaA As String, ByVal idCuentaC As String) As Integer
            Dim results() As Object = Me.Invoke("InsertarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, codTransaccion, idCuentaA, idCuentaC})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBcSucursales_TransaccionesBoveda(ByVal codSucursal As String, ByVal codTransaccion As Integer, ByVal idCuentaA As String, ByVal idCuentaC As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, codTransaccion, idCuentaA, idCuentaC}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBcSucursales_TransaccionesBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBcSucursales_TransaccionesBovedaAsync(ByVal codSucursal As String, ByVal codTransaccion As Integer, ByVal idCuentaA As String, ByVal idCuentaC As String)
            Me.InsertarBcSucursales_TransaccionesBovedaAsync(codSucursal, codTransaccion, idCuentaA, idCuentaC, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBcSucursales_TransaccionesBovedaAsync(ByVal codSucursal As String, ByVal codTransaccion As Integer, ByVal idCuentaA As String, ByVal idCuentaC As String, ByVal userState As Object)
            If (Me.InsertarBcSucursales_TransaccionesBovedaOperationCompleted Is Nothing) Then
                Me.InsertarBcSucursales_TransaccionesBovedaOperationCompleted = AddressOf Me.OnInsertarBcSucursales_TransaccionesBovedaOperationCompleted
            End If
            Me.InvokeAsync("InsertarBcSucursales_TransaccionesBoveda", New Object() {codSucursal, codTransaccion, idCuentaA, idCuentaC}, Me.InsertarBcSucursales_TransaccionesBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBcSucursales_TransaccionesBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBcSucursales_TransaccionesBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBcSucursales_TransaccionesBovedaCompleted(Me, New InsertarBcSucursales_TransaccionesBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ActivarSolicitudBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActivarSolicitudBoveda(ByVal observacion As String, ByVal aprobada As Boolean, ByVal usuarioAut As String, ByVal fechaAut As Date, ByVal horaAut As String, ByVal codSolicitud As Integer) As Integer
            Dim results() As Object = Me.Invoke("ActivarSolicitudBoveda", New Object() {observacion, aprobada, usuarioAut, fechaAut, horaAut, codSolicitud})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginActivarSolicitudBoveda(ByVal observacion As String, ByVal aprobada As Boolean, ByVal usuarioAut As String, ByVal fechaAut As Date, ByVal horaAut As String, ByVal codSolicitud As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActivarSolicitudBoveda", New Object() {observacion, aprobada, usuarioAut, fechaAut, horaAut, codSolicitud}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActivarSolicitudBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActivarSolicitudBovedaAsync(ByVal observacion As String, ByVal aprobada As Boolean, ByVal usuarioAut As String, ByVal fechaAut As Date, ByVal horaAut As String, ByVal codSolicitud As Integer)
            Me.ActivarSolicitudBovedaAsync(observacion, aprobada, usuarioAut, fechaAut, horaAut, codSolicitud, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivarSolicitudBovedaAsync(ByVal observacion As String, ByVal aprobada As Boolean, ByVal usuarioAut As String, ByVal fechaAut As Date, ByVal horaAut As String, ByVal codSolicitud As Integer, ByVal userState As Object)
            If (Me.ActivarSolicitudBovedaOperationCompleted Is Nothing) Then
                Me.ActivarSolicitudBovedaOperationCompleted = AddressOf Me.OnActivarSolicitudBovedaOperationCompleted
            End If
            Me.InvokeAsync("ActivarSolicitudBoveda", New Object() {observacion, aprobada, usuarioAut, fechaAut, horaAut, codSolicitud}, Me.ActivarSolicitudBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivarSolicitudBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivarSolicitudBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivarSolicitudBovedaCompleted(Me, New ActivarSolicitudBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ValidarMontoMaxBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarMontoMaxBoveda(ByVal codSucursal As String, ByVal monto As Double) As Boolean
            Dim results() As Object = Me.Invoke("ValidarMontoMaxBoveda", New Object() {codSucursal, monto})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarMontoMaxBoveda(ByVal codSucursal As String, ByVal monto As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarMontoMaxBoveda", New Object() {codSucursal, monto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarMontoMaxBoveda(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarMontoMaxBovedaAsync(ByVal codSucursal As String, ByVal monto As Double)
            Me.ValidarMontoMaxBovedaAsync(codSucursal, monto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarMontoMaxBovedaAsync(ByVal codSucursal As String, ByVal monto As Double, ByVal userState As Object)
            If (Me.ValidarMontoMaxBovedaOperationCompleted Is Nothing) Then
                Me.ValidarMontoMaxBovedaOperationCompleted = AddressOf Me.OnValidarMontoMaxBovedaOperationCompleted
            End If
            Me.InvokeAsync("ValidarMontoMaxBoveda", New Object() {codSucursal, monto}, Me.ValidarMontoMaxBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarMontoMaxBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarMontoMaxBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarMontoMaxBovedaCompleted(Me, New ValidarMontoMaxBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ValidarMontoMinBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarMontoMinBoveda(ByVal codSucursal As String, ByVal montoRetirar As Double) As Boolean
            Dim results() As Object = Me.Invoke("ValidarMontoMinBoveda", New Object() {codSucursal, montoRetirar})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarMontoMinBoveda(ByVal codSucursal As String, ByVal montoRetirar As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarMontoMinBoveda", New Object() {codSucursal, montoRetirar}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarMontoMinBoveda(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarMontoMinBovedaAsync(ByVal codSucursal As String, ByVal montoRetirar As Double)
            Me.ValidarMontoMinBovedaAsync(codSucursal, montoRetirar, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarMontoMinBovedaAsync(ByVal codSucursal As String, ByVal montoRetirar As Double, ByVal userState As Object)
            If (Me.ValidarMontoMinBovedaOperationCompleted Is Nothing) Then
                Me.ValidarMontoMinBovedaOperationCompleted = AddressOf Me.OnValidarMontoMinBovedaOperationCompleted
            End If
            Me.InvokeAsync("ValidarMontoMinBoveda", New Object() {codSucursal, montoRetirar}, Me.ValidarMontoMinBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarMontoMinBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarMontoMinBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarMontoMinBovedaCompleted(Me, New ValidarMontoMinBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertarBcSolicitudes_Boveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBcSolicitudes_Boveda(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Monto As Double, ByVal Observacion As String, ByVal Aprobada As Boolean, ByVal Hora As String, ByVal CodSucursal As String, ByVal Usuario As String, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal idTipoMovCaja As Integer, ByVal codTransaccion As Integer) As Integer
            Dim results() As Object = Me.Invoke("InsertarBcSolicitudes_Boveda", New Object() {CodCajero, Fecha, Monto, Observacion, Aprobada, Hora, CodSucursal, Usuario, Pusuario, Pwd, Psucursal, idTipoMovCaja, codTransaccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBcSolicitudes_Boveda(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Monto As Double, ByVal Observacion As String, ByVal Aprobada As Boolean, ByVal Hora As String, ByVal CodSucursal As String, ByVal Usuario As String, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal idTipoMovCaja As Integer, ByVal codTransaccion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBcSolicitudes_Boveda", New Object() {CodCajero, Fecha, Monto, Observacion, Aprobada, Hora, CodSucursal, Usuario, Pusuario, Pwd, Psucursal, idTipoMovCaja, codTransaccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBcSolicitudes_Boveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBcSolicitudes_BovedaAsync(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Monto As Double, ByVal Observacion As String, ByVal Aprobada As Boolean, ByVal Hora As String, ByVal CodSucursal As String, ByVal Usuario As String, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal idTipoMovCaja As Integer, ByVal codTransaccion As Integer)
            Me.InsertarBcSolicitudes_BovedaAsync(CodCajero, Fecha, Monto, Observacion, Aprobada, Hora, CodSucursal, Usuario, Pusuario, Pwd, Psucursal, idTipoMovCaja, codTransaccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBcSolicitudes_BovedaAsync(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Monto As Double, ByVal Observacion As String, ByVal Aprobada As Boolean, ByVal Hora As String, ByVal CodSucursal As String, ByVal Usuario As String, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal idTipoMovCaja As Integer, ByVal codTransaccion As Integer, ByVal userState As Object)
            If (Me.InsertarBcSolicitudes_BovedaOperationCompleted Is Nothing) Then
                Me.InsertarBcSolicitudes_BovedaOperationCompleted = AddressOf Me.OnInsertarBcSolicitudes_BovedaOperationCompleted
            End If
            Me.InvokeAsync("InsertarBcSolicitudes_Boveda", New Object() {CodCajero, Fecha, Monto, Observacion, Aprobada, Hora, CodSucursal, Usuario, Pusuario, Pwd, Psucursal, idTipoMovCaja, codTransaccion}, Me.InsertarBcSolicitudes_BovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBcSolicitudes_BovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBcSolicitudes_BovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBcSolicitudes_BovedaCompleted(Me, New InsertarBcSolicitudes_BovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ModificarBcSolicitudes_Boveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarBcSolicitudes_Boveda( _
                    ByVal CodSolicitud As Integer,  _
                    ByVal CodCajero As Integer,  _
                    ByVal NoCaja As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal Monto As Double,  _
                    ByVal Observacion As String,  _
                    ByVal Aprobada As Boolean,  _
                    ByVal Hora As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Usuario As String,  _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal opcion As Integer,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuarioAutoriza As String,  _
                    ByVal fechaAutoriza As Date,  _
                    ByVal horaAutoriza As String,  _
                    ByVal idTipoMovCaja As Integer) As Integer
            Dim results() As Object = Me.Invoke("ModificarBcSolicitudes_Boveda", New Object() {CodSolicitud, CodCajero, NoCaja, Fecha, Monto, Observacion, Aprobada, Hora, CodSucursal, Usuario, Pusuario, Pwd, Psucursal, opcion, codTransaccion, usuarioAutoriza, fechaAutoriza, horaAutoriza, idTipoMovCaja})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarBcSolicitudes_Boveda( _
                    ByVal CodSolicitud As Integer,  _
                    ByVal CodCajero As Integer,  _
                    ByVal NoCaja As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal Monto As Double,  _
                    ByVal Observacion As String,  _
                    ByVal Aprobada As Boolean,  _
                    ByVal Hora As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Usuario As String,  _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal opcion As Integer,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuarioAutoriza As String,  _
                    ByVal fechaAutoriza As Date,  _
                    ByVal horaAutoriza As String,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBcSolicitudes_Boveda", New Object() {CodSolicitud, CodCajero, NoCaja, Fecha, Monto, Observacion, Aprobada, Hora, CodSucursal, Usuario, Pusuario, Pwd, Psucursal, opcion, codTransaccion, usuarioAutoriza, fechaAutoriza, horaAutoriza, idTipoMovCaja}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarBcSolicitudes_Boveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarBcSolicitudes_BovedaAsync( _
                    ByVal CodSolicitud As Integer,  _
                    ByVal CodCajero As Integer,  _
                    ByVal NoCaja As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal Monto As Double,  _
                    ByVal Observacion As String,  _
                    ByVal Aprobada As Boolean,  _
                    ByVal Hora As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Usuario As String,  _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal opcion As Integer,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuarioAutoriza As String,  _
                    ByVal fechaAutoriza As Date,  _
                    ByVal horaAutoriza As String,  _
                    ByVal idTipoMovCaja As Integer)
            Me.ModificarBcSolicitudes_BovedaAsync(CodSolicitud, CodCajero, NoCaja, Fecha, Monto, Observacion, Aprobada, Hora, CodSucursal, Usuario, Pusuario, Pwd, Psucursal, opcion, codTransaccion, usuarioAutoriza, fechaAutoriza, horaAutoriza, idTipoMovCaja, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarBcSolicitudes_BovedaAsync( _
                    ByVal CodSolicitud As Integer,  _
                    ByVal CodCajero As Integer,  _
                    ByVal NoCaja As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal Monto As Double,  _
                    ByVal Observacion As String,  _
                    ByVal Aprobada As Boolean,  _
                    ByVal Hora As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Usuario As String,  _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal opcion As Integer,  _
                    ByVal codTransaccion As Integer,  _
                    ByVal usuarioAutoriza As String,  _
                    ByVal fechaAutoriza As Date,  _
                    ByVal horaAutoriza As String,  _
                    ByVal idTipoMovCaja As Integer,  _
                    ByVal userState As Object)
            If (Me.ModificarBcSolicitudes_BovedaOperationCompleted Is Nothing) Then
                Me.ModificarBcSolicitudes_BovedaOperationCompleted = AddressOf Me.OnModificarBcSolicitudes_BovedaOperationCompleted
            End If
            Me.InvokeAsync("ModificarBcSolicitudes_Boveda", New Object() {CodSolicitud, CodCajero, NoCaja, Fecha, Monto, Observacion, Aprobada, Hora, CodSucursal, Usuario, Pusuario, Pwd, Psucursal, opcion, codTransaccion, usuarioAutoriza, fechaAutoriza, horaAutoriza, idTipoMovCaja}, Me.ModificarBcSolicitudes_BovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarBcSolicitudes_BovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBcSolicitudes_BovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBcSolicitudes_BovedaCompleted(Me, New ModificarBcSolicitudes_BovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminarBcSolicitudes_Boveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBcSolicitudes_Boveda(ByVal CodSolicitud As Integer, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarBcSolicitudes_Boveda", New Object() {CodSolicitud, Pusuario, Pwd, Psucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBcSolicitudes_Boveda(ByVal CodSolicitud As Integer, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBcSolicitudes_Boveda", New Object() {CodSolicitud, Pusuario, Pwd, Psucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBcSolicitudes_Boveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBcSolicitudes_BovedaAsync(ByVal CodSolicitud As Integer, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String)
            Me.EliminarBcSolicitudes_BovedaAsync(CodSolicitud, Pusuario, Pwd, Psucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBcSolicitudes_BovedaAsync(ByVal CodSolicitud As Integer, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal userState As Object)
            If (Me.EliminarBcSolicitudes_BovedaOperationCompleted Is Nothing) Then
                Me.EliminarBcSolicitudes_BovedaOperationCompleted = AddressOf Me.OnEliminarBcSolicitudes_BovedaOperationCompleted
            End If
            Me.InvokeAsync("EliminarBcSolicitudes_Boveda", New Object() {CodSolicitud, Pusuario, Pwd, Psucursal}, Me.EliminarBcSolicitudes_BovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBcSolicitudes_BovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBcSolicitudes_BovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBcSolicitudes_BovedaCompleted(Me, New EliminarBcSolicitudes_BovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ConsultarBcSolicitudes_Boveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBcSolicitudes_Boveda(ByVal Usuario As String, ByVal Fecha As Date, ByVal CodSucursal As String, ByVal UsuarioAutoriza As String, ByVal CodCajero As Integer, ByVal NoCaja As Integer, ByVal Opcion As Integer, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBcSolicitudes_Boveda", New Object() {Usuario, Fecha, CodSucursal, UsuarioAutoriza, CodCajero, NoCaja, Opcion, Pusuario, Pwd, Psucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBcSolicitudes_Boveda(ByVal Usuario As String, ByVal Fecha As Date, ByVal CodSucursal As String, ByVal UsuarioAutoriza As String, ByVal CodCajero As Integer, ByVal NoCaja As Integer, ByVal Opcion As Integer, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBcSolicitudes_Boveda", New Object() {Usuario, Fecha, CodSucursal, UsuarioAutoriza, CodCajero, NoCaja, Opcion, Pusuario, Pwd, Psucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBcSolicitudes_Boveda(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBcSolicitudes_BovedaAsync(ByVal Usuario As String, ByVal Fecha As Date, ByVal CodSucursal As String, ByVal UsuarioAutoriza As String, ByVal CodCajero As Integer, ByVal NoCaja As Integer, ByVal Opcion As Integer, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String)
            Me.ConsultarBcSolicitudes_BovedaAsync(Usuario, Fecha, CodSucursal, UsuarioAutoriza, CodCajero, NoCaja, Opcion, Pusuario, Pwd, Psucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBcSolicitudes_BovedaAsync(ByVal Usuario As String, ByVal Fecha As Date, ByVal CodSucursal As String, ByVal UsuarioAutoriza As String, ByVal CodCajero As Integer, ByVal NoCaja As Integer, ByVal Opcion As Integer, ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal userState As Object)
            If (Me.ConsultarBcSolicitudes_BovedaOperationCompleted Is Nothing) Then
                Me.ConsultarBcSolicitudes_BovedaOperationCompleted = AddressOf Me.OnConsultarBcSolicitudes_BovedaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBcSolicitudes_Boveda", New Object() {Usuario, Fecha, CodSucursal, UsuarioAutoriza, CodCajero, NoCaja, Opcion, Pusuario, Pwd, Psucursal}, Me.ConsultarBcSolicitudes_BovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBcSolicitudes_BovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBcSolicitudes_BovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBcSolicitudes_BovedaCompleted(Me, New ConsultarBcSolicitudes_BovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertarBcBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBcBoveda( _
                    ByVal Descripcion As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Saldo As Double,  _
                    ByVal SaldoMin As Double,  _
                    ByVal SaldoMax As Double,  _
                    ByVal UsuarioActu As String,  _
                    ByVal FechaActu As Date,  _
                    ByVal Pwd As String,  _
                    ByVal Sucursal As String,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double) As Integer
            Dim results() As Object = Me.Invoke("InsertarBcBoveda", New Object() {Descripcion, CodSucursal, Saldo, SaldoMin, SaldoMax, UsuarioActu, FechaActu, Pwd, Sucursal, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBcBoveda( _
                    ByVal Descripcion As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Saldo As Double,  _
                    ByVal SaldoMin As Double,  _
                    ByVal SaldoMax As Double,  _
                    ByVal UsuarioActu As String,  _
                    ByVal FechaActu As Date,  _
                    ByVal Pwd As String,  _
                    ByVal Sucursal As String,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBcBoveda", New Object() {Descripcion, CodSucursal, Saldo, SaldoMin, SaldoMax, UsuarioActu, FechaActu, Pwd, Sucursal, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBcBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBcBovedaAsync( _
                    ByVal Descripcion As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Saldo As Double,  _
                    ByVal SaldoMin As Double,  _
                    ByVal SaldoMax As Double,  _
                    ByVal UsuarioActu As String,  _
                    ByVal FechaActu As Date,  _
                    ByVal Pwd As String,  _
                    ByVal Sucursal As String,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double)
            Me.InsertarBcBovedaAsync(Descripcion, CodSucursal, Saldo, SaldoMin, SaldoMax, UsuarioActu, FechaActu, Pwd, Sucursal, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBcBovedaAsync( _
                    ByVal Descripcion As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Saldo As Double,  _
                    ByVal SaldoMin As Double,  _
                    ByVal SaldoMax As Double,  _
                    ByVal UsuarioActu As String,  _
                    ByVal FechaActu As Date,  _
                    ByVal Pwd As String,  _
                    ByVal Sucursal As String,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal userState As Object)
            If (Me.InsertarBcBovedaOperationCompleted Is Nothing) Then
                Me.InsertarBcBovedaOperationCompleted = AddressOf Me.OnInsertarBcBovedaOperationCompleted
            End If
            Me.InvokeAsync("InsertarBcBoveda", New Object() {Descripcion, CodSucursal, Saldo, SaldoMin, SaldoMax, UsuarioActu, FechaActu, Pwd, Sucursal, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario}, Me.InsertarBcBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBcBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBcBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBcBovedaCompleted(Me, New InsertarBcBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ModificarBcBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarBcBoveda( _
                    ByVal id_Boveda As Integer,  _
                    ByVal Descripcion As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Saldo As Double,  _
                    ByVal SaldoMin As Double,  _
                    ByVal SaldoMax As Double,  _
                    ByVal UsuarioActu As String,  _
                    ByVal FechaActu As Date,  _
                    ByVal pwd As String,  _
                    ByVal Sucursal As String,  _
                    ByVal opcion As Integer,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double) As Integer
            Dim results() As Object = Me.Invoke("ModificarBcBoveda", New Object() {id_Boveda, Descripcion, CodSucursal, Saldo, SaldoMin, SaldoMax, UsuarioActu, FechaActu, pwd, Sucursal, opcion, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarBcBoveda( _
                    ByVal id_Boveda As Integer,  _
                    ByVal Descripcion As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Saldo As Double,  _
                    ByVal SaldoMin As Double,  _
                    ByVal SaldoMax As Double,  _
                    ByVal UsuarioActu As String,  _
                    ByVal FechaActu As Date,  _
                    ByVal pwd As String,  _
                    ByVal Sucursal As String,  _
                    ByVal opcion As Integer,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBcBoveda", New Object() {id_Boveda, Descripcion, CodSucursal, Saldo, SaldoMin, SaldoMax, UsuarioActu, FechaActu, pwd, Sucursal, opcion, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarBcBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarBcBovedaAsync( _
                    ByVal id_Boveda As Integer,  _
                    ByVal Descripcion As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Saldo As Double,  _
                    ByVal SaldoMin As Double,  _
                    ByVal SaldoMax As Double,  _
                    ByVal UsuarioActu As String,  _
                    ByVal FechaActu As Date,  _
                    ByVal pwd As String,  _
                    ByVal Sucursal As String,  _
                    ByVal opcion As Integer,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double)
            Me.ModificarBcBovedaAsync(id_Boveda, Descripcion, CodSucursal, Saldo, SaldoMin, SaldoMax, UsuarioActu, FechaActu, pwd, Sucursal, opcion, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarBcBovedaAsync( _
                    ByVal id_Boveda As Integer,  _
                    ByVal Descripcion As String,  _
                    ByVal CodSucursal As String,  _
                    ByVal Saldo As Double,  _
                    ByVal SaldoMin As Double,  _
                    ByVal SaldoMax As Double,  _
                    ByVal UsuarioActu As String,  _
                    ByVal FechaActu As Date,  _
                    ByVal pwd As String,  _
                    ByVal Sucursal As String,  _
                    ByVal opcion As Integer,  _
                    ByVal cantidadBilletesUno As Integer,  _
                    ByVal cantidadBilletesCinco As Integer,  _
                    ByVal cantidadBilletesDiez As Integer,  _
                    ByVal cantidadBilletesVeinte As Integer,  _
                    ByVal cantidadBilletesCincuenta As Integer,  _
                    ByVal cantidadBilletesCien As Integer,  _
                    ByVal cantidadMonedasUno As Integer,  _
                    ByVal montoMonedaFraccionario As Double,  _
                    ByVal userState As Object)
            If (Me.ModificarBcBovedaOperationCompleted Is Nothing) Then
                Me.ModificarBcBovedaOperationCompleted = AddressOf Me.OnModificarBcBovedaOperationCompleted
            End If
            Me.InvokeAsync("ModificarBcBoveda", New Object() {id_Boveda, Descripcion, CodSucursal, Saldo, SaldoMin, SaldoMax, UsuarioActu, FechaActu, pwd, Sucursal, opcion, cantidadBilletesUno, cantidadBilletesCinco, cantidadBilletesDiez, cantidadBilletesVeinte, cantidadBilletesCincuenta, cantidadBilletesCien, cantidadMonedasUno, montoMonedaFraccionario}, Me.ModificarBcBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarBcBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBcBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBcBovedaCompleted(Me, New ModificarBcBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminarBcBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBcBoveda(ByVal id_Boveda As Integer, ByVal pUsuario As String, ByVal pwd As String, ByVal sucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarBcBoveda", New Object() {id_Boveda, pUsuario, pwd, sucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBcBoveda(ByVal id_Boveda As Integer, ByVal pUsuario As String, ByVal pwd As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBcBoveda", New Object() {id_Boveda, pUsuario, pwd, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBcBoveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBcBovedaAsync(ByVal id_Boveda As Integer, ByVal pUsuario As String, ByVal pwd As String, ByVal sucursal As String)
            Me.EliminarBcBovedaAsync(id_Boveda, pUsuario, pwd, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBcBovedaAsync(ByVal id_Boveda As Integer, ByVal pUsuario As String, ByVal pwd As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.EliminarBcBovedaOperationCompleted Is Nothing) Then
                Me.EliminarBcBovedaOperationCompleted = AddressOf Me.OnEliminarBcBovedaOperationCompleted
            End If
            Me.InvokeAsync("EliminarBcBoveda", New Object() {id_Boveda, pUsuario, pwd, sucursal}, Me.EliminarBcBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBcBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBcBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBcBovedaCompleted(Me, New EliminarBcBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ConsultarBcBoveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBcBoveda(ByVal id_Boveda As Integer, ByVal Opcion As Integer, ByVal CodSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBcBoveda", New Object() {id_Boveda, Opcion, CodSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBcBoveda(ByVal id_Boveda As Integer, ByVal Opcion As Integer, ByVal CodSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBcBoveda", New Object() {id_Boveda, Opcion, CodSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBcBoveda(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBcBovedaAsync(ByVal id_Boveda As Integer, ByVal Opcion As Integer, ByVal CodSucursal As String)
            Me.ConsultarBcBovedaAsync(id_Boveda, Opcion, CodSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBcBovedaAsync(ByVal id_Boveda As Integer, ByVal Opcion As Integer, ByVal CodSucursal As String, ByVal userState As Object)
            If (Me.ConsultarBcBovedaOperationCompleted Is Nothing) Then
                Me.ConsultarBcBovedaOperationCompleted = AddressOf Me.OnConsultarBcBovedaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBcBoveda", New Object() {id_Boveda, Opcion, CodSucursal}, Me.ConsultarBcBovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBcBovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBcBovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBcBovedaCompleted(Me, New ConsultarBcBovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertarBcCatTransacciones_Boveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBcCatTransacciones_Boveda(ByVal Descripcion As String, ByVal tipoMov As String, ByVal prefijoPartida As String, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String) As Integer
            Dim results() As Object = Me.Invoke("InsertarBcCatTransacciones_Boveda", New Object() {Descripcion, tipoMov, prefijoPartida, pUsuario, pwd, Sucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBcCatTransacciones_Boveda(ByVal Descripcion As String, ByVal tipoMov As String, ByVal prefijoPartida As String, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBcCatTransacciones_Boveda", New Object() {Descripcion, tipoMov, prefijoPartida, pUsuario, pwd, Sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBcCatTransacciones_Boveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBcCatTransacciones_BovedaAsync(ByVal Descripcion As String, ByVal tipoMov As String, ByVal prefijoPartida As String, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String)
            Me.InsertarBcCatTransacciones_BovedaAsync(Descripcion, tipoMov, prefijoPartida, pUsuario, pwd, Sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBcCatTransacciones_BovedaAsync(ByVal Descripcion As String, ByVal tipoMov As String, ByVal prefijoPartida As String, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String, ByVal userState As Object)
            If (Me.InsertarBcCatTransacciones_BovedaOperationCompleted Is Nothing) Then
                Me.InsertarBcCatTransacciones_BovedaOperationCompleted = AddressOf Me.OnInsertarBcCatTransacciones_BovedaOperationCompleted
            End If
            Me.InvokeAsync("InsertarBcCatTransacciones_Boveda", New Object() {Descripcion, tipoMov, prefijoPartida, pUsuario, pwd, Sucursal}, Me.InsertarBcCatTransacciones_BovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBcCatTransacciones_BovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBcCatTransacciones_BovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBcCatTransacciones_BovedaCompleted(Me, New InsertarBcCatTransacciones_BovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ModificarBcCatTransacciones_Boveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarBcCatTransacciones_Boveda(ByVal CodTransaccion As Integer, ByVal Descripcion As String, ByVal tipoMov As String, ByVal prefijoPartida As String, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String) As Integer
            Dim results() As Object = Me.Invoke("ModificarBcCatTransacciones_Boveda", New Object() {CodTransaccion, Descripcion, tipoMov, prefijoPartida, pUsuario, pwd, Sucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarBcCatTransacciones_Boveda(ByVal CodTransaccion As Integer, ByVal Descripcion As String, ByVal tipoMov As String, ByVal prefijoPartida As String, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBcCatTransacciones_Boveda", New Object() {CodTransaccion, Descripcion, tipoMov, prefijoPartida, pUsuario, pwd, Sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarBcCatTransacciones_Boveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarBcCatTransacciones_BovedaAsync(ByVal CodTransaccion As Integer, ByVal Descripcion As String, ByVal tipoMov As String, ByVal prefijoPartida As String, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String)
            Me.ModificarBcCatTransacciones_BovedaAsync(CodTransaccion, Descripcion, tipoMov, prefijoPartida, pUsuario, pwd, Sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarBcCatTransacciones_BovedaAsync(ByVal CodTransaccion As Integer, ByVal Descripcion As String, ByVal tipoMov As String, ByVal prefijoPartida As String, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String, ByVal userState As Object)
            If (Me.ModificarBcCatTransacciones_BovedaOperationCompleted Is Nothing) Then
                Me.ModificarBcCatTransacciones_BovedaOperationCompleted = AddressOf Me.OnModificarBcCatTransacciones_BovedaOperationCompleted
            End If
            Me.InvokeAsync("ModificarBcCatTransacciones_Boveda", New Object() {CodTransaccion, Descripcion, tipoMov, prefijoPartida, pUsuario, pwd, Sucursal}, Me.ModificarBcCatTransacciones_BovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarBcCatTransacciones_BovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBcCatTransacciones_BovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBcCatTransacciones_BovedaCompleted(Me, New ModificarBcCatTransacciones_BovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminarBcCatTransacciones_Boveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBcCatTransacciones_Boveda(ByVal CodTransaccion As Integer, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarBcCatTransacciones_Boveda", New Object() {CodTransaccion, pUsuario, pwd, Sucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBcCatTransacciones_Boveda(ByVal CodTransaccion As Integer, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBcCatTransacciones_Boveda", New Object() {CodTransaccion, pUsuario, pwd, Sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBcCatTransacciones_Boveda(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBcCatTransacciones_BovedaAsync(ByVal CodTransaccion As Integer, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String)
            Me.EliminarBcCatTransacciones_BovedaAsync(CodTransaccion, pUsuario, pwd, Sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBcCatTransacciones_BovedaAsync(ByVal CodTransaccion As Integer, ByVal pUsuario As String, ByVal pwd As String, ByVal Sucursal As String, ByVal userState As Object)
            If (Me.EliminarBcCatTransacciones_BovedaOperationCompleted Is Nothing) Then
                Me.EliminarBcCatTransacciones_BovedaOperationCompleted = AddressOf Me.OnEliminarBcCatTransacciones_BovedaOperationCompleted
            End If
            Me.InvokeAsync("EliminarBcCatTransacciones_Boveda", New Object() {CodTransaccion, pUsuario, pwd, Sucursal}, Me.EliminarBcCatTransacciones_BovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBcCatTransacciones_BovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBcCatTransacciones_BovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBcCatTransacciones_BovedaCompleted(Me, New EliminarBcCatTransacciones_BovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ConsultarBCCatTransacciones_Boveda", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBCCatTransacciones_Boveda(ByVal opcion As Integer, ByVal codTransaccion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBCCatTransacciones_Boveda", New Object() {opcion, codTransaccion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBCCatTransacciones_Boveda(ByVal opcion As Integer, ByVal codTransaccion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBCCatTransacciones_Boveda", New Object() {opcion, codTransaccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBCCatTransacciones_Boveda(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBCCatTransacciones_BovedaAsync(ByVal opcion As Integer, ByVal codTransaccion As Integer)
            Me.ConsultarBCCatTransacciones_BovedaAsync(opcion, codTransaccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBCCatTransacciones_BovedaAsync(ByVal opcion As Integer, ByVal codTransaccion As Integer, ByVal userState As Object)
            If (Me.ConsultarBCCatTransacciones_BovedaOperationCompleted Is Nothing) Then
                Me.ConsultarBCCatTransacciones_BovedaOperationCompleted = AddressOf Me.OnConsultarBCCatTransacciones_BovedaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBCCatTransacciones_Boveda", New Object() {opcion, codTransaccion}, Me.ConsultarBCCatTransacciones_BovedaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBCCatTransacciones_BovedaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBCCatTransacciones_BovedaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBCCatTransacciones_BovedaCompleted(Me, New ConsultarBCCatTransacciones_BovedaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/Consultar_BcMovCheques", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_BcMovCheques(ByVal Opcion As Integer, ByVal IdMovimiento As String, ByVal Num_Partida As String, ByVal IdCtaBanco As String, ByVal FechaMov As Date, ByVal NumSolicitud As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_BcMovCheques", New Object() {Opcion, IdMovimiento, Num_Partida, IdCtaBanco, FechaMov, NumSolicitud})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_BcMovCheques(ByVal Opcion As Integer, ByVal IdMovimiento As String, ByVal Num_Partida As String, ByVal IdCtaBanco As String, ByVal FechaMov As Date, ByVal NumSolicitud As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_BcMovCheques", New Object() {Opcion, IdMovimiento, Num_Partida, IdCtaBanco, FechaMov, NumSolicitud}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_BcMovCheques(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_BcMovChequesAsync(ByVal Opcion As Integer, ByVal IdMovimiento As String, ByVal Num_Partida As String, ByVal IdCtaBanco As String, ByVal FechaMov As Date, ByVal NumSolicitud As Integer)
            Me.Consultar_BcMovChequesAsync(Opcion, IdMovimiento, Num_Partida, IdCtaBanco, FechaMov, NumSolicitud, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_BcMovChequesAsync(ByVal Opcion As Integer, ByVal IdMovimiento As String, ByVal Num_Partida As String, ByVal IdCtaBanco As String, ByVal FechaMov As Date, ByVal NumSolicitud As Integer, ByVal userState As Object)
            If (Me.Consultar_BcMovChequesOperationCompleted Is Nothing) Then
                Me.Consultar_BcMovChequesOperationCompleted = AddressOf Me.OnConsultar_BcMovChequesOperationCompleted
            End If
            Me.InvokeAsync("Consultar_BcMovCheques", New Object() {Opcion, IdMovimiento, Num_Partida, IdCtaBanco, FechaMov, NumSolicitud}, Me.Consultar_BcMovChequesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_BcMovChequesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_BcMovChequesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_BcMovChequesCompleted(Me, New Consultar_BcMovChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminarBCDet_SaldosBancos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBCDet_SaldosBancos(ByVal Id_DetSalBancos As Integer) As Integer
            Dim results() As Object = Me.Invoke("EliminarBCDet_SaldosBancos", New Object() {Id_DetSalBancos})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBCDet_SaldosBancos(ByVal Id_DetSalBancos As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBCDet_SaldosBancos", New Object() {Id_DetSalBancos}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBCDet_SaldosBancos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBCDet_SaldosBancosAsync(ByVal Id_DetSalBancos As Integer)
            Me.EliminarBCDet_SaldosBancosAsync(Id_DetSalBancos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBCDet_SaldosBancosAsync(ByVal Id_DetSalBancos As Integer, ByVal userState As Object)
            If (Me.EliminarBCDet_SaldosBancosOperationCompleted Is Nothing) Then
                Me.EliminarBCDet_SaldosBancosOperationCompleted = AddressOf Me.OnEliminarBCDet_SaldosBancosOperationCompleted
            End If
            Me.InvokeAsync("EliminarBCDet_SaldosBancos", New Object() {Id_DetSalBancos}, Me.EliminarBCDet_SaldosBancosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBCDet_SaldosBancosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBCDet_SaldosBancosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBCDet_SaldosBancosCompleted(Me, New EliminarBCDet_SaldosBancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ActualizarBCDet_SaldosBancos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarBCDet_SaldosBancos(ByVal Id_DetSalBancos As Integer, ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal CodTransaccion As Char, ByVal Monto As Double, ByVal FechaTran As Date, ByVal Saldo_Ant As Double, ByVal Saldo_Actu As Double, ByVal Hora As String, ByVal Usuario As String, ByVal CodSucursal As String, ByVal IdMovimiento As String, ByVal Origen As Char) As Integer
            Dim results() As Object = Me.Invoke("ActualizarBCDet_SaldosBancos", New Object() {Id_DetSalBancos, Id_SaldosBancos, IdCtaBanco, CodTransaccion, Monto, FechaTran, Saldo_Ant, Saldo_Actu, Hora, Usuario, CodSucursal, IdMovimiento, Origen})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizarBCDet_SaldosBancos(ByVal Id_DetSalBancos As Integer, ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal CodTransaccion As Char, ByVal Monto As Double, ByVal FechaTran As Date, ByVal Saldo_Ant As Double, ByVal Saldo_Actu As Double, ByVal Hora As String, ByVal Usuario As String, ByVal CodSucursal As String, ByVal IdMovimiento As String, ByVal Origen As Char, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizarBCDet_SaldosBancos", New Object() {Id_DetSalBancos, Id_SaldosBancos, IdCtaBanco, CodTransaccion, Monto, FechaTran, Saldo_Ant, Saldo_Actu, Hora, Usuario, CodSucursal, IdMovimiento, Origen}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizarBCDet_SaldosBancos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarBCDet_SaldosBancosAsync(ByVal Id_DetSalBancos As Integer, ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal CodTransaccion As Char, ByVal Monto As Double, ByVal FechaTran As Date, ByVal Saldo_Ant As Double, ByVal Saldo_Actu As Double, ByVal Hora As String, ByVal Usuario As String, ByVal CodSucursal As String, ByVal IdMovimiento As String, ByVal Origen As Char)
            Me.ActualizarBCDet_SaldosBancosAsync(Id_DetSalBancos, Id_SaldosBancos, IdCtaBanco, CodTransaccion, Monto, FechaTran, Saldo_Ant, Saldo_Actu, Hora, Usuario, CodSucursal, IdMovimiento, Origen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarBCDet_SaldosBancosAsync(ByVal Id_DetSalBancos As Integer, ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal CodTransaccion As Char, ByVal Monto As Double, ByVal FechaTran As Date, ByVal Saldo_Ant As Double, ByVal Saldo_Actu As Double, ByVal Hora As String, ByVal Usuario As String, ByVal CodSucursal As String, ByVal IdMovimiento As String, ByVal Origen As Char, ByVal userState As Object)
            If (Me.ActualizarBCDet_SaldosBancosOperationCompleted Is Nothing) Then
                Me.ActualizarBCDet_SaldosBancosOperationCompleted = AddressOf Me.OnActualizarBCDet_SaldosBancosOperationCompleted
            End If
            Me.InvokeAsync("ActualizarBCDet_SaldosBancos", New Object() {Id_DetSalBancos, Id_SaldosBancos, IdCtaBanco, CodTransaccion, Monto, FechaTran, Saldo_Ant, Saldo_Actu, Hora, Usuario, CodSucursal, IdMovimiento, Origen}, Me.ActualizarBCDet_SaldosBancosOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarBCDet_SaldosBancosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarBCDet_SaldosBancosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarBCDet_SaldosBancosCompleted(Me, New ActualizarBCDet_SaldosBancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertarBCDet_SaldosBancos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBCDet_SaldosBancos(ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal CodTransaccion As Char, ByVal Monto As Double, ByVal FechaTran As Date, ByVal Saldo_Ant As Double, ByVal Saldo_Actu As Double, ByVal Hora As String, ByVal Usuario As String, ByVal CodSucursal As String, ByVal IdMovimiento As String, ByVal origen As Char, ByVal Observacion As String) As Integer
            Dim results() As Object = Me.Invoke("InsertarBCDet_SaldosBancos", New Object() {Id_SaldosBancos, IdCtaBanco, CodTransaccion, Monto, FechaTran, Saldo_Ant, Saldo_Actu, Hora, Usuario, CodSucursal, IdMovimiento, origen, Observacion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBCDet_SaldosBancos(ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal CodTransaccion As Char, ByVal Monto As Double, ByVal FechaTran As Date, ByVal Saldo_Ant As Double, ByVal Saldo_Actu As Double, ByVal Hora As String, ByVal Usuario As String, ByVal CodSucursal As String, ByVal IdMovimiento As String, ByVal origen As Char, ByVal Observacion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBCDet_SaldosBancos", New Object() {Id_SaldosBancos, IdCtaBanco, CodTransaccion, Monto, FechaTran, Saldo_Ant, Saldo_Actu, Hora, Usuario, CodSucursal, IdMovimiento, origen, Observacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBCDet_SaldosBancos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBCDet_SaldosBancosAsync(ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal CodTransaccion As Char, ByVal Monto As Double, ByVal FechaTran As Date, ByVal Saldo_Ant As Double, ByVal Saldo_Actu As Double, ByVal Hora As String, ByVal Usuario As String, ByVal CodSucursal As String, ByVal IdMovimiento As String, ByVal origen As Char, ByVal Observacion As String)
            Me.InsertarBCDet_SaldosBancosAsync(Id_SaldosBancos, IdCtaBanco, CodTransaccion, Monto, FechaTran, Saldo_Ant, Saldo_Actu, Hora, Usuario, CodSucursal, IdMovimiento, origen, Observacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBCDet_SaldosBancosAsync(ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal CodTransaccion As Char, ByVal Monto As Double, ByVal FechaTran As Date, ByVal Saldo_Ant As Double, ByVal Saldo_Actu As Double, ByVal Hora As String, ByVal Usuario As String, ByVal CodSucursal As String, ByVal IdMovimiento As String, ByVal origen As Char, ByVal Observacion As String, ByVal userState As Object)
            If (Me.InsertarBCDet_SaldosBancosOperationCompleted Is Nothing) Then
                Me.InsertarBCDet_SaldosBancosOperationCompleted = AddressOf Me.OnInsertarBCDet_SaldosBancosOperationCompleted
            End If
            Me.InvokeAsync("InsertarBCDet_SaldosBancos", New Object() {Id_SaldosBancos, IdCtaBanco, CodTransaccion, Monto, FechaTran, Saldo_Ant, Saldo_Actu, Hora, Usuario, CodSucursal, IdMovimiento, origen, Observacion}, Me.InsertarBCDet_SaldosBancosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBCDet_SaldosBancosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBCDet_SaldosBancosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBCDet_SaldosBancosCompleted(Me, New InsertarBCDet_SaldosBancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ConsultarBCDet_SaldosBancos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBCDet_SaldosBancos(ByVal Id_DetSalBancos As Integer, ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal IdMovimiento As String, ByVal IdCtaBanco As String, ByVal Origen As Char) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBCDet_SaldosBancos", New Object() {Id_DetSalBancos, Opcion, FechaInicio, FechaFin, IdMovimiento, IdCtaBanco, Origen})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBCDet_SaldosBancos(ByVal Id_DetSalBancos As Integer, ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal IdMovimiento As String, ByVal IdCtaBanco As String, ByVal Origen As Char, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBCDet_SaldosBancos", New Object() {Id_DetSalBancos, Opcion, FechaInicio, FechaFin, IdMovimiento, IdCtaBanco, Origen}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBCDet_SaldosBancos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBCDet_SaldosBancosAsync(ByVal Id_DetSalBancos As Integer, ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal IdMovimiento As String, ByVal IdCtaBanco As String, ByVal Origen As Char)
            Me.ConsultarBCDet_SaldosBancosAsync(Id_DetSalBancos, Opcion, FechaInicio, FechaFin, IdMovimiento, IdCtaBanco, Origen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBCDet_SaldosBancosAsync(ByVal Id_DetSalBancos As Integer, ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal IdMovimiento As String, ByVal IdCtaBanco As String, ByVal Origen As Char, ByVal userState As Object)
            If (Me.ConsultarBCDet_SaldosBancosOperationCompleted Is Nothing) Then
                Me.ConsultarBCDet_SaldosBancosOperationCompleted = AddressOf Me.OnConsultarBCDet_SaldosBancosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBCDet_SaldosBancos", New Object() {Id_DetSalBancos, Opcion, FechaInicio, FechaFin, IdMovimiento, IdCtaBanco, Origen}, Me.ConsultarBCDet_SaldosBancosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBCDet_SaldosBancosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBCDet_SaldosBancosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBCDet_SaldosBancosCompleted(Me, New ConsultarBCDet_SaldosBancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminarBCSaldos_Bancos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBCSaldos_Bancos(ByVal Id_SaldosBancos As Integer) As Integer
            Dim results() As Object = Me.Invoke("EliminarBCSaldos_Bancos", New Object() {Id_SaldosBancos})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBCSaldos_Bancos(ByVal Id_SaldosBancos As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBCSaldos_Bancos", New Object() {Id_SaldosBancos}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBCSaldos_Bancos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBCSaldos_BancosAsync(ByVal Id_SaldosBancos As Integer)
            Me.EliminarBCSaldos_BancosAsync(Id_SaldosBancos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBCSaldos_BancosAsync(ByVal Id_SaldosBancos As Integer, ByVal userState As Object)
            If (Me.EliminarBCSaldos_BancosOperationCompleted Is Nothing) Then
                Me.EliminarBCSaldos_BancosOperationCompleted = AddressOf Me.OnEliminarBCSaldos_BancosOperationCompleted
            End If
            Me.InvokeAsync("EliminarBCSaldos_Bancos", New Object() {Id_SaldosBancos}, Me.EliminarBCSaldos_BancosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBCSaldos_BancosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBCSaldos_BancosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBCSaldos_BancosCompleted(Me, New EliminarBCSaldos_BancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ActualizarBCSaldos_Bancos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarBCSaldos_Bancos(ByVal IdBanco As Integer, ByVal IdCtaBanco As String, ByVal Saldo As Double, ByVal Fech_Ult_Mov As Date) As Integer
            Dim results() As Object = Me.Invoke("ActualizarBCSaldos_Bancos", New Object() {IdBanco, IdCtaBanco, Saldo, Fech_Ult_Mov})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizarBCSaldos_Bancos(ByVal IdBanco As Integer, ByVal IdCtaBanco As String, ByVal Saldo As Double, ByVal Fech_Ult_Mov As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizarBCSaldos_Bancos", New Object() {IdBanco, IdCtaBanco, Saldo, Fech_Ult_Mov}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizarBCSaldos_Bancos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarBCSaldos_BancosAsync(ByVal IdBanco As Integer, ByVal IdCtaBanco As String, ByVal Saldo As Double, ByVal Fech_Ult_Mov As Date)
            Me.ActualizarBCSaldos_BancosAsync(IdBanco, IdCtaBanco, Saldo, Fech_Ult_Mov, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarBCSaldos_BancosAsync(ByVal IdBanco As Integer, ByVal IdCtaBanco As String, ByVal Saldo As Double, ByVal Fech_Ult_Mov As Date, ByVal userState As Object)
            If (Me.ActualizarBCSaldos_BancosOperationCompleted Is Nothing) Then
                Me.ActualizarBCSaldos_BancosOperationCompleted = AddressOf Me.OnActualizarBCSaldos_BancosOperationCompleted
            End If
            Me.InvokeAsync("ActualizarBCSaldos_Bancos", New Object() {IdBanco, IdCtaBanco, Saldo, Fech_Ult_Mov}, Me.ActualizarBCSaldos_BancosOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarBCSaldos_BancosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarBCSaldos_BancosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarBCSaldos_BancosCompleted(Me, New ActualizarBCSaldos_BancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertarBCSaldos_Bancos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBCSaldos_Bancos(ByVal IdBanco As Integer, ByVal IdCtaBanco As String, ByVal Saldo As Double, ByVal Fech_Ult_Mov As Date) As Integer
            Dim results() As Object = Me.Invoke("InsertarBCSaldos_Bancos", New Object() {IdBanco, IdCtaBanco, Saldo, Fech_Ult_Mov})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBCSaldos_Bancos(ByVal IdBanco As Integer, ByVal IdCtaBanco As String, ByVal Saldo As Double, ByVal Fech_Ult_Mov As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBCSaldos_Bancos", New Object() {IdBanco, IdCtaBanco, Saldo, Fech_Ult_Mov}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBCSaldos_Bancos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBCSaldos_BancosAsync(ByVal IdBanco As Integer, ByVal IdCtaBanco As String, ByVal Saldo As Double, ByVal Fech_Ult_Mov As Date)
            Me.InsertarBCSaldos_BancosAsync(IdBanco, IdCtaBanco, Saldo, Fech_Ult_Mov, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBCSaldos_BancosAsync(ByVal IdBanco As Integer, ByVal IdCtaBanco As String, ByVal Saldo As Double, ByVal Fech_Ult_Mov As Date, ByVal userState As Object)
            If (Me.InsertarBCSaldos_BancosOperationCompleted Is Nothing) Then
                Me.InsertarBCSaldos_BancosOperationCompleted = AddressOf Me.OnInsertarBCSaldos_BancosOperationCompleted
            End If
            Me.InvokeAsync("InsertarBCSaldos_Bancos", New Object() {IdBanco, IdCtaBanco, Saldo, Fech_Ult_Mov}, Me.InsertarBCSaldos_BancosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBCSaldos_BancosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBCSaldos_BancosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBCSaldos_BancosCompleted(Me, New InsertarBCSaldos_BancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ConsultarBCSaldos_Bancos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBCSaldos_Bancos(ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal Opcion As Integer, ByVal IdCuenta As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBCSaldos_Bancos", New Object() {Id_SaldosBancos, IdCtaBanco, Opcion, IdCuenta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBCSaldos_Bancos(ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal Opcion As Integer, ByVal IdCuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBCSaldos_Bancos", New Object() {Id_SaldosBancos, IdCtaBanco, Opcion, IdCuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBCSaldos_Bancos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBCSaldos_BancosAsync(ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal Opcion As Integer, ByVal IdCuenta As String)
            Me.ConsultarBCSaldos_BancosAsync(Id_SaldosBancos, IdCtaBanco, Opcion, IdCuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBCSaldos_BancosAsync(ByVal Id_SaldosBancos As Integer, ByVal IdCtaBanco As String, ByVal Opcion As Integer, ByVal IdCuenta As String, ByVal userState As Object)
            If (Me.ConsultarBCSaldos_BancosOperationCompleted Is Nothing) Then
                Me.ConsultarBCSaldos_BancosOperationCompleted = AddressOf Me.OnConsultarBCSaldos_BancosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBCSaldos_Bancos", New Object() {Id_SaldosBancos, IdCtaBanco, Opcion, IdCuenta}, Me.ConsultarBCSaldos_BancosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBCSaldos_BancosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBCSaldos_BancosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBCSaldos_BancosCompleted(Me, New ConsultarBCSaldos_BancosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/AnulaCheque", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AnulaCheque(ByVal pIdCuenta As String, ByVal pGeneraPartida As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal numPartida As String) As Boolean
            Dim results() As Object = Me.Invoke("AnulaCheque", New Object() {pIdCuenta, pGeneraPartida, pUs, pPa, pSucursal, numPartida})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAnulaCheque(ByVal pIdCuenta As String, ByVal pGeneraPartida As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal numPartida As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AnulaCheque", New Object() {pIdCuenta, pGeneraPartida, pUs, pPa, pSucursal, numPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAnulaCheque(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AnulaChequeAsync(ByVal pIdCuenta As String, ByVal pGeneraPartida As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal numPartida As String)
            Me.AnulaChequeAsync(pIdCuenta, pGeneraPartida, pUs, pPa, pSucursal, numPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AnulaChequeAsync(ByVal pIdCuenta As String, ByVal pGeneraPartida As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal numPartida As String, ByVal userState As Object)
            If (Me.AnulaChequeOperationCompleted Is Nothing) Then
                Me.AnulaChequeOperationCompleted = AddressOf Me.OnAnulaChequeOperationCompleted
            End If
            Me.InvokeAsync("AnulaCheque", New Object() {pIdCuenta, pGeneraPartida, pUs, pPa, pSucursal, numPartida}, Me.AnulaChequeOperationCompleted, userState)
        End Sub
        
        Private Sub OnAnulaChequeOperationCompleted(ByVal arg As Object)
            If (Not (Me.AnulaChequeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AnulaChequeCompleted(Me, New AnulaChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminaBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaBanco(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaBanco", New Object() {pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaBanco(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaBanco", New Object() {pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaBanco(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaBancoAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaBancoAsync(pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaBancoAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaBancoOperationCompleted Is Nothing) Then
                Me.EliminaBancoOperationCompleted = AddressOf Me.OnEliminaBancoOperationCompleted
            End If
            Me.InvokeAsync("EliminaBanco", New Object() {pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaBancoCompleted(Me, New EliminaBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminaCheque", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaCheque(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaCheque", New Object() {pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaCheque(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaCheque", New Object() {pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaCheque(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaChequeAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaChequeAsync(pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaChequeAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaChequeOperationCompleted Is Nothing) Then
                Me.EliminaChequeOperationCompleted = AddressOf Me.OnEliminaChequeOperationCompleted
            End If
            Me.InvokeAsync("EliminaCheque", New Object() {pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaChequeOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaChequeOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaChequeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaChequeCompleted(Me, New EliminaChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/EliminaCuentaBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaCuentaBanco(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaCuentaBanco", New Object() {pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaCuentaBanco(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaCuentaBanco", New Object() {pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaCuentaBanco(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaCuentaBancoAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaCuentaBancoAsync(pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaCuentaBancoAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaCuentaBancoOperationCompleted Is Nothing) Then
                Me.EliminaCuentaBancoOperationCompleted = AddressOf Me.OnEliminaCuentaBancoOperationCompleted
            End If
            Me.InvokeAsync("EliminaCuentaBanco", New Object() {pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaCuentaBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaCuentaBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaCuentaBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaCuentaBancoCompleted(Me, New EliminaCuentaBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ImprimeCheque", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImprimeCheque(ByVal pNumCheque As String, ByVal pNumPartida As String, ByVal pFecha As Date, ByVal pAnulado As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ImprimeCheque", New Object() {pNumCheque, pNumPartida, pFecha, pAnulado, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginImprimeCheque(ByVal pNumCheque As String, ByVal pNumPartida As String, ByVal pFecha As Date, ByVal pAnulado As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ImprimeCheque", New Object() {pNumCheque, pNumPartida, pFecha, pAnulado, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndImprimeCheque(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImprimeChequeAsync(ByVal pNumCheque As String, ByVal pNumPartida As String, ByVal pFecha As Date, ByVal pAnulado As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ImprimeChequeAsync(pNumCheque, pNumPartida, pFecha, pAnulado, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImprimeChequeAsync(ByVal pNumCheque As String, ByVal pNumPartida As String, ByVal pFecha As Date, ByVal pAnulado As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ImprimeChequeOperationCompleted Is Nothing) Then
                Me.ImprimeChequeOperationCompleted = AddressOf Me.OnImprimeChequeOperationCompleted
            End If
            Me.InvokeAsync("ImprimeCheque", New Object() {pNumCheque, pNumPartida, pFecha, pAnulado, pUs, pPa, pSucursal}, Me.ImprimeChequeOperationCompleted, userState)
        End Sub
        
        Private Sub OnImprimeChequeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImprimeChequeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImprimeChequeCompleted(Me, New ImprimeChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertaBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaBanco(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaBanco", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaBanco(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaBanco", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaBanco(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaBancoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaBancoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaBancoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaBancoOperationCompleted Is Nothing) Then
                Me.InsertaBancoOperationCompleted = AddressOf Me.OnInsertaBancoOperationCompleted
            End If
            Me.InvokeAsync("InsertaBanco", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaBancoCompleted(Me, New InsertaBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertaCheque", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaCheque(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaCheque", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaCheque(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaCheque", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaCheque(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaChequeAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaChequeAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaChequeAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaChequeOperationCompleted Is Nothing) Then
                Me.InsertaChequeOperationCompleted = AddressOf Me.OnInsertaChequeOperationCompleted
            End If
            Me.InvokeAsync("InsertaCheque", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaChequeOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaChequeOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaChequeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaChequeCompleted(Me, New InsertaChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/InsertaCuentaBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaCuentaBanco(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaCuentaBanco", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaCuentaBanco(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaCuentaBanco", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaCuentaBanco(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaCuentaBancoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaCuentaBancoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaCuentaBancoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaCuentaBancoOperationCompleted Is Nothing) Then
                Me.InsertaCuentaBancoOperationCompleted = AddressOf Me.OnInsertaCuentaBancoOperationCompleted
            End If
            Me.InvokeAsync("InsertaCuentaBanco", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaCuentaBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaCuentaBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaCuentaBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaCuentaBancoCompleted(Me, New InsertaCuentaBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ModificaBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaBanco(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaBanco", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaBanco(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaBanco", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaBanco(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaBancoAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaBancoAsync(pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaBancoAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaBancoOperationCompleted Is Nothing) Then
                Me.ModificaBancoOperationCompleted = AddressOf Me.OnModificaBancoOperationCompleted
            End If
            Me.InvokeAsync("ModificaBanco", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaBancoCompleted(Me, New ModificaBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ModificaCheque", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaCheque(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaCheque", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaCheque(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaCheque", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaCheque(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaChequeAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaChequeAsync(pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaChequeAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaChequeOperationCompleted Is Nothing) Then
                Me.ModificaChequeOperationCompleted = AddressOf Me.OnModificaChequeOperationCompleted
            End If
            Me.InvokeAsync("ModificaCheque", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaChequeOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaChequeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaChequeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaChequeCompleted(Me, New ModificaChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ModificaCuentaBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaCuentaBanco(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaCuentaBanco", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaCuentaBanco(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaCuentaBanco", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaCuentaBanco(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaCuentaBancoAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaCuentaBancoAsync(pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaCuentaBancoAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaCuentaBancoOperationCompleted Is Nothing) Then
                Me.ModificaCuentaBancoOperationCompleted = AddressOf Me.OnModificaCuentaBancoOperationCompleted
            End If
            Me.InvokeAsync("ModificaCuentaBanco", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaCuentaBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaCuentaBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaCuentaBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaCuentaBancoCompleted(Me, New ModificaCuentaBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ObtenerBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerBanco(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerBanco", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerBanco(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerBanco", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerBanco(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerBancoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerBancoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerBancoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerBancoOperationCompleted Is Nothing) Then
                Me.ObtenerBancoOperationCompleted = AddressOf Me.OnObtenerBancoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerBanco", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerBancoCompleted(Me, New ObtenerBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ObtenerCheque", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCheque(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCheque", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCheque(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCheque", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCheque(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerChequeAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerChequeAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerChequeAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerChequeOperationCompleted Is Nothing) Then
                Me.ObtenerChequeOperationCompleted = AddressOf Me.OnObtenerChequeOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCheque", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerChequeOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerChequeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerChequeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerChequeCompleted(Me, New ObtenerChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ObtenerCuentaBanco", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCuentaBanco(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCuentaBanco", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCuentaBanco(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCuentaBanco", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCuentaBanco(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCuentaBancoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCuentaBancoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCuentaBancoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCuentaBancoOperationCompleted Is Nothing) Then
                Me.ObtenerCuentaBancoOperationCompleted = AddressOf Me.OnObtenerCuentaBancoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCuentaBanco", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerCuentaBancoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCuentaBancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCuentaBancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCuentaBancoCompleted(Me, New ObtenerCuentaBancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/ObtenerPartida", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPartida(ByVal pIdCheque As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPartida", New Object() {pIdCheque, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerPartida(ByVal pIdCheque As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerPartida", New Object() {pIdCheque, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerPartida(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPartidaAsync(ByVal pIdCheque As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerPartidaAsync(pIdCheque, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPartidaAsync(ByVal pIdCheque As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerPartidaOperationCompleted Is Nothing) Then
                Me.ObtenerPartidaOperationCompleted = AddressOf Me.OnObtenerPartidaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPartida", New Object() {pIdCheque, pUs, pPa, pSucursal}, Me.ObtenerPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPartidaCompleted(Me, New ObtenerPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/RepChequesEmitidos", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepChequesEmitidos(ByVal pTodos As Boolean, ByVal pCuenta As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepChequesEmitidos", New Object() {pTodos, pCuenta, pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepChequesEmitidos(ByVal pTodos As Boolean, ByVal pCuenta As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepChequesEmitidos", New Object() {pTodos, pCuenta, pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepChequesEmitidos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepChequesEmitidosAsync(ByVal pTodos As Boolean, ByVal pCuenta As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepChequesEmitidosAsync(pTodos, pCuenta, pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepChequesEmitidosAsync(ByVal pTodos As Boolean, ByVal pCuenta As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepChequesEmitidosOperationCompleted Is Nothing) Then
                Me.RepChequesEmitidosOperationCompleted = AddressOf Me.OnRepChequesEmitidosOperationCompleted
            End If
            Me.InvokeAsync("RepChequesEmitidos", New Object() {pTodos, pCuenta, pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.RepChequesEmitidosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepChequesEmitidosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepChequesEmitidosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepChequesEmitidosCompleted(Me, New RepChequesEmitidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibBancos/TrasladaPartidasCheques", RequestNamespace:="http://tempuri.org/wsSif/wsLibBancos", ResponseNamespace:="http://tempuri.org/wsSif/wsLibBancos", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrasladaPartidasCheques(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("TrasladaPartidasCheques", New Object() {pUs, pPa, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginTrasladaPartidasCheques(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TrasladaPartidasCheques", New Object() {pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTrasladaPartidasCheques(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrasladaPartidasChequesAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.TrasladaPartidasChequesAsync(pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrasladaPartidasChequesAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.TrasladaPartidasChequesOperationCompleted Is Nothing) Then
                Me.TrasladaPartidasChequesOperationCompleted = AddressOf Me.OnTrasladaPartidasChequesOperationCompleted
            End If
            Me.InvokeAsync("TrasladaPartidasCheques", New Object() {pUs, pPa, pSucursal}, Me.TrasladaPartidasChequesOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrasladaPartidasChequesOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrasladaPartidasChequesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrasladaPartidasChequesCompleted(Me, New TrasladaPartidasChequesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub validarDenominacionesBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As validarDenominacionesBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarDenominacionesBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBcCatCtasContablesChequesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBcCatCtasContablesChequesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBcCatCtasContablesChequesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarBcCatCtasContablesChequesCompletedEventHandler(ByVal sender As Object, ByVal e As insertarBcCatCtasContablesChequesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarBcCatCtasContablesChequesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarBcCatCtasContablesChequesCompletedEventHandler(ByVal sender As Object, ByVal e As modificarBcCatCtasContablesChequesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarBcCatCtasContablesChequesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarBcCatCtasContablesChequesCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarBcCatCtasContablesChequesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarBcCatCtasContablesChequesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub anularSolicitudBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As anularSolicitudBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class anularSolicitudBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarDetalleRemesaBancoCompletedEventHandler(ByVal sender As Object, ByVal e As insertarDetalleRemesaBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarDetalleRemesaBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CambiosEfectivoCompletedEventHandler(ByVal sender As Object, ByVal e As CambiosEfectivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiosEfectivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub movimientosBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As movimientosBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class movimientosBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarBcMovimientosBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As insertarBcMovimientosBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarBcMovimientosBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarBcMovimientosBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As modificarBcMovimientosBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarBcMovimientosBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarBcMovimientosBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarBcMovimientosBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarBcMovimientosBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarBcMovimientosBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarBcMovimientosBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarBcMovimientosBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBcSucursales_TransaccionesBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBcSucursales_TransaccionesBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBcSucursales_TransaccionesBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBcSucursales_TransaccionesBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBcSucursales_TransaccionesBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBcSucursales_TransaccionesBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActualizarBcSucursales_TransaccionesBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarBcSucursales_TransaccionesBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarBcSucursales_TransaccionesBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBcSucursales_TransaccionesBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBcSucursales_TransaccionesBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBcSucursales_TransaccionesBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActivarSolicitudBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ActivarSolicitudBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActivarSolicitudBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ValidarMontoMaxBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarMontoMaxBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarMontoMaxBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ValidarMontoMinBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarMontoMinBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarMontoMinBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBcSolicitudes_BovedaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBcSolicitudes_BovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBcSolicitudes_BovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarBcSolicitudes_BovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarBcSolicitudes_BovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarBcSolicitudes_BovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBcSolicitudes_BovedaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBcSolicitudes_BovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBcSolicitudes_BovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBcSolicitudes_BovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBcSolicitudes_BovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBcSolicitudes_BovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBcBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBcBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBcBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarBcBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarBcBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarBcBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBcBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBcBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBcBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBcBovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBcBovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBcBovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBcCatTransacciones_BovedaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBcCatTransacciones_BovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBcCatTransacciones_BovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarBcCatTransacciones_BovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarBcCatTransacciones_BovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarBcCatTransacciones_BovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBcCatTransacciones_BovedaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBcCatTransacciones_BovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBcCatTransacciones_BovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBCCatTransacciones_BovedaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBCCatTransacciones_BovedaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBCCatTransacciones_BovedaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Consultar_BcMovChequesCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_BcMovChequesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_BcMovChequesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBCDet_SaldosBancosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBCDet_SaldosBancosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBCDet_SaldosBancosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActualizarBCDet_SaldosBancosCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarBCDet_SaldosBancosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarBCDet_SaldosBancosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBCDet_SaldosBancosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBCDet_SaldosBancosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBCDet_SaldosBancosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBCDet_SaldosBancosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBCDet_SaldosBancosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBCDet_SaldosBancosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBCSaldos_BancosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBCSaldos_BancosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBCSaldos_BancosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActualizarBCSaldos_BancosCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarBCSaldos_BancosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarBCSaldos_BancosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBCSaldos_BancosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBCSaldos_BancosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBCSaldos_BancosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBCSaldos_BancosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBCSaldos_BancosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBCSaldos_BancosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AnulaChequeCompletedEventHandler(ByVal sender As Object, ByVal e As AnulaChequeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AnulaChequeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaBancoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaChequeCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaChequeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaChequeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaCuentaBancoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaCuentaBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaCuentaBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ImprimeChequeCompletedEventHandler(ByVal sender As Object, ByVal e As ImprimeChequeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImprimeChequeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaBancoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaChequeCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaChequeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaChequeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaCuentaBancoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaCuentaBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaCuentaBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaBancoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaChequeCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaChequeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaChequeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaCuentaBancoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaCuentaBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaCuentaBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerBancoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerChequeCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerChequeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerChequeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCuentaBancoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCuentaBancoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCuentaBancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepChequesEmitidosCompletedEventHandler(ByVal sender As Object, ByVal e As RepChequesEmitidosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepChequesEmitidosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub TrasladaPartidasChequesCompletedEventHandler(ByVal sender As Object, ByVal e As TrasladaPartidasChequesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrasladaPartidasChequesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
