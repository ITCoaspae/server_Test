'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrConta
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibContabSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibContab")>  _
    Partial Public Class wsLibContab
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private distribucionCxCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private anularCuentaPorCobrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ingresarAbonoCuentaPorCobrarTransferenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCuentaPorCobrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ingresarCuentaPorCobrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCaDiarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private guardarPartidaValorFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesarSaldosNuevoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarContaIndiceLiquidezOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarContaIndiceLiquidezOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarContaIndiceLiquidezOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarCodCostoXsucursalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarCodCostoXcuentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Recuperar_Cta_x_Centro_CostoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCat_TipoCtas_ContablesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarCat_TipoCtas_ContablesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarCat_TipoCtas_ContablesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCat_TipoCtas_ContablesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarPartidasAutomaticasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCaProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarCaProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarCaProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCaProveedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCaCompraCierreMesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private actualizarCaCompraCierreMesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCaCompraCierreMesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private anularCompraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarCaComprasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarCaComprasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarCaComprasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarCaComprasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private generarNumeroPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CrearPartidasCorteDiarioCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CrearPdaCorteDiarioCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarIngresosCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rpt_EstadoResultadoHistoricoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rpt_EstadoResultadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private generarPartidaValorFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AnulaPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AnulaPartidaAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutorizaPartidasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutorizaPartidasAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxEstadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxEstadoAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxFechaAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxMesyAnioActualOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxMesyAnioActualAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxNumeroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxNumeroAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxTipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarPartidasxTipoAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaPartidaAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaPartidaModuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CierreContableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CierreMesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaCierreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaPartidasxMesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaPartidasxMesAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDetParametroPartidaIntegracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarParametroPartidaIntegracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaSaldosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreacionSaldosHistoricosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaCuentaBeneficioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaCuentaContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaCuentaCostosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaDetParametroPartidaIntegracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaNivelBeneficiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaNivelContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaNivelCostosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaParametroPartidaIntegracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminaPartidaAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraBalanceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraBalance_HistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraEstResOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraPartidaIntegracionAhorrosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraPartidaIntegracionIngresoCajaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraPartidaInteresesPagadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerarPartidaLiquidacionAspiranteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerarPartidaRenunciaAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaCuentaBeneficioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaCuentaContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaCuentaCostosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaDetParametroPartidaIntegracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaNivelBeneficiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaNivelContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaNivelCostosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaParametroPartidaIntegracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaPartidaAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaPartidaModuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaCuentaBeneficioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaCuentaContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaCuentaCostosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaDetParametroPartidaIntegracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaNivelBeneficiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaNivelContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaNivelCostosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaParametroPartidaIntegracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaPartidaAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaPartidaModuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatBeneficioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatCostosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerEstadoPartidasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerNivelesBeneficiosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerNivelesContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerNivelesCostosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerPartidaVaciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTipoPartidasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTipoPartidasAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTipoPartidasBCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PartidaAperturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesarSaldosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesoInicioEjercicioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepAuxMayorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepBalComprobOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepDiarioMayorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepMovxCtaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepObtenerCatContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepPartidasDiarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepPartidasDiarioAutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaCuentaContabOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrConta_wsLibContab
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event distribucionCxCCompleted As distribucionCxCCompletedEventHandler
        
        '''<remarks/>
        Public Event anularCuentaPorCobrarCompleted As anularCuentaPorCobrarCompletedEventHandler
        
        '''<remarks/>
        Public Event ingresarAbonoCuentaPorCobrarTransferenciaCompleted As ingresarAbonoCuentaPorCobrarTransferenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCuentaPorCobrarCompleted As consultarCuentaPorCobrarCompletedEventHandler
        
        '''<remarks/>
        Public Event ingresarCuentaPorCobrarCompleted As ingresarCuentaPorCobrarCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCaDiarioCompleted As consultarCaDiarioCompletedEventHandler
        
        '''<remarks/>
        Public Event guardarPartidaValorFechaCompleted As guardarPartidaValorFechaCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesarSaldosNuevoCompleted As ProcesarSaldosNuevoCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarContaIndiceLiquidezCompleted As insertarContaIndiceLiquidezCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarContaIndiceLiquidezCompleted As modificarContaIndiceLiquidezCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarContaIndiceLiquidezCompleted As consultarContaIndiceLiquidezCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarCodCostoXsucursalCompleted As RecuperarCodCostoXsucursalCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarCodCostoXcuentaCompleted As RecuperarCodCostoXcuentaCompletedEventHandler
        
        '''<remarks/>
        Public Event Recuperar_Cta_x_Centro_CostoCompleted As Recuperar_Cta_x_Centro_CostoCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCat_TipoCtas_ContablesCompleted As insertarCat_TipoCtas_ContablesCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarCat_TipoCtas_ContablesCompleted As modificarCat_TipoCtas_ContablesCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarCat_TipoCtas_ContablesCompleted As eliminarCat_TipoCtas_ContablesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCat_TipoCtas_ContablesCompleted As consultarCat_TipoCtas_ContablesCompletedEventHandler
        
        '''<remarks/>
        Public Event validarPartidasAutomaticasCompleted As validarPartidasAutomaticasCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCaProveedoresCompleted As insertarCaProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarCaProveedoresCompleted As modificarCaProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarCaProveedoresCompleted As eliminarCaProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCaProveedoresCompleted As consultarCaProveedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCaCompraCierreMesCompleted As insertarCaCompraCierreMesCompletedEventHandler
        
        '''<remarks/>
        Public Event actualizarCaCompraCierreMesCompleted As actualizarCaCompraCierreMesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCaCompraCierreMesCompleted As consultarCaCompraCierreMesCompletedEventHandler
        
        '''<remarks/>
        Public Event anularCompraCompleted As anularCompraCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarCaComprasCompleted As insertarCaComprasCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarCaComprasCompleted As modificarCaComprasCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarCaComprasCompleted As eliminarCaComprasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarCaComprasCompleted As consultarCaComprasCompletedEventHandler
        
        '''<remarks/>
        Public Event generarNumeroPartidaCompleted As generarNumeroPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event CrearPartidasCorteDiarioCajaCompleted As CrearPartidasCorteDiarioCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event CrearPdaCorteDiarioCajaCompleted As CrearPdaCorteDiarioCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarIngresosCajaCompleted As ConsultarIngresosCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event Rpt_EstadoResultadoHistoricoCompleted As Rpt_EstadoResultadoHistoricoCompletedEventHandler
        
        '''<remarks/>
        Public Event Rpt_EstadoResultadoCompleted As Rpt_EstadoResultadoCompletedEventHandler
        
        '''<remarks/>
        Public Event generarPartidaValorFechaCompleted As generarPartidaValorFechaCompletedEventHandler
        
        '''<remarks/>
        Public Event AnulaPartidaCompleted As AnulaPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event AnulaPartidaAutCompleted As AnulaPartidaAutCompletedEventHandler
        
        '''<remarks/>
        Public Event AutorizaPartidasCompleted As AutorizaPartidasCompletedEventHandler
        
        '''<remarks/>
        Public Event AutorizaPartidasAutCompleted As AutorizaPartidasAutCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxEstadoCompleted As BuscarPartidasxEstadoCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxEstadoAutCompleted As BuscarPartidasxEstadoAutCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxFechaCompleted As BuscarPartidasxFechaCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxFechaAutCompleted As BuscarPartidasxFechaAutCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxMesyAnioActualCompleted As BuscarPartidasxMesyAnioActualCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxMesyAnioActualAutCompleted As BuscarPartidasxMesyAnioActualAutCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxNumeroCompleted As BuscarPartidasxNumeroCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxNumeroAutCompleted As BuscarPartidasxNumeroAutCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxTipoCompleted As BuscarPartidasxTipoCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarPartidasxTipoAutCompleted As BuscarPartidasxTipoAutCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaPartidaCompleted As CargaPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaPartidaAutCompleted As CargaPartidaAutCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaPartidaModuloCompleted As CargaPartidaModuloCompletedEventHandler
        
        '''<remarks/>
        Public Event CierreContableCompleted As CierreContableCompletedEventHandler
        
        '''<remarks/>
        Public Event CierreMesCompleted As CierreMesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaCierreCompleted As ConsultaCierreCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaPartidasxMesCompleted As ConsultaPartidasxMesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaPartidasxMesAutCompleted As ConsultaPartidasxMesAutCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDetParametroPartidaIntegracionCompleted As ConsultarDetParametroPartidaIntegracionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarParametroPartidaIntegracionCompleted As ConsultarParametroPartidaIntegracionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaSaldosCompleted As ConsultaSaldosCompletedEventHandler
        
        '''<remarks/>
        Public Event CreacionSaldosHistoricosCompleted As CreacionSaldosHistoricosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaCuentaBeneficioCompleted As EliminaCuentaBeneficioCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaCuentaContabCompleted As EliminaCuentaContabCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaCuentaCostosCompleted As EliminaCuentaCostosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaDetParametroPartidaIntegracionCompleted As EliminaDetParametroPartidaIntegracionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaNivelBeneficiosCompleted As EliminaNivelBeneficiosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaNivelContabCompleted As EliminaNivelContabCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaNivelCostosCompleted As EliminaNivelCostosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaParametroPartidaIntegracionCompleted As EliminaParametroPartidaIntegracionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaPartidaCompleted As EliminaPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminaPartidaAutCompleted As EliminaPartidaAutCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraBalanceCompleted As GeneraBalanceCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraBalance_HistCompleted As GeneraBalance_HistCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraEstResCompleted As GeneraEstResCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraPartidaIntegracionAhorrosCompleted As GeneraPartidaIntegracionAhorrosCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraPartidaIntegracionIngresoCajaCompleted As GeneraPartidaIntegracionIngresoCajaCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraPartidaInteresesPagadosCompleted As GeneraPartidaInteresesPagadosCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerarPartidaLiquidacionAspiranteCompleted As GenerarPartidaLiquidacionAspiranteCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerarPartidaRenunciaAsociadoCompleted As GenerarPartidaRenunciaAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaCuentaBeneficioCompleted As InsertaCuentaBeneficioCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaCuentaContabCompleted As InsertaCuentaContabCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaCuentaCostosCompleted As InsertaCuentaCostosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaDetParametroPartidaIntegracionCompleted As InsertaDetParametroPartidaIntegracionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaNivelBeneficiosCompleted As InsertaNivelBeneficiosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaNivelContabCompleted As InsertaNivelContabCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaNivelCostosCompleted As InsertaNivelCostosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaParametroPartidaIntegracionCompleted As InsertaParametroPartidaIntegracionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaPartidaCompleted As InsertaPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaPartidaAutCompleted As InsertaPartidaAutCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaPartidaModuloCompleted As InsertaPartidaModuloCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaCuentaBeneficioCompleted As ModificaCuentaBeneficioCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaCuentaContabCompleted As ModificaCuentaContabCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaCuentaCostosCompleted As ModificaCuentaCostosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaDetParametroPartidaIntegracionCompleted As ModificaDetParametroPartidaIntegracionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaNivelBeneficiosCompleted As ModificaNivelBeneficiosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaNivelContabCompleted As ModificaNivelContabCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaNivelCostosCompleted As ModificaNivelCostosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaParametroPartidaIntegracionCompleted As ModificaParametroPartidaIntegracionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaPartidaCompleted As ModificaPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaPartidaAutCompleted As ModificaPartidaAutCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaPartidaModuloCompleted As ModificaPartidaModuloCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatBeneficioCompleted As ObtenerCatBeneficioCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatContabCompleted As ObtenerCatContabCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatCostosCompleted As ObtenerCatCostosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerEstadoPartidasCompleted As ObtenerEstadoPartidasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerNivelesBeneficiosCompleted As ObtenerNivelesBeneficiosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerNivelesContabCompleted As ObtenerNivelesContabCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerNivelesCostosCompleted As ObtenerNivelesCostosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerPartidaVaciaCompleted As ObtenerPartidaVaciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTipoPartidasCompleted As ObtenerTipoPartidasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTipoPartidasAutCompleted As ObtenerTipoPartidasAutCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTipoPartidasBCCompleted As ObtenerTipoPartidasBCCompletedEventHandler
        
        '''<remarks/>
        Public Event PartidaAperturaCompleted As PartidaAperturaCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesarSaldosCompleted As ProcesarSaldosCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesoInicioEjercicioCompleted As ProcesoInicioEjercicioCompletedEventHandler
        
        '''<remarks/>
        Public Event RepAuxMayorCompleted As RepAuxMayorCompletedEventHandler
        
        '''<remarks/>
        Public Event RepBalComprobCompleted As RepBalComprobCompletedEventHandler
        
        '''<remarks/>
        Public Event RepDiarioMayorCompleted As RepDiarioMayorCompletedEventHandler
        
        '''<remarks/>
        Public Event RepMovxCtaCompleted As RepMovxCtaCompletedEventHandler
        
        '''<remarks/>
        Public Event RepObtenerCatContabCompleted As RepObtenerCatContabCompletedEventHandler
        
        '''<remarks/>
        Public Event RepPartidasDiarioCompleted As RepPartidasDiarioCompletedEventHandler
        
        '''<remarks/>
        Public Event RepPartidasDiarioAutCompleted As RepPartidasDiarioAutCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaCuentaContabCompleted As VerificaCuentaContabCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/distribucionCxC", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function distribucionCxC(ByVal idCtaPorCobrar As String, ByVal monto As Double, ByVal tipoMov As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("distribucionCxC", New Object() {idCtaPorCobrar, monto, tipoMov})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BegindistribucionCxC(ByVal idCtaPorCobrar As String, ByVal monto As Double, ByVal tipoMov As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("distribucionCxC", New Object() {idCtaPorCobrar, monto, tipoMov}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EnddistribucionCxC(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub distribucionCxCAsync(ByVal idCtaPorCobrar As String, ByVal monto As Double, ByVal tipoMov As String)
            Me.distribucionCxCAsync(idCtaPorCobrar, monto, tipoMov, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub distribucionCxCAsync(ByVal idCtaPorCobrar As String, ByVal monto As Double, ByVal tipoMov As String, ByVal userState As Object)
            If (Me.distribucionCxCOperationCompleted Is Nothing) Then
                Me.distribucionCxCOperationCompleted = AddressOf Me.OndistribucionCxCOperationCompleted
            End If
            Me.InvokeAsync("distribucionCxC", New Object() {idCtaPorCobrar, monto, tipoMov}, Me.distribucionCxCOperationCompleted, userState)
        End Sub
        
        Private Sub OndistribucionCxCOperationCompleted(ByVal arg As Object)
            If (Not (Me.distribucionCxCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent distribucionCxCCompleted(Me, New distribucionCxCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/anularCuentaPorCobrar", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function anularCuentaPorCobrar(ByVal idCtaPorCobrar As String, ByVal usuarioMod As String) As Integer
            Dim results() As Object = Me.Invoke("anularCuentaPorCobrar", New Object() {idCtaPorCobrar, usuarioMod})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginanularCuentaPorCobrar(ByVal idCtaPorCobrar As String, ByVal usuarioMod As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("anularCuentaPorCobrar", New Object() {idCtaPorCobrar, usuarioMod}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndanularCuentaPorCobrar(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub anularCuentaPorCobrarAsync(ByVal idCtaPorCobrar As String, ByVal usuarioMod As String)
            Me.anularCuentaPorCobrarAsync(idCtaPorCobrar, usuarioMod, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub anularCuentaPorCobrarAsync(ByVal idCtaPorCobrar As String, ByVal usuarioMod As String, ByVal userState As Object)
            If (Me.anularCuentaPorCobrarOperationCompleted Is Nothing) Then
                Me.anularCuentaPorCobrarOperationCompleted = AddressOf Me.OnanularCuentaPorCobrarOperationCompleted
            End If
            Me.InvokeAsync("anularCuentaPorCobrar", New Object() {idCtaPorCobrar, usuarioMod}, Me.anularCuentaPorCobrarOperationCompleted, userState)
        End Sub
        
        Private Sub OnanularCuentaPorCobrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.anularCuentaPorCobrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent anularCuentaPorCobrarCompleted(Me, New anularCuentaPorCobrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ingresarAbonoCuentaPorCobrarTransferencia", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ingresarAbonoCuentaPorCobrarTransferencia(ByVal fecha As Date, ByVal dui As String, ByVal noSocio As String, ByVal usuario As String, ByVal montoTrans As Double, ByVal observacion As String, ByVal noDocumento As String, ByVal noCuenta As String, ByVal isAuxiliar As Boolean, ByVal ctaRetiro As String, ByVal ctaPorCobrar As String, ByVal ccOrigen As String) As Integer
            Dim results() As Object = Me.Invoke("ingresarAbonoCuentaPorCobrarTransferencia", New Object() {fecha, dui, noSocio, usuario, montoTrans, observacion, noDocumento, noCuenta, isAuxiliar, ctaRetiro, ctaPorCobrar, ccOrigen})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginingresarAbonoCuentaPorCobrarTransferencia(ByVal fecha As Date, ByVal dui As String, ByVal noSocio As String, ByVal usuario As String, ByVal montoTrans As Double, ByVal observacion As String, ByVal noDocumento As String, ByVal noCuenta As String, ByVal isAuxiliar As Boolean, ByVal ctaRetiro As String, ByVal ctaPorCobrar As String, ByVal ccOrigen As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ingresarAbonoCuentaPorCobrarTransferencia", New Object() {fecha, dui, noSocio, usuario, montoTrans, observacion, noDocumento, noCuenta, isAuxiliar, ctaRetiro, ctaPorCobrar, ccOrigen}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndingresarAbonoCuentaPorCobrarTransferencia(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ingresarAbonoCuentaPorCobrarTransferenciaAsync(ByVal fecha As Date, ByVal dui As String, ByVal noSocio As String, ByVal usuario As String, ByVal montoTrans As Double, ByVal observacion As String, ByVal noDocumento As String, ByVal noCuenta As String, ByVal isAuxiliar As Boolean, ByVal ctaRetiro As String, ByVal ctaPorCobrar As String, ByVal ccOrigen As String)
            Me.ingresarAbonoCuentaPorCobrarTransferenciaAsync(fecha, dui, noSocio, usuario, montoTrans, observacion, noDocumento, noCuenta, isAuxiliar, ctaRetiro, ctaPorCobrar, ccOrigen, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ingresarAbonoCuentaPorCobrarTransferenciaAsync(ByVal fecha As Date, ByVal dui As String, ByVal noSocio As String, ByVal usuario As String, ByVal montoTrans As Double, ByVal observacion As String, ByVal noDocumento As String, ByVal noCuenta As String, ByVal isAuxiliar As Boolean, ByVal ctaRetiro As String, ByVal ctaPorCobrar As String, ByVal ccOrigen As String, ByVal userState As Object)
            If (Me.ingresarAbonoCuentaPorCobrarTransferenciaOperationCompleted Is Nothing) Then
                Me.ingresarAbonoCuentaPorCobrarTransferenciaOperationCompleted = AddressOf Me.OningresarAbonoCuentaPorCobrarTransferenciaOperationCompleted
            End If
            Me.InvokeAsync("ingresarAbonoCuentaPorCobrarTransferencia", New Object() {fecha, dui, noSocio, usuario, montoTrans, observacion, noDocumento, noCuenta, isAuxiliar, ctaRetiro, ctaPorCobrar, ccOrigen}, Me.ingresarAbonoCuentaPorCobrarTransferenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OningresarAbonoCuentaPorCobrarTransferenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ingresarAbonoCuentaPorCobrarTransferenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ingresarAbonoCuentaPorCobrarTransferenciaCompleted(Me, New ingresarAbonoCuentaPorCobrarTransferenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/consultarCuentaPorCobrar", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCuentaPorCobrar(ByVal dui As String, ByVal opcion As Integer, ByVal fechaIni As Date, ByVal fechaFin As Date, ByVal nocuentaO As String, ByVal idCtaPorCobrar As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCuentaPorCobrar", New Object() {dui, opcion, fechaIni, fechaFin, nocuentaO, idCtaPorCobrar})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCuentaPorCobrar(ByVal dui As String, ByVal opcion As Integer, ByVal fechaIni As Date, ByVal fechaFin As Date, ByVal nocuentaO As String, ByVal idCtaPorCobrar As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCuentaPorCobrar", New Object() {dui, opcion, fechaIni, fechaFin, nocuentaO, idCtaPorCobrar}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCuentaPorCobrar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCuentaPorCobrarAsync(ByVal dui As String, ByVal opcion As Integer, ByVal fechaIni As Date, ByVal fechaFin As Date, ByVal nocuentaO As String, ByVal idCtaPorCobrar As Integer)
            Me.consultarCuentaPorCobrarAsync(dui, opcion, fechaIni, fechaFin, nocuentaO, idCtaPorCobrar, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCuentaPorCobrarAsync(ByVal dui As String, ByVal opcion As Integer, ByVal fechaIni As Date, ByVal fechaFin As Date, ByVal nocuentaO As String, ByVal idCtaPorCobrar As Integer, ByVal userState As Object)
            If (Me.consultarCuentaPorCobrarOperationCompleted Is Nothing) Then
                Me.consultarCuentaPorCobrarOperationCompleted = AddressOf Me.OnconsultarCuentaPorCobrarOperationCompleted
            End If
            Me.InvokeAsync("consultarCuentaPorCobrar", New Object() {dui, opcion, fechaIni, fechaFin, nocuentaO, idCtaPorCobrar}, Me.consultarCuentaPorCobrarOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCuentaPorCobrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCuentaPorCobrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCuentaPorCobrarCompleted(Me, New consultarCuentaPorCobrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ingresarCuentaPorCobrar", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ingresarCuentaPorCobrar(ByVal origen As Integer, ByVal fecha As Date, ByVal monto As Double, ByVal saldo As Double, ByVal ctaOrigen As String, ByVal activo As Boolean, ByVal idDocOrigen As String, ByVal usuario As String, ByVal dui As String, ByVal cc As String) As Integer
            Dim results() As Object = Me.Invoke("ingresarCuentaPorCobrar", New Object() {origen, fecha, monto, saldo, ctaOrigen, activo, idDocOrigen, usuario, dui, cc})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginingresarCuentaPorCobrar(ByVal origen As Integer, ByVal fecha As Date, ByVal monto As Double, ByVal saldo As Double, ByVal ctaOrigen As String, ByVal activo As Boolean, ByVal idDocOrigen As String, ByVal usuario As String, ByVal dui As String, ByVal cc As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ingresarCuentaPorCobrar", New Object() {origen, fecha, monto, saldo, ctaOrigen, activo, idDocOrigen, usuario, dui, cc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndingresarCuentaPorCobrar(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ingresarCuentaPorCobrarAsync(ByVal origen As Integer, ByVal fecha As Date, ByVal monto As Double, ByVal saldo As Double, ByVal ctaOrigen As String, ByVal activo As Boolean, ByVal idDocOrigen As String, ByVal usuario As String, ByVal dui As String, ByVal cc As String)
            Me.ingresarCuentaPorCobrarAsync(origen, fecha, monto, saldo, ctaOrigen, activo, idDocOrigen, usuario, dui, cc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ingresarCuentaPorCobrarAsync(ByVal origen As Integer, ByVal fecha As Date, ByVal monto As Double, ByVal saldo As Double, ByVal ctaOrigen As String, ByVal activo As Boolean, ByVal idDocOrigen As String, ByVal usuario As String, ByVal dui As String, ByVal cc As String, ByVal userState As Object)
            If (Me.ingresarCuentaPorCobrarOperationCompleted Is Nothing) Then
                Me.ingresarCuentaPorCobrarOperationCompleted = AddressOf Me.OningresarCuentaPorCobrarOperationCompleted
            End If
            Me.InvokeAsync("ingresarCuentaPorCobrar", New Object() {origen, fecha, monto, saldo, ctaOrigen, activo, idDocOrigen, usuario, dui, cc}, Me.ingresarCuentaPorCobrarOperationCompleted, userState)
        End Sub
        
        Private Sub OningresarCuentaPorCobrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ingresarCuentaPorCobrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ingresarCuentaPorCobrarCompleted(Me, New ingresarCuentaPorCobrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/consultarCaDiario", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCaDiario(ByVal campos As String, ByVal filtro As String, ByVal usuario As String, ByVal pass As String, ByVal sucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCaDiario", New Object() {campos, filtro, usuario, pass, sucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCaDiario(ByVal campos As String, ByVal filtro As String, ByVal usuario As String, ByVal pass As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCaDiario", New Object() {campos, filtro, usuario, pass, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCaDiario(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCaDiarioAsync(ByVal campos As String, ByVal filtro As String, ByVal usuario As String, ByVal pass As String, ByVal sucursal As String)
            Me.consultarCaDiarioAsync(campos, filtro, usuario, pass, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCaDiarioAsync(ByVal campos As String, ByVal filtro As String, ByVal usuario As String, ByVal pass As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.consultarCaDiarioOperationCompleted Is Nothing) Then
                Me.consultarCaDiarioOperationCompleted = AddressOf Me.OnconsultarCaDiarioOperationCompleted
            End If
            Me.InvokeAsync("consultarCaDiario", New Object() {campos, filtro, usuario, pass, sucursal}, Me.consultarCaDiarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCaDiarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCaDiarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCaDiarioCompleted(Me, New consultarCaDiarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/guardarPartidaValorFecha", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function guardarPartidaValorFecha(ByVal fecha As Date, ByVal tipo As String, ByVal usuario As String) As Integer
            Dim results() As Object = Me.Invoke("guardarPartidaValorFecha", New Object() {fecha, tipo, usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginguardarPartidaValorFecha(ByVal fecha As Date, ByVal tipo As String, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("guardarPartidaValorFecha", New Object() {fecha, tipo, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndguardarPartidaValorFecha(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub guardarPartidaValorFechaAsync(ByVal fecha As Date, ByVal tipo As String, ByVal usuario As String)
            Me.guardarPartidaValorFechaAsync(fecha, tipo, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub guardarPartidaValorFechaAsync(ByVal fecha As Date, ByVal tipo As String, ByVal usuario As String, ByVal userState As Object)
            If (Me.guardarPartidaValorFechaOperationCompleted Is Nothing) Then
                Me.guardarPartidaValorFechaOperationCompleted = AddressOf Me.OnguardarPartidaValorFechaOperationCompleted
            End If
            Me.InvokeAsync("guardarPartidaValorFecha", New Object() {fecha, tipo, usuario}, Me.guardarPartidaValorFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnguardarPartidaValorFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.guardarPartidaValorFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent guardarPartidaValorFechaCompleted(Me, New guardarPartidaValorFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ProcesarSaldosNuevo", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesarSaldosNuevo(ByVal mes As String, ByVal annio As String, ByVal cc As String) As Boolean
            Dim results() As Object = Me.Invoke("ProcesarSaldosNuevo", New Object() {mes, annio, cc})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesarSaldosNuevo(ByVal mes As String, ByVal annio As String, ByVal cc As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesarSaldosNuevo", New Object() {mes, annio, cc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesarSaldosNuevo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesarSaldosNuevoAsync(ByVal mes As String, ByVal annio As String, ByVal cc As String)
            Me.ProcesarSaldosNuevoAsync(mes, annio, cc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesarSaldosNuevoAsync(ByVal mes As String, ByVal annio As String, ByVal cc As String, ByVal userState As Object)
            If (Me.ProcesarSaldosNuevoOperationCompleted Is Nothing) Then
                Me.ProcesarSaldosNuevoOperationCompleted = AddressOf Me.OnProcesarSaldosNuevoOperationCompleted
            End If
            Me.InvokeAsync("ProcesarSaldosNuevo", New Object() {mes, annio, cc}, Me.ProcesarSaldosNuevoOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesarSaldosNuevoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesarSaldosNuevoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesarSaldosNuevoCompleted(Me, New ProcesarSaldosNuevoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/insertarContaIndiceLiquidez", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarContaIndiceLiquidez(ByVal mes As Integer, ByVal annio As Integer, ByVal indice As Double, ByVal usuario As String, ByVal fecha As Date) As Integer
            Dim results() As Object = Me.Invoke("insertarContaIndiceLiquidez", New Object() {mes, annio, indice, usuario, fecha})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarContaIndiceLiquidez(ByVal mes As Integer, ByVal annio As Integer, ByVal indice As Double, ByVal usuario As String, ByVal fecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarContaIndiceLiquidez", New Object() {mes, annio, indice, usuario, fecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarContaIndiceLiquidez(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarContaIndiceLiquidezAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal indice As Double, ByVal usuario As String, ByVal fecha As Date)
            Me.insertarContaIndiceLiquidezAsync(mes, annio, indice, usuario, fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarContaIndiceLiquidezAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal indice As Double, ByVal usuario As String, ByVal fecha As Date, ByVal userState As Object)
            If (Me.insertarContaIndiceLiquidezOperationCompleted Is Nothing) Then
                Me.insertarContaIndiceLiquidezOperationCompleted = AddressOf Me.OninsertarContaIndiceLiquidezOperationCompleted
            End If
            Me.InvokeAsync("insertarContaIndiceLiquidez", New Object() {mes, annio, indice, usuario, fecha}, Me.insertarContaIndiceLiquidezOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarContaIndiceLiquidezOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarContaIndiceLiquidezCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarContaIndiceLiquidezCompleted(Me, New insertarContaIndiceLiquidezCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/modificarContaIndiceLiquidez", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarContaIndiceLiquidez(ByVal mes As Integer, ByVal annio As Integer, ByVal indice As Double, ByVal usuario As String, ByVal fecha As Date, ByVal correlativo As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarContaIndiceLiquidez", New Object() {mes, annio, indice, usuario, fecha, correlativo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarContaIndiceLiquidez(ByVal mes As Integer, ByVal annio As Integer, ByVal indice As Double, ByVal usuario As String, ByVal fecha As Date, ByVal correlativo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarContaIndiceLiquidez", New Object() {mes, annio, indice, usuario, fecha, correlativo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarContaIndiceLiquidez(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarContaIndiceLiquidezAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal indice As Double, ByVal usuario As String, ByVal fecha As Date, ByVal correlativo As Integer)
            Me.modificarContaIndiceLiquidezAsync(mes, annio, indice, usuario, fecha, correlativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarContaIndiceLiquidezAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal indice As Double, ByVal usuario As String, ByVal fecha As Date, ByVal correlativo As Integer, ByVal userState As Object)
            If (Me.modificarContaIndiceLiquidezOperationCompleted Is Nothing) Then
                Me.modificarContaIndiceLiquidezOperationCompleted = AddressOf Me.OnmodificarContaIndiceLiquidezOperationCompleted
            End If
            Me.InvokeAsync("modificarContaIndiceLiquidez", New Object() {mes, annio, indice, usuario, fecha, correlativo}, Me.modificarContaIndiceLiquidezOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarContaIndiceLiquidezOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarContaIndiceLiquidezCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarContaIndiceLiquidezCompleted(Me, New modificarContaIndiceLiquidezCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/consultarContaIndiceLiquidez", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarContaIndiceLiquidez(ByVal mes As Integer, ByVal annio As Integer, ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarContaIndiceLiquidez", New Object() {mes, annio, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarContaIndiceLiquidez(ByVal mes As Integer, ByVal annio As Integer, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarContaIndiceLiquidez", New Object() {mes, annio, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarContaIndiceLiquidez(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarContaIndiceLiquidezAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal opcion As Integer)
            Me.consultarContaIndiceLiquidezAsync(mes, annio, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarContaIndiceLiquidezAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.consultarContaIndiceLiquidezOperationCompleted Is Nothing) Then
                Me.consultarContaIndiceLiquidezOperationCompleted = AddressOf Me.OnconsultarContaIndiceLiquidezOperationCompleted
            End If
            Me.InvokeAsync("consultarContaIndiceLiquidez", New Object() {mes, annio, opcion}, Me.consultarContaIndiceLiquidezOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarContaIndiceLiquidezOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarContaIndiceLiquidezCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarContaIndiceLiquidezCompleted(Me, New consultarContaIndiceLiquidezCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RecuperarCodCostoXsucursal", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarCodCostoXsucursal(ByVal codSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RecuperarCodCostoXsucursal", New Object() {codSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRecuperarCodCostoXsucursal(ByVal codSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RecuperarCodCostoXsucursal", New Object() {codSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRecuperarCodCostoXsucursal(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarCodCostoXsucursalAsync(ByVal codSucursal As String)
            Me.RecuperarCodCostoXsucursalAsync(codSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarCodCostoXsucursalAsync(ByVal codSucursal As String, ByVal userState As Object)
            If (Me.RecuperarCodCostoXsucursalOperationCompleted Is Nothing) Then
                Me.RecuperarCodCostoXsucursalOperationCompleted = AddressOf Me.OnRecuperarCodCostoXsucursalOperationCompleted
            End If
            Me.InvokeAsync("RecuperarCodCostoXsucursal", New Object() {codSucursal}, Me.RecuperarCodCostoXsucursalOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarCodCostoXsucursalOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarCodCostoXsucursalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarCodCostoXsucursalCompleted(Me, New RecuperarCodCostoXsucursalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RecuperarCodCostoXcuenta", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarCodCostoXcuenta(ByVal NoCuenta As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RecuperarCodCostoXcuenta", New Object() {NoCuenta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRecuperarCodCostoXcuenta(ByVal NoCuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RecuperarCodCostoXcuenta", New Object() {NoCuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRecuperarCodCostoXcuenta(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarCodCostoXcuentaAsync(ByVal NoCuenta As String)
            Me.RecuperarCodCostoXcuentaAsync(NoCuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarCodCostoXcuentaAsync(ByVal NoCuenta As String, ByVal userState As Object)
            If (Me.RecuperarCodCostoXcuentaOperationCompleted Is Nothing) Then
                Me.RecuperarCodCostoXcuentaOperationCompleted = AddressOf Me.OnRecuperarCodCostoXcuentaOperationCompleted
            End If
            Me.InvokeAsync("RecuperarCodCostoXcuenta", New Object() {NoCuenta}, Me.RecuperarCodCostoXcuentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarCodCostoXcuentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarCodCostoXcuentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarCodCostoXcuentaCompleted(Me, New RecuperarCodCostoXcuentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/Recuperar_Cta_x_Centro_Costo", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Recuperar_Cta_x_Centro_Costo(ByVal codSucursal As String, ByVal idCuenta As String) As String
            Dim results() As Object = Me.Invoke("Recuperar_Cta_x_Centro_Costo", New Object() {codSucursal, idCuenta})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginRecuperar_Cta_x_Centro_Costo(ByVal codSucursal As String, ByVal idCuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Recuperar_Cta_x_Centro_Costo", New Object() {codSucursal, idCuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRecuperar_Cta_x_Centro_Costo(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Recuperar_Cta_x_Centro_CostoAsync(ByVal codSucursal As String, ByVal idCuenta As String)
            Me.Recuperar_Cta_x_Centro_CostoAsync(codSucursal, idCuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Recuperar_Cta_x_Centro_CostoAsync(ByVal codSucursal As String, ByVal idCuenta As String, ByVal userState As Object)
            If (Me.Recuperar_Cta_x_Centro_CostoOperationCompleted Is Nothing) Then
                Me.Recuperar_Cta_x_Centro_CostoOperationCompleted = AddressOf Me.OnRecuperar_Cta_x_Centro_CostoOperationCompleted
            End If
            Me.InvokeAsync("Recuperar_Cta_x_Centro_Costo", New Object() {codSucursal, idCuenta}, Me.Recuperar_Cta_x_Centro_CostoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperar_Cta_x_Centro_CostoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Recuperar_Cta_x_Centro_CostoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Recuperar_Cta_x_Centro_CostoCompleted(Me, New Recuperar_Cta_x_Centro_CostoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/insertarCat_TipoCtas_Contables", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCat_TipoCtas_Contables(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String) As Integer
            Dim results() As Object = Me.Invoke("insertarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCat_TipoCtas_Contables(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCat_TipoCtas_Contables(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCat_TipoCtas_ContablesAsync(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String)
            Me.insertarCat_TipoCtas_ContablesAsync(tipoCuenta, descripcion, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCat_TipoCtas_ContablesAsync(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String, ByVal userState As Object)
            If (Me.insertarCat_TipoCtas_ContablesOperationCompleted Is Nothing) Then
                Me.insertarCat_TipoCtas_ContablesOperationCompleted = AddressOf Me.OninsertarCat_TipoCtas_ContablesOperationCompleted
            End If
            Me.InvokeAsync("insertarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario}, Me.insertarCat_TipoCtas_ContablesOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCat_TipoCtas_ContablesOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCat_TipoCtas_ContablesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCat_TipoCtas_ContablesCompleted(Me, New insertarCat_TipoCtas_ContablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/modificarCat_TipoCtas_Contables", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarCat_TipoCtas_Contables(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String) As Integer
            Dim results() As Object = Me.Invoke("modificarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarCat_TipoCtas_Contables(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarCat_TipoCtas_Contables(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarCat_TipoCtas_ContablesAsync(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String)
            Me.modificarCat_TipoCtas_ContablesAsync(tipoCuenta, descripcion, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarCat_TipoCtas_ContablesAsync(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String, ByVal userState As Object)
            If (Me.modificarCat_TipoCtas_ContablesOperationCompleted Is Nothing) Then
                Me.modificarCat_TipoCtas_ContablesOperationCompleted = AddressOf Me.OnmodificarCat_TipoCtas_ContablesOperationCompleted
            End If
            Me.InvokeAsync("modificarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario}, Me.modificarCat_TipoCtas_ContablesOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarCat_TipoCtas_ContablesOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarCat_TipoCtas_ContablesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarCat_TipoCtas_ContablesCompleted(Me, New modificarCat_TipoCtas_ContablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/eliminarCat_TipoCtas_Contables", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarCat_TipoCtas_Contables(ByVal tipoCuenta As String, ByVal usuario As String) As Integer
            Dim results() As Object = Me.Invoke("eliminarCat_TipoCtas_Contables", New Object() {tipoCuenta, usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarCat_TipoCtas_Contables(ByVal tipoCuenta As String, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarCat_TipoCtas_Contables", New Object() {tipoCuenta, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarCat_TipoCtas_Contables(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarCat_TipoCtas_ContablesAsync(ByVal tipoCuenta As String, ByVal usuario As String)
            Me.eliminarCat_TipoCtas_ContablesAsync(tipoCuenta, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarCat_TipoCtas_ContablesAsync(ByVal tipoCuenta As String, ByVal usuario As String, ByVal userState As Object)
            If (Me.eliminarCat_TipoCtas_ContablesOperationCompleted Is Nothing) Then
                Me.eliminarCat_TipoCtas_ContablesOperationCompleted = AddressOf Me.OneliminarCat_TipoCtas_ContablesOperationCompleted
            End If
            Me.InvokeAsync("eliminarCat_TipoCtas_Contables", New Object() {tipoCuenta, usuario}, Me.eliminarCat_TipoCtas_ContablesOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarCat_TipoCtas_ContablesOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarCat_TipoCtas_ContablesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarCat_TipoCtas_ContablesCompleted(Me, New eliminarCat_TipoCtas_ContablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/consultarCat_TipoCtas_Contables", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCat_TipoCtas_Contables(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCat_TipoCtas_Contables(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCat_TipoCtas_Contables(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCat_TipoCtas_ContablesAsync(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String)
            Me.consultarCat_TipoCtas_ContablesAsync(tipoCuenta, descripcion, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCat_TipoCtas_ContablesAsync(ByVal tipoCuenta As String, ByVal descripcion As String, ByVal usuario As String, ByVal userState As Object)
            If (Me.consultarCat_TipoCtas_ContablesOperationCompleted Is Nothing) Then
                Me.consultarCat_TipoCtas_ContablesOperationCompleted = AddressOf Me.OnconsultarCat_TipoCtas_ContablesOperationCompleted
            End If
            Me.InvokeAsync("consultarCat_TipoCtas_Contables", New Object() {tipoCuenta, descripcion, usuario}, Me.consultarCat_TipoCtas_ContablesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCat_TipoCtas_ContablesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCat_TipoCtas_ContablesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCat_TipoCtas_ContablesCompleted(Me, New consultarCat_TipoCtas_ContablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/validarPartidasAutomaticas", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarPartidasAutomaticas(ByVal numPartida As String) As Boolean
            Dim results() As Object = Me.Invoke("validarPartidasAutomaticas", New Object() {numPartida})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarPartidasAutomaticas(ByVal numPartida As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarPartidasAutomaticas", New Object() {numPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarPartidasAutomaticas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarPartidasAutomaticasAsync(ByVal numPartida As String)
            Me.validarPartidasAutomaticasAsync(numPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarPartidasAutomaticasAsync(ByVal numPartida As String, ByVal userState As Object)
            If (Me.validarPartidasAutomaticasOperationCompleted Is Nothing) Then
                Me.validarPartidasAutomaticasOperationCompleted = AddressOf Me.OnvalidarPartidasAutomaticasOperationCompleted
            End If
            Me.InvokeAsync("validarPartidasAutomaticas", New Object() {numPartida}, Me.validarPartidasAutomaticasOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarPartidasAutomaticasOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarPartidasAutomaticasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarPartidasAutomaticasCompleted(Me, New validarPartidasAutomaticasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/insertarCaProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCaProveedores(ByVal noRegistro As String, ByVal nit As String, ByVal dui As String, ByVal proveedor As String, ByVal direccion As String, ByVal telefono As String, ByVal email As String, ByVal representanteLegal As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal TipoContribuyente As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarCaProveedores", New Object() {noRegistro, nit, dui, proveedor, direccion, telefono, email, representanteLegal, codDepartamento, codMunicipio, TipoContribuyente})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCaProveedores(ByVal noRegistro As String, ByVal nit As String, ByVal dui As String, ByVal proveedor As String, ByVal direccion As String, ByVal telefono As String, ByVal email As String, ByVal representanteLegal As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal TipoContribuyente As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCaProveedores", New Object() {noRegistro, nit, dui, proveedor, direccion, telefono, email, representanteLegal, codDepartamento, codMunicipio, TipoContribuyente}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCaProveedores(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCaProveedoresAsync(ByVal noRegistro As String, ByVal nit As String, ByVal dui As String, ByVal proveedor As String, ByVal direccion As String, ByVal telefono As String, ByVal email As String, ByVal representanteLegal As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal TipoContribuyente As Integer)
            Me.insertarCaProveedoresAsync(noRegistro, nit, dui, proveedor, direccion, telefono, email, representanteLegal, codDepartamento, codMunicipio, TipoContribuyente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCaProveedoresAsync(ByVal noRegistro As String, ByVal nit As String, ByVal dui As String, ByVal proveedor As String, ByVal direccion As String, ByVal telefono As String, ByVal email As String, ByVal representanteLegal As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal TipoContribuyente As Integer, ByVal userState As Object)
            If (Me.insertarCaProveedoresOperationCompleted Is Nothing) Then
                Me.insertarCaProveedoresOperationCompleted = AddressOf Me.OninsertarCaProveedoresOperationCompleted
            End If
            Me.InvokeAsync("insertarCaProveedores", New Object() {noRegistro, nit, dui, proveedor, direccion, telefono, email, representanteLegal, codDepartamento, codMunicipio, TipoContribuyente}, Me.insertarCaProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCaProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCaProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCaProveedoresCompleted(Me, New insertarCaProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/modificarCaProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarCaProveedores(ByVal idProveedor As Integer, ByVal noRegistro As String, ByVal nit As String, ByVal dui As String, ByVal proveedor As String, ByVal direccion As String, ByVal telefono As String, ByVal email As String, ByVal representanteLegal As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal TipoContribuyente As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarCaProveedores", New Object() {idProveedor, noRegistro, nit, dui, proveedor, direccion, telefono, email, representanteLegal, codDepartamento, codMunicipio, TipoContribuyente})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarCaProveedores(ByVal idProveedor As Integer, ByVal noRegistro As String, ByVal nit As String, ByVal dui As String, ByVal proveedor As String, ByVal direccion As String, ByVal telefono As String, ByVal email As String, ByVal representanteLegal As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal TipoContribuyente As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarCaProveedores", New Object() {idProveedor, noRegistro, nit, dui, proveedor, direccion, telefono, email, representanteLegal, codDepartamento, codMunicipio, TipoContribuyente}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarCaProveedores(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarCaProveedoresAsync(ByVal idProveedor As Integer, ByVal noRegistro As String, ByVal nit As String, ByVal dui As String, ByVal proveedor As String, ByVal direccion As String, ByVal telefono As String, ByVal email As String, ByVal representanteLegal As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal TipoContribuyente As Integer)
            Me.modificarCaProveedoresAsync(idProveedor, noRegistro, nit, dui, proveedor, direccion, telefono, email, representanteLegal, codDepartamento, codMunicipio, TipoContribuyente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarCaProveedoresAsync(ByVal idProveedor As Integer, ByVal noRegistro As String, ByVal nit As String, ByVal dui As String, ByVal proveedor As String, ByVal direccion As String, ByVal telefono As String, ByVal email As String, ByVal representanteLegal As String, ByVal codDepartamento As String, ByVal codMunicipio As String, ByVal TipoContribuyente As Integer, ByVal userState As Object)
            If (Me.modificarCaProveedoresOperationCompleted Is Nothing) Then
                Me.modificarCaProveedoresOperationCompleted = AddressOf Me.OnmodificarCaProveedoresOperationCompleted
            End If
            Me.InvokeAsync("modificarCaProveedores", New Object() {idProveedor, noRegistro, nit, dui, proveedor, direccion, telefono, email, representanteLegal, codDepartamento, codMunicipio, TipoContribuyente}, Me.modificarCaProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarCaProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarCaProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarCaProveedoresCompleted(Me, New modificarCaProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/eliminarCaProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarCaProveedores(ByVal idProveedor As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarCaProveedores", New Object() {idProveedor})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarCaProveedores(ByVal idProveedor As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarCaProveedores", New Object() {idProveedor}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarCaProveedores(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarCaProveedoresAsync(ByVal idProveedor As Integer)
            Me.eliminarCaProveedoresAsync(idProveedor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarCaProveedoresAsync(ByVal idProveedor As Integer, ByVal userState As Object)
            If (Me.eliminarCaProveedoresOperationCompleted Is Nothing) Then
                Me.eliminarCaProveedoresOperationCompleted = AddressOf Me.OneliminarCaProveedoresOperationCompleted
            End If
            Me.InvokeAsync("eliminarCaProveedores", New Object() {idProveedor}, Me.eliminarCaProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarCaProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarCaProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarCaProveedoresCompleted(Me, New eliminarCaProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/consultarCaProveedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCaProveedores(ByVal opcion As Integer, ByVal noRegistro As String, ByVal nit As String, ByVal proveedor As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCaProveedores", New Object() {opcion, noRegistro, nit, proveedor})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCaProveedores(ByVal opcion As Integer, ByVal noRegistro As String, ByVal nit As String, ByVal proveedor As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCaProveedores", New Object() {opcion, noRegistro, nit, proveedor}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCaProveedores(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCaProveedoresAsync(ByVal opcion As Integer, ByVal noRegistro As String, ByVal nit As String, ByVal proveedor As String)
            Me.consultarCaProveedoresAsync(opcion, noRegistro, nit, proveedor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCaProveedoresAsync(ByVal opcion As Integer, ByVal noRegistro As String, ByVal nit As String, ByVal proveedor As String, ByVal userState As Object)
            If (Me.consultarCaProveedoresOperationCompleted Is Nothing) Then
                Me.consultarCaProveedoresOperationCompleted = AddressOf Me.OnconsultarCaProveedoresOperationCompleted
            End If
            Me.InvokeAsync("consultarCaProveedores", New Object() {opcion, noRegistro, nit, proveedor}, Me.consultarCaProveedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCaProveedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCaProveedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCaProveedoresCompleted(Me, New consultarCaProveedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/insertarCaCompraCierreMes", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCaCompraCierreMes(ByVal mes As Integer, ByVal annio As Integer, ByVal cerrado As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal bloque As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarCaCompraCierreMes", New Object() {mes, annio, cerrado, usuarioIngresa, fechaIngreso, bloque})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCaCompraCierreMes(ByVal mes As Integer, ByVal annio As Integer, ByVal cerrado As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal bloque As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCaCompraCierreMes", New Object() {mes, annio, cerrado, usuarioIngresa, fechaIngreso, bloque}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCaCompraCierreMes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCaCompraCierreMesAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal cerrado As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal bloque As Integer)
            Me.insertarCaCompraCierreMesAsync(mes, annio, cerrado, usuarioIngresa, fechaIngreso, bloque, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCaCompraCierreMesAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal cerrado As Boolean, ByVal usuarioIngresa As String, ByVal fechaIngreso As Date, ByVal bloque As Integer, ByVal userState As Object)
            If (Me.insertarCaCompraCierreMesOperationCompleted Is Nothing) Then
                Me.insertarCaCompraCierreMesOperationCompleted = AddressOf Me.OninsertarCaCompraCierreMesOperationCompleted
            End If
            Me.InvokeAsync("insertarCaCompraCierreMes", New Object() {mes, annio, cerrado, usuarioIngresa, fechaIngreso, bloque}, Me.insertarCaCompraCierreMesOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCaCompraCierreMesOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCaCompraCierreMesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCaCompraCierreMesCompleted(Me, New insertarCaCompraCierreMesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/actualizarCaCompraCierreMes", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function actualizarCaCompraCierreMes(ByVal mes As Integer, ByVal annio As Integer, ByVal cerrado As Boolean, ByVal usuarioModifica As String, ByVal fechaModifica As Date, ByVal bloque As Integer) As Integer
            Dim results() As Object = Me.Invoke("actualizarCaCompraCierreMes", New Object() {mes, annio, cerrado, usuarioModifica, fechaModifica, bloque})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginactualizarCaCompraCierreMes(ByVal mes As Integer, ByVal annio As Integer, ByVal cerrado As Boolean, ByVal usuarioModifica As String, ByVal fechaModifica As Date, ByVal bloque As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("actualizarCaCompraCierreMes", New Object() {mes, annio, cerrado, usuarioModifica, fechaModifica, bloque}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndactualizarCaCompraCierreMes(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub actualizarCaCompraCierreMesAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal cerrado As Boolean, ByVal usuarioModifica As String, ByVal fechaModifica As Date, ByVal bloque As Integer)
            Me.actualizarCaCompraCierreMesAsync(mes, annio, cerrado, usuarioModifica, fechaModifica, bloque, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub actualizarCaCompraCierreMesAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal cerrado As Boolean, ByVal usuarioModifica As String, ByVal fechaModifica As Date, ByVal bloque As Integer, ByVal userState As Object)
            If (Me.actualizarCaCompraCierreMesOperationCompleted Is Nothing) Then
                Me.actualizarCaCompraCierreMesOperationCompleted = AddressOf Me.OnactualizarCaCompraCierreMesOperationCompleted
            End If
            Me.InvokeAsync("actualizarCaCompraCierreMes", New Object() {mes, annio, cerrado, usuarioModifica, fechaModifica, bloque}, Me.actualizarCaCompraCierreMesOperationCompleted, userState)
        End Sub
        
        Private Sub OnactualizarCaCompraCierreMesOperationCompleted(ByVal arg As Object)
            If (Not (Me.actualizarCaCompraCierreMesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent actualizarCaCompraCierreMesCompleted(Me, New actualizarCaCompraCierreMesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/consultarCaCompraCierreMes", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCaCompraCierreMes(ByVal mes As Integer, ByVal annio As Integer, ByVal opcion As Integer, ByVal bloque As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCaCompraCierreMes", New Object() {mes, annio, opcion, bloque})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCaCompraCierreMes(ByVal mes As Integer, ByVal annio As Integer, ByVal opcion As Integer, ByVal bloque As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCaCompraCierreMes", New Object() {mes, annio, opcion, bloque}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCaCompraCierreMes(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCaCompraCierreMesAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal opcion As Integer, ByVal bloque As Integer)
            Me.consultarCaCompraCierreMesAsync(mes, annio, opcion, bloque, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCaCompraCierreMesAsync(ByVal mes As Integer, ByVal annio As Integer, ByVal opcion As Integer, ByVal bloque As Integer, ByVal userState As Object)
            If (Me.consultarCaCompraCierreMesOperationCompleted Is Nothing) Then
                Me.consultarCaCompraCierreMesOperationCompleted = AddressOf Me.OnconsultarCaCompraCierreMesOperationCompleted
            End If
            Me.InvokeAsync("consultarCaCompraCierreMes", New Object() {mes, annio, opcion, bloque}, Me.consultarCaCompraCierreMesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCaCompraCierreMesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCaCompraCierreMesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCaCompraCierreMesCompleted(Me, New consultarCaCompraCierreMesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/anularCompra", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function anularCompra(ByVal idCompra As Integer, ByVal anulado As Boolean, ByVal usuario As String, ByVal fechaActu As Date) As Integer
            Dim results() As Object = Me.Invoke("anularCompra", New Object() {idCompra, anulado, usuario, fechaActu})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginanularCompra(ByVal idCompra As Integer, ByVal anulado As Boolean, ByVal usuario As String, ByVal fechaActu As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("anularCompra", New Object() {idCompra, anulado, usuario, fechaActu}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndanularCompra(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub anularCompraAsync(ByVal idCompra As Integer, ByVal anulado As Boolean, ByVal usuario As String, ByVal fechaActu As Date)
            Me.anularCompraAsync(idCompra, anulado, usuario, fechaActu, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub anularCompraAsync(ByVal idCompra As Integer, ByVal anulado As Boolean, ByVal usuario As String, ByVal fechaActu As Date, ByVal userState As Object)
            If (Me.anularCompraOperationCompleted Is Nothing) Then
                Me.anularCompraOperationCompleted = AddressOf Me.OnanularCompraOperationCompleted
            End If
            Me.InvokeAsync("anularCompra", New Object() {idCompra, anulado, usuario, fechaActu}, Me.anularCompraOperationCompleted, userState)
        End Sub
        
        Private Sub OnanularCompraOperationCompleted(ByVal arg As Object)
            If (Not (Me.anularCompraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent anularCompraCompleted(Me, New anularCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/insertarCaCompras", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarCaCompras( _
                    ByVal fecha As Date,  _
                    ByVal noComprobante As String,  _
                    ByVal exentas_locales As Double,  _
                    ByVal exentas_importaciones As Double,  _
                    ByVal exentas_internacionales As Double,  _
                    ByVal gravadas_locales As Double,  _
                    ByVal gravadas_importaciones As Double,  _
                    ByVal gravadas_internacionales As Double,  _
                    ByVal creditoFiscal As Double,  _
                    ByVal totalCompras As Double,  _
                    ByVal retencionTerceros As Double,  _
                    ByVal sujetosExcluidos As Double,  _
                    ByVal usuario As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal observacion As String,  _
                    ByVal codSucursal As String,  _
                    ByVal idProveedor As Integer,  _
                    ByVal anulado As Boolean,  _
                    ByVal bloque As Integer,  _
                    ByVal idTipoDoc As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarCaCompras", New Object() {fecha, noComprobante, exentas_locales, exentas_importaciones, exentas_internacionales, gravadas_locales, gravadas_importaciones, gravadas_internacionales, creditoFiscal, totalCompras, retencionTerceros, sujetosExcluidos, usuario, fechaActu, observacion, codSucursal, idProveedor, anulado, bloque, idTipoDoc})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarCaCompras( _
                    ByVal fecha As Date,  _
                    ByVal noComprobante As String,  _
                    ByVal exentas_locales As Double,  _
                    ByVal exentas_importaciones As Double,  _
                    ByVal exentas_internacionales As Double,  _
                    ByVal gravadas_locales As Double,  _
                    ByVal gravadas_importaciones As Double,  _
                    ByVal gravadas_internacionales As Double,  _
                    ByVal creditoFiscal As Double,  _
                    ByVal totalCompras As Double,  _
                    ByVal retencionTerceros As Double,  _
                    ByVal sujetosExcluidos As Double,  _
                    ByVal usuario As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal observacion As String,  _
                    ByVal codSucursal As String,  _
                    ByVal idProveedor As Integer,  _
                    ByVal anulado As Boolean,  _
                    ByVal bloque As Integer,  _
                    ByVal idTipoDoc As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarCaCompras", New Object() {fecha, noComprobante, exentas_locales, exentas_importaciones, exentas_internacionales, gravadas_locales, gravadas_importaciones, gravadas_internacionales, creditoFiscal, totalCompras, retencionTerceros, sujetosExcluidos, usuario, fechaActu, observacion, codSucursal, idProveedor, anulado, bloque, idTipoDoc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarCaCompras(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarCaComprasAsync( _
                    ByVal fecha As Date,  _
                    ByVal noComprobante As String,  _
                    ByVal exentas_locales As Double,  _
                    ByVal exentas_importaciones As Double,  _
                    ByVal exentas_internacionales As Double,  _
                    ByVal gravadas_locales As Double,  _
                    ByVal gravadas_importaciones As Double,  _
                    ByVal gravadas_internacionales As Double,  _
                    ByVal creditoFiscal As Double,  _
                    ByVal totalCompras As Double,  _
                    ByVal retencionTerceros As Double,  _
                    ByVal sujetosExcluidos As Double,  _
                    ByVal usuario As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal observacion As String,  _
                    ByVal codSucursal As String,  _
                    ByVal idProveedor As Integer,  _
                    ByVal anulado As Boolean,  _
                    ByVal bloque As Integer,  _
                    ByVal idTipoDoc As Integer)
            Me.insertarCaComprasAsync(fecha, noComprobante, exentas_locales, exentas_importaciones, exentas_internacionales, gravadas_locales, gravadas_importaciones, gravadas_internacionales, creditoFiscal, totalCompras, retencionTerceros, sujetosExcluidos, usuario, fechaActu, observacion, codSucursal, idProveedor, anulado, bloque, idTipoDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarCaComprasAsync( _
                    ByVal fecha As Date,  _
                    ByVal noComprobante As String,  _
                    ByVal exentas_locales As Double,  _
                    ByVal exentas_importaciones As Double,  _
                    ByVal exentas_internacionales As Double,  _
                    ByVal gravadas_locales As Double,  _
                    ByVal gravadas_importaciones As Double,  _
                    ByVal gravadas_internacionales As Double,  _
                    ByVal creditoFiscal As Double,  _
                    ByVal totalCompras As Double,  _
                    ByVal retencionTerceros As Double,  _
                    ByVal sujetosExcluidos As Double,  _
                    ByVal usuario As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal observacion As String,  _
                    ByVal codSucursal As String,  _
                    ByVal idProveedor As Integer,  _
                    ByVal anulado As Boolean,  _
                    ByVal bloque As Integer,  _
                    ByVal idTipoDoc As Integer,  _
                    ByVal userState As Object)
            If (Me.insertarCaComprasOperationCompleted Is Nothing) Then
                Me.insertarCaComprasOperationCompleted = AddressOf Me.OninsertarCaComprasOperationCompleted
            End If
            Me.InvokeAsync("insertarCaCompras", New Object() {fecha, noComprobante, exentas_locales, exentas_importaciones, exentas_internacionales, gravadas_locales, gravadas_importaciones, gravadas_internacionales, creditoFiscal, totalCompras, retencionTerceros, sujetosExcluidos, usuario, fechaActu, observacion, codSucursal, idProveedor, anulado, bloque, idTipoDoc}, Me.insertarCaComprasOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarCaComprasOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarCaComprasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarCaComprasCompleted(Me, New insertarCaComprasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/modificarCaCompras", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarCaCompras( _
                    ByVal fecha As Date,  _
                    ByVal noComprobante As String,  _
                    ByVal exentas_locales As Double,  _
                    ByVal exentas_importaciones As Double,  _
                    ByVal exentas_internacionales As Double,  _
                    ByVal gravadas_locales As Double,  _
                    ByVal gravadas_importaciones As Double,  _
                    ByVal gravadas_internacionales As Double,  _
                    ByVal creditoFiscal As Double,  _
                    ByVal totalCompras As Double,  _
                    ByVal retencionTerceros As Double,  _
                    ByVal sujetosExcluidos As Double,  _
                    ByVal usuario As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal observacion As String,  _
                    ByVal codSucursal As String,  _
                    ByVal idCompra As Integer,  _
                    ByVal idProveedor As Integer,  _
                    ByVal idTipoDoc As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarCaCompras", New Object() {fecha, noComprobante, exentas_locales, exentas_importaciones, exentas_internacionales, gravadas_locales, gravadas_importaciones, gravadas_internacionales, creditoFiscal, totalCompras, retencionTerceros, sujetosExcluidos, usuario, fechaActu, observacion, codSucursal, idCompra, idProveedor, idTipoDoc})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarCaCompras( _
                    ByVal fecha As Date,  _
                    ByVal noComprobante As String,  _
                    ByVal exentas_locales As Double,  _
                    ByVal exentas_importaciones As Double,  _
                    ByVal exentas_internacionales As Double,  _
                    ByVal gravadas_locales As Double,  _
                    ByVal gravadas_importaciones As Double,  _
                    ByVal gravadas_internacionales As Double,  _
                    ByVal creditoFiscal As Double,  _
                    ByVal totalCompras As Double,  _
                    ByVal retencionTerceros As Double,  _
                    ByVal sujetosExcluidos As Double,  _
                    ByVal usuario As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal observacion As String,  _
                    ByVal codSucursal As String,  _
                    ByVal idCompra As Integer,  _
                    ByVal idProveedor As Integer,  _
                    ByVal idTipoDoc As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarCaCompras", New Object() {fecha, noComprobante, exentas_locales, exentas_importaciones, exentas_internacionales, gravadas_locales, gravadas_importaciones, gravadas_internacionales, creditoFiscal, totalCompras, retencionTerceros, sujetosExcluidos, usuario, fechaActu, observacion, codSucursal, idCompra, idProveedor, idTipoDoc}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarCaCompras(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarCaComprasAsync( _
                    ByVal fecha As Date,  _
                    ByVal noComprobante As String,  _
                    ByVal exentas_locales As Double,  _
                    ByVal exentas_importaciones As Double,  _
                    ByVal exentas_internacionales As Double,  _
                    ByVal gravadas_locales As Double,  _
                    ByVal gravadas_importaciones As Double,  _
                    ByVal gravadas_internacionales As Double,  _
                    ByVal creditoFiscal As Double,  _
                    ByVal totalCompras As Double,  _
                    ByVal retencionTerceros As Double,  _
                    ByVal sujetosExcluidos As Double,  _
                    ByVal usuario As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal observacion As String,  _
                    ByVal codSucursal As String,  _
                    ByVal idCompra As Integer,  _
                    ByVal idProveedor As Integer,  _
                    ByVal idTipoDoc As Integer)
            Me.modificarCaComprasAsync(fecha, noComprobante, exentas_locales, exentas_importaciones, exentas_internacionales, gravadas_locales, gravadas_importaciones, gravadas_internacionales, creditoFiscal, totalCompras, retencionTerceros, sujetosExcluidos, usuario, fechaActu, observacion, codSucursal, idCompra, idProveedor, idTipoDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarCaComprasAsync( _
                    ByVal fecha As Date,  _
                    ByVal noComprobante As String,  _
                    ByVal exentas_locales As Double,  _
                    ByVal exentas_importaciones As Double,  _
                    ByVal exentas_internacionales As Double,  _
                    ByVal gravadas_locales As Double,  _
                    ByVal gravadas_importaciones As Double,  _
                    ByVal gravadas_internacionales As Double,  _
                    ByVal creditoFiscal As Double,  _
                    ByVal totalCompras As Double,  _
                    ByVal retencionTerceros As Double,  _
                    ByVal sujetosExcluidos As Double,  _
                    ByVal usuario As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal observacion As String,  _
                    ByVal codSucursal As String,  _
                    ByVal idCompra As Integer,  _
                    ByVal idProveedor As Integer,  _
                    ByVal idTipoDoc As Integer,  _
                    ByVal userState As Object)
            If (Me.modificarCaComprasOperationCompleted Is Nothing) Then
                Me.modificarCaComprasOperationCompleted = AddressOf Me.OnmodificarCaComprasOperationCompleted
            End If
            Me.InvokeAsync("modificarCaCompras", New Object() {fecha, noComprobante, exentas_locales, exentas_importaciones, exentas_internacionales, gravadas_locales, gravadas_importaciones, gravadas_internacionales, creditoFiscal, totalCompras, retencionTerceros, sujetosExcluidos, usuario, fechaActu, observacion, codSucursal, idCompra, idProveedor, idTipoDoc}, Me.modificarCaComprasOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarCaComprasOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarCaComprasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarCaComprasCompleted(Me, New modificarCaComprasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/eliminarCaCompras", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarCaCompras(ByVal idCompra As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarCaCompras", New Object() {idCompra})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarCaCompras(ByVal idCompra As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarCaCompras", New Object() {idCompra}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarCaCompras(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarCaComprasAsync(ByVal idCompra As Integer)
            Me.eliminarCaComprasAsync(idCompra, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarCaComprasAsync(ByVal idCompra As Integer, ByVal userState As Object)
            If (Me.eliminarCaComprasOperationCompleted Is Nothing) Then
                Me.eliminarCaComprasOperationCompleted = AddressOf Me.OneliminarCaComprasOperationCompleted
            End If
            Me.InvokeAsync("eliminarCaCompras", New Object() {idCompra}, Me.eliminarCaComprasOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarCaComprasOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarCaComprasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarCaComprasCompleted(Me, New eliminarCaComprasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/consultarCaCompras", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarCaCompras(ByVal opcion As Integer, ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal codSucursal As String, ByVal usuario As String, ByVal sucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarCaCompras", New Object() {opcion, fechaInicio, fechaFin, codSucursal, usuario, sucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarCaCompras(ByVal opcion As Integer, ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal codSucursal As String, ByVal usuario As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarCaCompras", New Object() {opcion, fechaInicio, fechaFin, codSucursal, usuario, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarCaCompras(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarCaComprasAsync(ByVal opcion As Integer, ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal codSucursal As String, ByVal usuario As String, ByVal sucursal As String)
            Me.consultarCaComprasAsync(opcion, fechaInicio, fechaFin, codSucursal, usuario, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarCaComprasAsync(ByVal opcion As Integer, ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal codSucursal As String, ByVal usuario As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.consultarCaComprasOperationCompleted Is Nothing) Then
                Me.consultarCaComprasOperationCompleted = AddressOf Me.OnconsultarCaComprasOperationCompleted
            End If
            Me.InvokeAsync("consultarCaCompras", New Object() {opcion, fechaInicio, fechaFin, codSucursal, usuario, sucursal}, Me.consultarCaComprasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarCaComprasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarCaComprasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarCaComprasCompleted(Me, New consultarCaComprasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/generarNumeroPartida", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function generarNumeroPartida(ByVal opcion As Integer, ByVal prefijo As String, ByVal mes As Integer, ByVal annio As Integer) As String
            Dim results() As Object = Me.Invoke("generarNumeroPartida", New Object() {opcion, prefijo, mes, annio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BegingenerarNumeroPartida(ByVal opcion As Integer, ByVal prefijo As String, ByVal mes As Integer, ByVal annio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("generarNumeroPartida", New Object() {opcion, prefijo, mes, annio}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgenerarNumeroPartida(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub generarNumeroPartidaAsync(ByVal opcion As Integer, ByVal prefijo As String, ByVal mes As Integer, ByVal annio As Integer)
            Me.generarNumeroPartidaAsync(opcion, prefijo, mes, annio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub generarNumeroPartidaAsync(ByVal opcion As Integer, ByVal prefijo As String, ByVal mes As Integer, ByVal annio As Integer, ByVal userState As Object)
            If (Me.generarNumeroPartidaOperationCompleted Is Nothing) Then
                Me.generarNumeroPartidaOperationCompleted = AddressOf Me.OngenerarNumeroPartidaOperationCompleted
            End If
            Me.InvokeAsync("generarNumeroPartida", New Object() {opcion, prefijo, mes, annio}, Me.generarNumeroPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OngenerarNumeroPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.generarNumeroPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent generarNumeroPartidaCompleted(Me, New generarNumeroPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/CrearPartidasCorteDiarioCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrearPartidasCorteDiarioCaja(ByVal dts As System.Data.DataSet, ByVal total As Double, ByVal Tipo As String, ByVal Fecha As Date, ByVal ConceptoPartida As String, ByVal CentroCosto As String, ByVal Usuario As String, ByVal Sucursal As String) As Integer
            Dim results() As Object = Me.Invoke("CrearPartidasCorteDiarioCaja", New Object() {dts, total, Tipo, Fecha, ConceptoPartida, CentroCosto, Usuario, Sucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginCrearPartidasCorteDiarioCaja(ByVal dts As System.Data.DataSet, ByVal total As Double, ByVal Tipo As String, ByVal Fecha As Date, ByVal ConceptoPartida As String, ByVal CentroCosto As String, ByVal Usuario As String, ByVal Sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CrearPartidasCorteDiarioCaja", New Object() {dts, total, Tipo, Fecha, ConceptoPartida, CentroCosto, Usuario, Sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCrearPartidasCorteDiarioCaja(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CrearPartidasCorteDiarioCajaAsync(ByVal dts As System.Data.DataSet, ByVal total As Double, ByVal Tipo As String, ByVal Fecha As Date, ByVal ConceptoPartida As String, ByVal CentroCosto As String, ByVal Usuario As String, ByVal Sucursal As String)
            Me.CrearPartidasCorteDiarioCajaAsync(dts, total, Tipo, Fecha, ConceptoPartida, CentroCosto, Usuario, Sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CrearPartidasCorteDiarioCajaAsync(ByVal dts As System.Data.DataSet, ByVal total As Double, ByVal Tipo As String, ByVal Fecha As Date, ByVal ConceptoPartida As String, ByVal CentroCosto As String, ByVal Usuario As String, ByVal Sucursal As String, ByVal userState As Object)
            If (Me.CrearPartidasCorteDiarioCajaOperationCompleted Is Nothing) Then
                Me.CrearPartidasCorteDiarioCajaOperationCompleted = AddressOf Me.OnCrearPartidasCorteDiarioCajaOperationCompleted
            End If
            Me.InvokeAsync("CrearPartidasCorteDiarioCaja", New Object() {dts, total, Tipo, Fecha, ConceptoPartida, CentroCosto, Usuario, Sucursal}, Me.CrearPartidasCorteDiarioCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrearPartidasCorteDiarioCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CrearPartidasCorteDiarioCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CrearPartidasCorteDiarioCajaCompleted(Me, New CrearPartidasCorteDiarioCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/CrearPdaCorteDiarioCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrearPdaCorteDiarioCaja(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Opcion As Integer, ByVal usuario As String, ByVal sucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CrearPdaCorteDiarioCaja", New Object() {CodCajero, Fecha, Opcion, usuario, sucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCrearPdaCorteDiarioCaja(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Opcion As Integer, ByVal usuario As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CrearPdaCorteDiarioCaja", New Object() {CodCajero, Fecha, Opcion, usuario, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCrearPdaCorteDiarioCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CrearPdaCorteDiarioCajaAsync(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Opcion As Integer, ByVal usuario As String, ByVal sucursal As String)
            Me.CrearPdaCorteDiarioCajaAsync(CodCajero, Fecha, Opcion, usuario, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CrearPdaCorteDiarioCajaAsync(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Opcion As Integer, ByVal usuario As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.CrearPdaCorteDiarioCajaOperationCompleted Is Nothing) Then
                Me.CrearPdaCorteDiarioCajaOperationCompleted = AddressOf Me.OnCrearPdaCorteDiarioCajaOperationCompleted
            End If
            Me.InvokeAsync("CrearPdaCorteDiarioCaja", New Object() {CodCajero, Fecha, Opcion, usuario, sucursal}, Me.CrearPdaCorteDiarioCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrearPdaCorteDiarioCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CrearPdaCorteDiarioCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CrearPdaCorteDiarioCajaCompleted(Me, New CrearPdaCorteDiarioCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ConsultarIngresosCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarIngresosCaja(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Opcion As Integer, ByVal usuario As String, ByVal sucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarIngresosCaja", New Object() {CodCajero, Fecha, Opcion, usuario, sucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarIngresosCaja(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Opcion As Integer, ByVal usuario As String, ByVal sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarIngresosCaja", New Object() {CodCajero, Fecha, Opcion, usuario, sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarIngresosCaja(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarIngresosCajaAsync(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Opcion As Integer, ByVal usuario As String, ByVal sucursal As String)
            Me.ConsultarIngresosCajaAsync(CodCajero, Fecha, Opcion, usuario, sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarIngresosCajaAsync(ByVal CodCajero As Integer, ByVal Fecha As Date, ByVal Opcion As Integer, ByVal usuario As String, ByVal sucursal As String, ByVal userState As Object)
            If (Me.ConsultarIngresosCajaOperationCompleted Is Nothing) Then
                Me.ConsultarIngresosCajaOperationCompleted = AddressOf Me.OnConsultarIngresosCajaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarIngresosCaja", New Object() {CodCajero, Fecha, Opcion, usuario, sucursal}, Me.ConsultarIngresosCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarIngresosCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarIngresosCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarIngresosCajaCompleted(Me, New ConsultarIngresosCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/Rpt_EstadoResultadoHistorico", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rpt_EstadoResultadoHistorico(ByVal FechaInicio As Date, ByVal FechaFin As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rpt_EstadoResultadoHistorico", New Object() {FechaInicio, FechaFin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRpt_EstadoResultadoHistorico(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Rpt_EstadoResultadoHistorico", New Object() {FechaInicio, FechaFin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRpt_EstadoResultadoHistorico(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rpt_EstadoResultadoHistoricoAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date)
            Me.Rpt_EstadoResultadoHistoricoAsync(FechaInicio, FechaFin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rpt_EstadoResultadoHistoricoAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal userState As Object)
            If (Me.Rpt_EstadoResultadoHistoricoOperationCompleted Is Nothing) Then
                Me.Rpt_EstadoResultadoHistoricoOperationCompleted = AddressOf Me.OnRpt_EstadoResultadoHistoricoOperationCompleted
            End If
            Me.InvokeAsync("Rpt_EstadoResultadoHistorico", New Object() {FechaInicio, FechaFin}, Me.Rpt_EstadoResultadoHistoricoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRpt_EstadoResultadoHistoricoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rpt_EstadoResultadoHistoricoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rpt_EstadoResultadoHistoricoCompleted(Me, New Rpt_EstadoResultadoHistoricoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/Rpt_EstadoResultado", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rpt_EstadoResultado(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal centroCosto As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rpt_EstadoResultado", New Object() {FechaInicio, FechaFin, centroCosto})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRpt_EstadoResultado(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal centroCosto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Rpt_EstadoResultado", New Object() {FechaInicio, FechaFin, centroCosto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRpt_EstadoResultado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rpt_EstadoResultadoAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal centroCosto As String)
            Me.Rpt_EstadoResultadoAsync(FechaInicio, FechaFin, centroCosto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rpt_EstadoResultadoAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal centroCosto As String, ByVal userState As Object)
            If (Me.Rpt_EstadoResultadoOperationCompleted Is Nothing) Then
                Me.Rpt_EstadoResultadoOperationCompleted = AddressOf Me.OnRpt_EstadoResultadoOperationCompleted
            End If
            Me.InvokeAsync("Rpt_EstadoResultado", New Object() {FechaInicio, FechaFin, centroCosto}, Me.Rpt_EstadoResultadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRpt_EstadoResultadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rpt_EstadoResultadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rpt_EstadoResultadoCompleted(Me, New Rpt_EstadoResultadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/generarPartidaValorFecha", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function generarPartidaValorFecha(ByVal fecha As Date, ByVal tipo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("generarPartidaValorFecha", New Object() {fecha, tipo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BegingenerarPartidaValorFecha(ByVal fecha As Date, ByVal tipo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("generarPartidaValorFecha", New Object() {fecha, tipo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgenerarPartidaValorFecha(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub generarPartidaValorFechaAsync(ByVal fecha As Date, ByVal tipo As String)
            Me.generarPartidaValorFechaAsync(fecha, tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub generarPartidaValorFechaAsync(ByVal fecha As Date, ByVal tipo As String, ByVal userState As Object)
            If (Me.generarPartidaValorFechaOperationCompleted Is Nothing) Then
                Me.generarPartidaValorFechaOperationCompleted = AddressOf Me.OngenerarPartidaValorFechaOperationCompleted
            End If
            Me.InvokeAsync("generarPartidaValorFecha", New Object() {fecha, tipo}, Me.generarPartidaValorFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OngenerarPartidaValorFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.generarPartidaValorFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent generarPartidaValorFechaCompleted(Me, New generarPartidaValorFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/AnulaPartida", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AnulaPartida(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String) As Boolean
            Dim results() As Object = Me.Invoke("AnulaPartida", New Object() {pUsuario, pPassword, pSucursal, pNumPartida})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAnulaPartida(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AnulaPartida", New Object() {pUsuario, pPassword, pSucursal, pNumPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAnulaPartida(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AnulaPartidaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String)
            Me.AnulaPartidaAsync(pUsuario, pPassword, pSucursal, pNumPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AnulaPartidaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String, ByVal userState As Object)
            If (Me.AnulaPartidaOperationCompleted Is Nothing) Then
                Me.AnulaPartidaOperationCompleted = AddressOf Me.OnAnulaPartidaOperationCompleted
            End If
            Me.InvokeAsync("AnulaPartida", New Object() {pUsuario, pPassword, pSucursal, pNumPartida}, Me.AnulaPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAnulaPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AnulaPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AnulaPartidaCompleted(Me, New AnulaPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/AnulaPartidaAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AnulaPartidaAut(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String) As Boolean
            Dim results() As Object = Me.Invoke("AnulaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, pNumPartida})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAnulaPartidaAut(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AnulaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, pNumPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAnulaPartidaAut(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AnulaPartidaAutAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String)
            Me.AnulaPartidaAutAsync(pUsuario, pPassword, pSucursal, pNumPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AnulaPartidaAutAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String, ByVal userState As Object)
            If (Me.AnulaPartidaAutOperationCompleted Is Nothing) Then
                Me.AnulaPartidaAutOperationCompleted = AddressOf Me.OnAnulaPartidaAutOperationCompleted
            End If
            Me.InvokeAsync("AnulaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, pNumPartida}, Me.AnulaPartidaAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnAnulaPartidaAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.AnulaPartidaAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AnulaPartidaAutCompleted(Me, New AnulaPartidaAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/AutorizaPartidas", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutorizaPartidas(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("AutorizaPartidas", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAutorizaPartidas(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AutorizaPartidas", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAutorizaPartidas(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutorizaPartidasAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AutorizaPartidasAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutorizaPartidasAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AutorizaPartidasOperationCompleted Is Nothing) Then
                Me.AutorizaPartidasOperationCompleted = AddressOf Me.OnAutorizaPartidasOperationCompleted
            End If
            Me.InvokeAsync("AutorizaPartidas", New Object() {pUsuario, pPassword, pSucursal}, Me.AutorizaPartidasOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutorizaPartidasOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutorizaPartidasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutorizaPartidasCompleted(Me, New AutorizaPartidasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/AutorizaPartidasAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutorizaPartidasAut(ByVal pNumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("AutorizaPartidasAut", New Object() {pNumPartida, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAutorizaPartidasAut(ByVal pNumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AutorizaPartidasAut", New Object() {pNumPartida, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAutorizaPartidasAut(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutorizaPartidasAutAsync(ByVal pNumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AutorizaPartidasAutAsync(pNumPartida, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutorizaPartidasAutAsync(ByVal pNumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AutorizaPartidasAutOperationCompleted Is Nothing) Then
                Me.AutorizaPartidasAutOperationCompleted = AddressOf Me.OnAutorizaPartidasAutOperationCompleted
            End If
            Me.InvokeAsync("AutorizaPartidasAut", New Object() {pNumPartida, pUsuario, pPassword, pSucursal}, Me.AutorizaPartidasAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutorizaPartidasAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutorizaPartidasAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutorizaPartidasAutCompleted(Me, New AutorizaPartidasAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxEstado", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxEstado(ByVal pEstado As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxEstado", New Object() {pEstado, pArg2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxEstado(ByVal pEstado As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxEstado", New Object() {pEstado, pArg2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxEstado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxEstadoAsync(ByVal pEstado As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxEstadoAsync(pEstado, pArg2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxEstadoAsync(ByVal pEstado As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxEstadoOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxEstadoOperationCompleted = AddressOf Me.OnBuscarPartidasxEstadoOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxEstado", New Object() {pEstado, pArg2, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxEstadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxEstadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxEstadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxEstadoCompleted(Me, New BuscarPartidasxEstadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxEstadoAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxEstadoAut(ByVal pEstado As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxEstadoAut", New Object() {pEstado, pArg2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxEstadoAut(ByVal pEstado As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxEstadoAut", New Object() {pEstado, pArg2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxEstadoAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxEstadoAutAsync(ByVal pEstado As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxEstadoAutAsync(pEstado, pArg2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxEstadoAutAsync(ByVal pEstado As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxEstadoAutOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxEstadoAutOperationCompleted = AddressOf Me.OnBuscarPartidasxEstadoAutOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxEstadoAut", New Object() {pEstado, pArg2, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxEstadoAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxEstadoAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxEstadoAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxEstadoAutCompleted(Me, New BuscarPartidasxEstadoAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxFecha", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxFecha(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxFecha", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxFecha(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxFecha", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxFecha(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxFechaAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxFechaAsync(pFecha1, pFecha2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxFechaAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxFechaOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxFechaOperationCompleted = AddressOf Me.OnBuscarPartidasxFechaOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxFecha", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxFechaCompleted(Me, New BuscarPartidasxFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxFechaAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxFechaAut(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxFechaAut", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxFechaAut(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxFechaAut", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxFechaAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxFechaAutAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxFechaAutAsync(pFecha1, pFecha2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxFechaAutAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxFechaAutOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxFechaAutOperationCompleted = AddressOf Me.OnBuscarPartidasxFechaAutOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxFechaAut", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxFechaAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxFechaAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxFechaAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxFechaAutCompleted(Me, New BuscarPartidasxFechaAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxMesyAnioActual", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxMesyAnioActual(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxMesyAnioActual", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxMesyAnioActual(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxMesyAnioActual", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxMesyAnioActual(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxMesyAnioActualAsync(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxMesyAnioActualAsync(pAnio, pMes, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxMesyAnioActualAsync(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxMesyAnioActualOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxMesyAnioActualOperationCompleted = AddressOf Me.OnBuscarPartidasxMesyAnioActualOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxMesyAnioActual", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxMesyAnioActualOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxMesyAnioActualOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxMesyAnioActualCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxMesyAnioActualCompleted(Me, New BuscarPartidasxMesyAnioActualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxMesyAnioActualAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxMesyAnioActualAut(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxMesyAnioActualAut", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxMesyAnioActualAut(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxMesyAnioActualAut", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxMesyAnioActualAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxMesyAnioActualAutAsync(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxMesyAnioActualAutAsync(pAnio, pMes, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxMesyAnioActualAutAsync(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxMesyAnioActualAutOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxMesyAnioActualAutOperationCompleted = AddressOf Me.OnBuscarPartidasxMesyAnioActualAutOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxMesyAnioActualAut", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxMesyAnioActualAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxMesyAnioActualAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxMesyAnioActualAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxMesyAnioActualAutCompleted(Me, New BuscarPartidasxMesyAnioActualAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxNumero", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxNumero(ByVal pNumero As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxNumero", New Object() {pNumero, pArg2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxNumero(ByVal pNumero As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxNumero", New Object() {pNumero, pArg2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxNumero(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxNumeroAsync(ByVal pNumero As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxNumeroAsync(pNumero, pArg2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxNumeroAsync(ByVal pNumero As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxNumeroOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxNumeroOperationCompleted = AddressOf Me.OnBuscarPartidasxNumeroOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxNumero", New Object() {pNumero, pArg2, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxNumeroOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxNumeroOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxNumeroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxNumeroCompleted(Me, New BuscarPartidasxNumeroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxNumeroAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxNumeroAut(ByVal pNumero As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxNumeroAut", New Object() {pNumero, pArg2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxNumeroAut(ByVal pNumero As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxNumeroAut", New Object() {pNumero, pArg2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxNumeroAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxNumeroAutAsync(ByVal pNumero As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxNumeroAutAsync(pNumero, pArg2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxNumeroAutAsync(ByVal pNumero As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxNumeroAutOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxNumeroAutOperationCompleted = AddressOf Me.OnBuscarPartidasxNumeroAutOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxNumeroAut", New Object() {pNumero, pArg2, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxNumeroAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxNumeroAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxNumeroAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxNumeroAutCompleted(Me, New BuscarPartidasxNumeroAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxTipo", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxTipo(ByVal pTipo As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxTipo", New Object() {pTipo, pArg2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxTipo(ByVal pTipo As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxTipo", New Object() {pTipo, pArg2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxTipo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxTipoAsync(ByVal pTipo As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxTipoAsync(pTipo, pArg2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxTipoAsync(ByVal pTipo As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxTipoOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxTipoOperationCompleted = AddressOf Me.OnBuscarPartidasxTipoOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxTipo", New Object() {pTipo, pArg2, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxTipoOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxTipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxTipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxTipoCompleted(Me, New BuscarPartidasxTipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/BuscarPartidasxTipoAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarPartidasxTipoAut(ByVal pTipo As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarPartidasxTipoAut", New Object() {pTipo, pArg2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBuscarPartidasxTipoAut(ByVal pTipo As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BuscarPartidasxTipoAut", New Object() {pTipo, pArg2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBuscarPartidasxTipoAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxTipoAutAsync(ByVal pTipo As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BuscarPartidasxTipoAutAsync(pTipo, pArg2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarPartidasxTipoAutAsync(ByVal pTipo As String, ByVal pArg2 As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BuscarPartidasxTipoAutOperationCompleted Is Nothing) Then
                Me.BuscarPartidasxTipoAutOperationCompleted = AddressOf Me.OnBuscarPartidasxTipoAutOperationCompleted
            End If
            Me.InvokeAsync("BuscarPartidasxTipoAut", New Object() {pTipo, pArg2, pUsuario, pPassword, pSucursal}, Me.BuscarPartidasxTipoAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarPartidasxTipoAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarPartidasxTipoAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarPartidasxTipoAutCompleted(Me, New BuscarPartidasxTipoAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/CargaPartida", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaPartida(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaPartida", New Object() {NumPartida, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaPartida(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaPartida", New Object() {NumPartida, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaPartida(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaPartidaAsync(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaPartidaAsync(NumPartida, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaPartidaAsync(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaPartidaOperationCompleted Is Nothing) Then
                Me.CargaPartidaOperationCompleted = AddressOf Me.OnCargaPartidaOperationCompleted
            End If
            Me.InvokeAsync("CargaPartida", New Object() {NumPartida, pUsuario, pPassword, pSucursal}, Me.CargaPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaPartidaCompleted(Me, New CargaPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/CargaPartidaAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaPartidaAut(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaPartidaAut", New Object() {NumPartida, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaPartidaAut(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaPartidaAut", New Object() {NumPartida, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaPartidaAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaPartidaAutAsync(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CargaPartidaAutAsync(NumPartida, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaPartidaAutAsync(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CargaPartidaAutOperationCompleted Is Nothing) Then
                Me.CargaPartidaAutOperationCompleted = AddressOf Me.OnCargaPartidaAutOperationCompleted
            End If
            Me.InvokeAsync("CargaPartidaAut", New Object() {NumPartida, pUsuario, pPassword, pSucursal}, Me.CargaPartidaAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaPartidaAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaPartidaAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaPartidaAutCompleted(Me, New CargaPartidaAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/CargaPartidaModulo", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaPartidaModulo(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pModulo As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CargaPartidaModulo", New Object() {NumPartida, pUsuario, pPassword, pSucursal, pModulo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCargaPartidaModulo(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pModulo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CargaPartidaModulo", New Object() {NumPartida, pUsuario, pPassword, pSucursal, pModulo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCargaPartidaModulo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaPartidaModuloAsync(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pModulo As Integer)
            Me.CargaPartidaModuloAsync(NumPartida, pUsuario, pPassword, pSucursal, pModulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaPartidaModuloAsync(ByVal NumPartida As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pModulo As Integer, ByVal userState As Object)
            If (Me.CargaPartidaModuloOperationCompleted Is Nothing) Then
                Me.CargaPartidaModuloOperationCompleted = AddressOf Me.OnCargaPartidaModuloOperationCompleted
            End If
            Me.InvokeAsync("CargaPartidaModulo", New Object() {NumPartida, pUsuario, pPassword, pSucursal, pModulo}, Me.CargaPartidaModuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaPartidaModuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaPartidaModuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaPartidaModuloCompleted(Me, New CargaPartidaModuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/CierreContable", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CierreContable(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("CierreContable", New Object() {pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCierreContable(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CierreContable", New Object() {pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCierreContable(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CierreContableAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CierreContableAsync(pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CierreContableAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CierreContableOperationCompleted Is Nothing) Then
                Me.CierreContableOperationCompleted = AddressOf Me.OnCierreContableOperationCompleted
            End If
            Me.InvokeAsync("CierreContable", New Object() {pFecha, pUsuario, pPassword, pSucursal}, Me.CierreContableOperationCompleted, userState)
        End Sub
        
        Private Sub OnCierreContableOperationCompleted(ByVal arg As Object)
            If (Not (Me.CierreContableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CierreContableCompleted(Me, New CierreContableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/CierreMes", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CierreMes(ByVal pFecha As Date, ByVal pCierre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("CierreMes", New Object() {pFecha, pCierre, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCierreMes(ByVal pFecha As Date, ByVal pCierre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CierreMes", New Object() {pFecha, pCierre, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCierreMes(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CierreMesAsync(ByVal pFecha As Date, ByVal pCierre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CierreMesAsync(pFecha, pCierre, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CierreMesAsync(ByVal pFecha As Date, ByVal pCierre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CierreMesOperationCompleted Is Nothing) Then
                Me.CierreMesOperationCompleted = AddressOf Me.OnCierreMesOperationCompleted
            End If
            Me.InvokeAsync("CierreMes", New Object() {pFecha, pCierre, pUsuario, pPassword, pSucursal}, Me.CierreMesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCierreMesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CierreMesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CierreMesCompleted(Me, New CierreMesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ConsultaCierre", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaCierre(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaCierre", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaCierre(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaCierre", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaCierre(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaCierreAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultaCierreAsync(pCampos, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaCierreAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultaCierreOperationCompleted Is Nothing) Then
                Me.ConsultaCierreOperationCompleted = AddressOf Me.OnConsultaCierreOperationCompleted
            End If
            Me.InvokeAsync("ConsultaCierre", New Object() {pCampos, pFiltro, pUsuario, pPassword, pSucursal}, Me.ConsultaCierreOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaCierreOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaCierreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaCierreCompleted(Me, New ConsultaCierreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ConsultaPartidasxMes", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaPartidasxMes(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaPartidasxMes", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaPartidasxMes(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaPartidasxMes", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaPartidasxMes(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaPartidasxMesAsync(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultaPartidasxMesAsync(pAnio, pMes, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaPartidasxMesAsync(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultaPartidasxMesOperationCompleted Is Nothing) Then
                Me.ConsultaPartidasxMesOperationCompleted = AddressOf Me.OnConsultaPartidasxMesOperationCompleted
            End If
            Me.InvokeAsync("ConsultaPartidasxMes", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal}, Me.ConsultaPartidasxMesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaPartidasxMesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaPartidasxMesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaPartidasxMesCompleted(Me, New ConsultaPartidasxMesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ConsultaPartidasxMesAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaPartidasxMesAut(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaPartidasxMesAut", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaPartidasxMesAut(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaPartidasxMesAut", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaPartidasxMesAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaPartidasxMesAutAsync(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultaPartidasxMesAutAsync(pAnio, pMes, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaPartidasxMesAutAsync(ByVal pAnio As Integer, ByVal pMes As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultaPartidasxMesAutOperationCompleted Is Nothing) Then
                Me.ConsultaPartidasxMesAutOperationCompleted = AddressOf Me.OnConsultaPartidasxMesAutOperationCompleted
            End If
            Me.InvokeAsync("ConsultaPartidasxMesAut", New Object() {pAnio, pMes, pUsuario, pPassword, pSucursal}, Me.ConsultaPartidasxMesAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaPartidasxMesAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaPartidasxMesAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaPartidasxMesAutCompleted(Me, New ConsultaPartidasxMesAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ConsultarDetParametroPartidaIntegracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDetParametroPartidaIntegracion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDetParametroPartidaIntegracion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDetParametroPartidaIntegracion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDetParametroPartidaIntegracion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDetParametroPartidaIntegracion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetParametroPartidaIntegracionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDetParametroPartidaIntegracionAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetParametroPartidaIntegracionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDetParametroPartidaIntegracionOperationCompleted Is Nothing) Then
                Me.ConsultarDetParametroPartidaIntegracionOperationCompleted = AddressOf Me.OnConsultarDetParametroPartidaIntegracionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDetParametroPartidaIntegracion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDetParametroPartidaIntegracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDetParametroPartidaIntegracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDetParametroPartidaIntegracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDetParametroPartidaIntegracionCompleted(Me, New ConsultarDetParametroPartidaIntegracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ConsultarParametroPartidaIntegracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarParametroPartidaIntegracion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarParametroPartidaIntegracion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarParametroPartidaIntegracion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarParametroPartidaIntegracion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarParametroPartidaIntegracion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarParametroPartidaIntegracionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarParametroPartidaIntegracionAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarParametroPartidaIntegracionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarParametroPartidaIntegracionOperationCompleted Is Nothing) Then
                Me.ConsultarParametroPartidaIntegracionOperationCompleted = AddressOf Me.OnConsultarParametroPartidaIntegracionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarParametroPartidaIntegracion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarParametroPartidaIntegracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarParametroPartidaIntegracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarParametroPartidaIntegracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarParametroPartidaIntegracionCompleted(Me, New ConsultarParametroPartidaIntegracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ConsultaSaldos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaSaldos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaSaldos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultaSaldos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaSaldos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultaSaldos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaSaldosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultaSaldosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaSaldosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultaSaldosOperationCompleted Is Nothing) Then
                Me.ConsultaSaldosOperationCompleted = AddressOf Me.OnConsultaSaldosOperationCompleted
            End If
            Me.InvokeAsync("ConsultaSaldos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultaSaldosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaSaldosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaSaldosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaSaldosCompleted(Me, New ConsultaSaldosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/CreacionSaldosHistoricos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreacionSaldosHistoricos(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("CreacionSaldosHistoricos", New Object() {pAnnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCreacionSaldosHistoricos(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreacionSaldosHistoricos", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreacionSaldosHistoricos(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreacionSaldosHistoricosAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CreacionSaldosHistoricosAsync(pAnnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreacionSaldosHistoricosAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CreacionSaldosHistoricosOperationCompleted Is Nothing) Then
                Me.CreacionSaldosHistoricosOperationCompleted = AddressOf Me.OnCreacionSaldosHistoricosOperationCompleted
            End If
            Me.InvokeAsync("CreacionSaldosHistoricos", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, Me.CreacionSaldosHistoricosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreacionSaldosHistoricosOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreacionSaldosHistoricosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreacionSaldosHistoricosCompleted(Me, New CreacionSaldosHistoricosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaCuentaBeneficio", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaCuentaBeneficio(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaCuentaBeneficio", New Object() {pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaCuentaBeneficio(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaCuentaBeneficio", New Object() {pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaCuentaBeneficio(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaCuentaBeneficioAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaCuentaBeneficioAsync(pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaCuentaBeneficioAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaCuentaBeneficioOperationCompleted Is Nothing) Then
                Me.EliminaCuentaBeneficioOperationCompleted = AddressOf Me.OnEliminaCuentaBeneficioOperationCompleted
            End If
            Me.InvokeAsync("EliminaCuentaBeneficio", New Object() {pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaCuentaBeneficioOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaCuentaBeneficioOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaCuentaBeneficioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaCuentaBeneficioCompleted(Me, New EliminaCuentaBeneficioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaCuentaContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaCuentaContab(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaCuentaContab", New Object() {pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaCuentaContab(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaCuentaContab", New Object() {pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaCuentaContab(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaCuentaContabAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaCuentaContabAsync(pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaCuentaContabAsync(ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaCuentaContabOperationCompleted Is Nothing) Then
                Me.EliminaCuentaContabOperationCompleted = AddressOf Me.OnEliminaCuentaContabOperationCompleted
            End If
            Me.InvokeAsync("EliminaCuentaContab", New Object() {pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaCuentaContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaCuentaContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaCuentaContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaCuentaContabCompleted(Me, New EliminaCuentaContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaCuentaCostos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaCuentaCostos(ByVal pTipo As TiposCatalogo, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaCuentaCostos", New Object() {pTipo, pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaCuentaCostos(ByVal pTipo As TiposCatalogo, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaCuentaCostos", New Object() {pTipo, pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaCuentaCostos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaCuentaCostosAsync(ByVal pTipo As TiposCatalogo, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaCuentaCostosAsync(pTipo, pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaCuentaCostosAsync(ByVal pTipo As TiposCatalogo, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaCuentaCostosOperationCompleted Is Nothing) Then
                Me.EliminaCuentaCostosOperationCompleted = AddressOf Me.OnEliminaCuentaCostosOperationCompleted
            End If
            Me.InvokeAsync("EliminaCuentaCostos", New Object() {pTipo, pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaCuentaCostosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaCuentaCostosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaCuentaCostosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaCuentaCostosCompleted(Me, New EliminaCuentaCostosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaDetParametroPartidaIntegracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaDetParametroPartidaIntegracion(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaDetParametroPartidaIntegracion", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaDetParametroPartidaIntegracion(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaDetParametroPartidaIntegracion", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaDetParametroPartidaIntegracion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaDetParametroPartidaIntegracionAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaDetParametroPartidaIntegracionAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaDetParametroPartidaIntegracionAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaDetParametroPartidaIntegracionOperationCompleted Is Nothing) Then
                Me.EliminaDetParametroPartidaIntegracionOperationCompleted = AddressOf Me.OnEliminaDetParametroPartidaIntegracionOperationCompleted
            End If
            Me.InvokeAsync("EliminaDetParametroPartidaIntegracion", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminaDetParametroPartidaIntegracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaDetParametroPartidaIntegracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaDetParametroPartidaIntegracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaDetParametroPartidaIntegracionCompleted(Me, New EliminaDetParametroPartidaIntegracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaNivelBeneficios", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaNivelBeneficios(ByVal ptipoNivel As TipoNivel, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaNivelBeneficios", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaNivelBeneficios(ByVal ptipoNivel As TipoNivel, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaNivelBeneficios", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaNivelBeneficios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaNivelBeneficiosAsync(ByVal ptipoNivel As TipoNivel, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaNivelBeneficiosAsync(ptipoNivel, pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaNivelBeneficiosAsync(ByVal ptipoNivel As TipoNivel, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaNivelBeneficiosOperationCompleted Is Nothing) Then
                Me.EliminaNivelBeneficiosOperationCompleted = AddressOf Me.OnEliminaNivelBeneficiosOperationCompleted
            End If
            Me.InvokeAsync("EliminaNivelBeneficios", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaNivelBeneficiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaNivelBeneficiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaNivelBeneficiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaNivelBeneficiosCompleted(Me, New EliminaNivelBeneficiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaNivelContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaNivelContab(ByVal ptipoNivel As TiposNivel, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaNivelContab", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaNivelContab(ByVal ptipoNivel As TiposNivel, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaNivelContab", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaNivelContab(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaNivelContabAsync(ByVal ptipoNivel As TiposNivel, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaNivelContabAsync(ptipoNivel, pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaNivelContabAsync(ByVal ptipoNivel As TiposNivel, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaNivelContabOperationCompleted Is Nothing) Then
                Me.EliminaNivelContabOperationCompleted = AddressOf Me.OnEliminaNivelContabOperationCompleted
            End If
            Me.InvokeAsync("EliminaNivelContab", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaNivelContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaNivelContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaNivelContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaNivelContabCompleted(Me, New EliminaNivelContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaNivelCostos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaNivelCostos(ByVal ptipoNivel As TiposNiveles, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaNivelCostos", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaNivelCostos(ByVal ptipoNivel As TiposNiveles, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaNivelCostos", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaNivelCostos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaNivelCostosAsync(ByVal ptipoNivel As TiposNiveles, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaNivelCostosAsync(ptipoNivel, pIdCuenta, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaNivelCostosAsync(ByVal ptipoNivel As TiposNiveles, ByVal pIdCuenta As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaNivelCostosOperationCompleted Is Nothing) Then
                Me.EliminaNivelCostosOperationCompleted = AddressOf Me.OnEliminaNivelCostosOperationCompleted
            End If
            Me.InvokeAsync("EliminaNivelCostos", New Object() {ptipoNivel, pIdCuenta, pUs, pPa, pSucursal}, Me.EliminaNivelCostosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaNivelCostosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaNivelCostosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaNivelCostosCompleted(Me, New EliminaNivelCostosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaParametroPartidaIntegracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaParametroPartidaIntegracion(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaParametroPartidaIntegracion", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaParametroPartidaIntegracion(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaParametroPartidaIntegracion", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaParametroPartidaIntegracion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaParametroPartidaIntegracionAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminaParametroPartidaIntegracionAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaParametroPartidaIntegracionAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminaParametroPartidaIntegracionOperationCompleted Is Nothing) Then
                Me.EliminaParametroPartidaIntegracionOperationCompleted = AddressOf Me.OnEliminaParametroPartidaIntegracionOperationCompleted
            End If
            Me.InvokeAsync("EliminaParametroPartidaIntegracion", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminaParametroPartidaIntegracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaParametroPartidaIntegracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaParametroPartidaIntegracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaParametroPartidaIntegracionCompleted(Me, New EliminaParametroPartidaIntegracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaPartida", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaPartida(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaPartida", New Object() {pUsuario, pPassword, pSucursal, pNumPartida})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaPartida(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaPartida", New Object() {pUsuario, pPassword, pSucursal, pNumPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaPartida(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaPartidaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String)
            Me.EliminaPartidaAsync(pUsuario, pPassword, pSucursal, pNumPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaPartidaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String, ByVal userState As Object)
            If (Me.EliminaPartidaOperationCompleted Is Nothing) Then
                Me.EliminaPartidaOperationCompleted = AddressOf Me.OnEliminaPartidaOperationCompleted
            End If
            Me.InvokeAsync("EliminaPartida", New Object() {pUsuario, pPassword, pSucursal, pNumPartida}, Me.EliminaPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaPartidaCompleted(Me, New EliminaPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/EliminaPartidaAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminaPartidaAut(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, pNumPartida})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminaPartidaAut(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, pNumPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminaPartidaAut(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminaPartidaAutAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String)
            Me.EliminaPartidaAutAsync(pUsuario, pPassword, pSucursal, pNumPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminaPartidaAutAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pNumPartida As String, ByVal userState As Object)
            If (Me.EliminaPartidaAutOperationCompleted Is Nothing) Then
                Me.EliminaPartidaAutOperationCompleted = AddressOf Me.OnEliminaPartidaAutOperationCompleted
            End If
            Me.InvokeAsync("EliminaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, pNumPartida}, Me.EliminaPartidaAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminaPartidaAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminaPartidaAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminaPartidaAutCompleted(Me, New EliminaPartidaAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/GeneraBalance", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraBalance(ByVal pMes As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal centroCosto As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GeneraBalance", New Object() {pMes, pNivelMin, pNivelMax, pNivelSuma, pAnio, pUsuario, pPassword, pSucursal, centroCosto})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraBalance(ByVal pMes As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal centroCosto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraBalance", New Object() {pMes, pNivelMin, pNivelMax, pNivelSuma, pAnio, pUsuario, pPassword, pSucursal, centroCosto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraBalance(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraBalanceAsync(ByVal pMes As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal centroCosto As String)
            Me.GeneraBalanceAsync(pMes, pNivelMin, pNivelMax, pNivelSuma, pAnio, pUsuario, pPassword, pSucursal, centroCosto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraBalanceAsync(ByVal pMes As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal centroCosto As String, ByVal userState As Object)
            If (Me.GeneraBalanceOperationCompleted Is Nothing) Then
                Me.GeneraBalanceOperationCompleted = AddressOf Me.OnGeneraBalanceOperationCompleted
            End If
            Me.InvokeAsync("GeneraBalance", New Object() {pMes, pNivelMin, pNivelMax, pNivelSuma, pAnio, pUsuario, pPassword, pSucursal, centroCosto}, Me.GeneraBalanceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraBalanceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraBalanceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraBalanceCompleted(Me, New GeneraBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/GeneraBalance_Hist", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraBalance_Hist(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GeneraBalance_Hist", New Object() {pMes, pAnio, pNivelMin, pNivelMax, pNivelSuma, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraBalance_Hist(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraBalance_Hist", New Object() {pMes, pAnio, pNivelMin, pNivelMax, pNivelSuma, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraBalance_Hist(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraBalance_HistAsync(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.GeneraBalance_HistAsync(pMes, pAnio, pNivelMin, pNivelMax, pNivelSuma, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraBalance_HistAsync(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.GeneraBalance_HistOperationCompleted Is Nothing) Then
                Me.GeneraBalance_HistOperationCompleted = AddressOf Me.OnGeneraBalance_HistOperationCompleted
            End If
            Me.InvokeAsync("GeneraBalance_Hist", New Object() {pMes, pAnio, pNivelMin, pNivelMax, pNivelSuma, pUsuario, pPassword, pSucursal}, Me.GeneraBalance_HistOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraBalance_HistOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraBalance_HistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraBalance_HistCompleted(Me, New GeneraBalance_HistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/GeneraEstRes", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraEstRes(ByVal pMesIni As Integer, ByVal pMesFin As Integer, ByVal pAnio As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GeneraEstRes", New Object() {pMesIni, pMesFin, pAnio, pNivelMin, pNivelMax, pNivelSuma, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraEstRes(ByVal pMesIni As Integer, ByVal pMesFin As Integer, ByVal pAnio As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraEstRes", New Object() {pMesIni, pMesFin, pAnio, pNivelMin, pNivelMax, pNivelSuma, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraEstRes(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraEstResAsync(ByVal pMesIni As Integer, ByVal pMesFin As Integer, ByVal pAnio As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.GeneraEstResAsync(pMesIni, pMesFin, pAnio, pNivelMin, pNivelMax, pNivelSuma, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraEstResAsync(ByVal pMesIni As Integer, ByVal pMesFin As Integer, ByVal pAnio As Integer, ByVal pNivelMin As Integer, ByVal pNivelMax As Integer, ByVal pNivelSuma As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.GeneraEstResOperationCompleted Is Nothing) Then
                Me.GeneraEstResOperationCompleted = AddressOf Me.OnGeneraEstResOperationCompleted
            End If
            Me.InvokeAsync("GeneraEstRes", New Object() {pMesIni, pMesFin, pAnio, pNivelMin, pNivelMax, pNivelSuma, pUsuario, pPassword, pSucursal}, Me.GeneraEstResOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraEstResOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraEstResCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraEstResCompleted(Me, New GeneraEstResCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/GeneraPartidaIntegracionAhorros", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraPartidaIntegracionAhorros(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTipoPartidaIntegracion As PartidaIntegracion, ByVal pCodigoInicialTipoAhorro As String, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date) As Boolean
            Dim results() As Object = Me.Invoke("GeneraPartidaIntegracionAhorros", New Object() {pUsuario, pPassword, pSucursal, pTipoPartidaIntegracion, pCodigoInicialTipoAhorro, pCodPartidaIntegrac, pFecha})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraPartidaIntegracionAhorros(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTipoPartidaIntegracion As PartidaIntegracion, ByVal pCodigoInicialTipoAhorro As String, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraPartidaIntegracionAhorros", New Object() {pUsuario, pPassword, pSucursal, pTipoPartidaIntegracion, pCodigoInicialTipoAhorro, pCodPartidaIntegrac, pFecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraPartidaIntegracionAhorros(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraPartidaIntegracionAhorrosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTipoPartidaIntegracion As PartidaIntegracion, ByVal pCodigoInicialTipoAhorro As String, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date)
            Me.GeneraPartidaIntegracionAhorrosAsync(pUsuario, pPassword, pSucursal, pTipoPartidaIntegracion, pCodigoInicialTipoAhorro, pCodPartidaIntegrac, pFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraPartidaIntegracionAhorrosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTipoPartidaIntegracion As PartidaIntegracion, ByVal pCodigoInicialTipoAhorro As String, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal userState As Object)
            If (Me.GeneraPartidaIntegracionAhorrosOperationCompleted Is Nothing) Then
                Me.GeneraPartidaIntegracionAhorrosOperationCompleted = AddressOf Me.OnGeneraPartidaIntegracionAhorrosOperationCompleted
            End If
            Me.InvokeAsync("GeneraPartidaIntegracionAhorros", New Object() {pUsuario, pPassword, pSucursal, pTipoPartidaIntegracion, pCodigoInicialTipoAhorro, pCodPartidaIntegrac, pFecha}, Me.GeneraPartidaIntegracionAhorrosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraPartidaIntegracionAhorrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraPartidaIntegracionAhorrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraPartidaIntegracionAhorrosCompleted(Me, New GeneraPartidaIntegracionAhorrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/GeneraPartidaIntegracionIngresoCaja", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraPartidaIntegracionIngresoCaja(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date) As Boolean
            Dim results() As Object = Me.Invoke("GeneraPartidaIntegracionIngresoCaja", New Object() {pUsuario, pPassword, pSucursal, pCodPartidaIntegrac, pFecha})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraPartidaIntegracionIngresoCaja(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraPartidaIntegracionIngresoCaja", New Object() {pUsuario, pPassword, pSucursal, pCodPartidaIntegrac, pFecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraPartidaIntegracionIngresoCaja(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraPartidaIntegracionIngresoCajaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date)
            Me.GeneraPartidaIntegracionIngresoCajaAsync(pUsuario, pPassword, pSucursal, pCodPartidaIntegrac, pFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraPartidaIntegracionIngresoCajaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal userState As Object)
            If (Me.GeneraPartidaIntegracionIngresoCajaOperationCompleted Is Nothing) Then
                Me.GeneraPartidaIntegracionIngresoCajaOperationCompleted = AddressOf Me.OnGeneraPartidaIntegracionIngresoCajaOperationCompleted
            End If
            Me.InvokeAsync("GeneraPartidaIntegracionIngresoCaja", New Object() {pUsuario, pPassword, pSucursal, pCodPartidaIntegrac, pFecha}, Me.GeneraPartidaIntegracionIngresoCajaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraPartidaIntegracionIngresoCajaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraPartidaIntegracionIngresoCajaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraPartidaIntegracionIngresoCajaCompleted(Me, New GeneraPartidaIntegracionIngresoCajaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/GeneraPartidaInteresesPagados", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraPartidaInteresesPagados(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTipoPartidaIntegracion As PartidaIntegracion, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date) As Boolean
            Dim results() As Object = Me.Invoke("GeneraPartidaInteresesPagados", New Object() {pUsuario, pPassword, pSucursal, pTipoPartidaIntegracion, pCodPartidaIntegrac, pFecha})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraPartidaInteresesPagados(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTipoPartidaIntegracion As PartidaIntegracion, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraPartidaInteresesPagados", New Object() {pUsuario, pPassword, pSucursal, pTipoPartidaIntegracion, pCodPartidaIntegrac, pFecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraPartidaInteresesPagados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraPartidaInteresesPagadosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTipoPartidaIntegracion As PartidaIntegracion, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date)
            Me.GeneraPartidaInteresesPagadosAsync(pUsuario, pPassword, pSucursal, pTipoPartidaIntegracion, pCodPartidaIntegrac, pFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraPartidaInteresesPagadosAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTipoPartidaIntegracion As PartidaIntegracion, ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal userState As Object)
            If (Me.GeneraPartidaInteresesPagadosOperationCompleted Is Nothing) Then
                Me.GeneraPartidaInteresesPagadosOperationCompleted = AddressOf Me.OnGeneraPartidaInteresesPagadosOperationCompleted
            End If
            Me.InvokeAsync("GeneraPartidaInteresesPagados", New Object() {pUsuario, pPassword, pSucursal, pTipoPartidaIntegracion, pCodPartidaIntegrac, pFecha}, Me.GeneraPartidaInteresesPagadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraPartidaInteresesPagadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraPartidaInteresesPagadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraPartidaInteresesPagadosCompleted(Me, New GeneraPartidaInteresesPagadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/GenerarPartidaLiquidacionAspirante", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerarPartidaLiquidacionAspirante(ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal pFR1 As Date, ByVal pFR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("GenerarPartidaLiquidacionAspirante", New Object() {pCodPartidaIntegrac, pFecha, pFR1, pFR2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerarPartidaLiquidacionAspirante(ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal pFR1 As Date, ByVal pFR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerarPartidaLiquidacionAspirante", New Object() {pCodPartidaIntegrac, pFecha, pFR1, pFR2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerarPartidaLiquidacionAspirante(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerarPartidaLiquidacionAspiranteAsync(ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal pFR1 As Date, ByVal pFR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.GenerarPartidaLiquidacionAspiranteAsync(pCodPartidaIntegrac, pFecha, pFR1, pFR2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerarPartidaLiquidacionAspiranteAsync(ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal pFR1 As Date, ByVal pFR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.GenerarPartidaLiquidacionAspiranteOperationCompleted Is Nothing) Then
                Me.GenerarPartidaLiquidacionAspiranteOperationCompleted = AddressOf Me.OnGenerarPartidaLiquidacionAspiranteOperationCompleted
            End If
            Me.InvokeAsync("GenerarPartidaLiquidacionAspirante", New Object() {pCodPartidaIntegrac, pFecha, pFR1, pFR2, pUsuario, pPassword, pSucursal}, Me.GenerarPartidaLiquidacionAspiranteOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerarPartidaLiquidacionAspiranteOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerarPartidaLiquidacionAspiranteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerarPartidaLiquidacionAspiranteCompleted(Me, New GenerarPartidaLiquidacionAspiranteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/GenerarPartidaRenunciaAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerarPartidaRenunciaAsociado(ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal pNoSocio As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("GenerarPartidaRenunciaAsociado", New Object() {pCodPartidaIntegrac, pFecha, pNoSocio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerarPartidaRenunciaAsociado(ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal pNoSocio As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerarPartidaRenunciaAsociado", New Object() {pCodPartidaIntegrac, pFecha, pNoSocio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerarPartidaRenunciaAsociado(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerarPartidaRenunciaAsociadoAsync(ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal pNoSocio As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.GenerarPartidaRenunciaAsociadoAsync(pCodPartidaIntegrac, pFecha, pNoSocio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerarPartidaRenunciaAsociadoAsync(ByVal pCodPartidaIntegrac As String, ByVal pFecha As Date, ByVal pNoSocio As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.GenerarPartidaRenunciaAsociadoOperationCompleted Is Nothing) Then
                Me.GenerarPartidaRenunciaAsociadoOperationCompleted = AddressOf Me.OnGenerarPartidaRenunciaAsociadoOperationCompleted
            End If
            Me.InvokeAsync("GenerarPartidaRenunciaAsociado", New Object() {pCodPartidaIntegrac, pFecha, pNoSocio, pUsuario, pPassword, pSucursal}, Me.GenerarPartidaRenunciaAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerarPartidaRenunciaAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerarPartidaRenunciaAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerarPartidaRenunciaAsociadoCompleted(Me, New GenerarPartidaRenunciaAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaCuentaBeneficio", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaCuentaBeneficio(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaCuentaBeneficio", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaCuentaBeneficio(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaCuentaBeneficio", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaCuentaBeneficio(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaCuentaBeneficioAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaCuentaBeneficioAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaCuentaBeneficioAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaCuentaBeneficioOperationCompleted Is Nothing) Then
                Me.InsertaCuentaBeneficioOperationCompleted = AddressOf Me.OnInsertaCuentaBeneficioOperationCompleted
            End If
            Me.InvokeAsync("InsertaCuentaBeneficio", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaCuentaBeneficioOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaCuentaBeneficioOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaCuentaBeneficioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaCuentaBeneficioCompleted(Me, New InsertaCuentaBeneficioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaCuentaContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaCuentaContab(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaCuentaContab", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaCuentaContab(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaCuentaContab", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaCuentaContab(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaCuentaContabAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaCuentaContabAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaCuentaContabAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaCuentaContabOperationCompleted Is Nothing) Then
                Me.InsertaCuentaContabOperationCompleted = AddressOf Me.OnInsertaCuentaContabOperationCompleted
            End If
            Me.InvokeAsync("InsertaCuentaContab", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaCuentaContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaCuentaContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaCuentaContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaCuentaContabCompleted(Me, New InsertaCuentaContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaCuentaCostos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaCuentaCostos(ByVal ptipoCatalogo As TipoCatalogo, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaCuentaCostos", New Object() {ptipoCatalogo, pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaCuentaCostos(ByVal ptipoCatalogo As TipoCatalogo, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaCuentaCostos", New Object() {ptipoCatalogo, pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaCuentaCostos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaCuentaCostosAsync(ByVal ptipoCatalogo As TipoCatalogo, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaCuentaCostosAsync(ptipoCatalogo, pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaCuentaCostosAsync(ByVal ptipoCatalogo As TipoCatalogo, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaCuentaCostosOperationCompleted Is Nothing) Then
                Me.InsertaCuentaCostosOperationCompleted = AddressOf Me.OnInsertaCuentaCostosOperationCompleted
            End If
            Me.InvokeAsync("InsertaCuentaCostos", New Object() {ptipoCatalogo, pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaCuentaCostosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaCuentaCostosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaCuentaCostosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaCuentaCostosCompleted(Me, New InsertaCuentaCostosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaDetParametroPartidaIntegracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaDetParametroPartidaIntegracion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaDetParametroPartidaIntegracion", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaDetParametroPartidaIntegracion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaDetParametroPartidaIntegracion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaDetParametroPartidaIntegracion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaDetParametroPartidaIntegracionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaDetParametroPartidaIntegracionAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaDetParametroPartidaIntegracionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaDetParametroPartidaIntegracionOperationCompleted Is Nothing) Then
                Me.InsertaDetParametroPartidaIntegracionOperationCompleted = AddressOf Me.OnInsertaDetParametroPartidaIntegracionOperationCompleted
            End If
            Me.InvokeAsync("InsertaDetParametroPartidaIntegracion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaDetParametroPartidaIntegracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaDetParametroPartidaIntegracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaDetParametroPartidaIntegracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaDetParametroPartidaIntegracionCompleted(Me, New InsertaDetParametroPartidaIntegracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaNivelBeneficios", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaNivelBeneficios(ByVal ptipoNivel As TipoNivel, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaNivelBeneficios", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaNivelBeneficios(ByVal ptipoNivel As TipoNivel, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaNivelBeneficios", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaNivelBeneficios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaNivelBeneficiosAsync(ByVal ptipoNivel As TipoNivel, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaNivelBeneficiosAsync(ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaNivelBeneficiosAsync(ByVal ptipoNivel As TipoNivel, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaNivelBeneficiosOperationCompleted Is Nothing) Then
                Me.InsertaNivelBeneficiosOperationCompleted = AddressOf Me.OnInsertaNivelBeneficiosOperationCompleted
            End If
            Me.InvokeAsync("InsertaNivelBeneficios", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaNivelBeneficiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaNivelBeneficiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaNivelBeneficiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaNivelBeneficiosCompleted(Me, New InsertaNivelBeneficiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaNivelContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaNivelContab(ByVal ptipoNivel As TiposNivel, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaNivelContab", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaNivelContab(ByVal ptipoNivel As TiposNivel, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaNivelContab", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaNivelContab(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaNivelContabAsync(ByVal ptipoNivel As TiposNivel, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaNivelContabAsync(ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaNivelContabAsync(ByVal ptipoNivel As TiposNivel, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaNivelContabOperationCompleted Is Nothing) Then
                Me.InsertaNivelContabOperationCompleted = AddressOf Me.OnInsertaNivelContabOperationCompleted
            End If
            Me.InvokeAsync("InsertaNivelContab", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaNivelContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaNivelContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaNivelContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaNivelContabCompleted(Me, New InsertaNivelContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaNivelCostos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaNivelCostos(ByVal ptipoNivel As TiposNiveles, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaNivelCostos", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaNivelCostos(ByVal ptipoNivel As TiposNiveles, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaNivelCostos", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaNivelCostos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaNivelCostosAsync(ByVal ptipoNivel As TiposNiveles, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaNivelCostosAsync(ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaNivelCostosAsync(ByVal ptipoNivel As TiposNiveles, ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaNivelCostosOperationCompleted Is Nothing) Then
                Me.InsertaNivelCostosOperationCompleted = AddressOf Me.OnInsertaNivelCostosOperationCompleted
            End If
            Me.InvokeAsync("InsertaNivelCostos", New Object() {ptipoNivel, pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaNivelCostosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaNivelCostosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaNivelCostosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaNivelCostosCompleted(Me, New InsertaNivelCostosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaParametroPartidaIntegracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaParametroPartidaIntegracion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaParametroPartidaIntegracion", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaParametroPartidaIntegracion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaParametroPartidaIntegracion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaParametroPartidaIntegracion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaParametroPartidaIntegracionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaParametroPartidaIntegracionAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaParametroPartidaIntegracionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaParametroPartidaIntegracionOperationCompleted Is Nothing) Then
                Me.InsertaParametroPartidaIntegracionOperationCompleted = AddressOf Me.OnInsertaParametroPartidaIntegracionOperationCompleted
            End If
            Me.InvokeAsync("InsertaParametroPartidaIntegracion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaParametroPartidaIntegracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaParametroPartidaIntegracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaParametroPartidaIntegracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaParametroPartidaIntegracionCompleted(Me, New InsertaParametroPartidaIntegracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaPartida", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaPartida(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("InsertaPartida", New Object() {pUsuario, pPassword, pSucursal, poPartida})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaPartida(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaPartida", New Object() {pUsuario, pPassword, pSucursal, poPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaPartida(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaPartidaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet)
            Me.InsertaPartidaAsync(pUsuario, pPassword, pSucursal, poPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaPartidaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal userState As Object)
            If (Me.InsertaPartidaOperationCompleted Is Nothing) Then
                Me.InsertaPartidaOperationCompleted = AddressOf Me.OnInsertaPartidaOperationCompleted
            End If
            Me.InvokeAsync("InsertaPartida", New Object() {pUsuario, pPassword, pSucursal, poPartida}, Me.InsertaPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaPartidaCompleted(Me, New InsertaPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaPartidaAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaPartidaAut(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("InsertaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, poPartida})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaPartidaAut(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, poPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaPartidaAut(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaPartidaAutAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet)
            Me.InsertaPartidaAutAsync(pUsuario, pPassword, pSucursal, poPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaPartidaAutAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal userState As Object)
            If (Me.InsertaPartidaAutOperationCompleted Is Nothing) Then
                Me.InsertaPartidaAutOperationCompleted = AddressOf Me.OnInsertaPartidaAutOperationCompleted
            End If
            Me.InvokeAsync("InsertaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, poPartida}, Me.InsertaPartidaAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaPartidaAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaPartidaAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaPartidaAutCompleted(Me, New InsertaPartidaAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/InsertaPartidaModulo", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaPartidaModulo(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal pModulo As Integer) As String
            Dim results() As Object = Me.Invoke("InsertaPartidaModulo", New Object() {pUsuario, pPassword, pSucursal, poPartida, pModulo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaPartidaModulo(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal pModulo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaPartidaModulo", New Object() {pUsuario, pPassword, pSucursal, poPartida, pModulo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaPartidaModulo(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaPartidaModuloAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal pModulo As Integer)
            Me.InsertaPartidaModuloAsync(pUsuario, pPassword, pSucursal, poPartida, pModulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaPartidaModuloAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal pModulo As Integer, ByVal userState As Object)
            If (Me.InsertaPartidaModuloOperationCompleted Is Nothing) Then
                Me.InsertaPartidaModuloOperationCompleted = AddressOf Me.OnInsertaPartidaModuloOperationCompleted
            End If
            Me.InvokeAsync("InsertaPartidaModulo", New Object() {pUsuario, pPassword, pSucursal, poPartida, pModulo}, Me.InsertaPartidaModuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaPartidaModuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaPartidaModuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaPartidaModuloCompleted(Me, New InsertaPartidaModuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaCuentaBeneficio", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaCuentaBeneficio(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaCuentaBeneficio", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaCuentaBeneficio(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaCuentaBeneficio", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaCuentaBeneficio(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaCuentaBeneficioAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaCuentaBeneficioAsync(pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaCuentaBeneficioAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaCuentaBeneficioOperationCompleted Is Nothing) Then
                Me.ModificaCuentaBeneficioOperationCompleted = AddressOf Me.OnModificaCuentaBeneficioOperationCompleted
            End If
            Me.InvokeAsync("ModificaCuentaBeneficio", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaCuentaBeneficioOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaCuentaBeneficioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaCuentaBeneficioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaCuentaBeneficioCompleted(Me, New ModificaCuentaBeneficioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaCuentaContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaCuentaContab(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaCuentaContab", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaCuentaContab(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaCuentaContab", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaCuentaContab(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaCuentaContabAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaCuentaContabAsync(pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaCuentaContabAsync(ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaCuentaContabOperationCompleted Is Nothing) Then
                Me.ModificaCuentaContabOperationCompleted = AddressOf Me.OnModificaCuentaContabOperationCompleted
            End If
            Me.InvokeAsync("ModificaCuentaContab", New Object() {pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaCuentaContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaCuentaContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaCuentaContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaCuentaContabCompleted(Me, New ModificaCuentaContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaCuentaCostos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaCuentaCostos(ByVal pTipoCatalogo As TipoCatalogo, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaCuentaCostos", New Object() {pTipoCatalogo, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaCuentaCostos(ByVal pTipoCatalogo As TipoCatalogo, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaCuentaCostos", New Object() {pTipoCatalogo, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaCuentaCostos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaCuentaCostosAsync(ByVal pTipoCatalogo As TipoCatalogo, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaCuentaCostosAsync(pTipoCatalogo, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaCuentaCostosAsync(ByVal pTipoCatalogo As TipoCatalogo, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaCuentaCostosOperationCompleted Is Nothing) Then
                Me.ModificaCuentaCostosOperationCompleted = AddressOf Me.OnModificaCuentaCostosOperationCompleted
            End If
            Me.InvokeAsync("ModificaCuentaCostos", New Object() {pTipoCatalogo, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaCuentaCostosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaCuentaCostosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaCuentaCostosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaCuentaCostosCompleted(Me, New ModificaCuentaCostosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaDetParametroPartidaIntegracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaDetParametroPartidaIntegracion(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaDetParametroPartidaIntegracion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaDetParametroPartidaIntegracion(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaDetParametroPartidaIntegracion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaDetParametroPartidaIntegracion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaDetParametroPartidaIntegracionAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaDetParametroPartidaIntegracionAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaDetParametroPartidaIntegracionAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaDetParametroPartidaIntegracionOperationCompleted Is Nothing) Then
                Me.ModificaDetParametroPartidaIntegracionOperationCompleted = AddressOf Me.OnModificaDetParametroPartidaIntegracionOperationCompleted
            End If
            Me.InvokeAsync("ModificaDetParametroPartidaIntegracion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaDetParametroPartidaIntegracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaDetParametroPartidaIntegracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaDetParametroPartidaIntegracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaDetParametroPartidaIntegracionCompleted(Me, New ModificaDetParametroPartidaIntegracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaNivelBeneficios", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaNivelBeneficios(ByVal ptipoNivel As TipoNivel, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaNivelBeneficios", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaNivelBeneficios(ByVal ptipoNivel As TipoNivel, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaNivelBeneficios", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaNivelBeneficios(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaNivelBeneficiosAsync(ByVal ptipoNivel As TipoNivel, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaNivelBeneficiosAsync(ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaNivelBeneficiosAsync(ByVal ptipoNivel As TipoNivel, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaNivelBeneficiosOperationCompleted Is Nothing) Then
                Me.ModificaNivelBeneficiosOperationCompleted = AddressOf Me.OnModificaNivelBeneficiosOperationCompleted
            End If
            Me.InvokeAsync("ModificaNivelBeneficios", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaNivelBeneficiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaNivelBeneficiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaNivelBeneficiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaNivelBeneficiosCompleted(Me, New ModificaNivelBeneficiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaNivelContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaNivelContab(ByVal ptipoNivel As TiposNivel, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaNivelContab", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaNivelContab(ByVal ptipoNivel As TiposNivel, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaNivelContab", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaNivelContab(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaNivelContabAsync(ByVal ptipoNivel As TiposNivel, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaNivelContabAsync(ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaNivelContabAsync(ByVal ptipoNivel As TiposNivel, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaNivelContabOperationCompleted Is Nothing) Then
                Me.ModificaNivelContabOperationCompleted = AddressOf Me.OnModificaNivelContabOperationCompleted
            End If
            Me.InvokeAsync("ModificaNivelContab", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaNivelContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaNivelContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaNivelContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaNivelContabCompleted(Me, New ModificaNivelContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaNivelCostos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaNivelCostos(ByVal ptipoNivel As TiposNiveles, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaNivelCostos", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaNivelCostos(ByVal ptipoNivel As TiposNiveles, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaNivelCostos", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaNivelCostos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaNivelCostosAsync(ByVal ptipoNivel As TiposNiveles, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaNivelCostosAsync(ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaNivelCostosAsync(ByVal ptipoNivel As TiposNiveles, ByVal pIdCuenta As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaNivelCostosOperationCompleted Is Nothing) Then
                Me.ModificaNivelCostosOperationCompleted = AddressOf Me.OnModificaNivelCostosOperationCompleted
            End If
            Me.InvokeAsync("ModificaNivelCostos", New Object() {ptipoNivel, pIdCuenta, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaNivelCostosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaNivelCostosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaNivelCostosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaNivelCostosCompleted(Me, New ModificaNivelCostosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaParametroPartidaIntegracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaParametroPartidaIntegracion(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaParametroPartidaIntegracion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaParametroPartidaIntegracion(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaParametroPartidaIntegracion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaParametroPartidaIntegracion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaParametroPartidaIntegracionAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaParametroPartidaIntegracionAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaParametroPartidaIntegracionAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaParametroPartidaIntegracionOperationCompleted Is Nothing) Then
                Me.ModificaParametroPartidaIntegracionOperationCompleted = AddressOf Me.OnModificaParametroPartidaIntegracionOperationCompleted
            End If
            Me.InvokeAsync("ModificaParametroPartidaIntegracion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificaParametroPartidaIntegracionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaParametroPartidaIntegracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaParametroPartidaIntegracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaParametroPartidaIntegracionCompleted(Me, New ModificaParametroPartidaIntegracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaPartida", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaPartida(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet) As Boolean
            Dim results() As Object = Me.Invoke("ModificaPartida", New Object() {pUsuario, pPassword, pSucursal, poPartida})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaPartida(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaPartida", New Object() {pUsuario, pPassword, pSucursal, poPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaPartida(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaPartidaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet)
            Me.ModificaPartidaAsync(pUsuario, pPassword, pSucursal, poPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaPartidaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal userState As Object)
            If (Me.ModificaPartidaOperationCompleted Is Nothing) Then
                Me.ModificaPartidaOperationCompleted = AddressOf Me.OnModificaPartidaOperationCompleted
            End If
            Me.InvokeAsync("ModificaPartida", New Object() {pUsuario, pPassword, pSucursal, poPartida}, Me.ModificaPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaPartidaCompleted(Me, New ModificaPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaPartidaAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaPartidaAut(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet) As Boolean
            Dim results() As Object = Me.Invoke("ModificaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, poPartida})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaPartidaAut(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, poPartida}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaPartidaAut(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaPartidaAutAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet)
            Me.ModificaPartidaAutAsync(pUsuario, pPassword, pSucursal, poPartida, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaPartidaAutAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal userState As Object)
            If (Me.ModificaPartidaAutOperationCompleted Is Nothing) Then
                Me.ModificaPartidaAutOperationCompleted = AddressOf Me.OnModificaPartidaAutOperationCompleted
            End If
            Me.InvokeAsync("ModificaPartidaAut", New Object() {pUsuario, pPassword, pSucursal, poPartida}, Me.ModificaPartidaAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaPartidaAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaPartidaAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaPartidaAutCompleted(Me, New ModificaPartidaAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ModificaPartidaModulo", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaPartidaModulo(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal pModulo As Integer) As Boolean
            Dim results() As Object = Me.Invoke("ModificaPartidaModulo", New Object() {pUsuario, pPassword, pSucursal, poPartida, pModulo})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaPartidaModulo(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal pModulo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaPartidaModulo", New Object() {pUsuario, pPassword, pSucursal, poPartida, pModulo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaPartidaModulo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaPartidaModuloAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal pModulo As Integer)
            Me.ModificaPartidaModuloAsync(pUsuario, pPassword, pSucursal, poPartida, pModulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaPartidaModuloAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal poPartida As System.Data.DataSet, ByVal pModulo As Integer, ByVal userState As Object)
            If (Me.ModificaPartidaModuloOperationCompleted Is Nothing) Then
                Me.ModificaPartidaModuloOperationCompleted = AddressOf Me.OnModificaPartidaModuloOperationCompleted
            End If
            Me.InvokeAsync("ModificaPartidaModulo", New Object() {pUsuario, pPassword, pSucursal, poPartida, pModulo}, Me.ModificaPartidaModuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaPartidaModuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaPartidaModuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaPartidaModuloCompleted(Me, New ModificaPartidaModuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerCatBeneficio", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatBeneficio(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCatBeneficio", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCatBeneficio(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCatBeneficio", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCatBeneficio(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatBeneficioAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCatBeneficioAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatBeneficioAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCatBeneficioOperationCompleted Is Nothing) Then
                Me.ObtenerCatBeneficioOperationCompleted = AddressOf Me.OnObtenerCatBeneficioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatBeneficio", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerCatBeneficioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatBeneficioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatBeneficioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatBeneficioCompleted(Me, New ObtenerCatBeneficioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerCatContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatContab(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCatContab", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCatContab(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCatContab", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCatContab(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatContabAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCatContabAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatContabAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCatContabOperationCompleted Is Nothing) Then
                Me.ObtenerCatContabOperationCompleted = AddressOf Me.OnObtenerCatContabOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatContab", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerCatContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatContabCompleted(Me, New ObtenerCatContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerCatCostos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatCostos(ByVal pTipoCatalogo As TipoCatalogo, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerCatCostos", New Object() {pTipoCatalogo, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCatCostos(ByVal pTipoCatalogo As TipoCatalogo, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCatCostos", New Object() {pTipoCatalogo, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCatCostos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatCostosAsync(ByVal pTipoCatalogo As TipoCatalogo, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCatCostosAsync(pTipoCatalogo, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatCostosAsync(ByVal pTipoCatalogo As TipoCatalogo, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCatCostosOperationCompleted Is Nothing) Then
                Me.ObtenerCatCostosOperationCompleted = AddressOf Me.OnObtenerCatCostosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatCostos", New Object() {pTipoCatalogo, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerCatCostosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatCostosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatCostosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatCostosCompleted(Me, New ObtenerCatCostosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerEstadoPartidas", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerEstadoPartidas(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerEstadoPartidas", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerEstadoPartidas(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerEstadoPartidas", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerEstadoPartidas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerEstadoPartidasAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerEstadoPartidasAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerEstadoPartidasAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerEstadoPartidasOperationCompleted Is Nothing) Then
                Me.ObtenerEstadoPartidasOperationCompleted = AddressOf Me.OnObtenerEstadoPartidasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerEstadoPartidas", New Object() {pUsuario, pPassword, pSucursal}, Me.ObtenerEstadoPartidasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerEstadoPartidasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerEstadoPartidasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerEstadoPartidasCompleted(Me, New ObtenerEstadoPartidasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerNivelesBeneficios", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerNivelesBeneficios(ByVal ptipoNivel As TipoNivel, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerNivelesBeneficios", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerNivelesBeneficios(ByVal ptipoNivel As TipoNivel, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerNivelesBeneficios", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerNivelesBeneficios(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerNivelesBeneficiosAsync(ByVal ptipoNivel As TipoNivel, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerNivelesBeneficiosAsync(ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerNivelesBeneficiosAsync(ByVal ptipoNivel As TipoNivel, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerNivelesBeneficiosOperationCompleted Is Nothing) Then
                Me.ObtenerNivelesBeneficiosOperationCompleted = AddressOf Me.OnObtenerNivelesBeneficiosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerNivelesBeneficios", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerNivelesBeneficiosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerNivelesBeneficiosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerNivelesBeneficiosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerNivelesBeneficiosCompleted(Me, New ObtenerNivelesBeneficiosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerNivelesContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerNivelesContab(ByVal ptipoNivel As TiposNivel, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerNivelesContab", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerNivelesContab(ByVal ptipoNivel As TiposNivel, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerNivelesContab", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerNivelesContab(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerNivelesContabAsync(ByVal ptipoNivel As TiposNivel, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerNivelesContabAsync(ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerNivelesContabAsync(ByVal ptipoNivel As TiposNivel, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerNivelesContabOperationCompleted Is Nothing) Then
                Me.ObtenerNivelesContabOperationCompleted = AddressOf Me.OnObtenerNivelesContabOperationCompleted
            End If
            Me.InvokeAsync("ObtenerNivelesContab", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerNivelesContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerNivelesContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerNivelesContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerNivelesContabCompleted(Me, New ObtenerNivelesContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerNivelesCostos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerNivelesCostos(ByVal ptipoNivel As TiposNiveles, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerNivelesCostos", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerNivelesCostos(ByVal ptipoNivel As TiposNiveles, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerNivelesCostos", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerNivelesCostos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerNivelesCostosAsync(ByVal ptipoNivel As TiposNiveles, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerNivelesCostosAsync(ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerNivelesCostosAsync(ByVal ptipoNivel As TiposNiveles, ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerNivelesCostosOperationCompleted Is Nothing) Then
                Me.ObtenerNivelesCostosOperationCompleted = AddressOf Me.OnObtenerNivelesCostosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerNivelesCostos", New Object() {ptipoNivel, pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ObtenerNivelesCostosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerNivelesCostosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerNivelesCostosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerNivelesCostosCompleted(Me, New ObtenerNivelesCostosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerPartidaVacia", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPartidaVacia(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPartidaVacia", New Object() {pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerPartidaVacia(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerPartidaVacia", New Object() {pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerPartidaVacia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerPartidaVaciaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerPartidaVaciaAsync(pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerPartidaVaciaAsync(ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerPartidaVaciaOperationCompleted Is Nothing) Then
                Me.ObtenerPartidaVaciaOperationCompleted = AddressOf Me.OnObtenerPartidaVaciaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPartidaVacia", New Object() {pUsuario, pPassword, pSucursal}, Me.ObtenerPartidaVaciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerPartidaVaciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPartidaVaciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPartidaVaciaCompleted(Me, New ObtenerPartidaVaciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerTipoPartidas", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoPartidas(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTipoPartidas", New Object() {pAnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerTipoPartidas(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerTipoPartidas", New Object() {pAnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerTipoPartidas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoPartidasAsync(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerTipoPartidasAsync(pAnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoPartidasAsync(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerTipoPartidasOperationCompleted Is Nothing) Then
                Me.ObtenerTipoPartidasOperationCompleted = AddressOf Me.OnObtenerTipoPartidasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTipoPartidas", New Object() {pAnio, pUsuario, pPassword, pSucursal}, Me.ObtenerTipoPartidasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTipoPartidasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTipoPartidasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTipoPartidasCompleted(Me, New ObtenerTipoPartidasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerTipoPartidasAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoPartidasAut(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTipoPartidasAut", New Object() {pAnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerTipoPartidasAut(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerTipoPartidasAut", New Object() {pAnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerTipoPartidasAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoPartidasAutAsync(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerTipoPartidasAutAsync(pAnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoPartidasAutAsync(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerTipoPartidasAutOperationCompleted Is Nothing) Then
                Me.ObtenerTipoPartidasAutOperationCompleted = AddressOf Me.OnObtenerTipoPartidasAutOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTipoPartidasAut", New Object() {pAnio, pUsuario, pPassword, pSucursal}, Me.ObtenerTipoPartidasAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTipoPartidasAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTipoPartidasAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTipoPartidasAutCompleted(Me, New ObtenerTipoPartidasAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ObtenerTipoPartidasBC", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoPartidasBC(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTipoPartidasBC", New Object() {pAnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerTipoPartidasBC(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerTipoPartidasBC", New Object() {pAnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerTipoPartidasBC(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoPartidasBCAsync(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerTipoPartidasBCAsync(pAnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTipoPartidasBCAsync(ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerTipoPartidasBCOperationCompleted Is Nothing) Then
                Me.ObtenerTipoPartidasBCOperationCompleted = AddressOf Me.OnObtenerTipoPartidasBCOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTipoPartidasBC", New Object() {pAnio, pUsuario, pPassword, pSucursal}, Me.ObtenerTipoPartidasBCOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTipoPartidasBCOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTipoPartidasBCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTipoPartidasBCCompleted(Me, New ObtenerTipoPartidasBCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/PartidaApertura", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PartidaApertura(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("PartidaApertura", New Object() {pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginPartidaApertura(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PartidaApertura", New Object() {pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPartidaApertura(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PartidaAperturaAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.PartidaAperturaAsync(pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PartidaAperturaAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.PartidaAperturaOperationCompleted Is Nothing) Then
                Me.PartidaAperturaOperationCompleted = AddressOf Me.OnPartidaAperturaOperationCompleted
            End If
            Me.InvokeAsync("PartidaApertura", New Object() {pFecha, pUsuario, pPassword, pSucursal}, Me.PartidaAperturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPartidaAperturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.PartidaAperturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PartidaAperturaCompleted(Me, New PartidaAperturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ProcesarSaldos", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesarSaldos(ByVal iMes As Integer, ByVal iAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ProcesarSaldos", New Object() {iMes, iAnnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesarSaldos(ByVal iMes As Integer, ByVal iAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesarSaldos", New Object() {iMes, iAnnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesarSaldos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesarSaldosAsync(ByVal iMes As Integer, ByVal iAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ProcesarSaldosAsync(iMes, iAnnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesarSaldosAsync(ByVal iMes As Integer, ByVal iAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ProcesarSaldosOperationCompleted Is Nothing) Then
                Me.ProcesarSaldosOperationCompleted = AddressOf Me.OnProcesarSaldosOperationCompleted
            End If
            Me.InvokeAsync("ProcesarSaldos", New Object() {iMes, iAnnio, pUsuario, pPassword, pSucursal}, Me.ProcesarSaldosOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesarSaldosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesarSaldosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesarSaldosCompleted(Me, New ProcesarSaldosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/ProcesoInicioEjercicio", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesoInicioEjercicio(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ProcesoInicioEjercicio", New Object() {pAnnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesoInicioEjercicio(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesoInicioEjercicio", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesoInicioEjercicio(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesoInicioEjercicioAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ProcesoInicioEjercicioAsync(pAnnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesoInicioEjercicioAsync(ByVal pAnnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ProcesoInicioEjercicioOperationCompleted Is Nothing) Then
                Me.ProcesoInicioEjercicioOperationCompleted = AddressOf Me.OnProcesoInicioEjercicioOperationCompleted
            End If
            Me.InvokeAsync("ProcesoInicioEjercicio", New Object() {pAnnio, pUsuario, pPassword, pSucursal}, Me.ProcesoInicioEjercicioOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesoInicioEjercicioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesoInicioEjercicioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesoInicioEjercicioCompleted(Me, New ProcesoInicioEjercicioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RepAuxMayor", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepAuxMayor(ByVal pMes As Integer, ByVal pFecIni As String, ByVal pFecFin As String, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepAuxMayor", New Object() {pMes, pFecIni, pFecFin, pAnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepAuxMayor(ByVal pMes As Integer, ByVal pFecIni As String, ByVal pFecFin As String, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepAuxMayor", New Object() {pMes, pFecIni, pFecFin, pAnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepAuxMayor(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepAuxMayorAsync(ByVal pMes As Integer, ByVal pFecIni As String, ByVal pFecFin As String, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RepAuxMayorAsync(pMes, pFecIni, pFecFin, pAnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepAuxMayorAsync(ByVal pMes As Integer, ByVal pFecIni As String, ByVal pFecFin As String, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepAuxMayorOperationCompleted Is Nothing) Then
                Me.RepAuxMayorOperationCompleted = AddressOf Me.OnRepAuxMayorOperationCompleted
            End If
            Me.InvokeAsync("RepAuxMayor", New Object() {pMes, pFecIni, pFecFin, pAnio, pUsuario, pPassword, pSucursal}, Me.RepAuxMayorOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepAuxMayorOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepAuxMayorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepAuxMayorCompleted(Me, New RepAuxMayorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RepBalComprob", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepBalComprob(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal centroCosto As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepBalComprob", New Object() {pMes, pAnio, pUsuario, pPassword, pSucursal, centroCosto})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepBalComprob(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal centroCosto As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepBalComprob", New Object() {pMes, pAnio, pUsuario, pPassword, pSucursal, centroCosto}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepBalComprob(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepBalComprobAsync(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal centroCosto As String)
            Me.RepBalComprobAsync(pMes, pAnio, pUsuario, pPassword, pSucursal, centroCosto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepBalComprobAsync(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal centroCosto As String, ByVal userState As Object)
            If (Me.RepBalComprobOperationCompleted Is Nothing) Then
                Me.RepBalComprobOperationCompleted = AddressOf Me.OnRepBalComprobOperationCompleted
            End If
            Me.InvokeAsync("RepBalComprob", New Object() {pMes, pAnio, pUsuario, pPassword, pSucursal, centroCosto}, Me.RepBalComprobOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepBalComprobOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepBalComprobCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepBalComprobCompleted(Me, New RepBalComprobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RepDiarioMayor", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepDiarioMayor(ByVal pMes As Integer, ByVal pFecIni As String, ByVal pFecFin As String, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepDiarioMayor", New Object() {pMes, pFecIni, pFecFin, pAnio, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepDiarioMayor(ByVal pMes As Integer, ByVal pFecIni As String, ByVal pFecFin As String, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepDiarioMayor", New Object() {pMes, pFecIni, pFecFin, pAnio, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepDiarioMayor(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepDiarioMayorAsync(ByVal pMes As Integer, ByVal pFecIni As String, ByVal pFecFin As String, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RepDiarioMayorAsync(pMes, pFecIni, pFecFin, pAnio, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepDiarioMayorAsync(ByVal pMes As Integer, ByVal pFecIni As String, ByVal pFecFin As String, ByVal pAnio As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepDiarioMayorOperationCompleted Is Nothing) Then
                Me.RepDiarioMayorOperationCompleted = AddressOf Me.OnRepDiarioMayorOperationCompleted
            End If
            Me.InvokeAsync("RepDiarioMayor", New Object() {pMes, pFecIni, pFecFin, pAnio, pUsuario, pPassword, pSucursal}, Me.RepDiarioMayorOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepDiarioMayorOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepDiarioMayorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepDiarioMayorCompleted(Me, New RepDiarioMayorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RepMovxCta", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepMovxCta(ByVal pFecIni As String, ByVal pFecFin As String, ByVal centrocost As Integer, ByVal pDel As String, ByVal pAl As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepMovxCta", New Object() {pFecIni, pFecFin, centrocost, pDel, pAl, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepMovxCta(ByVal pFecIni As String, ByVal pFecFin As String, ByVal centrocost As Integer, ByVal pDel As String, ByVal pAl As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepMovxCta", New Object() {pFecIni, pFecFin, centrocost, pDel, pAl, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepMovxCta(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepMovxCtaAsync(ByVal pFecIni As String, ByVal pFecFin As String, ByVal centrocost As Integer, ByVal pDel As String, ByVal pAl As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RepMovxCtaAsync(pFecIni, pFecFin, centrocost, pDel, pAl, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepMovxCtaAsync(ByVal pFecIni As String, ByVal pFecFin As String, ByVal centrocost As Integer, ByVal pDel As String, ByVal pAl As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepMovxCtaOperationCompleted Is Nothing) Then
                Me.RepMovxCtaOperationCompleted = AddressOf Me.OnRepMovxCtaOperationCompleted
            End If
            Me.InvokeAsync("RepMovxCta", New Object() {pFecIni, pFecFin, centrocost, pDel, pAl, pUsuario, pPassword, pSucursal}, Me.RepMovxCtaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepMovxCtaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepMovxCtaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepMovxCtaCompleted(Me, New RepMovxCtaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RepObtenerCatContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepObtenerCatContab(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepObtenerCatContab", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepObtenerCatContab(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepObtenerCatContab", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepObtenerCatContab(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepObtenerCatContabAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.RepObtenerCatContabAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepObtenerCatContabAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepObtenerCatContabOperationCompleted Is Nothing) Then
                Me.RepObtenerCatContabOperationCompleted = AddressOf Me.OnRepObtenerCatContabOperationCompleted
            End If
            Me.InvokeAsync("RepObtenerCatContab", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.RepObtenerCatContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepObtenerCatContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepObtenerCatContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepObtenerCatContabCompleted(Me, New RepObtenerCatContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RepPartidasDiario", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepPartidasDiario(ByVal pNumPartidaIni As String, ByVal pNumPartidaFin As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepPartidasDiario", New Object() {pNumPartidaIni, pNumPartidaFin, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepPartidasDiario(ByVal pNumPartidaIni As String, ByVal pNumPartidaFin As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepPartidasDiario", New Object() {pNumPartidaIni, pNumPartidaFin, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepPartidasDiario(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepPartidasDiarioAsync(ByVal pNumPartidaIni As String, ByVal pNumPartidaFin As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RepPartidasDiarioAsync(pNumPartidaIni, pNumPartidaFin, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepPartidasDiarioAsync(ByVal pNumPartidaIni As String, ByVal pNumPartidaFin As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepPartidasDiarioOperationCompleted Is Nothing) Then
                Me.RepPartidasDiarioOperationCompleted = AddressOf Me.OnRepPartidasDiarioOperationCompleted
            End If
            Me.InvokeAsync("RepPartidasDiario", New Object() {pNumPartidaIni, pNumPartidaFin, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.RepPartidasDiarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepPartidasDiarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepPartidasDiarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepPartidasDiarioCompleted(Me, New RepPartidasDiarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/RepPartidasDiarioAut", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepPartidasDiarioAut(ByVal pNumPartidaIni As String, ByVal pNumPartidaFin As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RepPartidasDiarioAut", New Object() {pNumPartidaIni, pNumPartidaFin, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRepPartidasDiarioAut(ByVal pNumPartidaIni As String, ByVal pNumPartidaFin As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepPartidasDiarioAut", New Object() {pNumPartidaIni, pNumPartidaFin, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepPartidasDiarioAut(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepPartidasDiarioAutAsync(ByVal pNumPartidaIni As String, ByVal pNumPartidaFin As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.RepPartidasDiarioAutAsync(pNumPartidaIni, pNumPartidaFin, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepPartidasDiarioAutAsync(ByVal pNumPartidaIni As String, ByVal pNumPartidaFin As String, ByVal pFechaIni As String, ByVal pFechaFin As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.RepPartidasDiarioAutOperationCompleted Is Nothing) Then
                Me.RepPartidasDiarioAutOperationCompleted = AddressOf Me.OnRepPartidasDiarioAutOperationCompleted
            End If
            Me.InvokeAsync("RepPartidasDiarioAut", New Object() {pNumPartidaIni, pNumPartidaFin, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.RepPartidasDiarioAutOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepPartidasDiarioAutOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepPartidasDiarioAutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepPartidasDiarioAutCompleted(Me, New RepPartidasDiarioAutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibContab/VerificaCuentaContab", RequestNamespace:="http://tempuri.org/wsSif/wsLibContab", ResponseNamespace:="http://tempuri.org/wsSif/wsLibContab", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaCuentaContab(ByVal pIdCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("VerificaCuentaContab", New Object() {pIdCuenta, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaCuentaContab(ByVal pIdCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaCuentaContab", New Object() {pIdCuenta, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaCuentaContab(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaCuentaContabAsync(ByVal pIdCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificaCuentaContabAsync(pIdCuenta, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaCuentaContabAsync(ByVal pIdCuenta As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaCuentaContabOperationCompleted Is Nothing) Then
                Me.VerificaCuentaContabOperationCompleted = AddressOf Me.OnVerificaCuentaContabOperationCompleted
            End If
            Me.InvokeAsync("VerificaCuentaContab", New Object() {pIdCuenta, pUsuario, pPassword, pSucursal}, Me.VerificaCuentaContabOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaCuentaContabOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaCuentaContabCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaCuentaContabCompleted(Me, New VerificaCuentaContabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibContab")>  _
    Public Enum TiposCatalogo
        
        '''<remarks/>
        Beneficios
        
        '''<remarks/>
        Contable
        
        '''<remarks/>
        Costos
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibContab")>  _
    Public Enum TipoNivel
        
        '''<remarks/>
        Beneficios
        
        '''<remarks/>
        Contable
        
        '''<remarks/>
        Costos
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibContab")>  _
    Public Enum TiposNivel
        
        '''<remarks/>
        Beneficios
        
        '''<remarks/>
        Contable
        
        '''<remarks/>
        Costos
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibContab")>  _
    Public Enum TiposNiveles
        
        '''<remarks/>
        Beneficios
        
        '''<remarks/>
        Contable
        
        '''<remarks/>
        Costos
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibContab")>  _
    Public Enum PartidaIntegracion
        
        '''<remarks/>
        IngresosCaja
        
        '''<remarks/>
        InteresesPagados
        
        '''<remarks/>
        LiquidacionAspirante
        
        '''<remarks/>
        PagoInteresesAhorros
        
        '''<remarks/>
        ProvisionAhorros
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibContab")>  _
    Public Enum TipoCatalogo
        
        '''<remarks/>
        Beneficios
        
        '''<remarks/>
        Contable
        
        '''<remarks/>
        Costos
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub distribucionCxCCompletedEventHandler(ByVal sender As Object, ByVal e As distribucionCxCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class distribucionCxCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub anularCuentaPorCobrarCompletedEventHandler(ByVal sender As Object, ByVal e As anularCuentaPorCobrarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class anularCuentaPorCobrarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ingresarAbonoCuentaPorCobrarTransferenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ingresarAbonoCuentaPorCobrarTransferenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ingresarAbonoCuentaPorCobrarTransferenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarCuentaPorCobrarCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCuentaPorCobrarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCuentaPorCobrarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ingresarCuentaPorCobrarCompletedEventHandler(ByVal sender As Object, ByVal e As ingresarCuentaPorCobrarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ingresarCuentaPorCobrarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarCaDiarioCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCaDiarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCaDiarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub guardarPartidaValorFechaCompletedEventHandler(ByVal sender As Object, ByVal e As guardarPartidaValorFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class guardarPartidaValorFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ProcesarSaldosNuevoCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesarSaldosNuevoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesarSaldosNuevoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarContaIndiceLiquidezCompletedEventHandler(ByVal sender As Object, ByVal e As insertarContaIndiceLiquidezCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarContaIndiceLiquidezCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarContaIndiceLiquidezCompletedEventHandler(ByVal sender As Object, ByVal e As modificarContaIndiceLiquidezCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarContaIndiceLiquidezCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarContaIndiceLiquidezCompletedEventHandler(ByVal sender As Object, ByVal e As consultarContaIndiceLiquidezCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarContaIndiceLiquidezCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RecuperarCodCostoXsucursalCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarCodCostoXsucursalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarCodCostoXsucursalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RecuperarCodCostoXcuentaCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarCodCostoXcuentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarCodCostoXcuentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Recuperar_Cta_x_Centro_CostoCompletedEventHandler(ByVal sender As Object, ByVal e As Recuperar_Cta_x_Centro_CostoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Recuperar_Cta_x_Centro_CostoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarCat_TipoCtas_ContablesCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCat_TipoCtas_ContablesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCat_TipoCtas_ContablesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarCat_TipoCtas_ContablesCompletedEventHandler(ByVal sender As Object, ByVal e As modificarCat_TipoCtas_ContablesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarCat_TipoCtas_ContablesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarCat_TipoCtas_ContablesCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarCat_TipoCtas_ContablesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarCat_TipoCtas_ContablesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarCat_TipoCtas_ContablesCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCat_TipoCtas_ContablesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCat_TipoCtas_ContablesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub validarPartidasAutomaticasCompletedEventHandler(ByVal sender As Object, ByVal e As validarPartidasAutomaticasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarPartidasAutomaticasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarCaProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCaProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCaProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarCaProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As modificarCaProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarCaProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarCaProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarCaProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarCaProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarCaProveedoresCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCaProveedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCaProveedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarCaCompraCierreMesCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCaCompraCierreMesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCaCompraCierreMesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub actualizarCaCompraCierreMesCompletedEventHandler(ByVal sender As Object, ByVal e As actualizarCaCompraCierreMesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class actualizarCaCompraCierreMesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarCaCompraCierreMesCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCaCompraCierreMesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCaCompraCierreMesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub anularCompraCompletedEventHandler(ByVal sender As Object, ByVal e As anularCompraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class anularCompraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarCaComprasCompletedEventHandler(ByVal sender As Object, ByVal e As insertarCaComprasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarCaComprasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarCaComprasCompletedEventHandler(ByVal sender As Object, ByVal e As modificarCaComprasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarCaComprasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarCaComprasCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarCaComprasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarCaComprasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarCaComprasCompletedEventHandler(ByVal sender As Object, ByVal e As consultarCaComprasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarCaComprasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub generarNumeroPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As generarNumeroPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class generarNumeroPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CrearPartidasCorteDiarioCajaCompletedEventHandler(ByVal sender As Object, ByVal e As CrearPartidasCorteDiarioCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CrearPartidasCorteDiarioCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CrearPdaCorteDiarioCajaCompletedEventHandler(ByVal sender As Object, ByVal e As CrearPdaCorteDiarioCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CrearPdaCorteDiarioCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarIngresosCajaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarIngresosCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarIngresosCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Rpt_EstadoResultadoHistoricoCompletedEventHandler(ByVal sender As Object, ByVal e As Rpt_EstadoResultadoHistoricoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rpt_EstadoResultadoHistoricoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Rpt_EstadoResultadoCompletedEventHandler(ByVal sender As Object, ByVal e As Rpt_EstadoResultadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rpt_EstadoResultadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub generarPartidaValorFechaCompletedEventHandler(ByVal sender As Object, ByVal e As generarPartidaValorFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class generarPartidaValorFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AnulaPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As AnulaPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AnulaPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AnulaPartidaAutCompletedEventHandler(ByVal sender As Object, ByVal e As AnulaPartidaAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AnulaPartidaAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AutorizaPartidasCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizaPartidasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutorizaPartidasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AutorizaPartidasAutCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizaPartidasAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutorizaPartidasAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxEstadoCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxEstadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxEstadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxEstadoAutCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxEstadoAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxEstadoAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxFechaCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxFechaAutCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxFechaAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxFechaAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxMesyAnioActualCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxMesyAnioActualCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxMesyAnioActualCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxMesyAnioActualAutCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxMesyAnioActualAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxMesyAnioActualAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxNumeroCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxNumeroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxNumeroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxNumeroAutCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxNumeroAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxNumeroAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxTipoCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxTipoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxTipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub BuscarPartidasxTipoAutCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarPartidasxTipoAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarPartidasxTipoAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CargaPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As CargaPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CargaPartidaAutCompletedEventHandler(ByVal sender As Object, ByVal e As CargaPartidaAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaPartidaAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CargaPartidaModuloCompletedEventHandler(ByVal sender As Object, ByVal e As CargaPartidaModuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaPartidaModuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CierreContableCompletedEventHandler(ByVal sender As Object, ByVal e As CierreContableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CierreContableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CierreMesCompletedEventHandler(ByVal sender As Object, ByVal e As CierreMesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CierreMesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultaCierreCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaCierreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaCierreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultaPartidasxMesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaPartidasxMesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaPartidasxMesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultaPartidasxMesAutCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaPartidasxMesAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaPartidasxMesAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarDetParametroPartidaIntegracionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDetParametroPartidaIntegracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDetParametroPartidaIntegracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarParametroPartidaIntegracionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarParametroPartidaIntegracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarParametroPartidaIntegracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultaSaldosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaSaldosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaSaldosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreacionSaldosHistoricosCompletedEventHandler(ByVal sender As Object, ByVal e As CreacionSaldosHistoricosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreacionSaldosHistoricosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaCuentaBeneficioCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaCuentaBeneficioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaCuentaBeneficioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaCuentaContabCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaCuentaContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaCuentaContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaCuentaCostosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaCuentaCostosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaCuentaCostosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaDetParametroPartidaIntegracionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaDetParametroPartidaIntegracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaDetParametroPartidaIntegracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaNivelBeneficiosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaNivelBeneficiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaNivelBeneficiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaNivelContabCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaNivelContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaNivelContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaNivelCostosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaNivelCostosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaNivelCostosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaParametroPartidaIntegracionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaParametroPartidaIntegracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaParametroPartidaIntegracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminaPartidaAutCompletedEventHandler(ByVal sender As Object, ByVal e As EliminaPartidaAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminaPartidaAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GeneraBalanceCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraBalanceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraBalanceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GeneraBalance_HistCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraBalance_HistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraBalance_HistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GeneraEstResCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraEstResCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraEstResCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GeneraPartidaIntegracionAhorrosCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraPartidaIntegracionAhorrosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraPartidaIntegracionAhorrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GeneraPartidaIntegracionIngresoCajaCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraPartidaIntegracionIngresoCajaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraPartidaIntegracionIngresoCajaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GeneraPartidaInteresesPagadosCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraPartidaInteresesPagadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraPartidaInteresesPagadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GenerarPartidaLiquidacionAspiranteCompletedEventHandler(ByVal sender As Object, ByVal e As GenerarPartidaLiquidacionAspiranteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerarPartidaLiquidacionAspiranteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub GenerarPartidaRenunciaAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As GenerarPartidaRenunciaAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerarPartidaRenunciaAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaCuentaBeneficioCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaCuentaBeneficioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaCuentaBeneficioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaCuentaContabCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaCuentaContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaCuentaContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaCuentaCostosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaCuentaCostosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaCuentaCostosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaDetParametroPartidaIntegracionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaDetParametroPartidaIntegracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaDetParametroPartidaIntegracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaNivelBeneficiosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaNivelBeneficiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaNivelBeneficiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaNivelContabCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaNivelContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaNivelContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaNivelCostosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaNivelCostosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaNivelCostosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaParametroPartidaIntegracionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaParametroPartidaIntegracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaParametroPartidaIntegracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaPartidaAutCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaPartidaAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaPartidaAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaPartidaModuloCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaPartidaModuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaPartidaModuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaCuentaBeneficioCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaCuentaBeneficioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaCuentaBeneficioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaCuentaContabCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaCuentaContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaCuentaContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaCuentaCostosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaCuentaCostosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaCuentaCostosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaDetParametroPartidaIntegracionCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaDetParametroPartidaIntegracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaDetParametroPartidaIntegracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaNivelBeneficiosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaNivelBeneficiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaNivelBeneficiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaNivelContabCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaNivelContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaNivelContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaNivelCostosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaNivelCostosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaNivelCostosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaParametroPartidaIntegracionCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaParametroPartidaIntegracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaParametroPartidaIntegracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaPartidaAutCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaPartidaAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaPartidaAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaPartidaModuloCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaPartidaModuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaPartidaModuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCatBeneficioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatBeneficioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatBeneficioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCatContabCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCatCostosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatCostosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatCostosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerEstadoPartidasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerEstadoPartidasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerEstadoPartidasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerNivelesBeneficiosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerNivelesBeneficiosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerNivelesBeneficiosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerNivelesContabCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerNivelesContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerNivelesContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerNivelesCostosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerNivelesCostosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerNivelesCostosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerPartidaVaciaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPartidaVaciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerPartidaVaciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerTipoPartidasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTipoPartidasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTipoPartidasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerTipoPartidasAutCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTipoPartidasAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTipoPartidasAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerTipoPartidasBCCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTipoPartidasBCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTipoPartidasBCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub PartidaAperturaCompletedEventHandler(ByVal sender As Object, ByVal e As PartidaAperturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PartidaAperturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ProcesarSaldosCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesarSaldosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesarSaldosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ProcesoInicioEjercicioCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesoInicioEjercicioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesoInicioEjercicioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepAuxMayorCompletedEventHandler(ByVal sender As Object, ByVal e As RepAuxMayorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepAuxMayorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepBalComprobCompletedEventHandler(ByVal sender As Object, ByVal e As RepBalComprobCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepBalComprobCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepDiarioMayorCompletedEventHandler(ByVal sender As Object, ByVal e As RepDiarioMayorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepDiarioMayorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepMovxCtaCompletedEventHandler(ByVal sender As Object, ByVal e As RepMovxCtaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepMovxCtaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepObtenerCatContabCompletedEventHandler(ByVal sender As Object, ByVal e As RepObtenerCatContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepObtenerCatContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepPartidasDiarioCompletedEventHandler(ByVal sender As Object, ByVal e As RepPartidasDiarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepPartidasDiarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RepPartidasDiarioAutCompletedEventHandler(ByVal sender As Object, ByVal e As RepPartidasDiarioAutCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepPartidasDiarioAutCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub VerificaCuentaContabCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaCuentaContabCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaCuentaContabCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
