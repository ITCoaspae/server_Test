'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrPlanilla
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibPlanillaSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibPlanilla")>  _
    Partial Public Class wsLibPlanilla
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ModificarPLAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLCapacitacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLCargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLDescuentosISSSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLDescuentosRentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLEmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLGradoAcademicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLHorasExtrasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLInstitucionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLMotivoAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLMotivoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLPensionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLPlazasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLTipoDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLTipoHoraExtraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLTipoPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLTipoPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoAbonosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerNoPlazaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Pagos_RojoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReferenciaLaboralOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_AusentismosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_Datos_EmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_DescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_VacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarEliminarPLMotivoAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarEliminarPLMotivoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarEliminarPLTipoDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarEliminarPLTipoHoraExtraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarEliminarPLTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarEliminarPLTipoPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarEliminarPLTipoPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLCargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLDescuentosISSSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLDescuentosRentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLDescuentosTipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLEmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLGradoAcademicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLHorasExtrasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLInstitucionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLMotivoAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLMotivoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLPensionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLPlazasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLTipoDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLTipoHoraExtraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLTipoPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLTipoPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLAccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLAreasVerificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLCapacitacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLCargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLCargosVerificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLDepartamentosVerificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLDescuentosRentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLEmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLGradoAcademicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLHorasExtrasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLInstitucionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLInstitucionesVerificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLMotivoAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLMotivoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLPensionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLPensionesVerificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLPlazasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLPlazasVerificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLTipoDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLTipoHoraExtraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLTipoPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLTipoPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPLVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerarCarneEmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerarPartidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportarFileAFPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportarFileNBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImprimirPLAbonosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLAbonosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLAccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLCapacitacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLCargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLDescuentosISSSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLDescuentosRentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLEmpleadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLGradoAcademicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLHorasExtrasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLInstitucionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLMotivoAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLMotivoRetiroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLPensionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLPlazasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLTipoDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLTipoHoraExtraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLTipoPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLTipoPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPLVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLAbonosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLAccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPLAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_PlVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Modificar_PlVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_PlVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Calculo_VacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_PlCalculoVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Modificar_PlCalculoVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_PlCalculoVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlCalculoVacacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GuardarPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Total_ComisionesGerencialesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Total_Comision_EjecutivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_SucursalesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Bonificacion_AnualOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_PlDescuentosISSSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Modificar_PlDescuentosISSSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_PlDescuentosISSSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlDescuentosISSSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Detalle_Ingresos_BoletaPagosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Detalle_Descuentos_BoletaPagosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPlEmpleadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPlEmpleadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPlEmpleadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IngresarPlEmpleadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EnviarCorreoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CorreoEmpleados_BoletaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Reporte_BoletaPagosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlEmpleados2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteEmpleadosActivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteConstanciaSalarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_PlIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Modificar_PlIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_PlIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlPlanillasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rpt_PlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rpt_PlanillaBonificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rpt_PlanillaAguinaldoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rpt_PlanillaComisionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificarDesembolsoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcesarDesembolsoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_PlPlanillasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_PlDetPlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidarCasosEspecialesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InhabilitarDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlDescuentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerarPlanilla2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidarIngresoDescuentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlPlazasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_PlPlazasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Modificar_PlPlazasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_PlPlazasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlCargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_PlDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Modificar_PlDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insertar_PlDepartamentosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PlAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_PLEMPLEADOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_PLDEPARTAMENTOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICAR_DESCUENTOSLEYOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_PLANILLASCREADASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARDESCUENTOSLEYOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_PLTIPOPLANILLAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICAR_PLDESCUENTOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_PLDESCUENTOS2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_PLEMPLEADOS_ACTIVOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_PLDIASTRABAJADOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTAR_PLDIASTRABAJADOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICAR_PLDIASTRABAJADOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ELIMINAR_PLDIASTRABAJADOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AguinaldoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ELIMINARPLANILLAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_DETALLEPLANILLASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_PLAN_SUCURSALOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BonificacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CierrePlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDetallePlanillaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEmpleadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEmpleadosxDeptoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLAbonosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLAccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLAreasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLAusentismoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPLCapacitacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrPlanilla_wsLibPlanilla
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ModificarPLAusentismoCompleted As ModificarPLAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLCapacitacionesCompleted As ModificarPLCapacitacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLCargosCompleted As ModificarPLCargosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLDepartamentosCompleted As ModificarPLDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLDescuentosCompleted As ModificarPLDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLDescuentosISSSCompleted As ModificarPLDescuentosISSSCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLDescuentosRentaCompleted As ModificarPLDescuentosRentaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLEmpleadoCompleted As ModificarPLEmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLGradoAcademicoCompleted As ModificarPLGradoAcademicoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLHorasExtrasCompleted As ModificarPLHorasExtrasCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLIngresosCompleted As ModificarPLIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLInstitucionesCompleted As ModificarPLInstitucionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLMotivoAusentismoCompleted As ModificarPLMotivoAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLMotivoRetiroCompleted As ModificarPLMotivoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLPensionesCompleted As ModificarPLPensionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLPlazasCompleted As ModificarPLPlazasCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLTipoDescuentosCompleted As ModificarPLTipoDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLTipoHoraExtraCompleted As ModificarPLTipoHoraExtraCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLTipoIngresosCompleted As ModificarPLTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLTipoPersonalCompleted As ModificarPLTipoPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLTipoPlanillaCompleted As ModificarPLTipoPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLVacacionesCompleted As ModificarPLVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoAbonosCompleted As ObtenerCorrelativoAbonosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerNoPlazaCompleted As ObtenerNoPlazaCompletedEventHandler
        
        '''<remarks/>
        Public Event Pagos_RojoCompleted As Pagos_RojoCompletedEventHandler
        
        '''<remarks/>
        Public Event ReferenciaLaboralCompleted As ReferenciaLaboralCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_AusentismosCompleted As Reporte_AusentismosCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_Datos_EmpleadoCompleted As Reporte_Datos_EmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_DescuentosCompleted As Reporte_DescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_VacacionesCompleted As Reporte_VacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event VacacionesCompleted As VacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarEliminarPLMotivoAusentismoCompleted As VerificarEliminarPLMotivoAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarEliminarPLMotivoRetiroCompleted As VerificarEliminarPLMotivoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarEliminarPLTipoDescuentosCompleted As VerificarEliminarPLTipoDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarEliminarPLTipoHoraExtraCompleted As VerificarEliminarPLTipoHoraExtraCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarEliminarPLTipoIngresosCompleted As VerificarEliminarPLTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarEliminarPLTipoPersonalCompleted As VerificarEliminarPLTipoPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarEliminarPLTipoPlanillaCompleted As VerificarEliminarPLTipoPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLCargosCompleted As ConsultarPLCargosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLDepartamentosCompleted As ConsultarPLDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLDescuentosCompleted As ConsultarPLDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLDescuentosISSSCompleted As ConsultarPLDescuentosISSSCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLDescuentosRentaCompleted As ConsultarPLDescuentosRentaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLDescuentosTipoCompleted As ConsultarPLDescuentosTipoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLEmpleadoCompleted As ConsultarPLEmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLGradoAcademicoCompleted As ConsultarPLGradoAcademicoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLHorasExtrasCompleted As ConsultarPLHorasExtrasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLIngresosCompleted As ConsultarPLIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLInstitucionesCompleted As ConsultarPLInstitucionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLMotivoAusentismoCompleted As ConsultarPLMotivoAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLMotivoRetiroCompleted As ConsultarPLMotivoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLPensionesCompleted As ConsultarPLPensionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLPlanillaCompleted As ConsultarPLPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLPlazasCompleted As ConsultarPLPlazasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLTipoDescuentosCompleted As ConsultarPLTipoDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLTipoHoraExtraCompleted As ConsultarPLTipoHoraExtraCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLTipoIngresosCompleted As ConsultarPLTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLTipoPersonalCompleted As ConsultarPLTipoPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLTipoPlanillaCompleted As ConsultarPLTipoPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLVacacionesCompleted As ConsultarPLVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLAccionesCompleted As EliminarPLAccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLAreasCompleted As EliminarPLAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLAreasVerificacionCompleted As EliminarPLAreasVerificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLAusentismoCompleted As EliminarPLAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLCapacitacionesCompleted As EliminarPLCapacitacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLCargosCompleted As EliminarPLCargosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLCargosVerificacionCompleted As EliminarPLCargosVerificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLDepartamentosCompleted As EliminarPLDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLDepartamentosVerificacionCompleted As EliminarPLDepartamentosVerificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLDescuentosCompleted As EliminarPLDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLDescuentosRentaCompleted As EliminarPLDescuentosRentaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLEmpleadoCompleted As EliminarPLEmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLGradoAcademicoCompleted As EliminarPLGradoAcademicoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLHorasExtrasCompleted As EliminarPLHorasExtrasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLIngresosCompleted As EliminarPLIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLInstitucionesCompleted As EliminarPLInstitucionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLInstitucionesVerificacionCompleted As EliminarPLInstitucionesVerificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLMotivoAusentismoCompleted As EliminarPLMotivoAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLMotivoRetiroCompleted As EliminarPLMotivoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLPensionesCompleted As EliminarPLPensionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLPensionesVerificacionCompleted As EliminarPLPensionesVerificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLPlazasCompleted As EliminarPLPlazasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLPlazasVerificacionCompleted As EliminarPLPlazasVerificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLTipoDescuentosCompleted As EliminarPLTipoDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLTipoHoraExtraCompleted As EliminarPLTipoHoraExtraCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLTipoIngresosCompleted As EliminarPLTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLTipoPersonalCompleted As EliminarPLTipoPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLTipoPlanillaCompleted As EliminarPLTipoPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPLVacacionesCompleted As EliminarPLVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraPlanillaCompleted As GeneraPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerarCarneEmpleadoCompleted As GenerarCarneEmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerarPartidaCompleted As GenerarPartidaCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportarFileAFPCompleted As ImportarFileAFPCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportarFileNBCompleted As ImportarFileNBCompletedEventHandler
        
        '''<remarks/>
        Public Event ImprimirPLAbonosCompleted As ImprimirPLAbonosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLAbonosCompleted As InsertarPLAbonosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLAccionesCompleted As InsertarPLAccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLAreasCompleted As InsertarPLAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLAusentismoCompleted As InsertarPLAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLCapacitacionesCompleted As InsertarPLCapacitacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLCargosCompleted As InsertarPLCargosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLDepartamentosCompleted As InsertarPLDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLDescuentosCompleted As InsertarPLDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLDescuentosISSSCompleted As InsertarPLDescuentosISSSCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLDescuentosRentaCompleted As InsertarPLDescuentosRentaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLEmpleadoCompleted As InsertarPLEmpleadoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLGradoAcademicoCompleted As InsertarPLGradoAcademicoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLHorasExtrasCompleted As InsertarPLHorasExtrasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLIngresosCompleted As InsertarPLIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLInstitucionesCompleted As InsertarPLInstitucionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLMotivoAusentismoCompleted As InsertarPLMotivoAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLMotivoRetiroCompleted As InsertarPLMotivoRetiroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLPensionesCompleted As InsertarPLPensionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLPlazasCompleted As InsertarPLPlazasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLTipoDescuentosCompleted As InsertarPLTipoDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLTipoHoraExtraCompleted As InsertarPLTipoHoraExtraCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLTipoIngresosCompleted As InsertarPLTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLTipoPersonalCompleted As InsertarPLTipoPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLTipoPlanillaCompleted As InsertarPLTipoPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPLVacacionesCompleted As InsertarPLVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLAbonosCompleted As ModificarPLAbonosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLAccionesCompleted As ModificarPLAccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPLAreasCompleted As ModificarPLAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_PlVacacionesCompleted As Insertar_PlVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Modificar_PlVacacionesCompleted As Modificar_PlVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_PlVacacionesCompleted As Eliminar_PlVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlVacacionesCompleted As Consultar_PlVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Calculo_VacacionesCompleted As Calculo_VacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_PlCalculoVacacionesCompleted As Insertar_PlCalculoVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Modificar_PlCalculoVacacionesCompleted As Modificar_PlCalculoVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_PlCalculoVacacionesCompleted As Eliminar_PlCalculoVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlCalculoVacacionesCompleted As Consultar_PlCalculoVacacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event GuardarPlanillaCompleted As GuardarPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event Total_ComisionesGerencialesCompleted As Total_ComisionesGerencialesCompletedEventHandler
        
        '''<remarks/>
        Public Event Total_Comision_EjecutivoCompleted As Total_Comision_EjecutivoCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_SucursalesCompleted As Consultar_SucursalesCompletedEventHandler
        
        '''<remarks/>
        Public Event Bonificacion_AnualCompleted As Bonificacion_AnualCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_PlDescuentosISSSCompleted As Eliminar_PlDescuentosISSSCompletedEventHandler
        
        '''<remarks/>
        Public Event Modificar_PlDescuentosISSSCompleted As Modificar_PlDescuentosISSSCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_PlDescuentosISSSCompleted As Insertar_PlDescuentosISSSCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlDescuentosISSSCompleted As Consultar_PlDescuentosISSSCompletedEventHandler
        
        '''<remarks/>
        Public Event Detalle_Ingresos_BoletaPagosCompleted As Detalle_Ingresos_BoletaPagosCompletedEventHandler
        
        '''<remarks/>
        Public Event Detalle_Descuentos_BoletaPagosCompleted As Detalle_Descuentos_BoletaPagosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPlEmpleadosCompleted As ConsultarPlEmpleadosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPlEmpleadosCompleted As EliminarPlEmpleadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPlEmpleadosCompleted As ModificarPlEmpleadosCompletedEventHandler
        
        '''<remarks/>
        Public Event IngresarPlEmpleadosCompleted As IngresarPlEmpleadosCompletedEventHandler
        
        '''<remarks/>
        Public Event EnviarCorreoCompleted As EnviarCorreoCompletedEventHandler
        
        '''<remarks/>
        Public Event CorreoEmpleados_BoletaCompleted As CorreoEmpleados_BoletaCompletedEventHandler
        
        '''<remarks/>
        Public Event Reporte_BoletaPagosCompleted As Reporte_BoletaPagosCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlEmpleados2Completed As Consultar_PlEmpleados2CompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteEmpleadosActivosCompleted As ReporteEmpleadosActivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteConstanciaSalarioCompleted As ReporteConstanciaSalarioCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_PlIngresosCompleted As Insertar_PlIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event Modificar_PlIngresosCompleted As Modificar_PlIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_PlIngresosCompleted As Eliminar_PlIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlPlanillasCompleted As Consultar_PlPlanillasCompletedEventHandler
        
        '''<remarks/>
        Public Event Rpt_PlanillaCompleted As Rpt_PlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event Rpt_PlanillaBonificacionCompleted As Rpt_PlanillaBonificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event Rpt_PlanillaAguinaldoCompleted As Rpt_PlanillaAguinaldoCompletedEventHandler
        
        '''<remarks/>
        Public Event Rpt_PlanillaComisionesCompleted As Rpt_PlanillaComisionesCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificarDesembolsoCompleted As VerificarDesembolsoCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcesarDesembolsoCompleted As ProcesarDesembolsoCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_PlPlanillasCompleted As Insertar_PlPlanillasCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_PlDetPlanillaCompleted As Insertar_PlDetPlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidarCasosEspecialesCompleted As ValidarCasosEspecialesCompletedEventHandler
        
        '''<remarks/>
        Public Event InhabilitarDescuentosCompleted As InhabilitarDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlDescuentosCompleted As Consultar_PlDescuentosCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerarPlanilla2Completed As GenerarPlanilla2CompletedEventHandler
        
        '''<remarks/>
        Public Event ValidarIngresoDescuentoCompleted As ValidarIngresoDescuentoCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlPlazasCompleted As Consultar_PlPlazasCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_PlPlazasCompleted As Insertar_PlPlazasCompletedEventHandler
        
        '''<remarks/>
        Public Event Modificar_PlPlazasCompleted As Modificar_PlPlazasCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_PlPlazasCompleted As Eliminar_PlPlazasCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlCargosCompleted As Consultar_PlCargosCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_PlDepartamentosCompleted As Eliminar_PlDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event Modificar_PlDepartamentosCompleted As Modificar_PlDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event Insertar_PlDepartamentosCompleted As Insertar_PlDepartamentosCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PlAreasCompleted As Consultar_PlAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_PLEMPLEADOSCompleted As CONSULTAR_PLEMPLEADOSCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_PLDEPARTAMENTOSCompleted As CONSULTAR_PLDEPARTAMENTOSCompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICAR_DESCUENTOSLEYCompleted As MODIFICAR_DESCUENTOSLEYCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_PLANILLASCREADASCompleted As CONSULTAR_PLANILLASCREADASCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARDESCUENTOSLEYCompleted As CONSULTARDESCUENTOSLEYCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_PLTIPOPLANILLACompleted As CONSULTAR_PLTIPOPLANILLACompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICAR_PLDESCUENTOSCompleted As MODIFICAR_PLDESCUENTOSCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_PLDESCUENTOS2Completed As CONSULTAR_PLDESCUENTOS2CompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_PLEMPLEADOS_ACTIVOSCompleted As CONSULTAR_PLEMPLEADOS_ACTIVOSCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_PLDIASTRABAJADOSCompleted As CONSULTAR_PLDIASTRABAJADOSCompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTAR_PLDIASTRABAJADOSCompleted As INSERTAR_PLDIASTRABAJADOSCompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICAR_PLDIASTRABAJADOSCompleted As MODIFICAR_PLDIASTRABAJADOSCompletedEventHandler
        
        '''<remarks/>
        Public Event ELIMINAR_PLDIASTRABAJADOSCompleted As ELIMINAR_PLDIASTRABAJADOSCompletedEventHandler
        
        '''<remarks/>
        Public Event AguinaldoCompleted As AguinaldoCompletedEventHandler
        
        '''<remarks/>
        Public Event ELIMINARPLANILLACompleted As ELIMINARPLANILLACompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_DETALLEPLANILLASCompleted As RPT_DETALLEPLANILLASCompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_PLAN_SUCURSALCompleted As RPT_PLAN_SUCURSALCompletedEventHandler
        
        '''<remarks/>
        Public Event BonificacionCompleted As BonificacionCompletedEventHandler
        
        '''<remarks/>
        Public Event CierrePlanillaCompleted As CierrePlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDetallePlanillaCompleted As ConsultarDetallePlanillaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEmpleadosCompleted As ConsultarEmpleadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEmpleadosxDeptoCompleted As ConsultarEmpleadosxDeptoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLAbonosCompleted As ConsultarPLAbonosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLAccionesCompleted As ConsultarPLAccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLAreasCompleted As ConsultarPLAreasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLAusentismoCompleted As ConsultarPLAusentismoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPLCapacitacionesCompleted As ConsultarPLCapacitacionesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLAusentismo(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLAusentismo", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLAusentismo(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLAusentismo", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLAusentismo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLAusentismoAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLAusentismoAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLAusentismoAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLAusentismoOperationCompleted Is Nothing) Then
                Me.ModificarPLAusentismoOperationCompleted = AddressOf Me.OnModificarPLAusentismoOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLAusentismo", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarPLAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLAusentismoCompleted(Me, New ModificarPLAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLCapacitaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLCapacitaciones(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLCapacitaciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLCapacitaciones(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLCapacitaciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLCapacitaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLCapacitacionesAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLCapacitacionesAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLCapacitacionesAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLCapacitacionesOperationCompleted Is Nothing) Then
                Me.ModificarPLCapacitacionesOperationCompleted = AddressOf Me.OnModificarPLCapacitacionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLCapacitaciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLCapacitacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLCapacitacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLCapacitacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLCapacitacionesCompleted(Me, New ModificarPLCapacitacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLCargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLCargos(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLCargos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLCargos(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLCargos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLCargos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLCargosAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLCargosAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLCargosAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLCargosOperationCompleted Is Nothing) Then
                Me.ModificarPLCargosOperationCompleted = AddressOf Me.OnModificarPLCargosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLCargos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLCargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLCargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLCargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLCargosCompleted(Me, New ModificarPLCargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLDepartamentos(ByVal pCamposValores As String, ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLDepartamentos", New Object() {pCamposValores, pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLDepartamentos(ByVal pCamposValores As String, ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLDepartamentos", New Object() {pCamposValores, pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLDepartamentosAsync(ByVal pCamposValores As String, ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLDepartamentosAsync(pCamposValores, pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLDepartamentosAsync(ByVal pCamposValores As String, ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLDepartamentosOperationCompleted Is Nothing) Then
                Me.ModificarPLDepartamentosOperationCompleted = AddressOf Me.OnModificarPLDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLDepartamentos", New Object() {pCamposValores, pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal}, Me.ModificarPLDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLDepartamentosCompleted(Me, New ModificarPLDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLDescuentos(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLDescuentos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLDescuentos(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLDescuentos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLDescuentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLDescuentosAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLDescuentosAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLDescuentosAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLDescuentosOperationCompleted Is Nothing) Then
                Me.ModificarPLDescuentosOperationCompleted = AddressOf Me.OnModificarPLDescuentosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLDescuentos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLDescuentosCompleted(Me, New ModificarPLDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLDescuentosISSS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLDescuentosISSS(ByVal pCamposValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLDescuentosISSS", New Object() {pCamposValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLDescuentosISSS(ByVal pCamposValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLDescuentosISSS", New Object() {pCamposValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLDescuentosISSS(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLDescuentosISSSAsync(ByVal pCamposValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLDescuentosISSSAsync(pCamposValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLDescuentosISSSAsync(ByVal pCamposValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLDescuentosISSSOperationCompleted Is Nothing) Then
                Me.ModificarPLDescuentosISSSOperationCompleted = AddressOf Me.OnModificarPLDescuentosISSSOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLDescuentosISSS", New Object() {pCamposValores, pUsuario, pPassword, pSucursal}, Me.ModificarPLDescuentosISSSOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLDescuentosISSSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLDescuentosISSSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLDescuentosISSSCompleted(Me, New ModificarPLDescuentosISSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLDescuentosRenta", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLDescuentosRenta(ByVal pCamposValores As String, ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLDescuentosRenta", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLDescuentosRenta(ByVal pCamposValores As String, ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLDescuentosRenta", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLDescuentosRenta(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLDescuentosRentaAsync(ByVal pCamposValores As String, ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLDescuentosRentaAsync(pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLDescuentosRentaAsync(ByVal pCamposValores As String, ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLDescuentosRentaOperationCompleted Is Nothing) Then
                Me.ModificarPLDescuentosRentaOperationCompleted = AddressOf Me.OnModificarPLDescuentosRentaOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLDescuentosRenta", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal}, Me.ModificarPLDescuentosRentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLDescuentosRentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLDescuentosRentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLDescuentosRentaCompleted(Me, New ModificarPLDescuentosRentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLEmpleado", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLEmpleado(ByVal pCamposValores As String, ByVal pCodInstitucion As String, ByVal pCodcargo As String, ByVal pNoDUI As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLEmpleado", New Object() {pCamposValores, pCodInstitucion, pCodcargo, pNoDUI, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLEmpleado(ByVal pCamposValores As String, ByVal pCodInstitucion As String, ByVal pCodcargo As String, ByVal pNoDUI As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLEmpleado", New Object() {pCamposValores, pCodInstitucion, pCodcargo, pNoDUI, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLEmpleado(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLEmpleadoAsync(ByVal pCamposValores As String, ByVal pCodInstitucion As String, ByVal pCodcargo As String, ByVal pNoDUI As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLEmpleadoAsync(pCamposValores, pCodInstitucion, pCodcargo, pNoDUI, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLEmpleadoAsync(ByVal pCamposValores As String, ByVal pCodInstitucion As String, ByVal pCodcargo As String, ByVal pNoDUI As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLEmpleadoOperationCompleted Is Nothing) Then
                Me.ModificarPLEmpleadoOperationCompleted = AddressOf Me.OnModificarPLEmpleadoOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLEmpleado", New Object() {pCamposValores, pCodInstitucion, pCodcargo, pNoDUI, pUsuario, pPassword, pSucursal}, Me.ModificarPLEmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLEmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLEmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLEmpleadoCompleted(Me, New ModificarPLEmpleadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLGradoAcademico", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLGradoAcademico(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLGradoAcademico", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLGradoAcademico(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLGradoAcademico", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLGradoAcademico(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLGradoAcademicoAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLGradoAcademicoAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLGradoAcademicoAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLGradoAcademicoOperationCompleted Is Nothing) Then
                Me.ModificarPLGradoAcademicoOperationCompleted = AddressOf Me.OnModificarPLGradoAcademicoOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLGradoAcademico", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLGradoAcademicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLGradoAcademicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLGradoAcademicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLGradoAcademicoCompleted(Me, New ModificarPLGradoAcademicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLHorasExtras", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLHorasExtras(ByVal pCamposValores As String, ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLHorasExtras", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLHorasExtras(ByVal pCamposValores As String, ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLHorasExtras", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLHorasExtras(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLHorasExtrasAsync(ByVal pCamposValores As String, ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLHorasExtrasAsync(pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLHorasExtrasAsync(ByVal pCamposValores As String, ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLHorasExtrasOperationCompleted Is Nothing) Then
                Me.ModificarPLHorasExtrasOperationCompleted = AddressOf Me.OnModificarPLHorasExtrasOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLHorasExtras", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal}, Me.ModificarPLHorasExtrasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLHorasExtrasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLHorasExtrasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLHorasExtrasCompleted(Me, New ModificarPLHorasExtrasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLIngresos(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLIngresos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLIngresos(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLIngresos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLIngresosAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLIngresosAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLIngresosAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLIngresosOperationCompleted Is Nothing) Then
                Me.ModificarPLIngresosOperationCompleted = AddressOf Me.OnModificarPLIngresosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLIngresos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLIngresosCompleted(Me, New ModificarPLIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLInstituciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLInstituciones(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLInstituciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLInstituciones(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLInstituciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLInstituciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLInstitucionesAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLInstitucionesAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLInstitucionesAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLInstitucionesOperationCompleted Is Nothing) Then
                Me.ModificarPLInstitucionesOperationCompleted = AddressOf Me.OnModificarPLInstitucionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLInstituciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLInstitucionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLInstitucionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLInstitucionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLInstitucionesCompleted(Me, New ModificarPLInstitucionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLMotivoAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLMotivoAusentismo(ByVal pCamposValores As String, ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLMotivoAusentismo", New Object() {pCamposValores, pCodAusentismo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLMotivoAusentismo(ByVal pCamposValores As String, ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLMotivoAusentismo", New Object() {pCamposValores, pCodAusentismo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLMotivoAusentismo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLMotivoAusentismoAsync(ByVal pCamposValores As String, ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLMotivoAusentismoAsync(pCamposValores, pCodAusentismo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLMotivoAusentismoAsync(ByVal pCamposValores As String, ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLMotivoAusentismoOperationCompleted Is Nothing) Then
                Me.ModificarPLMotivoAusentismoOperationCompleted = AddressOf Me.OnModificarPLMotivoAusentismoOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLMotivoAusentismo", New Object() {pCamposValores, pCodAusentismo, pUsuario, pPassword, pSucursal}, Me.ModificarPLMotivoAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLMotivoAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLMotivoAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLMotivoAusentismoCompleted(Me, New ModificarPLMotivoAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLMotivoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLMotivoRetiro(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLMotivoRetiro", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLMotivoRetiro(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLMotivoRetiro", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLMotivoRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLMotivoRetiroAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLMotivoRetiroAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLMotivoRetiroAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLMotivoRetiroOperationCompleted Is Nothing) Then
                Me.ModificarPLMotivoRetiroOperationCompleted = AddressOf Me.OnModificarPLMotivoRetiroOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLMotivoRetiro", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLMotivoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLMotivoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLMotivoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLMotivoRetiroCompleted(Me, New ModificarPLMotivoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLPensiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLPensiones(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLPensiones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLPensiones(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLPensiones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLPensiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLPensionesAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLPensionesAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLPensionesAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLPensionesOperationCompleted Is Nothing) Then
                Me.ModificarPLPensionesOperationCompleted = AddressOf Me.OnModificarPLPensionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLPensiones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLPensionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLPensionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLPensionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLPensionesCompleted(Me, New ModificarPLPensionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLPlazas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLPlazas(ByVal pCamposValores As String, ByVal pCodArea As String, ByVal pCodDepartamento As String, ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLPlazas", New Object() {pCamposValores, pCodArea, pCodDepartamento, pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLPlazas(ByVal pCamposValores As String, ByVal pCodArea As String, ByVal pCodDepartamento As String, ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLPlazas", New Object() {pCamposValores, pCodArea, pCodDepartamento, pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLPlazas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLPlazasAsync(ByVal pCamposValores As String, ByVal pCodArea As String, ByVal pCodDepartamento As String, ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLPlazasAsync(pCamposValores, pCodArea, pCodDepartamento, pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLPlazasAsync(ByVal pCamposValores As String, ByVal pCodArea As String, ByVal pCodDepartamento As String, ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLPlazasOperationCompleted Is Nothing) Then
                Me.ModificarPLPlazasOperationCompleted = AddressOf Me.OnModificarPLPlazasOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLPlazas", New Object() {pCamposValores, pCodArea, pCodDepartamento, pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal}, Me.ModificarPLPlazasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLPlazasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLPlazasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLPlazasCompleted(Me, New ModificarPLPlazasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLTipoDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLTipoDescuentos(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLTipoDescuentos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLTipoDescuentos(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLTipoDescuentos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLTipoDescuentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoDescuentosAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLTipoDescuentosAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoDescuentosAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLTipoDescuentosOperationCompleted Is Nothing) Then
                Me.ModificarPLTipoDescuentosOperationCompleted = AddressOf Me.OnModificarPLTipoDescuentosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLTipoDescuentos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarPLTipoDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLTipoDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLTipoDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLTipoDescuentosCompleted(Me, New ModificarPLTipoDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLTipoHoraExtra", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLTipoHoraExtra(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLTipoHoraExtra", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLTipoHoraExtra(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLTipoHoraExtra", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLTipoHoraExtra(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoHoraExtraAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLTipoHoraExtraAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoHoraExtraAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLTipoHoraExtraOperationCompleted Is Nothing) Then
                Me.ModificarPLTipoHoraExtraOperationCompleted = AddressOf Me.OnModificarPLTipoHoraExtraOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLTipoHoraExtra", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarPLTipoHoraExtraOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLTipoHoraExtraOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLTipoHoraExtraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLTipoHoraExtraCompleted(Me, New ModificarPLTipoHoraExtraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLTipoIngresos(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLTipoIngresos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLTipoIngresos(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLTipoIngresos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLTipoIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoIngresosAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLTipoIngresosAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoIngresosAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLTipoIngresosOperationCompleted Is Nothing) Then
                Me.ModificarPLTipoIngresosOperationCompleted = AddressOf Me.OnModificarPLTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLTipoIngresos", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarPLTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLTipoIngresosCompleted(Me, New ModificarPLTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLTipoPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLTipoPersonal(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLTipoPersonal", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLTipoPersonal(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLTipoPersonal", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLTipoPersonal(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoPersonalAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLTipoPersonalAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoPersonalAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLTipoPersonalOperationCompleted Is Nothing) Then
                Me.ModificarPLTipoPersonalOperationCompleted = AddressOf Me.OnModificarPLTipoPersonalOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLTipoPersonal", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarPLTipoPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLTipoPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLTipoPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLTipoPersonalCompleted(Me, New ModificarPLTipoPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLTipoPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLTipoPlanilla(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLTipoPlanilla", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLTipoPlanilla(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLTipoPlanilla", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLTipoPlanilla(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoPlanillaAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLTipoPlanillaAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLTipoPlanillaAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLTipoPlanillaOperationCompleted Is Nothing) Then
                Me.ModificarPLTipoPlanillaOperationCompleted = AddressOf Me.OnModificarPLTipoPlanillaOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLTipoPlanilla", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarPLTipoPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLTipoPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLTipoPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLTipoPlanillaCompleted(Me, New ModificarPLTipoPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLVacaciones(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLVacaciones", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLVacaciones(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLVacaciones", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLVacaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLVacacionesAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLVacacionesAsync(pCamposValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLVacacionesAsync(ByVal pCamposValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLVacacionesOperationCompleted Is Nothing) Then
                Me.ModificarPLVacacionesOperationCompleted = AddressOf Me.OnModificarPLVacacionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLVacaciones", New Object() {pCamposValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarPLVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLVacacionesCompleted(Me, New ModificarPLVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ObtenerCorrelativoAbonos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoAbonos(ByVal pCampo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoAbonos", New Object() {pCampo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoAbonos(ByVal pCampo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoAbonos", New Object() {pCampo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoAbonos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoAbonosAsync(ByVal pCampo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoAbonosAsync(pCampo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoAbonosAsync(ByVal pCampo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoAbonosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoAbonosOperationCompleted = AddressOf Me.OnObtenerCorrelativoAbonosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoAbonos", New Object() {pCampo, pUsuario, pPassword, pSucursal}, Me.ObtenerCorrelativoAbonosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoAbonosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoAbonosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoAbonosCompleted(Me, New ObtenerCorrelativoAbonosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ObtenerNoPlaza", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerNoPlaza(ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("ObtenerNoPlaza", New Object() {pCodEmpleado, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerNoPlaza(ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerNoPlaza", New Object() {pCodEmpleado, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerNoPlaza(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerNoPlazaAsync(ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ObtenerNoPlazaAsync(pCodEmpleado, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerNoPlazaAsync(ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerNoPlazaOperationCompleted Is Nothing) Then
                Me.ObtenerNoPlazaOperationCompleted = AddressOf Me.OnObtenerNoPlazaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerNoPlaza", New Object() {pCodEmpleado, pUsuario, pPassword, pSucursal}, Me.ObtenerNoPlazaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerNoPlazaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerNoPlazaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerNoPlazaCompleted(Me, New ObtenerNoPlazaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Pagos_Rojo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Pagos_Rojo(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Pagos_Rojo", New Object() {pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginPagos_Rojo(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Pagos_Rojo", New Object() {pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPagos_Rojo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Pagos_RojoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Pagos_RojoAsync(pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Pagos_RojoAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Pagos_RojoOperationCompleted Is Nothing) Then
                Me.Pagos_RojoOperationCompleted = AddressOf Me.OnPagos_RojoOperationCompleted
            End If
            Me.InvokeAsync("Pagos_Rojo", New Object() {pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.Pagos_RojoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPagos_RojoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Pagos_RojoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Pagos_RojoCompleted(Me, New Pagos_RojoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ReferenciaLaboral", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReferenciaLaboral(ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReferenciaLaboral", New Object() {pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReferenciaLaboral(ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReferenciaLaboral", New Object() {pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReferenciaLaboral(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReferenciaLaboralAsync(ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ReferenciaLaboralAsync(pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReferenciaLaboralAsync(ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReferenciaLaboralOperationCompleted Is Nothing) Then
                Me.ReferenciaLaboralOperationCompleted = AddressOf Me.OnReferenciaLaboralOperationCompleted
            End If
            Me.InvokeAsync("ReferenciaLaboral", New Object() {pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal}, Me.ReferenciaLaboralOperationCompleted, userState)
        End Sub
        
        Private Sub OnReferenciaLaboralOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReferenciaLaboralCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReferenciaLaboralCompleted(Me, New ReferenciaLaboralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Reporte_Ausentismos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_Ausentismos(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_Ausentismos", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_Ausentismos(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_Ausentismos", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_Ausentismos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_AusentismosAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_AusentismosAsync(pFecha1, pFecha2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_AusentismosAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_AusentismosOperationCompleted Is Nothing) Then
                Me.Reporte_AusentismosOperationCompleted = AddressOf Me.OnReporte_AusentismosOperationCompleted
            End If
            Me.InvokeAsync("Reporte_Ausentismos", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, Me.Reporte_AusentismosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_AusentismosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_AusentismosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_AusentismosCompleted(Me, New Reporte_AusentismosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Reporte_Datos_Empleado", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_Datos_Empleado(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pFiltro As String, ByVal pTitulo As String, ByVal pTodos As Boolean, ByVal pInactivos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_Datos_Empleado", New Object() {pFecha1, pFecha2, pFiltro, pTitulo, pTodos, pInactivos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_Datos_Empleado(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pFiltro As String, ByVal pTitulo As String, ByVal pTodos As Boolean, ByVal pInactivos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_Datos_Empleado", New Object() {pFecha1, pFecha2, pFiltro, pTitulo, pTodos, pInactivos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_Datos_Empleado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_Datos_EmpleadoAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pFiltro As String, ByVal pTitulo As String, ByVal pTodos As Boolean, ByVal pInactivos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_Datos_EmpleadoAsync(pFecha1, pFecha2, pFiltro, pTitulo, pTodos, pInactivos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_Datos_EmpleadoAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pFiltro As String, ByVal pTitulo As String, ByVal pTodos As Boolean, ByVal pInactivos As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_Datos_EmpleadoOperationCompleted Is Nothing) Then
                Me.Reporte_Datos_EmpleadoOperationCompleted = AddressOf Me.OnReporte_Datos_EmpleadoOperationCompleted
            End If
            Me.InvokeAsync("Reporte_Datos_Empleado", New Object() {pFecha1, pFecha2, pFiltro, pTitulo, pTodos, pInactivos, pUsuario, pPassword, pSucursal}, Me.Reporte_Datos_EmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_Datos_EmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_Datos_EmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_Datos_EmpleadoCompleted(Me, New Reporte_Datos_EmpleadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Reporte_Descuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_Descuentos(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_Descuentos", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_Descuentos(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_Descuentos", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_Descuentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_DescuentosAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_DescuentosAsync(pFecha1, pFecha2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_DescuentosAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_DescuentosOperationCompleted Is Nothing) Then
                Me.Reporte_DescuentosOperationCompleted = AddressOf Me.OnReporte_DescuentosOperationCompleted
            End If
            Me.InvokeAsync("Reporte_Descuentos", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, Me.Reporte_DescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_DescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_DescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_DescuentosCompleted(Me, New Reporte_DescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Reporte_Vacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_Vacaciones(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_Vacaciones", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_Vacaciones(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_Vacaciones", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_Vacaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_VacacionesAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.Reporte_VacacionesAsync(pFecha1, pFecha2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_VacacionesAsync(ByVal pFecha1 As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Reporte_VacacionesOperationCompleted Is Nothing) Then
                Me.Reporte_VacacionesOperationCompleted = AddressOf Me.OnReporte_VacacionesOperationCompleted
            End If
            Me.InvokeAsync("Reporte_Vacaciones", New Object() {pFecha1, pFecha2, pUsuario, pPassword, pSucursal}, Me.Reporte_VacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_VacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_VacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_VacacionesCompleted(Me, New Reporte_VacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Vacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Vacaciones(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Vacaciones", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginVacaciones(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Vacaciones", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVacaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VacacionesAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VacacionesAsync(pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VacacionesAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VacacionesOperationCompleted Is Nothing) Then
                Me.VacacionesOperationCompleted = AddressOf Me.OnVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Vacaciones", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.VacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.VacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VacacionesCompleted(Me, New VacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/VerificarEliminarPLMotivoAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarEliminarPLMotivoAusentismo(ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("VerificarEliminarPLMotivoAusentismo", New Object() {pCodAusentismo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarEliminarPLMotivoAusentismo(ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarEliminarPLMotivoAusentismo", New Object() {pCodAusentismo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarEliminarPLMotivoAusentismo(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLMotivoAusentismoAsync(ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificarEliminarPLMotivoAusentismoAsync(pCodAusentismo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLMotivoAusentismoAsync(ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificarEliminarPLMotivoAusentismoOperationCompleted Is Nothing) Then
                Me.VerificarEliminarPLMotivoAusentismoOperationCompleted = AddressOf Me.OnVerificarEliminarPLMotivoAusentismoOperationCompleted
            End If
            Me.InvokeAsync("VerificarEliminarPLMotivoAusentismo", New Object() {pCodAusentismo, pUsuario, pPassword, pSucursal}, Me.VerificarEliminarPLMotivoAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarEliminarPLMotivoAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarEliminarPLMotivoAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarEliminarPLMotivoAusentismoCompleted(Me, New VerificarEliminarPLMotivoAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/VerificarEliminarPLMotivoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarEliminarPLMotivoRetiro(ByVal pCodRetiro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("VerificarEliminarPLMotivoRetiro", New Object() {pCodRetiro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarEliminarPLMotivoRetiro(ByVal pCodRetiro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarEliminarPLMotivoRetiro", New Object() {pCodRetiro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarEliminarPLMotivoRetiro(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLMotivoRetiroAsync(ByVal pCodRetiro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificarEliminarPLMotivoRetiroAsync(pCodRetiro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLMotivoRetiroAsync(ByVal pCodRetiro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificarEliminarPLMotivoRetiroOperationCompleted Is Nothing) Then
                Me.VerificarEliminarPLMotivoRetiroOperationCompleted = AddressOf Me.OnVerificarEliminarPLMotivoRetiroOperationCompleted
            End If
            Me.InvokeAsync("VerificarEliminarPLMotivoRetiro", New Object() {pCodRetiro, pUsuario, pPassword, pSucursal}, Me.VerificarEliminarPLMotivoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarEliminarPLMotivoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarEliminarPLMotivoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarEliminarPLMotivoRetiroCompleted(Me, New VerificarEliminarPLMotivoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/VerificarEliminarPLTipoDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarEliminarPLTipoDescuentos(ByVal pCodTipoDescuentos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("VerificarEliminarPLTipoDescuentos", New Object() {pCodTipoDescuentos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarEliminarPLTipoDescuentos(ByVal pCodTipoDescuentos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarEliminarPLTipoDescuentos", New Object() {pCodTipoDescuentos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarEliminarPLTipoDescuentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoDescuentosAsync(ByVal pCodTipoDescuentos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificarEliminarPLTipoDescuentosAsync(pCodTipoDescuentos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoDescuentosAsync(ByVal pCodTipoDescuentos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificarEliminarPLTipoDescuentosOperationCompleted Is Nothing) Then
                Me.VerificarEliminarPLTipoDescuentosOperationCompleted = AddressOf Me.OnVerificarEliminarPLTipoDescuentosOperationCompleted
            End If
            Me.InvokeAsync("VerificarEliminarPLTipoDescuentos", New Object() {pCodTipoDescuentos, pUsuario, pPassword, pSucursal}, Me.VerificarEliminarPLTipoDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarEliminarPLTipoDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarEliminarPLTipoDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarEliminarPLTipoDescuentosCompleted(Me, New VerificarEliminarPLTipoDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/VerificarEliminarPLTipoHoraExtra", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarEliminarPLTipoHoraExtra(ByVal pCodTipoHoraExtra As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("VerificarEliminarPLTipoHoraExtra", New Object() {pCodTipoHoraExtra, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarEliminarPLTipoHoraExtra(ByVal pCodTipoHoraExtra As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarEliminarPLTipoHoraExtra", New Object() {pCodTipoHoraExtra, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarEliminarPLTipoHoraExtra(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoHoraExtraAsync(ByVal pCodTipoHoraExtra As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificarEliminarPLTipoHoraExtraAsync(pCodTipoHoraExtra, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoHoraExtraAsync(ByVal pCodTipoHoraExtra As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificarEliminarPLTipoHoraExtraOperationCompleted Is Nothing) Then
                Me.VerificarEliminarPLTipoHoraExtraOperationCompleted = AddressOf Me.OnVerificarEliminarPLTipoHoraExtraOperationCompleted
            End If
            Me.InvokeAsync("VerificarEliminarPLTipoHoraExtra", New Object() {pCodTipoHoraExtra, pUsuario, pPassword, pSucursal}, Me.VerificarEliminarPLTipoHoraExtraOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarEliminarPLTipoHoraExtraOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarEliminarPLTipoHoraExtraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarEliminarPLTipoHoraExtraCompleted(Me, New VerificarEliminarPLTipoHoraExtraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/VerificarEliminarPLTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarEliminarPLTipoIngresos(ByVal pCodTipoIngresos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("VerificarEliminarPLTipoIngresos", New Object() {pCodTipoIngresos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarEliminarPLTipoIngresos(ByVal pCodTipoIngresos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarEliminarPLTipoIngresos", New Object() {pCodTipoIngresos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarEliminarPLTipoIngresos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoIngresosAsync(ByVal pCodTipoIngresos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificarEliminarPLTipoIngresosAsync(pCodTipoIngresos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoIngresosAsync(ByVal pCodTipoIngresos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificarEliminarPLTipoIngresosOperationCompleted Is Nothing) Then
                Me.VerificarEliminarPLTipoIngresosOperationCompleted = AddressOf Me.OnVerificarEliminarPLTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("VerificarEliminarPLTipoIngresos", New Object() {pCodTipoIngresos, pUsuario, pPassword, pSucursal}, Me.VerificarEliminarPLTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarEliminarPLTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarEliminarPLTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarEliminarPLTipoIngresosCompleted(Me, New VerificarEliminarPLTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/VerificarEliminarPLTipoPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarEliminarPLTipoPersonal(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("VerificarEliminarPLTipoPersonal", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarEliminarPLTipoPersonal(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarEliminarPLTipoPersonal", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarEliminarPLTipoPersonal(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoPersonalAsync(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificarEliminarPLTipoPersonalAsync(pCodTipoPersonal, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoPersonalAsync(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificarEliminarPLTipoPersonalOperationCompleted Is Nothing) Then
                Me.VerificarEliminarPLTipoPersonalOperationCompleted = AddressOf Me.OnVerificarEliminarPLTipoPersonalOperationCompleted
            End If
            Me.InvokeAsync("VerificarEliminarPLTipoPersonal", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal}, Me.VerificarEliminarPLTipoPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarEliminarPLTipoPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarEliminarPLTipoPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarEliminarPLTipoPersonalCompleted(Me, New VerificarEliminarPLTipoPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/VerificarEliminarPLTipoPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarEliminarPLTipoPlanilla(ByVal pCodTipoPlanilla As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("VerificarEliminarPLTipoPlanilla", New Object() {pCodTipoPlanilla, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarEliminarPLTipoPlanilla(ByVal pCodTipoPlanilla As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarEliminarPLTipoPlanilla", New Object() {pCodTipoPlanilla, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarEliminarPLTipoPlanilla(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoPlanillaAsync(ByVal pCodTipoPlanilla As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificarEliminarPLTipoPlanillaAsync(pCodTipoPlanilla, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarEliminarPLTipoPlanillaAsync(ByVal pCodTipoPlanilla As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificarEliminarPLTipoPlanillaOperationCompleted Is Nothing) Then
                Me.VerificarEliminarPLTipoPlanillaOperationCompleted = AddressOf Me.OnVerificarEliminarPLTipoPlanillaOperationCompleted
            End If
            Me.InvokeAsync("VerificarEliminarPLTipoPlanilla", New Object() {pCodTipoPlanilla, pUsuario, pPassword, pSucursal}, Me.VerificarEliminarPLTipoPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarEliminarPLTipoPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarEliminarPLTipoPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarEliminarPLTipoPlanillaCompleted(Me, New VerificarEliminarPLTipoPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLCargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLCargos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLCargos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLCargos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLCargos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLCargos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLCargosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLCargosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLCargosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLCargosOperationCompleted Is Nothing) Then
                Me.ConsultarPLCargosOperationCompleted = AddressOf Me.OnConsultarPLCargosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLCargos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLCargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLCargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLCargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLCargosCompleted(Me, New ConsultarPLCargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLDepartamentos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLDepartamentos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLDepartamentos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLDepartamentos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLDepartamentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDepartamentosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLDepartamentosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDepartamentosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLDepartamentosOperationCompleted Is Nothing) Then
                Me.ConsultarPLDepartamentosOperationCompleted = AddressOf Me.OnConsultarPLDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLDepartamentos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLDepartamentosCompleted(Me, New ConsultarPLDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLDescuentos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLDescuentos", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLDescuentos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLDescuentos", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLDescuentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDescuentosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLDescuentosAsync(pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDescuentosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLDescuentosOperationCompleted Is Nothing) Then
                Me.ConsultarPLDescuentosOperationCompleted = AddressOf Me.OnConsultarPLDescuentosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLDescuentos", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal}, Me.ConsultarPLDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLDescuentosCompleted(Me, New ConsultarPLDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLDescuentosISSS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLDescuentosISSS(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLDescuentosISSS", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLDescuentosISSS(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLDescuentosISSS", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLDescuentosISSS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDescuentosISSSAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLDescuentosISSSAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDescuentosISSSAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLDescuentosISSSOperationCompleted Is Nothing) Then
                Me.ConsultarPLDescuentosISSSOperationCompleted = AddressOf Me.OnConsultarPLDescuentosISSSOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLDescuentosISSS", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLDescuentosISSSOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLDescuentosISSSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLDescuentosISSSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLDescuentosISSSCompleted(Me, New ConsultarPLDescuentosISSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLDescuentosRenta", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLDescuentosRenta(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLDescuentosRenta", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLDescuentosRenta(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLDescuentosRenta", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLDescuentosRenta(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDescuentosRentaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLDescuentosRentaAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDescuentosRentaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLDescuentosRentaOperationCompleted Is Nothing) Then
                Me.ConsultarPLDescuentosRentaOperationCompleted = AddressOf Me.OnConsultarPLDescuentosRentaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLDescuentosRenta", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLDescuentosRentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLDescuentosRentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLDescuentosRentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLDescuentosRentaCompleted(Me, New ConsultarPLDescuentosRentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLDescuentosTipo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLDescuentosTipo(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLDescuentosTipo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLDescuentosTipo(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLDescuentosTipo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLDescuentosTipo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDescuentosTipoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLDescuentosTipoAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLDescuentosTipoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLDescuentosTipoOperationCompleted Is Nothing) Then
                Me.ConsultarPLDescuentosTipoOperationCompleted = AddressOf Me.OnConsultarPLDescuentosTipoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLDescuentosTipo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLDescuentosTipoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLDescuentosTipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLDescuentosTipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLDescuentosTipoCompleted(Me, New ConsultarPLDescuentosTipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLEmpleado", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLEmpleado(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLEmpleado", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLEmpleado(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLEmpleado", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLEmpleado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLEmpleadoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLEmpleadoAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLEmpleadoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLEmpleadoOperationCompleted Is Nothing) Then
                Me.ConsultarPLEmpleadoOperationCompleted = AddressOf Me.OnConsultarPLEmpleadoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLEmpleado", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLEmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLEmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLEmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLEmpleadoCompleted(Me, New ConsultarPLEmpleadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLGradoAcademico", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLGradoAcademico(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLGradoAcademico", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLGradoAcademico(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLGradoAcademico", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLGradoAcademico(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLGradoAcademicoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLGradoAcademicoAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLGradoAcademicoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLGradoAcademicoOperationCompleted Is Nothing) Then
                Me.ConsultarPLGradoAcademicoOperationCompleted = AddressOf Me.OnConsultarPLGradoAcademicoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLGradoAcademico", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLGradoAcademicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLGradoAcademicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLGradoAcademicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLGradoAcademicoCompleted(Me, New ConsultarPLGradoAcademicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLHorasExtras", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLHorasExtras(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLHorasExtras", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLHorasExtras(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLHorasExtras", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLHorasExtras(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLHorasExtrasAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLHorasExtrasAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLHorasExtrasAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLHorasExtrasOperationCompleted Is Nothing) Then
                Me.ConsultarPLHorasExtrasOperationCompleted = AddressOf Me.OnConsultarPLHorasExtrasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLHorasExtras", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLHorasExtrasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLHorasExtrasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLHorasExtrasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLHorasExtrasCompleted(Me, New ConsultarPLHorasExtrasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLIngresos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLIngresos", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLIngresos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLIngresos", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLIngresos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLIngresosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLIngresosAsync(pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLIngresosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLIngresosOperationCompleted Is Nothing) Then
                Me.ConsultarPLIngresosOperationCompleted = AddressOf Me.OnConsultarPLIngresosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLIngresos", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal}, Me.ConsultarPLIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLIngresosCompleted(Me, New ConsultarPLIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLInstituciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLInstituciones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLInstituciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLInstituciones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLInstituciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLInstituciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLInstitucionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLInstitucionesAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLInstitucionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLInstitucionesOperationCompleted Is Nothing) Then
                Me.ConsultarPLInstitucionesOperationCompleted = AddressOf Me.OnConsultarPLInstitucionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLInstituciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLInstitucionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLInstitucionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLInstitucionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLInstitucionesCompleted(Me, New ConsultarPLInstitucionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLMotivoAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLMotivoAusentismo(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLMotivoAusentismo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLMotivoAusentismo(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLMotivoAusentismo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLMotivoAusentismo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLMotivoAusentismoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLMotivoAusentismoAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLMotivoAusentismoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLMotivoAusentismoOperationCompleted Is Nothing) Then
                Me.ConsultarPLMotivoAusentismoOperationCompleted = AddressOf Me.OnConsultarPLMotivoAusentismoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLMotivoAusentismo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLMotivoAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLMotivoAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLMotivoAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLMotivoAusentismoCompleted(Me, New ConsultarPLMotivoAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLMotivoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLMotivoRetiro(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLMotivoRetiro", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLMotivoRetiro(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLMotivoRetiro", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLMotivoRetiro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLMotivoRetiroAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLMotivoRetiroAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLMotivoRetiroAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLMotivoRetiroOperationCompleted Is Nothing) Then
                Me.ConsultarPLMotivoRetiroOperationCompleted = AddressOf Me.OnConsultarPLMotivoRetiroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLMotivoRetiro", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLMotivoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLMotivoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLMotivoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLMotivoRetiroCompleted(Me, New ConsultarPLMotivoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLPensiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLPensiones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLPensiones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLPensiones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLPensiones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLPensiones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLPensionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLPensionesAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLPensionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLPensionesOperationCompleted Is Nothing) Then
                Me.ConsultarPLPensionesOperationCompleted = AddressOf Me.OnConsultarPLPensionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLPensiones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLPensionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLPensionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLPensionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLPensionesCompleted(Me, New ConsultarPLPensionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLPlanilla(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLPlanilla", New Object() {pCampos, pFiltro, pOrden, pNombre, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLPlanilla(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLPlanilla", New Object() {pCampos, pFiltro, pOrden, pNombre, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLPlanilla(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLPlanillaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLPlanillaAsync(pCampos, pFiltro, pOrden, pNombre, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLPlanillaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLPlanillaOperationCompleted Is Nothing) Then
                Me.ConsultarPLPlanillaOperationCompleted = AddressOf Me.OnConsultarPLPlanillaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLPlanilla", New Object() {pCampos, pFiltro, pOrden, pNombre, pUsuario, pPassword, pSucursal}, Me.ConsultarPLPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLPlanillaCompleted(Me, New ConsultarPLPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLPlazas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLPlazas(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLPlazas", New Object() {pCampos, pFiltro, pOrden, pNombre, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLPlazas(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLPlazas", New Object() {pCampos, pFiltro, pOrden, pNombre, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLPlazas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLPlazasAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLPlazasAsync(pCampos, pFiltro, pOrden, pNombre, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLPlazasAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLPlazasOperationCompleted Is Nothing) Then
                Me.ConsultarPLPlazasOperationCompleted = AddressOf Me.OnConsultarPLPlazasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLPlazas", New Object() {pCampos, pFiltro, pOrden, pNombre, pUsuario, pPassword, pSucursal}, Me.ConsultarPLPlazasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLPlazasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLPlazasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLPlazasCompleted(Me, New ConsultarPLPlazasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLTipoDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLTipoDescuentos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLTipoDescuentos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLTipoDescuentos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLTipoDescuentos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLTipoDescuentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoDescuentosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLTipoDescuentosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoDescuentosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLTipoDescuentosOperationCompleted Is Nothing) Then
                Me.ConsultarPLTipoDescuentosOperationCompleted = AddressOf Me.OnConsultarPLTipoDescuentosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLTipoDescuentos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLTipoDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLTipoDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLTipoDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLTipoDescuentosCompleted(Me, New ConsultarPLTipoDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLTipoHoraExtra", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLTipoHoraExtra(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLTipoHoraExtra", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLTipoHoraExtra(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLTipoHoraExtra", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLTipoHoraExtra(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoHoraExtraAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLTipoHoraExtraAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoHoraExtraAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLTipoHoraExtraOperationCompleted Is Nothing) Then
                Me.ConsultarPLTipoHoraExtraOperationCompleted = AddressOf Me.OnConsultarPLTipoHoraExtraOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLTipoHoraExtra", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLTipoHoraExtraOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLTipoHoraExtraOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLTipoHoraExtraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLTipoHoraExtraCompleted(Me, New ConsultarPLTipoHoraExtraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLTipoIngresos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLTipoIngresos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLTipoIngresos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLTipoIngresos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLTipoIngresos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoIngresosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLTipoIngresosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoIngresosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLTipoIngresosOperationCompleted Is Nothing) Then
                Me.ConsultarPLTipoIngresosOperationCompleted = AddressOf Me.OnConsultarPLTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLTipoIngresos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLTipoIngresosCompleted(Me, New ConsultarPLTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLTipoPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLTipoPersonal(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLTipoPersonal", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLTipoPersonal(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLTipoPersonal", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLTipoPersonal(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoPersonalAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLTipoPersonalAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoPersonalAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLTipoPersonalOperationCompleted Is Nothing) Then
                Me.ConsultarPLTipoPersonalOperationCompleted = AddressOf Me.OnConsultarPLTipoPersonalOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLTipoPersonal", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLTipoPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLTipoPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLTipoPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLTipoPersonalCompleted(Me, New ConsultarPLTipoPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLTipoPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLTipoPlanilla(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLTipoPlanilla", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLTipoPlanilla(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLTipoPlanilla", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLTipoPlanilla(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoPlanillaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLTipoPlanillaAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLTipoPlanillaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLTipoPlanillaOperationCompleted Is Nothing) Then
                Me.ConsultarPLTipoPlanillaOperationCompleted = AddressOf Me.OnConsultarPLTipoPlanillaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLTipoPlanilla", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLTipoPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLTipoPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLTipoPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLTipoPlanillaCompleted(Me, New ConsultarPLTipoPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLVacaciones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLVacaciones", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLVacaciones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLVacaciones", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLVacaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLVacacionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLVacacionesAsync(pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLVacacionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLVacacionesOperationCompleted Is Nothing) Then
                Me.ConsultarPLVacacionesOperationCompleted = AddressOf Me.OnConsultarPLVacacionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLVacaciones", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal}, Me.ConsultarPLVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLVacacionesCompleted(Me, New ConsultarPLVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLAcciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLAcciones(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLAcciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLAcciones(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLAcciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLAcciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLAccionesAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLAccionesAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLAccionesAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLAccionesOperationCompleted Is Nothing) Then
                Me.EliminarPLAccionesOperationCompleted = AddressOf Me.OnEliminarPLAccionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLAcciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLAccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLAccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLAccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLAccionesCompleted(Me, New EliminarPLAccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLAreas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLAreas(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLAreas", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLAreas(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLAreas", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLAreas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLAreasAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLAreasAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLAreasAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLAreasOperationCompleted Is Nothing) Then
                Me.EliminarPLAreasOperationCompleted = AddressOf Me.OnEliminarPLAreasOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLAreas", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLAreasCompleted(Me, New EliminarPLAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLAreasVerificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLAreasVerificacion(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarPLAreasVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLAreasVerificacion(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLAreasVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLAreasVerificacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLAreasVerificacionAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLAreasVerificacionAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLAreasVerificacionAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLAreasVerificacionOperationCompleted Is Nothing) Then
                Me.EliminarPLAreasVerificacionOperationCompleted = AddressOf Me.OnEliminarPLAreasVerificacionOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLAreasVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLAreasVerificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLAreasVerificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLAreasVerificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLAreasVerificacionCompleted(Me, New EliminarPLAreasVerificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLAusentismo(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLAusentismo", New Object() {pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLAusentismo(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLAusentismo", New Object() {pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLAusentismo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLAusentismoAsync(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLAusentismoAsync(pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLAusentismoAsync(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLAusentismoOperationCompleted Is Nothing) Then
                Me.EliminarPLAusentismoOperationCompleted = AddressOf Me.OnEliminarPLAusentismoOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLAusentismo", New Object() {pFiltro, pUsuario, pPassword, pSucursal}, Me.EliminarPLAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLAusentismoCompleted(Me, New EliminarPLAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLCapacitaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLCapacitaciones(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLCapacitaciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLCapacitaciones(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLCapacitaciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLCapacitaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLCapacitacionesAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLCapacitacionesAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLCapacitacionesAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLCapacitacionesOperationCompleted Is Nothing) Then
                Me.EliminarPLCapacitacionesOperationCompleted = AddressOf Me.OnEliminarPLCapacitacionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLCapacitaciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLCapacitacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLCapacitacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLCapacitacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLCapacitacionesCompleted(Me, New EliminarPLCapacitacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLCargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLCargos(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLCargos", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLCargos(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLCargos", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLCargos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLCargosAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLCargosAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLCargosAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLCargosOperationCompleted Is Nothing) Then
                Me.EliminarPLCargosOperationCompleted = AddressOf Me.OnEliminarPLCargosOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLCargos", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLCargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLCargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLCargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLCargosCompleted(Me, New EliminarPLCargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLCargosVerificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLCargosVerificacion(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarPLCargosVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLCargosVerificacion(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLCargosVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLCargosVerificacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLCargosVerificacionAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLCargosVerificacionAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLCargosVerificacionAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLCargosVerificacionOperationCompleted Is Nothing) Then
                Me.EliminarPLCargosVerificacionOperationCompleted = AddressOf Me.OnEliminarPLCargosVerificacionOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLCargosVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLCargosVerificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLCargosVerificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLCargosVerificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLCargosVerificacionCompleted(Me, New EliminarPLCargosVerificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLDepartamentos(ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLDepartamentos", New Object() {pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLDepartamentos(ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLDepartamentos", New Object() {pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLDepartamentosAsync(ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLDepartamentosAsync(pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLDepartamentosAsync(ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLDepartamentosOperationCompleted Is Nothing) Then
                Me.EliminarPLDepartamentosOperationCompleted = AddressOf Me.OnEliminarPLDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLDepartamentos", New Object() {pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal}, Me.EliminarPLDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLDepartamentosCompleted(Me, New EliminarPLDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLDepartamentosVerificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLDepartamentosVerificacion(ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarPLDepartamentosVerificacion", New Object() {pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLDepartamentosVerificacion(ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLDepartamentosVerificacion", New Object() {pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLDepartamentosVerificacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLDepartamentosVerificacionAsync(ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLDepartamentosVerificacionAsync(pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLDepartamentosVerificacionAsync(ByVal pCodDepartamento As String, ByVal pCodArea As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLDepartamentosVerificacionOperationCompleted Is Nothing) Then
                Me.EliminarPLDepartamentosVerificacionOperationCompleted = AddressOf Me.OnEliminarPLDepartamentosVerificacionOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLDepartamentosVerificacion", New Object() {pCodDepartamento, pCodArea, pUsuario, pPassword, pSucursal}, Me.EliminarPLDepartamentosVerificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLDepartamentosVerificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLDepartamentosVerificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLDepartamentosVerificacionCompleted(Me, New EliminarPLDepartamentosVerificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLDescuentos(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLDescuentos", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLDescuentos(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLDescuentos", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLDescuentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLDescuentosAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLDescuentosAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLDescuentosAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLDescuentosOperationCompleted Is Nothing) Then
                Me.EliminarPLDescuentosOperationCompleted = AddressOf Me.OnEliminarPLDescuentosOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLDescuentos", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLDescuentosCompleted(Me, New EliminarPLDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLDescuentosRenta", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLDescuentosRenta(ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLDescuentosRenta", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLDescuentosRenta(ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLDescuentosRenta", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLDescuentosRenta(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLDescuentosRentaAsync(ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLDescuentosRentaAsync(pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLDescuentosRentaAsync(ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLDescuentosRentaOperationCompleted Is Nothing) Then
                Me.EliminarPLDescuentosRentaOperationCompleted = AddressOf Me.OnEliminarPLDescuentosRentaOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLDescuentosRenta", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, Me.EliminarPLDescuentosRentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLDescuentosRentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLDescuentosRentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLDescuentosRentaCompleted(Me, New EliminarPLDescuentosRentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLEmpleado", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLEmpleado(ByVal pNoDUI As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLEmpleado", New Object() {pNoDUI, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLEmpleado(ByVal pNoDUI As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLEmpleado", New Object() {pNoDUI, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLEmpleado(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLEmpleadoAsync(ByVal pNoDUI As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLEmpleadoAsync(pNoDUI, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLEmpleadoAsync(ByVal pNoDUI As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLEmpleadoOperationCompleted Is Nothing) Then
                Me.EliminarPLEmpleadoOperationCompleted = AddressOf Me.OnEliminarPLEmpleadoOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLEmpleado", New Object() {pNoDUI, pUsuario, pPassword, pSucursal}, Me.EliminarPLEmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLEmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLEmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLEmpleadoCompleted(Me, New EliminarPLEmpleadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLGradoAcademico", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLGradoAcademico(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLGradoAcademico", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLGradoAcademico(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLGradoAcademico", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLGradoAcademico(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLGradoAcademicoAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLGradoAcademicoAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLGradoAcademicoAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLGradoAcademicoOperationCompleted Is Nothing) Then
                Me.EliminarPLGradoAcademicoOperationCompleted = AddressOf Me.OnEliminarPLGradoAcademicoOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLGradoAcademico", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLGradoAcademicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLGradoAcademicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLGradoAcademicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLGradoAcademicoCompleted(Me, New EliminarPLGradoAcademicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLHorasExtras", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLHorasExtras(ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLHorasExtras", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLHorasExtras(ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLHorasExtras", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLHorasExtras(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLHorasExtrasAsync(ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLHorasExtrasAsync(pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLHorasExtrasAsync(ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLHorasExtrasOperationCompleted Is Nothing) Then
                Me.EliminarPLHorasExtrasOperationCompleted = AddressOf Me.OnEliminarPLHorasExtrasOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLHorasExtras", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, Me.EliminarPLHorasExtrasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLHorasExtrasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLHorasExtrasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLHorasExtrasCompleted(Me, New EliminarPLHorasExtrasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLIngresos(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLIngresos", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLIngresos(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLIngresos", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLIngresosAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLIngresosAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLIngresosAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLIngresosOperationCompleted Is Nothing) Then
                Me.EliminarPLIngresosOperationCompleted = AddressOf Me.OnEliminarPLIngresosOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLIngresos", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLIngresosCompleted(Me, New EliminarPLIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLInstituciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLInstituciones(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLInstituciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLInstituciones(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLInstituciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLInstituciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLInstitucionesAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLInstitucionesAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLInstitucionesAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLInstitucionesOperationCompleted Is Nothing) Then
                Me.EliminarPLInstitucionesOperationCompleted = AddressOf Me.OnEliminarPLInstitucionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLInstituciones", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLInstitucionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLInstitucionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLInstitucionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLInstitucionesCompleted(Me, New EliminarPLInstitucionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLInstitucionesVerificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLInstitucionesVerificacion(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarPLInstitucionesVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLInstitucionesVerificacion(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLInstitucionesVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLInstitucionesVerificacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLInstitucionesVerificacionAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLInstitucionesVerificacionAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLInstitucionesVerificacionAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLInstitucionesVerificacionOperationCompleted Is Nothing) Then
                Me.EliminarPLInstitucionesVerificacionOperationCompleted = AddressOf Me.OnEliminarPLInstitucionesVerificacionOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLInstitucionesVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLInstitucionesVerificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLInstitucionesVerificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLInstitucionesVerificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLInstitucionesVerificacionCompleted(Me, New EliminarPLInstitucionesVerificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLMotivoAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLMotivoAusentismo(ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLMotivoAusentismo", New Object() {pCodAusentismo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLMotivoAusentismo(ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLMotivoAusentismo", New Object() {pCodAusentismo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLMotivoAusentismo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLMotivoAusentismoAsync(ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLMotivoAusentismoAsync(pCodAusentismo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLMotivoAusentismoAsync(ByVal pCodAusentismo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLMotivoAusentismoOperationCompleted Is Nothing) Then
                Me.EliminarPLMotivoAusentismoOperationCompleted = AddressOf Me.OnEliminarPLMotivoAusentismoOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLMotivoAusentismo", New Object() {pCodAusentismo, pUsuario, pPassword, pSucursal}, Me.EliminarPLMotivoAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLMotivoAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLMotivoAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLMotivoAusentismoCompleted(Me, New EliminarPLMotivoAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLMotivoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLMotivoRetiro(ByVal pCodRetiro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLMotivoRetiro", New Object() {pCodRetiro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLMotivoRetiro(ByVal pCodRetiro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLMotivoRetiro", New Object() {pCodRetiro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLMotivoRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLMotivoRetiroAsync(ByVal pCodRetiro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLMotivoRetiroAsync(pCodRetiro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLMotivoRetiroAsync(ByVal pCodRetiro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLMotivoRetiroOperationCompleted Is Nothing) Then
                Me.EliminarPLMotivoRetiroOperationCompleted = AddressOf Me.OnEliminarPLMotivoRetiroOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLMotivoRetiro", New Object() {pCodRetiro, pUsuario, pPassword, pSucursal}, Me.EliminarPLMotivoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLMotivoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLMotivoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLMotivoRetiroCompleted(Me, New EliminarPLMotivoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLPensiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLPensiones(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLPensiones", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLPensiones(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLPensiones", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLPensiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLPensionesAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLPensionesAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLPensionesAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLPensionesOperationCompleted Is Nothing) Then
                Me.EliminarPLPensionesOperationCompleted = AddressOf Me.OnEliminarPLPensionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLPensiones", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLPensionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLPensionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLPensionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLPensionesCompleted(Me, New EliminarPLPensionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLPensionesVerificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLPensionesVerificacion(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarPLPensionesVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLPensionesVerificacion(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLPensionesVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLPensionesVerificacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLPensionesVerificacionAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLPensionesVerificacionAsync(pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLPensionesVerificacionAsync(ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLPensionesVerificacionOperationCompleted Is Nothing) Then
                Me.EliminarPLPensionesVerificacionOperationCompleted = AddressOf Me.OnEliminarPLPensionesVerificacionOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLPensionesVerificacion", New Object() {pCodigo, pUsuario, pPassword, pSucursal}, Me.EliminarPLPensionesVerificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLPensionesVerificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLPensionesVerificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLPensionesVerificacionCompleted(Me, New EliminarPLPensionesVerificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLPlazas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLPlazas(ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLPlazas", New Object() {pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLPlazas(ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLPlazas", New Object() {pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLPlazas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLPlazasAsync(ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLPlazasAsync(pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLPlazasAsync(ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLPlazasOperationCompleted Is Nothing) Then
                Me.EliminarPLPlazasOperationCompleted = AddressOf Me.OnEliminarPLPlazasOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLPlazas", New Object() {pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal}, Me.EliminarPLPlazasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLPlazasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLPlazasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLPlazasCompleted(Me, New EliminarPLPlazasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLPlazasVerificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLPlazasVerificacion(ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarPLPlazasVerificacion", New Object() {pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLPlazasVerificacion(ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLPlazasVerificacion", New Object() {pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLPlazasVerificacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLPlazasVerificacionAsync(ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLPlazasVerificacionAsync(pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLPlazasVerificacionAsync(ByVal pNoPlaza As String, ByVal pCodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLPlazasVerificacionOperationCompleted Is Nothing) Then
                Me.EliminarPLPlazasVerificacionOperationCompleted = AddressOf Me.OnEliminarPLPlazasVerificacionOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLPlazasVerificacion", New Object() {pNoPlaza, pCodEmpleado, pUsuario, pPassword, pSucursal}, Me.EliminarPLPlazasVerificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLPlazasVerificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLPlazasVerificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLPlazasVerificacionCompleted(Me, New EliminarPLPlazasVerificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLTipoDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLTipoDescuentos(ByVal pCodTipoDescuentos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLTipoDescuentos", New Object() {pCodTipoDescuentos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLTipoDescuentos(ByVal pCodTipoDescuentos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLTipoDescuentos", New Object() {pCodTipoDescuentos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLTipoDescuentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoDescuentosAsync(ByVal pCodTipoDescuentos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLTipoDescuentosAsync(pCodTipoDescuentos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoDescuentosAsync(ByVal pCodTipoDescuentos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLTipoDescuentosOperationCompleted Is Nothing) Then
                Me.EliminarPLTipoDescuentosOperationCompleted = AddressOf Me.OnEliminarPLTipoDescuentosOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLTipoDescuentos", New Object() {pCodTipoDescuentos, pUsuario, pPassword, pSucursal}, Me.EliminarPLTipoDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLTipoDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLTipoDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLTipoDescuentosCompleted(Me, New EliminarPLTipoDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLTipoHoraExtra", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLTipoHoraExtra(ByVal pCodTipoHoraExtra As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLTipoHoraExtra", New Object() {pCodTipoHoraExtra, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLTipoHoraExtra(ByVal pCodTipoHoraExtra As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLTipoHoraExtra", New Object() {pCodTipoHoraExtra, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLTipoHoraExtra(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoHoraExtraAsync(ByVal pCodTipoHoraExtra As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLTipoHoraExtraAsync(pCodTipoHoraExtra, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoHoraExtraAsync(ByVal pCodTipoHoraExtra As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLTipoHoraExtraOperationCompleted Is Nothing) Then
                Me.EliminarPLTipoHoraExtraOperationCompleted = AddressOf Me.OnEliminarPLTipoHoraExtraOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLTipoHoraExtra", New Object() {pCodTipoHoraExtra, pUsuario, pPassword, pSucursal}, Me.EliminarPLTipoHoraExtraOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLTipoHoraExtraOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLTipoHoraExtraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLTipoHoraExtraCompleted(Me, New EliminarPLTipoHoraExtraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLTipoIngresos(ByVal pCodTipoIngresos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLTipoIngresos", New Object() {pCodTipoIngresos, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLTipoIngresos(ByVal pCodTipoIngresos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLTipoIngresos", New Object() {pCodTipoIngresos, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLTipoIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoIngresosAsync(ByVal pCodTipoIngresos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLTipoIngresosAsync(pCodTipoIngresos, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoIngresosAsync(ByVal pCodTipoIngresos As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLTipoIngresosOperationCompleted Is Nothing) Then
                Me.EliminarPLTipoIngresosOperationCompleted = AddressOf Me.OnEliminarPLTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLTipoIngresos", New Object() {pCodTipoIngresos, pUsuario, pPassword, pSucursal}, Me.EliminarPLTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLTipoIngresosCompleted(Me, New EliminarPLTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLTipoPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLTipoPersonal(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLTipoPersonal", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLTipoPersonal(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLTipoPersonal", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLTipoPersonal(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoPersonalAsync(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLTipoPersonalAsync(pCodTipoPersonal, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoPersonalAsync(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLTipoPersonalOperationCompleted Is Nothing) Then
                Me.EliminarPLTipoPersonalOperationCompleted = AddressOf Me.OnEliminarPLTipoPersonalOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLTipoPersonal", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal}, Me.EliminarPLTipoPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLTipoPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLTipoPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLTipoPersonalCompleted(Me, New EliminarPLTipoPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLTipoPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLTipoPlanilla(ByVal pCodTipoPlanilla As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLTipoPlanilla", New Object() {pCodTipoPlanilla, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLTipoPlanilla(ByVal pCodTipoPlanilla As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLTipoPlanilla", New Object() {pCodTipoPlanilla, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLTipoPlanilla(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoPlanillaAsync(ByVal pCodTipoPlanilla As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLTipoPlanillaAsync(pCodTipoPlanilla, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLTipoPlanillaAsync(ByVal pCodTipoPlanilla As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLTipoPlanillaOperationCompleted Is Nothing) Then
                Me.EliminarPLTipoPlanillaOperationCompleted = AddressOf Me.OnEliminarPLTipoPlanillaOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLTipoPlanilla", New Object() {pCodTipoPlanilla, pUsuario, pPassword, pSucursal}, Me.EliminarPLTipoPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLTipoPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLTipoPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLTipoPlanillaCompleted(Me, New EliminarPLTipoPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPLVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPLVacaciones(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPLVacaciones", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPLVacaciones(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPLVacaciones", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPLVacaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPLVacacionesAsync(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPLVacacionesAsync(pCodTipoPersonal, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPLVacacionesAsync(ByVal pCodTipoPersonal As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPLVacacionesOperationCompleted Is Nothing) Then
                Me.EliminarPLVacacionesOperationCompleted = AddressOf Me.OnEliminarPLVacacionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarPLVacaciones", New Object() {pCodTipoPersonal, pUsuario, pPassword, pSucursal}, Me.EliminarPLVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPLVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPLVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPLVacacionesCompleted(Me, New EliminarPLVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/GeneraPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraPlanilla(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pEmpleado As Boolean, ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal CODPLANILLA As Integer, ByVal QUINCENA As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GeneraPlanilla", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pEmpleado, pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal, CODPLANILLA, QUINCENA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGeneraPlanilla( _
                    ByVal pCodTipoPlanilla As String,  _
                    ByVal pCodDepto As String,  _
                    ByVal pFechaIni As Date,  _
                    ByVal pFechaFin As Date,  _
                    ByVal pEmpleado As Boolean,  _
                    ByVal pCodEmpleado As String,  _
                    ByVal pFirma As String,  _
                    ByVal pCargo As String,  _
                    ByVal pFechaRep As Date,  _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CODPLANILLA As Integer,  _
                    ByVal QUINCENA As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GeneraPlanilla", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pEmpleado, pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal, CODPLANILLA, QUINCENA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGeneraPlanilla(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraPlanillaAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pEmpleado As Boolean, ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal CODPLANILLA As Integer, ByVal QUINCENA As Integer)
            Me.GeneraPlanillaAsync(pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pEmpleado, pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal, CODPLANILLA, QUINCENA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraPlanillaAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pEmpleado As Boolean, ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal CODPLANILLA As Integer, ByVal QUINCENA As Integer, ByVal userState As Object)
            If (Me.GeneraPlanillaOperationCompleted Is Nothing) Then
                Me.GeneraPlanillaOperationCompleted = AddressOf Me.OnGeneraPlanillaOperationCompleted
            End If
            Me.InvokeAsync("GeneraPlanilla", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pEmpleado, pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal, CODPLANILLA, QUINCENA}, Me.GeneraPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraPlanillaCompleted(Me, New GeneraPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/GenerarCarneEmpleado", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerarCarneEmpleado(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("GenerarCarneEmpleado", New Object() {pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerarCarneEmpleado(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerarCarneEmpleado", New Object() {pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerarCarneEmpleado(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerarCarneEmpleadoAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.GenerarCarneEmpleadoAsync(pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerarCarneEmpleadoAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.GenerarCarneEmpleadoOperationCompleted Is Nothing) Then
                Me.GenerarCarneEmpleadoOperationCompleted = AddressOf Me.OnGenerarCarneEmpleadoOperationCompleted
            End If
            Me.InvokeAsync("GenerarCarneEmpleado", New Object() {pFecha, pUsuario, pPassword, pSucursal}, Me.GenerarCarneEmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerarCarneEmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerarCarneEmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerarCarneEmpleadoCompleted(Me, New GenerarCarneEmpleadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/GenerarPartida", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerarPartida(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GenerarPartida", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerarPartida(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerarPartida", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerarPartida(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerarPartidaAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.GenerarPartidaAsync(pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerarPartidaAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.GenerarPartidaOperationCompleted Is Nothing) Then
                Me.GenerarPartidaOperationCompleted = AddressOf Me.OnGenerarPartidaOperationCompleted
            End If
            Me.InvokeAsync("GenerarPartida", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.GenerarPartidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerarPartidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerarPartidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerarPartidaCompleted(Me, New GenerarPartidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ImportarFileAFP", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportarFileAFP(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pNameFile As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ImportarFileAFP", New Object() {pFechaIni, pFechaFin, pNameFile, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginImportarFileAFP(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pNameFile As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ImportarFileAFP", New Object() {pFechaIni, pFechaFin, pNameFile, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndImportarFileAFP(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportarFileAFPAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pNameFile As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ImportarFileAFPAsync(pFechaIni, pFechaFin, pNameFile, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportarFileAFPAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pNameFile As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ImportarFileAFPOperationCompleted Is Nothing) Then
                Me.ImportarFileAFPOperationCompleted = AddressOf Me.OnImportarFileAFPOperationCompleted
            End If
            Me.InvokeAsync("ImportarFileAFP", New Object() {pFechaIni, pFechaFin, pNameFile, pUsuario, pPassword, pSucursal}, Me.ImportarFileAFPOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportarFileAFPOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportarFileAFPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportarFileAFPCompleted(Me, New ImportarFileAFPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ImportarFileNB", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportarFileNB(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pEmpleado As Boolean, ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ImportarFileNB", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pEmpleado, pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginImportarFileNB(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pEmpleado As Boolean, ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ImportarFileNB", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pEmpleado, pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndImportarFileNB(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportarFileNBAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pEmpleado As Boolean, ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ImportarFileNBAsync(pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pEmpleado, pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportarFileNBAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pEmpleado As Boolean, ByVal pCodEmpleado As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ImportarFileNBOperationCompleted Is Nothing) Then
                Me.ImportarFileNBOperationCompleted = AddressOf Me.OnImportarFileNBOperationCompleted
            End If
            Me.InvokeAsync("ImportarFileNB", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pEmpleado, pCodEmpleado, pFirma, pCargo, pFechaRep, pUsuario, pPassword, pSucursal}, Me.ImportarFileNBOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportarFileNBOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportarFileNBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportarFileNBCompleted(Me, New ImportarFileNBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ImprimirPLAbonos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImprimirPLAbonos(ByVal pNoAbono As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ImprimirPLAbonos", New Object() {pNoAbono, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginImprimirPLAbonos(ByVal pNoAbono As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ImprimirPLAbonos", New Object() {pNoAbono, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndImprimirPLAbonos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImprimirPLAbonosAsync(ByVal pNoAbono As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ImprimirPLAbonosAsync(pNoAbono, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImprimirPLAbonosAsync(ByVal pNoAbono As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ImprimirPLAbonosOperationCompleted Is Nothing) Then
                Me.ImprimirPLAbonosOperationCompleted = AddressOf Me.OnImprimirPLAbonosOperationCompleted
            End If
            Me.InvokeAsync("ImprimirPLAbonos", New Object() {pNoAbono, pUsuario, pPassword, pSucursal}, Me.ImprimirPLAbonosOperationCompleted, userState)
        End Sub
        
        Private Sub OnImprimirPLAbonosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImprimirPLAbonosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImprimirPLAbonosCompleted(Me, New ImprimirPLAbonosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLAbonos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLAbonos(ByVal pCampos As String, ByVal pValores As String, ByVal pAbono As Double, ByVal pNoDescuento As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLAbonos", New Object() {pCampos, pValores, pAbono, pNoDescuento, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLAbonos(ByVal pCampos As String, ByVal pValores As String, ByVal pAbono As Double, ByVal pNoDescuento As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLAbonos", New Object() {pCampos, pValores, pAbono, pNoDescuento, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLAbonos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLAbonosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pAbono As Double, ByVal pNoDescuento As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLAbonosAsync(pCampos, pValores, pAbono, pNoDescuento, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLAbonosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pAbono As Double, ByVal pNoDescuento As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLAbonosOperationCompleted Is Nothing) Then
                Me.InsertarPLAbonosOperationCompleted = AddressOf Me.OnInsertarPLAbonosOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLAbonos", New Object() {pCampos, pValores, pAbono, pNoDescuento, pUsuario, pPassword, pSucursal}, Me.InsertarPLAbonosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLAbonosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLAbonosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLAbonosCompleted(Me, New InsertarPLAbonosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLAcciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLAcciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLAcciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLAcciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLAcciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLAcciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLAccionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLAccionesAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLAccionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLAccionesOperationCompleted Is Nothing) Then
                Me.InsertarPLAccionesOperationCompleted = AddressOf Me.OnInsertarPLAccionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLAcciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLAccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLAccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLAccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLAccionesCompleted(Me, New InsertarPLAccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLAreas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLAreas(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLAreas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLAreas(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLAreas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLAreas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLAreasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLAreasAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLAreasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLAreasOperationCompleted Is Nothing) Then
                Me.InsertarPLAreasOperationCompleted = AddressOf Me.OnInsertarPLAreasOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLAreas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLAreasCompleted(Me, New InsertarPLAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLAusentismo(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLAusentismo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLAusentismo(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLAusentismo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLAusentismo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLAusentismoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLAusentismoAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLAusentismoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLAusentismoOperationCompleted Is Nothing) Then
                Me.InsertarPLAusentismoOperationCompleted = AddressOf Me.OnInsertarPLAusentismoOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLAusentismo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLAusentismoCompleted(Me, New InsertarPLAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLCapacitaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLCapacitaciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLCapacitaciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLCapacitaciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLCapacitaciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLCapacitaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLCapacitacionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLCapacitacionesAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLCapacitacionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLCapacitacionesOperationCompleted Is Nothing) Then
                Me.InsertarPLCapacitacionesOperationCompleted = AddressOf Me.OnInsertarPLCapacitacionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLCapacitaciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLCapacitacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLCapacitacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLCapacitacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLCapacitacionesCompleted(Me, New InsertarPLCapacitacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLCargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLCargos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLCargos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLCargos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLCargos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLCargos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLCargosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLCargosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLCargosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLCargosOperationCompleted Is Nothing) Then
                Me.InsertarPLCargosOperationCompleted = AddressOf Me.OnInsertarPLCargosOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLCargos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLCargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLCargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLCargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLCargosCompleted(Me, New InsertarPLCargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLDepartamentos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLDepartamentos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLDepartamentos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLDepartamentos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLDepartamentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLDepartamentosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLDepartamentosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLDepartamentosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLDepartamentosOperationCompleted Is Nothing) Then
                Me.InsertarPLDepartamentosOperationCompleted = AddressOf Me.OnInsertarPLDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLDepartamentos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLDepartamentosCompleted(Me, New InsertarPLDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLDescuentos( _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CODEMPLEADO As String,  _
                    ByVal TIPODESC As String,  _
                    ByVal PLAZA As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal TIPOPLANILLA As Integer,  _
                    ByVal MONTOCUOTA As Double,  _
                    ByVal NOCUOTAS As Integer,  _
                    ByVal FECHAINICIO As Date,  _
                    ByVal REFERENCIA As String,  _
                    ByVal FECHAFIN As Date,  _
                    ByVal ESTADO As Char,  _
                    ByVal FIJO As Char,  _
                    ByVal APLICA As Char,  _
                    ByVal CUOTASPAGADAS As Integer,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PAGO As Char) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLDescuentos", New Object() {pUsuario, pPassword, pSucursal, CODEMPLEADO, TIPODESC, PLAZA, MONTO, SALDO, TIPOPLANILLA, MONTOCUOTA, NOCUOTAS, FECHAINICIO, REFERENCIA, FECHAFIN, ESTADO, FIJO, APLICA, CUOTASPAGADAS, OBSERVACION, PAGO})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLDescuentos( _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CODEMPLEADO As String,  _
                    ByVal TIPODESC As String,  _
                    ByVal PLAZA As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal TIPOPLANILLA As Integer,  _
                    ByVal MONTOCUOTA As Double,  _
                    ByVal NOCUOTAS As Integer,  _
                    ByVal FECHAINICIO As Date,  _
                    ByVal REFERENCIA As String,  _
                    ByVal FECHAFIN As Date,  _
                    ByVal ESTADO As Char,  _
                    ByVal FIJO As Char,  _
                    ByVal APLICA As Char,  _
                    ByVal CUOTASPAGADAS As Integer,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PAGO As Char,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLDescuentos", New Object() {pUsuario, pPassword, pSucursal, CODEMPLEADO, TIPODESC, PLAZA, MONTO, SALDO, TIPOPLANILLA, MONTOCUOTA, NOCUOTAS, FECHAINICIO, REFERENCIA, FECHAFIN, ESTADO, FIJO, APLICA, CUOTASPAGADAS, OBSERVACION, PAGO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLDescuentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLDescuentosAsync( _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CODEMPLEADO As String,  _
                    ByVal TIPODESC As String,  _
                    ByVal PLAZA As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal TIPOPLANILLA As Integer,  _
                    ByVal MONTOCUOTA As Double,  _
                    ByVal NOCUOTAS As Integer,  _
                    ByVal FECHAINICIO As Date,  _
                    ByVal REFERENCIA As String,  _
                    ByVal FECHAFIN As Date,  _
                    ByVal ESTADO As Char,  _
                    ByVal FIJO As Char,  _
                    ByVal APLICA As Char,  _
                    ByVal CUOTASPAGADAS As Integer,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PAGO As Char)
            Me.InsertarPLDescuentosAsync(pUsuario, pPassword, pSucursal, CODEMPLEADO, TIPODESC, PLAZA, MONTO, SALDO, TIPOPLANILLA, MONTOCUOTA, NOCUOTAS, FECHAINICIO, REFERENCIA, FECHAFIN, ESTADO, FIJO, APLICA, CUOTASPAGADAS, OBSERVACION, PAGO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLDescuentosAsync( _
                    ByVal pUsuario As String,  _
                    ByVal pPassword As String,  _
                    ByVal pSucursal As String,  _
                    ByVal CODEMPLEADO As String,  _
                    ByVal TIPODESC As String,  _
                    ByVal PLAZA As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal TIPOPLANILLA As Integer,  _
                    ByVal MONTOCUOTA As Double,  _
                    ByVal NOCUOTAS As Integer,  _
                    ByVal FECHAINICIO As Date,  _
                    ByVal REFERENCIA As String,  _
                    ByVal FECHAFIN As Date,  _
                    ByVal ESTADO As Char,  _
                    ByVal FIJO As Char,  _
                    ByVal APLICA As Char,  _
                    ByVal CUOTASPAGADAS As Integer,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PAGO As Char,  _
                    ByVal userState As Object)
            If (Me.InsertarPLDescuentosOperationCompleted Is Nothing) Then
                Me.InsertarPLDescuentosOperationCompleted = AddressOf Me.OnInsertarPLDescuentosOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLDescuentos", New Object() {pUsuario, pPassword, pSucursal, CODEMPLEADO, TIPODESC, PLAZA, MONTO, SALDO, TIPOPLANILLA, MONTOCUOTA, NOCUOTAS, FECHAINICIO, REFERENCIA, FECHAFIN, ESTADO, FIJO, APLICA, CUOTASPAGADAS, OBSERVACION, PAGO}, Me.InsertarPLDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLDescuentosCompleted(Me, New InsertarPLDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLDescuentosISSS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLDescuentosISSS(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLDescuentosISSS", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLDescuentosISSS(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLDescuentosISSS", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLDescuentosISSS(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLDescuentosISSSAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLDescuentosISSSAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLDescuentosISSSAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLDescuentosISSSOperationCompleted Is Nothing) Then
                Me.InsertarPLDescuentosISSSOperationCompleted = AddressOf Me.OnInsertarPLDescuentosISSSOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLDescuentosISSS", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLDescuentosISSSOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLDescuentosISSSOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLDescuentosISSSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLDescuentosISSSCompleted(Me, New InsertarPLDescuentosISSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLDescuentosRenta", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLDescuentosRenta(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLDescuentosRenta", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLDescuentosRenta(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLDescuentosRenta", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLDescuentosRenta(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLDescuentosRentaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLDescuentosRentaAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLDescuentosRentaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLDescuentosRentaOperationCompleted Is Nothing) Then
                Me.InsertarPLDescuentosRentaOperationCompleted = AddressOf Me.OnInsertarPLDescuentosRentaOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLDescuentosRenta", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLDescuentosRentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLDescuentosRentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLDescuentosRentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLDescuentosRentaCompleted(Me, New InsertarPLDescuentosRentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLEmpleado", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLEmpleado(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLEmpleado", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLEmpleado(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLEmpleado", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLEmpleado(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLEmpleadoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLEmpleadoAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLEmpleadoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLEmpleadoOperationCompleted Is Nothing) Then
                Me.InsertarPLEmpleadoOperationCompleted = AddressOf Me.OnInsertarPLEmpleadoOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLEmpleado", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLEmpleadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLEmpleadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLEmpleadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLEmpleadoCompleted(Me, New InsertarPLEmpleadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLGradoAcademico", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLGradoAcademico(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLGradoAcademico", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLGradoAcademico(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLGradoAcademico", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLGradoAcademico(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLGradoAcademicoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLGradoAcademicoAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLGradoAcademicoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLGradoAcademicoOperationCompleted Is Nothing) Then
                Me.InsertarPLGradoAcademicoOperationCompleted = AddressOf Me.OnInsertarPLGradoAcademicoOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLGradoAcademico", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLGradoAcademicoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLGradoAcademicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLGradoAcademicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLGradoAcademicoCompleted(Me, New InsertarPLGradoAcademicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLHorasExtras", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLHorasExtras(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLHorasExtras", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLHorasExtras(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLHorasExtras", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLHorasExtras(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLHorasExtrasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLHorasExtrasAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLHorasExtrasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLHorasExtrasOperationCompleted Is Nothing) Then
                Me.InsertarPLHorasExtrasOperationCompleted = AddressOf Me.OnInsertarPLHorasExtrasOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLHorasExtras", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLHorasExtrasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLHorasExtrasOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLHorasExtrasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLHorasExtrasCompleted(Me, New InsertarPLHorasExtrasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLIngresos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLIngresos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLIngresos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLIngresos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLIngresosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLIngresosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLIngresosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLIngresosOperationCompleted Is Nothing) Then
                Me.InsertarPLIngresosOperationCompleted = AddressOf Me.OnInsertarPLIngresosOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLIngresos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLIngresosCompleted(Me, New InsertarPLIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLInstituciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLInstituciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLInstituciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLInstituciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLInstituciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLInstituciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLInstitucionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLInstitucionesAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLInstitucionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLInstitucionesOperationCompleted Is Nothing) Then
                Me.InsertarPLInstitucionesOperationCompleted = AddressOf Me.OnInsertarPLInstitucionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLInstituciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLInstitucionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLInstitucionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLInstitucionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLInstitucionesCompleted(Me, New InsertarPLInstitucionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLMotivoAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLMotivoAusentismo(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLMotivoAusentismo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLMotivoAusentismo(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLMotivoAusentismo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLMotivoAusentismo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLMotivoAusentismoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLMotivoAusentismoAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLMotivoAusentismoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLMotivoAusentismoOperationCompleted Is Nothing) Then
                Me.InsertarPLMotivoAusentismoOperationCompleted = AddressOf Me.OnInsertarPLMotivoAusentismoOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLMotivoAusentismo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLMotivoAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLMotivoAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLMotivoAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLMotivoAusentismoCompleted(Me, New InsertarPLMotivoAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLMotivoRetiro", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLMotivoRetiro(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLMotivoRetiro", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLMotivoRetiro(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLMotivoRetiro", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLMotivoRetiro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLMotivoRetiroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLMotivoRetiroAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLMotivoRetiroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLMotivoRetiroOperationCompleted Is Nothing) Then
                Me.InsertarPLMotivoRetiroOperationCompleted = AddressOf Me.OnInsertarPLMotivoRetiroOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLMotivoRetiro", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLMotivoRetiroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLMotivoRetiroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLMotivoRetiroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLMotivoRetiroCompleted(Me, New InsertarPLMotivoRetiroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLPensiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLPensiones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLPensiones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLPensiones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLPensiones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLPensiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLPensionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLPensionesAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLPensionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLPensionesOperationCompleted Is Nothing) Then
                Me.InsertarPLPensionesOperationCompleted = AddressOf Me.OnInsertarPLPensionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLPensiones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLPensionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLPensionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLPensionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLPensionesCompleted(Me, New InsertarPLPensionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLPlazas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLPlazas(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLPlazas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLPlazas(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLPlazas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLPlazas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLPlazasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLPlazasAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLPlazasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLPlazasOperationCompleted Is Nothing) Then
                Me.InsertarPLPlazasOperationCompleted = AddressOf Me.OnInsertarPLPlazasOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLPlazas", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLPlazasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLPlazasOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLPlazasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLPlazasCompleted(Me, New InsertarPLPlazasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLTipoDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLTipoDescuentos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLTipoDescuentos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLTipoDescuentos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLTipoDescuentos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLTipoDescuentos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoDescuentosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLTipoDescuentosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoDescuentosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLTipoDescuentosOperationCompleted Is Nothing) Then
                Me.InsertarPLTipoDescuentosOperationCompleted = AddressOf Me.OnInsertarPLTipoDescuentosOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLTipoDescuentos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLTipoDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLTipoDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLTipoDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLTipoDescuentosCompleted(Me, New InsertarPLTipoDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLTipoHoraExtra", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLTipoHoraExtra(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLTipoHoraExtra", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLTipoHoraExtra(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLTipoHoraExtra", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLTipoHoraExtra(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoHoraExtraAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLTipoHoraExtraAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoHoraExtraAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLTipoHoraExtraOperationCompleted Is Nothing) Then
                Me.InsertarPLTipoHoraExtraOperationCompleted = AddressOf Me.OnInsertarPLTipoHoraExtraOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLTipoHoraExtra", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLTipoHoraExtraOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLTipoHoraExtraOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLTipoHoraExtraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLTipoHoraExtraCompleted(Me, New InsertarPLTipoHoraExtraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLTipoIngresos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLTipoIngresos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLTipoIngresos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLTipoIngresos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLTipoIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoIngresosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLTipoIngresosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoIngresosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLTipoIngresosOperationCompleted Is Nothing) Then
                Me.InsertarPLTipoIngresosOperationCompleted = AddressOf Me.OnInsertarPLTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLTipoIngresos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLTipoIngresosCompleted(Me, New InsertarPLTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLTipoPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLTipoPersonal(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLTipoPersonal", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLTipoPersonal(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLTipoPersonal", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLTipoPersonal(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoPersonalAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLTipoPersonalAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoPersonalAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLTipoPersonalOperationCompleted Is Nothing) Then
                Me.InsertarPLTipoPersonalOperationCompleted = AddressOf Me.OnInsertarPLTipoPersonalOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLTipoPersonal", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLTipoPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLTipoPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLTipoPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLTipoPersonalCompleted(Me, New InsertarPLTipoPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLTipoPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLTipoPlanilla(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLTipoPlanilla", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLTipoPlanilla(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLTipoPlanilla", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLTipoPlanilla(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoPlanillaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLTipoPlanillaAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLTipoPlanillaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLTipoPlanillaOperationCompleted Is Nothing) Then
                Me.InsertarPLTipoPlanillaOperationCompleted = AddressOf Me.OnInsertarPLTipoPlanillaOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLTipoPlanilla", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLTipoPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLTipoPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLTipoPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLTipoPlanillaCompleted(Me, New InsertarPLTipoPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InsertarPLVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPLVacaciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPLVacaciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPLVacaciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPLVacaciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPLVacaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPLVacacionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPLVacacionesAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPLVacacionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPLVacacionesOperationCompleted Is Nothing) Then
                Me.InsertarPLVacacionesOperationCompleted = AddressOf Me.OnInsertarPLVacacionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarPLVacaciones", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPLVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPLVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPLVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPLVacacionesCompleted(Me, New InsertarPLVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLAbonos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLAbonos(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLAbonos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLAbonos(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLAbonos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLAbonos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLAbonosAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLAbonosAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLAbonosAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLAbonosOperationCompleted Is Nothing) Then
                Me.ModificarPLAbonosOperationCompleted = AddressOf Me.OnModificarPLAbonosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLAbonos", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLAbonosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLAbonosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLAbonosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLAbonosCompleted(Me, New ModificarPLAbonosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLAcciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLAcciones(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLAcciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLAcciones(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLAcciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLAcciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLAccionesAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLAccionesAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLAccionesAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLAccionesOperationCompleted Is Nothing) Then
                Me.ModificarPLAccionesOperationCompleted = AddressOf Me.OnModificarPLAccionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLAcciones", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLAccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLAccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLAccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLAccionesCompleted(Me, New ModificarPLAccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPLAreas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPLAreas(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPLAreas", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPLAreas(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPLAreas", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPLAreas(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPLAreasAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPLAreasAsync(pCamposValores, pCodigo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPLAreasAsync(ByVal pCamposValores As String, ByVal pCodigo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPLAreasOperationCompleted Is Nothing) Then
                Me.ModificarPLAreasOperationCompleted = AddressOf Me.OnModificarPLAreasOperationCompleted
            End If
            Me.InvokeAsync("ModificarPLAreas", New Object() {pCamposValores, pCodigo, pUsuario, pPassword, pSucursal}, Me.ModificarPLAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPLAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPLAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPLAreasCompleted(Me, New ModificarPLAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Insertar_PlVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_PlVacaciones(ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal CodTipoPlanilla As Integer, ByVal PeriodoInicio As Date, ByVal PeriodoFin As Date, ByVal CodEmpleado As String, ByVal FechaIniPago As Date, ByVal FechaFinPago As Date, ByVal PrimaVacacion As Double, ByVal DiasVacacion As Double, ByVal TotalVacacion As Double, ByVal FechaActu As Date, ByVal Usuario As String) As Integer
            Dim results() As Object = Me.Invoke("Insertar_PlVacaciones", New Object() {FechaInicio_Vac, FechaFin_Vac, CodTipoPlanilla, PeriodoInicio, PeriodoFin, CodEmpleado, FechaIniPago, FechaFinPago, PrimaVacacion, DiasVacacion, TotalVacacion, FechaActu, Usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_PlVacaciones(ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal CodTipoPlanilla As Integer, ByVal PeriodoInicio As Date, ByVal PeriodoFin As Date, ByVal CodEmpleado As String, ByVal FechaIniPago As Date, ByVal FechaFinPago As Date, ByVal PrimaVacacion As Double, ByVal DiasVacacion As Double, ByVal TotalVacacion As Double, ByVal FechaActu As Date, ByVal Usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_PlVacaciones", New Object() {FechaInicio_Vac, FechaFin_Vac, CodTipoPlanilla, PeriodoInicio, PeriodoFin, CodEmpleado, FechaIniPago, FechaFinPago, PrimaVacacion, DiasVacacion, TotalVacacion, FechaActu, Usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_PlVacaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlVacacionesAsync(ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal CodTipoPlanilla As Integer, ByVal PeriodoInicio As Date, ByVal PeriodoFin As Date, ByVal CodEmpleado As String, ByVal FechaIniPago As Date, ByVal FechaFinPago As Date, ByVal PrimaVacacion As Double, ByVal DiasVacacion As Double, ByVal TotalVacacion As Double, ByVal FechaActu As Date, ByVal Usuario As String)
            Me.Insertar_PlVacacionesAsync(FechaInicio_Vac, FechaFin_Vac, CodTipoPlanilla, PeriodoInicio, PeriodoFin, CodEmpleado, FechaIniPago, FechaFinPago, PrimaVacacion, DiasVacacion, TotalVacacion, FechaActu, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlVacacionesAsync(ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal CodTipoPlanilla As Integer, ByVal PeriodoInicio As Date, ByVal PeriodoFin As Date, ByVal CodEmpleado As String, ByVal FechaIniPago As Date, ByVal FechaFinPago As Date, ByVal PrimaVacacion As Double, ByVal DiasVacacion As Double, ByVal TotalVacacion As Double, ByVal FechaActu As Date, ByVal Usuario As String, ByVal userState As Object)
            If (Me.Insertar_PlVacacionesOperationCompleted Is Nothing) Then
                Me.Insertar_PlVacacionesOperationCompleted = AddressOf Me.OnInsertar_PlVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Insertar_PlVacaciones", New Object() {FechaInicio_Vac, FechaFin_Vac, CodTipoPlanilla, PeriodoInicio, PeriodoFin, CodEmpleado, FechaIniPago, FechaFinPago, PrimaVacacion, DiasVacacion, TotalVacacion, FechaActu, Usuario}, Me.Insertar_PlVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_PlVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_PlVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_PlVacacionesCompleted(Me, New Insertar_PlVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Modificar_PlVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Modificar_PlVacaciones(ByVal Correlativo As Integer, ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal CodTipoPlanilla As Integer, ByVal PeriodoInicio As Date, ByVal PeriodoFin As Date, ByVal CodEmpleado As String, ByVal FechaIniPago As Date, ByVal FechaFinPago As Date, ByVal PrimaVacacion As Double, ByVal DiasVacacion As Double, ByVal TotalVacacion As Double, ByVal FechaActu As Date, ByVal Usuario As String) As Integer
            Dim results() As Object = Me.Invoke("Modificar_PlVacaciones", New Object() {Correlativo, FechaInicio_Vac, FechaFin_Vac, CodTipoPlanilla, PeriodoInicio, PeriodoFin, CodEmpleado, FechaIniPago, FechaFinPago, PrimaVacacion, DiasVacacion, TotalVacacion, FechaActu, Usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificar_PlVacaciones( _
                    ByVal Correlativo As Integer,  _
                    ByVal FechaInicio_Vac As Date,  _
                    ByVal FechaFin_Vac As Date,  _
                    ByVal CodTipoPlanilla As Integer,  _
                    ByVal PeriodoInicio As Date,  _
                    ByVal PeriodoFin As Date,  _
                    ByVal CodEmpleado As String,  _
                    ByVal FechaIniPago As Date,  _
                    ByVal FechaFinPago As Date,  _
                    ByVal PrimaVacacion As Double,  _
                    ByVal DiasVacacion As Double,  _
                    ByVal TotalVacacion As Double,  _
                    ByVal FechaActu As Date,  _
                    ByVal Usuario As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Modificar_PlVacaciones", New Object() {Correlativo, FechaInicio_Vac, FechaFin_Vac, CodTipoPlanilla, PeriodoInicio, PeriodoFin, CodEmpleado, FechaIniPago, FechaFinPago, PrimaVacacion, DiasVacacion, TotalVacacion, FechaActu, Usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificar_PlVacaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlVacacionesAsync(ByVal Correlativo As Integer, ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal CodTipoPlanilla As Integer, ByVal PeriodoInicio As Date, ByVal PeriodoFin As Date, ByVal CodEmpleado As String, ByVal FechaIniPago As Date, ByVal FechaFinPago As Date, ByVal PrimaVacacion As Double, ByVal DiasVacacion As Double, ByVal TotalVacacion As Double, ByVal FechaActu As Date, ByVal Usuario As String)
            Me.Modificar_PlVacacionesAsync(Correlativo, FechaInicio_Vac, FechaFin_Vac, CodTipoPlanilla, PeriodoInicio, PeriodoFin, CodEmpleado, FechaIniPago, FechaFinPago, PrimaVacacion, DiasVacacion, TotalVacacion, FechaActu, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlVacacionesAsync(ByVal Correlativo As Integer, ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal CodTipoPlanilla As Integer, ByVal PeriodoInicio As Date, ByVal PeriodoFin As Date, ByVal CodEmpleado As String, ByVal FechaIniPago As Date, ByVal FechaFinPago As Date, ByVal PrimaVacacion As Double, ByVal DiasVacacion As Double, ByVal TotalVacacion As Double, ByVal FechaActu As Date, ByVal Usuario As String, ByVal userState As Object)
            If (Me.Modificar_PlVacacionesOperationCompleted Is Nothing) Then
                Me.Modificar_PlVacacionesOperationCompleted = AddressOf Me.OnModificar_PlVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Modificar_PlVacaciones", New Object() {Correlativo, FechaInicio_Vac, FechaFin_Vac, CodTipoPlanilla, PeriodoInicio, PeriodoFin, CodEmpleado, FechaIniPago, FechaFinPago, PrimaVacacion, DiasVacacion, TotalVacacion, FechaActu, Usuario}, Me.Modificar_PlVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificar_PlVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Modificar_PlVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Modificar_PlVacacionesCompleted(Me, New Modificar_PlVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Eliminar_PlVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_PlVacaciones(ByVal Correlativo As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_PlVacaciones", New Object() {Correlativo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_PlVacaciones(ByVal Correlativo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_PlVacaciones", New Object() {Correlativo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_PlVacaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlVacacionesAsync(ByVal Correlativo As Integer)
            Me.Eliminar_PlVacacionesAsync(Correlativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlVacacionesAsync(ByVal Correlativo As Integer, ByVal userState As Object)
            If (Me.Eliminar_PlVacacionesOperationCompleted Is Nothing) Then
                Me.Eliminar_PlVacacionesOperationCompleted = AddressOf Me.OnEliminar_PlVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_PlVacaciones", New Object() {Correlativo}, Me.Eliminar_PlVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_PlVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_PlVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_PlVacacionesCompleted(Me, New Eliminar_PlVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlVacaciones(ByVal Opcion As Integer, ByVal CodEmpleado As String, ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlVacaciones", New Object() {Opcion, CodEmpleado, FechaInicio_Vac, FechaFin_Vac})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlVacaciones(ByVal Opcion As Integer, ByVal CodEmpleado As String, ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlVacaciones", New Object() {Opcion, CodEmpleado, FechaInicio_Vac, FechaFin_Vac}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlVacaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlVacacionesAsync(ByVal Opcion As Integer, ByVal CodEmpleado As String, ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date)
            Me.Consultar_PlVacacionesAsync(Opcion, CodEmpleado, FechaInicio_Vac, FechaFin_Vac, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlVacacionesAsync(ByVal Opcion As Integer, ByVal CodEmpleado As String, ByVal FechaInicio_Vac As Date, ByVal FechaFin_Vac As Date, ByVal userState As Object)
            If (Me.Consultar_PlVacacionesOperationCompleted Is Nothing) Then
                Me.Consultar_PlVacacionesOperationCompleted = AddressOf Me.OnConsultar_PlVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlVacaciones", New Object() {Opcion, CodEmpleado, FechaInicio_Vac, FechaFin_Vac}, Me.Consultar_PlVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlVacacionesCompleted(Me, New Consultar_PlVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Calculo_Vacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Calculo_Vacaciones(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal CodEmpleado As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Calculo_Vacaciones", New Object() {Fecha_Inicio, Fecha_Fin, CodEmpleado})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCalculo_Vacaciones(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal CodEmpleado As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Calculo_Vacaciones", New Object() {Fecha_Inicio, Fecha_Fin, CodEmpleado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCalculo_Vacaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Calculo_VacacionesAsync(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal CodEmpleado As String)
            Me.Calculo_VacacionesAsync(Fecha_Inicio, Fecha_Fin, CodEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Calculo_VacacionesAsync(ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal CodEmpleado As String, ByVal userState As Object)
            If (Me.Calculo_VacacionesOperationCompleted Is Nothing) Then
                Me.Calculo_VacacionesOperationCompleted = AddressOf Me.OnCalculo_VacacionesOperationCompleted
            End If
            Me.InvokeAsync("Calculo_Vacaciones", New Object() {Fecha_Inicio, Fecha_Fin, CodEmpleado}, Me.Calculo_VacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalculo_VacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Calculo_VacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Calculo_VacacionesCompleted(Me, New Calculo_VacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Insertar_PlCalculoVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_PlCalculoVacaciones(ByVal Desde As Double, ByVal Hasta As Double, ByVal Prima As Double, ByVal Dias As Integer, ByVal FechaActu As Date, ByVal Usuario As String) As Integer
            Dim results() As Object = Me.Invoke("Insertar_PlCalculoVacaciones", New Object() {Desde, Hasta, Prima, Dias, FechaActu, Usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_PlCalculoVacaciones(ByVal Desde As Double, ByVal Hasta As Double, ByVal Prima As Double, ByVal Dias As Integer, ByVal FechaActu As Date, ByVal Usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_PlCalculoVacaciones", New Object() {Desde, Hasta, Prima, Dias, FechaActu, Usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_PlCalculoVacaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlCalculoVacacionesAsync(ByVal Desde As Double, ByVal Hasta As Double, ByVal Prima As Double, ByVal Dias As Integer, ByVal FechaActu As Date, ByVal Usuario As String)
            Me.Insertar_PlCalculoVacacionesAsync(Desde, Hasta, Prima, Dias, FechaActu, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlCalculoVacacionesAsync(ByVal Desde As Double, ByVal Hasta As Double, ByVal Prima As Double, ByVal Dias As Integer, ByVal FechaActu As Date, ByVal Usuario As String, ByVal userState As Object)
            If (Me.Insertar_PlCalculoVacacionesOperationCompleted Is Nothing) Then
                Me.Insertar_PlCalculoVacacionesOperationCompleted = AddressOf Me.OnInsertar_PlCalculoVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Insertar_PlCalculoVacaciones", New Object() {Desde, Hasta, Prima, Dias, FechaActu, Usuario}, Me.Insertar_PlCalculoVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_PlCalculoVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_PlCalculoVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_PlCalculoVacacionesCompleted(Me, New Insertar_PlCalculoVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Modificar_PlCalculoVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Modificar_PlCalculoVacaciones(ByVal Desde As Double, ByVal Hasta As Double, ByVal Prima As Double, ByVal Dias As Integer, ByVal FechaActu As Date, ByVal Usuario As String, ByVal Id_Vac As Integer) As Integer
            Dim results() As Object = Me.Invoke("Modificar_PlCalculoVacaciones", New Object() {Desde, Hasta, Prima, Dias, FechaActu, Usuario, Id_Vac})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificar_PlCalculoVacaciones(ByVal Desde As Double, ByVal Hasta As Double, ByVal Prima As Double, ByVal Dias As Integer, ByVal FechaActu As Date, ByVal Usuario As String, ByVal Id_Vac As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Modificar_PlCalculoVacaciones", New Object() {Desde, Hasta, Prima, Dias, FechaActu, Usuario, Id_Vac}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificar_PlCalculoVacaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlCalculoVacacionesAsync(ByVal Desde As Double, ByVal Hasta As Double, ByVal Prima As Double, ByVal Dias As Integer, ByVal FechaActu As Date, ByVal Usuario As String, ByVal Id_Vac As Integer)
            Me.Modificar_PlCalculoVacacionesAsync(Desde, Hasta, Prima, Dias, FechaActu, Usuario, Id_Vac, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlCalculoVacacionesAsync(ByVal Desde As Double, ByVal Hasta As Double, ByVal Prima As Double, ByVal Dias As Integer, ByVal FechaActu As Date, ByVal Usuario As String, ByVal Id_Vac As Integer, ByVal userState As Object)
            If (Me.Modificar_PlCalculoVacacionesOperationCompleted Is Nothing) Then
                Me.Modificar_PlCalculoVacacionesOperationCompleted = AddressOf Me.OnModificar_PlCalculoVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Modificar_PlCalculoVacaciones", New Object() {Desde, Hasta, Prima, Dias, FechaActu, Usuario, Id_Vac}, Me.Modificar_PlCalculoVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificar_PlCalculoVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Modificar_PlCalculoVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Modificar_PlCalculoVacacionesCompleted(Me, New Modificar_PlCalculoVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Eliminar_PlCalculoVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_PlCalculoVacaciones(ByVal Id_Vac As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_PlCalculoVacaciones", New Object() {Id_Vac})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_PlCalculoVacaciones(ByVal Id_Vac As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_PlCalculoVacaciones", New Object() {Id_Vac}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_PlCalculoVacaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlCalculoVacacionesAsync(ByVal Id_Vac As Integer)
            Me.Eliminar_PlCalculoVacacionesAsync(Id_Vac, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlCalculoVacacionesAsync(ByVal Id_Vac As Integer, ByVal userState As Object)
            If (Me.Eliminar_PlCalculoVacacionesOperationCompleted Is Nothing) Then
                Me.Eliminar_PlCalculoVacacionesOperationCompleted = AddressOf Me.OnEliminar_PlCalculoVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_PlCalculoVacaciones", New Object() {Id_Vac}, Me.Eliminar_PlCalculoVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_PlCalculoVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_PlCalculoVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_PlCalculoVacacionesCompleted(Me, New Eliminar_PlCalculoVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlCalculoVacaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlCalculoVacaciones() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlCalculoVacaciones", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlCalculoVacaciones(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlCalculoVacaciones", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlCalculoVacaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlCalculoVacacionesAsync()
            Me.Consultar_PlCalculoVacacionesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlCalculoVacacionesAsync(ByVal userState As Object)
            If (Me.Consultar_PlCalculoVacacionesOperationCompleted Is Nothing) Then
                Me.Consultar_PlCalculoVacacionesOperationCompleted = AddressOf Me.OnConsultar_PlCalculoVacacionesOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlCalculoVacaciones", New Object(-1) {}, Me.Consultar_PlCalculoVacacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlCalculoVacacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlCalculoVacacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlCalculoVacacionesCompleted(Me, New Consultar_PlCalculoVacacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/GuardarPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GuardarPlanilla(ByVal CodTipoPlanilla As Integer, ByVal FechaGeneracion As Date, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal Usuario As String) As Integer
            Dim results() As Object = Me.Invoke("GuardarPlanilla", New Object() {CodTipoPlanilla, FechaGeneracion, FechaInicio, FechaFin, Quincena, Usuario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginGuardarPlanilla(ByVal CodTipoPlanilla As Integer, ByVal FechaGeneracion As Date, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal Usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GuardarPlanilla", New Object() {CodTipoPlanilla, FechaGeneracion, FechaInicio, FechaFin, Quincena, Usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGuardarPlanilla(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GuardarPlanillaAsync(ByVal CodTipoPlanilla As Integer, ByVal FechaGeneracion As Date, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal Usuario As String)
            Me.GuardarPlanillaAsync(CodTipoPlanilla, FechaGeneracion, FechaInicio, FechaFin, Quincena, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GuardarPlanillaAsync(ByVal CodTipoPlanilla As Integer, ByVal FechaGeneracion As Date, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal Usuario As String, ByVal userState As Object)
            If (Me.GuardarPlanillaOperationCompleted Is Nothing) Then
                Me.GuardarPlanillaOperationCompleted = AddressOf Me.OnGuardarPlanillaOperationCompleted
            End If
            Me.InvokeAsync("GuardarPlanilla", New Object() {CodTipoPlanilla, FechaGeneracion, FechaInicio, FechaFin, Quincena, Usuario}, Me.GuardarPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGuardarPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GuardarPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GuardarPlanillaCompleted(Me, New GuardarPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Total_ComisionesGerenciales", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Total_ComisionesGerenciales(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal CodEjecutivo As String, ByVal Sucursal As String) As Double()
            Dim results() As Object = Me.Invoke("Total_ComisionesGerenciales", New Object() {FechaInicio, FechaFin, CodEjecutivo, Sucursal})
            Return CType(results(0),Double())
        End Function
        
        '''<remarks/>
        Public Function BeginTotal_ComisionesGerenciales(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal CodEjecutivo As String, ByVal Sucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Total_ComisionesGerenciales", New Object() {FechaInicio, FechaFin, CodEjecutivo, Sucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTotal_ComisionesGerenciales(ByVal asyncResult As System.IAsyncResult) As Double()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Double())
        End Function
        
        '''<remarks/>
        Public Overloads Sub Total_ComisionesGerencialesAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal CodEjecutivo As String, ByVal Sucursal As String)
            Me.Total_ComisionesGerencialesAsync(FechaInicio, FechaFin, CodEjecutivo, Sucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Total_ComisionesGerencialesAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal CodEjecutivo As String, ByVal Sucursal As String, ByVal userState As Object)
            If (Me.Total_ComisionesGerencialesOperationCompleted Is Nothing) Then
                Me.Total_ComisionesGerencialesOperationCompleted = AddressOf Me.OnTotal_ComisionesGerencialesOperationCompleted
            End If
            Me.InvokeAsync("Total_ComisionesGerenciales", New Object() {FechaInicio, FechaFin, CodEjecutivo, Sucursal}, Me.Total_ComisionesGerencialesOperationCompleted, userState)
        End Sub
        
        Private Sub OnTotal_ComisionesGerencialesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Total_ComisionesGerencialesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Total_ComisionesGerencialesCompleted(Me, New Total_ComisionesGerencialesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Total_Comision_Ejecutivo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Total_Comision_Ejecutivo(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal CodEjecutivo As String) As Double()
            Dim results() As Object = Me.Invoke("Total_Comision_Ejecutivo", New Object() {FechaInicio, FechaFin, CodEjecutivo})
            Return CType(results(0),Double())
        End Function
        
        '''<remarks/>
        Public Function BeginTotal_Comision_Ejecutivo(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal CodEjecutivo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Total_Comision_Ejecutivo", New Object() {FechaInicio, FechaFin, CodEjecutivo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTotal_Comision_Ejecutivo(ByVal asyncResult As System.IAsyncResult) As Double()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Double())
        End Function
        
        '''<remarks/>
        Public Overloads Sub Total_Comision_EjecutivoAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal CodEjecutivo As String)
            Me.Total_Comision_EjecutivoAsync(FechaInicio, FechaFin, CodEjecutivo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Total_Comision_EjecutivoAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal CodEjecutivo As String, ByVal userState As Object)
            If (Me.Total_Comision_EjecutivoOperationCompleted Is Nothing) Then
                Me.Total_Comision_EjecutivoOperationCompleted = AddressOf Me.OnTotal_Comision_EjecutivoOperationCompleted
            End If
            Me.InvokeAsync("Total_Comision_Ejecutivo", New Object() {FechaInicio, FechaFin, CodEjecutivo}, Me.Total_Comision_EjecutivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnTotal_Comision_EjecutivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Total_Comision_EjecutivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Total_Comision_EjecutivoCompleted(Me, New Total_Comision_EjecutivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_Sucursales", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_Sucursales() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_Sucursales", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_Sucursales(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_Sucursales", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_Sucursales(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_SucursalesAsync()
            Me.Consultar_SucursalesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_SucursalesAsync(ByVal userState As Object)
            If (Me.Consultar_SucursalesOperationCompleted Is Nothing) Then
                Me.Consultar_SucursalesOperationCompleted = AddressOf Me.OnConsultar_SucursalesOperationCompleted
            End If
            Me.InvokeAsync("Consultar_Sucursales", New Object(-1) {}, Me.Consultar_SucursalesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_SucursalesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_SucursalesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_SucursalesCompleted(Me, New Consultar_SucursalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Bonificacion_Anual", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Bonificacion_Anual(ByVal FechaInicio As Date, ByVal FechaFin As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Bonificacion_Anual", New Object() {FechaInicio, FechaFin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBonificacion_Anual(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Bonificacion_Anual", New Object() {FechaInicio, FechaFin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBonificacion_Anual(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Bonificacion_AnualAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date)
            Me.Bonificacion_AnualAsync(FechaInicio, FechaFin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Bonificacion_AnualAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal userState As Object)
            If (Me.Bonificacion_AnualOperationCompleted Is Nothing) Then
                Me.Bonificacion_AnualOperationCompleted = AddressOf Me.OnBonificacion_AnualOperationCompleted
            End If
            Me.InvokeAsync("Bonificacion_Anual", New Object() {FechaInicio, FechaFin}, Me.Bonificacion_AnualOperationCompleted, userState)
        End Sub
        
        Private Sub OnBonificacion_AnualOperationCompleted(ByVal arg As Object)
            If (Not (Me.Bonificacion_AnualCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Bonificacion_AnualCompleted(Me, New Bonificacion_AnualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Eliminar_PlDescuentosISSS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_PlDescuentosISSS(ByVal Id_ISSS As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_PlDescuentosISSS", New Object() {Id_ISSS})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_PlDescuentosISSS(ByVal Id_ISSS As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_PlDescuentosISSS", New Object() {Id_ISSS}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_PlDescuentosISSS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlDescuentosISSSAsync(ByVal Id_ISSS As Integer)
            Me.Eliminar_PlDescuentosISSSAsync(Id_ISSS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlDescuentosISSSAsync(ByVal Id_ISSS As Integer, ByVal userState As Object)
            If (Me.Eliminar_PlDescuentosISSSOperationCompleted Is Nothing) Then
                Me.Eliminar_PlDescuentosISSSOperationCompleted = AddressOf Me.OnEliminar_PlDescuentosISSSOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_PlDescuentosISSS", New Object() {Id_ISSS}, Me.Eliminar_PlDescuentosISSSOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_PlDescuentosISSSOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_PlDescuentosISSSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_PlDescuentosISSSCompleted(Me, New Eliminar_PlDescuentosISSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Modificar_PlDescuentosISSS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Modificar_PlDescuentosISSS(ByVal PorcentajeTrabajador As Double, ByVal PorcentajePatrono As Double, ByVal IVMTrabajador As Double, ByVal IVMPatrono As Double, ByVal MaximoSalario As Double, ByVal MaximoDescuento As Double, ByVal Id_ISSS As Integer) As Integer
            Dim results() As Object = Me.Invoke("Modificar_PlDescuentosISSS", New Object() {PorcentajeTrabajador, PorcentajePatrono, IVMTrabajador, IVMPatrono, MaximoSalario, MaximoDescuento, Id_ISSS})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificar_PlDescuentosISSS(ByVal PorcentajeTrabajador As Double, ByVal PorcentajePatrono As Double, ByVal IVMTrabajador As Double, ByVal IVMPatrono As Double, ByVal MaximoSalario As Double, ByVal MaximoDescuento As Double, ByVal Id_ISSS As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Modificar_PlDescuentosISSS", New Object() {PorcentajeTrabajador, PorcentajePatrono, IVMTrabajador, IVMPatrono, MaximoSalario, MaximoDescuento, Id_ISSS}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificar_PlDescuentosISSS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlDescuentosISSSAsync(ByVal PorcentajeTrabajador As Double, ByVal PorcentajePatrono As Double, ByVal IVMTrabajador As Double, ByVal IVMPatrono As Double, ByVal MaximoSalario As Double, ByVal MaximoDescuento As Double, ByVal Id_ISSS As Integer)
            Me.Modificar_PlDescuentosISSSAsync(PorcentajeTrabajador, PorcentajePatrono, IVMTrabajador, IVMPatrono, MaximoSalario, MaximoDescuento, Id_ISSS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlDescuentosISSSAsync(ByVal PorcentajeTrabajador As Double, ByVal PorcentajePatrono As Double, ByVal IVMTrabajador As Double, ByVal IVMPatrono As Double, ByVal MaximoSalario As Double, ByVal MaximoDescuento As Double, ByVal Id_ISSS As Integer, ByVal userState As Object)
            If (Me.Modificar_PlDescuentosISSSOperationCompleted Is Nothing) Then
                Me.Modificar_PlDescuentosISSSOperationCompleted = AddressOf Me.OnModificar_PlDescuentosISSSOperationCompleted
            End If
            Me.InvokeAsync("Modificar_PlDescuentosISSS", New Object() {PorcentajeTrabajador, PorcentajePatrono, IVMTrabajador, IVMPatrono, MaximoSalario, MaximoDescuento, Id_ISSS}, Me.Modificar_PlDescuentosISSSOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificar_PlDescuentosISSSOperationCompleted(ByVal arg As Object)
            If (Not (Me.Modificar_PlDescuentosISSSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Modificar_PlDescuentosISSSCompleted(Me, New Modificar_PlDescuentosISSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Insertar_PlDescuentosISSS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_PlDescuentosISSS(ByVal PorcentajeTrabajador As Double, ByVal PorcentajePatrono As Double, ByVal IVMTrabajador As Double, ByVal IVMPatrono As Double, ByVal MaximoSalario As Double, ByVal MaximoDescuento As Double) As Integer
            Dim results() As Object = Me.Invoke("Insertar_PlDescuentosISSS", New Object() {PorcentajeTrabajador, PorcentajePatrono, IVMTrabajador, IVMPatrono, MaximoSalario, MaximoDescuento})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_PlDescuentosISSS(ByVal PorcentajeTrabajador As Double, ByVal PorcentajePatrono As Double, ByVal IVMTrabajador As Double, ByVal IVMPatrono As Double, ByVal MaximoSalario As Double, ByVal MaximoDescuento As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_PlDescuentosISSS", New Object() {PorcentajeTrabajador, PorcentajePatrono, IVMTrabajador, IVMPatrono, MaximoSalario, MaximoDescuento}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_PlDescuentosISSS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlDescuentosISSSAsync(ByVal PorcentajeTrabajador As Double, ByVal PorcentajePatrono As Double, ByVal IVMTrabajador As Double, ByVal IVMPatrono As Double, ByVal MaximoSalario As Double, ByVal MaximoDescuento As Double)
            Me.Insertar_PlDescuentosISSSAsync(PorcentajeTrabajador, PorcentajePatrono, IVMTrabajador, IVMPatrono, MaximoSalario, MaximoDescuento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlDescuentosISSSAsync(ByVal PorcentajeTrabajador As Double, ByVal PorcentajePatrono As Double, ByVal IVMTrabajador As Double, ByVal IVMPatrono As Double, ByVal MaximoSalario As Double, ByVal MaximoDescuento As Double, ByVal userState As Object)
            If (Me.Insertar_PlDescuentosISSSOperationCompleted Is Nothing) Then
                Me.Insertar_PlDescuentosISSSOperationCompleted = AddressOf Me.OnInsertar_PlDescuentosISSSOperationCompleted
            End If
            Me.InvokeAsync("Insertar_PlDescuentosISSS", New Object() {PorcentajeTrabajador, PorcentajePatrono, IVMTrabajador, IVMPatrono, MaximoSalario, MaximoDescuento}, Me.Insertar_PlDescuentosISSSOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_PlDescuentosISSSOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_PlDescuentosISSSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_PlDescuentosISSSCompleted(Me, New Insertar_PlDescuentosISSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlDescuentosISSS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlDescuentosISSS(ByVal Opcion As Integer, ByVal Id_Isss As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlDescuentosISSS", New Object() {Opcion, Id_Isss})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlDescuentosISSS(ByVal Opcion As Integer, ByVal Id_Isss As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlDescuentosISSS", New Object() {Opcion, Id_Isss}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlDescuentosISSS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlDescuentosISSSAsync(ByVal Opcion As Integer, ByVal Id_Isss As Integer)
            Me.Consultar_PlDescuentosISSSAsync(Opcion, Id_Isss, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlDescuentosISSSAsync(ByVal Opcion As Integer, ByVal Id_Isss As Integer, ByVal userState As Object)
            If (Me.Consultar_PlDescuentosISSSOperationCompleted Is Nothing) Then
                Me.Consultar_PlDescuentosISSSOperationCompleted = AddressOf Me.OnConsultar_PlDescuentosISSSOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlDescuentosISSS", New Object() {Opcion, Id_Isss}, Me.Consultar_PlDescuentosISSSOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlDescuentosISSSOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlDescuentosISSSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlDescuentosISSSCompleted(Me, New Consultar_PlDescuentosISSSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Detalle_Ingresos_BoletaPagos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Detalle_Ingresos_BoletaPagos(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal CodEmpleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Detalle_Ingresos_BoletaPagos", New Object() {CodArea, CodDepartamento, CodEmpleado, FechaInicio, FechaFin, Opcion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginDetalle_Ingresos_BoletaPagos(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal CodEmpleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Detalle_Ingresos_BoletaPagos", New Object() {CodArea, CodDepartamento, CodEmpleado, FechaInicio, FechaFin, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDetalle_Ingresos_BoletaPagos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Detalle_Ingresos_BoletaPagosAsync(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal CodEmpleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer)
            Me.Detalle_Ingresos_BoletaPagosAsync(CodArea, CodDepartamento, CodEmpleado, FechaInicio, FechaFin, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Detalle_Ingresos_BoletaPagosAsync(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal CodEmpleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.Detalle_Ingresos_BoletaPagosOperationCompleted Is Nothing) Then
                Me.Detalle_Ingresos_BoletaPagosOperationCompleted = AddressOf Me.OnDetalle_Ingresos_BoletaPagosOperationCompleted
            End If
            Me.InvokeAsync("Detalle_Ingresos_BoletaPagos", New Object() {CodArea, CodDepartamento, CodEmpleado, FechaInicio, FechaFin, Opcion}, Me.Detalle_Ingresos_BoletaPagosOperationCompleted, userState)
        End Sub
        
        Private Sub OnDetalle_Ingresos_BoletaPagosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Detalle_Ingresos_BoletaPagosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Detalle_Ingresos_BoletaPagosCompleted(Me, New Detalle_Ingresos_BoletaPagosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Detalle_Descuentos_BoletaPagos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Detalle_Descuentos_BoletaPagos(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Codempleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Detalle_Descuentos_BoletaPagos", New Object() {CodArea, CodDepartamento, Codempleado, FechaInicio, FechaFin, Opcion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginDetalle_Descuentos_BoletaPagos(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Codempleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Detalle_Descuentos_BoletaPagos", New Object() {CodArea, CodDepartamento, Codempleado, FechaInicio, FechaFin, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDetalle_Descuentos_BoletaPagos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Detalle_Descuentos_BoletaPagosAsync(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Codempleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer)
            Me.Detalle_Descuentos_BoletaPagosAsync(CodArea, CodDepartamento, Codempleado, FechaInicio, FechaFin, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Detalle_Descuentos_BoletaPagosAsync(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Codempleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.Detalle_Descuentos_BoletaPagosOperationCompleted Is Nothing) Then
                Me.Detalle_Descuentos_BoletaPagosOperationCompleted = AddressOf Me.OnDetalle_Descuentos_BoletaPagosOperationCompleted
            End If
            Me.InvokeAsync("Detalle_Descuentos_BoletaPagos", New Object() {CodArea, CodDepartamento, Codempleado, FechaInicio, FechaFin, Opcion}, Me.Detalle_Descuentos_BoletaPagosOperationCompleted, userState)
        End Sub
        
        Private Sub OnDetalle_Descuentos_BoletaPagosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Detalle_Descuentos_BoletaPagosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Detalle_Descuentos_BoletaPagosCompleted(Me, New Detalle_Descuentos_BoletaPagosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPlEmpleados", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPlEmpleados(ByVal CodEmpleado As String, ByVal Nombres As String, ByVal Apellido1 As String, ByVal Apellido2 As String, ByVal Dui As String, ByVal Estado As String, ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPlEmpleados", New Object() {CodEmpleado, Nombres, Apellido1, Apellido2, Dui, Estado, Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPlEmpleados(ByVal CodEmpleado As String, ByVal Nombres As String, ByVal Apellido1 As String, ByVal Apellido2 As String, ByVal Dui As String, ByVal Estado As String, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPlEmpleados", New Object() {CodEmpleado, Nombres, Apellido1, Apellido2, Dui, Estado, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPlEmpleados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPlEmpleadosAsync(ByVal CodEmpleado As String, ByVal Nombres As String, ByVal Apellido1 As String, ByVal Apellido2 As String, ByVal Dui As String, ByVal Estado As String, ByVal Opcion As Integer)
            Me.ConsultarPlEmpleadosAsync(CodEmpleado, Nombres, Apellido1, Apellido2, Dui, Estado, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPlEmpleadosAsync(ByVal CodEmpleado As String, ByVal Nombres As String, ByVal Apellido1 As String, ByVal Apellido2 As String, ByVal Dui As String, ByVal Estado As String, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.ConsultarPlEmpleadosOperationCompleted Is Nothing) Then
                Me.ConsultarPlEmpleadosOperationCompleted = AddressOf Me.OnConsultarPlEmpleadosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPlEmpleados", New Object() {CodEmpleado, Nombres, Apellido1, Apellido2, Dui, Estado, Opcion}, Me.ConsultarPlEmpleadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPlEmpleadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPlEmpleadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPlEmpleadosCompleted(Me, New ConsultarPlEmpleadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EliminarPlEmpleados", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPlEmpleados(ByVal CodEmpleado As String) As Integer
            Dim results() As Object = Me.Invoke("EliminarPlEmpleados", New Object() {CodEmpleado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPlEmpleados(ByVal CodEmpleado As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPlEmpleados", New Object() {CodEmpleado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPlEmpleados(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPlEmpleadosAsync(ByVal CodEmpleado As String)
            Me.EliminarPlEmpleadosAsync(CodEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPlEmpleadosAsync(ByVal CodEmpleado As String, ByVal userState As Object)
            If (Me.EliminarPlEmpleadosOperationCompleted Is Nothing) Then
                Me.EliminarPlEmpleadosOperationCompleted = AddressOf Me.OnEliminarPlEmpleadosOperationCompleted
            End If
            Me.InvokeAsync("EliminarPlEmpleados", New Object() {CodEmpleado}, Me.EliminarPlEmpleadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPlEmpleadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPlEmpleadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPlEmpleadosCompleted(Me, New EliminarPlEmpleadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ModificarPlEmpleados", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPlEmpleados( _
                    ByVal CodEmpleado As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Nombres As String,  _
                    ByVal Sexo As Char,  _
                    ByVal FechaIngreso As Date,  _
                    ByVal EstadoCivil As Char,  _
                    ByVal CodCargo As String,  _
                    ByVal CodTipoPersonal As Integer,  _
                    ByVal FechaRetiro As Date,  _
                    ByVal FechaNac As Date,  _
                    ByVal LugarNac As String,  _
                    ByVal Dui As String,  _
                    ByVal FechaExtDui As Date,  _
                    ByVal LugarExtDui As String,  _
                    ByVal Nit As String,  _
                    ByVal Nip As String,  _
                    ByVal FormaPago As String,  _
                    ByVal CodInstitucion As String,  _
                    ByVal Nocuenta As String,  _
                    ByVal Isss As String,  _
                    ByVal Direccion As String,  _
                    ByVal Telefonos As String,  _
                    ByVal Celular As String,  _
                    ByVal Ap_Materno As String,  _
                    ByVal AP_Paterno As String,  _
                    ByVal Nombre_Isss As String,  _
                    ByVal CodPension As String,  _
                    ByVal NoAfp As String,  _
                    ByVal SeguroColectivo As Char,  _
                    ByVal Estado As Char,  _
                    ByVal CodRetiro As String,  _
                    ByVal GradoAcademico As String,  _
                    ByVal NumLicencia As String,  _
                    ByVal Pensionado As Char,  _
                    ByVal CodGraDO As String,  _
                    ByVal PoseeLic As Char,  _
                    ByVal Email As String) As Integer
            Dim results() As Object = Me.Invoke("ModificarPlEmpleados", New Object() {CodEmpleado, Apellido1, Apellido2, ApellidoCas, Nombres, Sexo, FechaIngreso, EstadoCivil, CodCargo, CodTipoPersonal, FechaRetiro, FechaNac, LugarNac, Dui, FechaExtDui, LugarExtDui, Nit, Nip, FormaPago, CodInstitucion, Nocuenta, Isss, Direccion, Telefonos, Celular, Ap_Materno, AP_Paterno, Nombre_Isss, CodPension, NoAfp, SeguroColectivo, Estado, CodRetiro, GradoAcademico, NumLicencia, Pensionado, CodGraDO, PoseeLic, Email})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPlEmpleados( _
                    ByVal CodEmpleado As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Nombres As String,  _
                    ByVal Sexo As Char,  _
                    ByVal FechaIngreso As Date,  _
                    ByVal EstadoCivil As Char,  _
                    ByVal CodCargo As String,  _
                    ByVal CodTipoPersonal As Integer,  _
                    ByVal FechaRetiro As Date,  _
                    ByVal FechaNac As Date,  _
                    ByVal LugarNac As String,  _
                    ByVal Dui As String,  _
                    ByVal FechaExtDui As Date,  _
                    ByVal LugarExtDui As String,  _
                    ByVal Nit As String,  _
                    ByVal Nip As String,  _
                    ByVal FormaPago As String,  _
                    ByVal CodInstitucion As String,  _
                    ByVal Nocuenta As String,  _
                    ByVal Isss As String,  _
                    ByVal Direccion As String,  _
                    ByVal Telefonos As String,  _
                    ByVal Celular As String,  _
                    ByVal Ap_Materno As String,  _
                    ByVal AP_Paterno As String,  _
                    ByVal Nombre_Isss As String,  _
                    ByVal CodPension As String,  _
                    ByVal NoAfp As String,  _
                    ByVal SeguroColectivo As Char,  _
                    ByVal Estado As Char,  _
                    ByVal CodRetiro As String,  _
                    ByVal GradoAcademico As String,  _
                    ByVal NumLicencia As String,  _
                    ByVal Pensionado As Char,  _
                    ByVal CodGraDO As String,  _
                    ByVal PoseeLic As Char,  _
                    ByVal Email As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPlEmpleados", New Object() {CodEmpleado, Apellido1, Apellido2, ApellidoCas, Nombres, Sexo, FechaIngreso, EstadoCivil, CodCargo, CodTipoPersonal, FechaRetiro, FechaNac, LugarNac, Dui, FechaExtDui, LugarExtDui, Nit, Nip, FormaPago, CodInstitucion, Nocuenta, Isss, Direccion, Telefonos, Celular, Ap_Materno, AP_Paterno, Nombre_Isss, CodPension, NoAfp, SeguroColectivo, Estado, CodRetiro, GradoAcademico, NumLicencia, Pensionado, CodGraDO, PoseeLic, Email}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPlEmpleados(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPlEmpleadosAsync( _
                    ByVal CodEmpleado As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Nombres As String,  _
                    ByVal Sexo As Char,  _
                    ByVal FechaIngreso As Date,  _
                    ByVal EstadoCivil As Char,  _
                    ByVal CodCargo As String,  _
                    ByVal CodTipoPersonal As Integer,  _
                    ByVal FechaRetiro As Date,  _
                    ByVal FechaNac As Date,  _
                    ByVal LugarNac As String,  _
                    ByVal Dui As String,  _
                    ByVal FechaExtDui As Date,  _
                    ByVal LugarExtDui As String,  _
                    ByVal Nit As String,  _
                    ByVal Nip As String,  _
                    ByVal FormaPago As String,  _
                    ByVal CodInstitucion As String,  _
                    ByVal Nocuenta As String,  _
                    ByVal Isss As String,  _
                    ByVal Direccion As String,  _
                    ByVal Telefonos As String,  _
                    ByVal Celular As String,  _
                    ByVal Ap_Materno As String,  _
                    ByVal AP_Paterno As String,  _
                    ByVal Nombre_Isss As String,  _
                    ByVal CodPension As String,  _
                    ByVal NoAfp As String,  _
                    ByVal SeguroColectivo As Char,  _
                    ByVal Estado As Char,  _
                    ByVal CodRetiro As String,  _
                    ByVal GradoAcademico As String,  _
                    ByVal NumLicencia As String,  _
                    ByVal Pensionado As Char,  _
                    ByVal CodGraDO As String,  _
                    ByVal PoseeLic As Char,  _
                    ByVal Email As String)
            Me.ModificarPlEmpleadosAsync(CodEmpleado, Apellido1, Apellido2, ApellidoCas, Nombres, Sexo, FechaIngreso, EstadoCivil, CodCargo, CodTipoPersonal, FechaRetiro, FechaNac, LugarNac, Dui, FechaExtDui, LugarExtDui, Nit, Nip, FormaPago, CodInstitucion, Nocuenta, Isss, Direccion, Telefonos, Celular, Ap_Materno, AP_Paterno, Nombre_Isss, CodPension, NoAfp, SeguroColectivo, Estado, CodRetiro, GradoAcademico, NumLicencia, Pensionado, CodGraDO, PoseeLic, Email, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPlEmpleadosAsync( _
                    ByVal CodEmpleado As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Nombres As String,  _
                    ByVal Sexo As Char,  _
                    ByVal FechaIngreso As Date,  _
                    ByVal EstadoCivil As Char,  _
                    ByVal CodCargo As String,  _
                    ByVal CodTipoPersonal As Integer,  _
                    ByVal FechaRetiro As Date,  _
                    ByVal FechaNac As Date,  _
                    ByVal LugarNac As String,  _
                    ByVal Dui As String,  _
                    ByVal FechaExtDui As Date,  _
                    ByVal LugarExtDui As String,  _
                    ByVal Nit As String,  _
                    ByVal Nip As String,  _
                    ByVal FormaPago As String,  _
                    ByVal CodInstitucion As String,  _
                    ByVal Nocuenta As String,  _
                    ByVal Isss As String,  _
                    ByVal Direccion As String,  _
                    ByVal Telefonos As String,  _
                    ByVal Celular As String,  _
                    ByVal Ap_Materno As String,  _
                    ByVal AP_Paterno As String,  _
                    ByVal Nombre_Isss As String,  _
                    ByVal CodPension As String,  _
                    ByVal NoAfp As String,  _
                    ByVal SeguroColectivo As Char,  _
                    ByVal Estado As Char,  _
                    ByVal CodRetiro As String,  _
                    ByVal GradoAcademico As String,  _
                    ByVal NumLicencia As String,  _
                    ByVal Pensionado As Char,  _
                    ByVal CodGraDO As String,  _
                    ByVal PoseeLic As Char,  _
                    ByVal Email As String,  _
                    ByVal userState As Object)
            If (Me.ModificarPlEmpleadosOperationCompleted Is Nothing) Then
                Me.ModificarPlEmpleadosOperationCompleted = AddressOf Me.OnModificarPlEmpleadosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPlEmpleados", New Object() {CodEmpleado, Apellido1, Apellido2, ApellidoCas, Nombres, Sexo, FechaIngreso, EstadoCivil, CodCargo, CodTipoPersonal, FechaRetiro, FechaNac, LugarNac, Dui, FechaExtDui, LugarExtDui, Nit, Nip, FormaPago, CodInstitucion, Nocuenta, Isss, Direccion, Telefonos, Celular, Ap_Materno, AP_Paterno, Nombre_Isss, CodPension, NoAfp, SeguroColectivo, Estado, CodRetiro, GradoAcademico, NumLicencia, Pensionado, CodGraDO, PoseeLic, Email}, Me.ModificarPlEmpleadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPlEmpleadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPlEmpleadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPlEmpleadosCompleted(Me, New ModificarPlEmpleadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/IngresarPlEmpleados", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IngresarPlEmpleados( _
                    ByVal CodEmpleado As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Nombres As String,  _
                    ByVal Sexo As Char,  _
                    ByVal FechaIngreso As Date,  _
                    ByVal EstadoCivil As Char,  _
                    ByVal CodCargo As String,  _
                    ByVal CodTipoPersonal As Integer,  _
                    ByVal FechaRetiro As Date,  _
                    ByVal FechaNac As Date,  _
                    ByVal LugarNac As String,  _
                    ByVal Dui As String,  _
                    ByVal FechaExtDui As Date,  _
                    ByVal LugarExtDui As String,  _
                    ByVal Nit As String,  _
                    ByVal Nip As String,  _
                    ByVal FormaPago As String,  _
                    ByVal CodInstitucion As String,  _
                    ByVal Nocuenta As String,  _
                    ByVal Isss As String,  _
                    ByVal Direccion As String,  _
                    ByVal Telefonos As String,  _
                    ByVal Celular As String,  _
                    ByVal Ap_Materno As String,  _
                    ByVal AP_Paterno As String,  _
                    ByVal Nombre_Isss As String,  _
                    ByVal CodPension As String,  _
                    ByVal NoAfp As String,  _
                    ByVal SeguroColectivo As Char,  _
                    ByVal Estado As Char,  _
                    ByVal CodRetiro As String,  _
                    ByVal GradoAcademico As String,  _
                    ByVal NumLicencia As String,  _
                    ByVal Pensionado As Char,  _
                    ByVal CodGraDO As String,  _
                    ByVal PoseeLic As Char,  _
                    ByVal Email As String) As Integer
            Dim results() As Object = Me.Invoke("IngresarPlEmpleados", New Object() {CodEmpleado, Apellido1, Apellido2, ApellidoCas, Nombres, Sexo, FechaIngreso, EstadoCivil, CodCargo, CodTipoPersonal, FechaRetiro, FechaNac, LugarNac, Dui, FechaExtDui, LugarExtDui, Nit, Nip, FormaPago, CodInstitucion, Nocuenta, Isss, Direccion, Telefonos, Celular, Ap_Materno, AP_Paterno, Nombre_Isss, CodPension, NoAfp, SeguroColectivo, Estado, CodRetiro, GradoAcademico, NumLicencia, Pensionado, CodGraDO, PoseeLic, Email})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginIngresarPlEmpleados( _
                    ByVal CodEmpleado As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Nombres As String,  _
                    ByVal Sexo As Char,  _
                    ByVal FechaIngreso As Date,  _
                    ByVal EstadoCivil As Char,  _
                    ByVal CodCargo As String,  _
                    ByVal CodTipoPersonal As Integer,  _
                    ByVal FechaRetiro As Date,  _
                    ByVal FechaNac As Date,  _
                    ByVal LugarNac As String,  _
                    ByVal Dui As String,  _
                    ByVal FechaExtDui As Date,  _
                    ByVal LugarExtDui As String,  _
                    ByVal Nit As String,  _
                    ByVal Nip As String,  _
                    ByVal FormaPago As String,  _
                    ByVal CodInstitucion As String,  _
                    ByVal Nocuenta As String,  _
                    ByVal Isss As String,  _
                    ByVal Direccion As String,  _
                    ByVal Telefonos As String,  _
                    ByVal Celular As String,  _
                    ByVal Ap_Materno As String,  _
                    ByVal AP_Paterno As String,  _
                    ByVal Nombre_Isss As String,  _
                    ByVal CodPension As String,  _
                    ByVal NoAfp As String,  _
                    ByVal SeguroColectivo As Char,  _
                    ByVal Estado As Char,  _
                    ByVal CodRetiro As String,  _
                    ByVal GradoAcademico As String,  _
                    ByVal NumLicencia As String,  _
                    ByVal Pensionado As Char,  _
                    ByVal CodGraDO As String,  _
                    ByVal PoseeLic As Char,  _
                    ByVal Email As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IngresarPlEmpleados", New Object() {CodEmpleado, Apellido1, Apellido2, ApellidoCas, Nombres, Sexo, FechaIngreso, EstadoCivil, CodCargo, CodTipoPersonal, FechaRetiro, FechaNac, LugarNac, Dui, FechaExtDui, LugarExtDui, Nit, Nip, FormaPago, CodInstitucion, Nocuenta, Isss, Direccion, Telefonos, Celular, Ap_Materno, AP_Paterno, Nombre_Isss, CodPension, NoAfp, SeguroColectivo, Estado, CodRetiro, GradoAcademico, NumLicencia, Pensionado, CodGraDO, PoseeLic, Email}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndIngresarPlEmpleados(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IngresarPlEmpleadosAsync( _
                    ByVal CodEmpleado As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Nombres As String,  _
                    ByVal Sexo As Char,  _
                    ByVal FechaIngreso As Date,  _
                    ByVal EstadoCivil As Char,  _
                    ByVal CodCargo As String,  _
                    ByVal CodTipoPersonal As Integer,  _
                    ByVal FechaRetiro As Date,  _
                    ByVal FechaNac As Date,  _
                    ByVal LugarNac As String,  _
                    ByVal Dui As String,  _
                    ByVal FechaExtDui As Date,  _
                    ByVal LugarExtDui As String,  _
                    ByVal Nit As String,  _
                    ByVal Nip As String,  _
                    ByVal FormaPago As String,  _
                    ByVal CodInstitucion As String,  _
                    ByVal Nocuenta As String,  _
                    ByVal Isss As String,  _
                    ByVal Direccion As String,  _
                    ByVal Telefonos As String,  _
                    ByVal Celular As String,  _
                    ByVal Ap_Materno As String,  _
                    ByVal AP_Paterno As String,  _
                    ByVal Nombre_Isss As String,  _
                    ByVal CodPension As String,  _
                    ByVal NoAfp As String,  _
                    ByVal SeguroColectivo As Char,  _
                    ByVal Estado As Char,  _
                    ByVal CodRetiro As String,  _
                    ByVal GradoAcademico As String,  _
                    ByVal NumLicencia As String,  _
                    ByVal Pensionado As Char,  _
                    ByVal CodGraDO As String,  _
                    ByVal PoseeLic As Char,  _
                    ByVal Email As String)
            Me.IngresarPlEmpleadosAsync(CodEmpleado, Apellido1, Apellido2, ApellidoCas, Nombres, Sexo, FechaIngreso, EstadoCivil, CodCargo, CodTipoPersonal, FechaRetiro, FechaNac, LugarNac, Dui, FechaExtDui, LugarExtDui, Nit, Nip, FormaPago, CodInstitucion, Nocuenta, Isss, Direccion, Telefonos, Celular, Ap_Materno, AP_Paterno, Nombre_Isss, CodPension, NoAfp, SeguroColectivo, Estado, CodRetiro, GradoAcademico, NumLicencia, Pensionado, CodGraDO, PoseeLic, Email, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IngresarPlEmpleadosAsync( _
                    ByVal CodEmpleado As String,  _
                    ByVal Apellido1 As String,  _
                    ByVal Apellido2 As String,  _
                    ByVal ApellidoCas As String,  _
                    ByVal Nombres As String,  _
                    ByVal Sexo As Char,  _
                    ByVal FechaIngreso As Date,  _
                    ByVal EstadoCivil As Char,  _
                    ByVal CodCargo As String,  _
                    ByVal CodTipoPersonal As Integer,  _
                    ByVal FechaRetiro As Date,  _
                    ByVal FechaNac As Date,  _
                    ByVal LugarNac As String,  _
                    ByVal Dui As String,  _
                    ByVal FechaExtDui As Date,  _
                    ByVal LugarExtDui As String,  _
                    ByVal Nit As String,  _
                    ByVal Nip As String,  _
                    ByVal FormaPago As String,  _
                    ByVal CodInstitucion As String,  _
                    ByVal Nocuenta As String,  _
                    ByVal Isss As String,  _
                    ByVal Direccion As String,  _
                    ByVal Telefonos As String,  _
                    ByVal Celular As String,  _
                    ByVal Ap_Materno As String,  _
                    ByVal AP_Paterno As String,  _
                    ByVal Nombre_Isss As String,  _
                    ByVal CodPension As String,  _
                    ByVal NoAfp As String,  _
                    ByVal SeguroColectivo As Char,  _
                    ByVal Estado As Char,  _
                    ByVal CodRetiro As String,  _
                    ByVal GradoAcademico As String,  _
                    ByVal NumLicencia As String,  _
                    ByVal Pensionado As Char,  _
                    ByVal CodGraDO As String,  _
                    ByVal PoseeLic As Char,  _
                    ByVal Email As String,  _
                    ByVal userState As Object)
            If (Me.IngresarPlEmpleadosOperationCompleted Is Nothing) Then
                Me.IngresarPlEmpleadosOperationCompleted = AddressOf Me.OnIngresarPlEmpleadosOperationCompleted
            End If
            Me.InvokeAsync("IngresarPlEmpleados", New Object() {CodEmpleado, Apellido1, Apellido2, ApellidoCas, Nombres, Sexo, FechaIngreso, EstadoCivil, CodCargo, CodTipoPersonal, FechaRetiro, FechaNac, LugarNac, Dui, FechaExtDui, LugarExtDui, Nit, Nip, FormaPago, CodInstitucion, Nocuenta, Isss, Direccion, Telefonos, Celular, Ap_Materno, AP_Paterno, Nombre_Isss, CodPension, NoAfp, SeguroColectivo, Estado, CodRetiro, GradoAcademico, NumLicencia, Pensionado, CodGraDO, PoseeLic, Email}, Me.IngresarPlEmpleadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnIngresarPlEmpleadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.IngresarPlEmpleadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IngresarPlEmpleadosCompleted(Me, New IngresarPlEmpleadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/EnviarCorreo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EnviarCorreo(ByVal adjunto As Boolean, ByRef mensaje As String, ByVal from As String, ByVal toAddress As String, ByVal subject As String, ByVal body As String, ByVal filename As String) As Boolean
            Dim results() As Object = Me.Invoke("EnviarCorreo", New Object() {adjunto, mensaje, from, toAddress, subject, body, filename})
            mensaje = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEnviarCorreo(ByVal adjunto As Boolean, ByVal mensaje As String, ByVal from As String, ByVal toAddress As String, ByVal subject As String, ByVal body As String, ByVal filename As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EnviarCorreo", New Object() {adjunto, mensaje, from, toAddress, subject, body, filename}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEnviarCorreo(ByVal asyncResult As System.IAsyncResult, ByRef mensaje As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            mensaje = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EnviarCorreoAsync(ByVal adjunto As Boolean, ByVal mensaje As String, ByVal from As String, ByVal toAddress As String, ByVal subject As String, ByVal body As String, ByVal filename As String)
            Me.EnviarCorreoAsync(adjunto, mensaje, from, toAddress, subject, body, filename, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnviarCorreoAsync(ByVal adjunto As Boolean, ByVal mensaje As String, ByVal from As String, ByVal toAddress As String, ByVal subject As String, ByVal body As String, ByVal filename As String, ByVal userState As Object)
            If (Me.EnviarCorreoOperationCompleted Is Nothing) Then
                Me.EnviarCorreoOperationCompleted = AddressOf Me.OnEnviarCorreoOperationCompleted
            End If
            Me.InvokeAsync("EnviarCorreo", New Object() {adjunto, mensaje, from, toAddress, subject, body, filename}, Me.EnviarCorreoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnviarCorreoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnviarCorreoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnviarCorreoCompleted(Me, New EnviarCorreoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CorreoEmpleados_Boleta", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CorreoEmpleados_Boleta(ByVal CodPlanilla As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CorreoEmpleados_Boleta", New Object() {CodPlanilla})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCorreoEmpleados_Boleta(ByVal CodPlanilla As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CorreoEmpleados_Boleta", New Object() {CodPlanilla}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCorreoEmpleados_Boleta(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CorreoEmpleados_BoletaAsync(ByVal CodPlanilla As String)
            Me.CorreoEmpleados_BoletaAsync(CodPlanilla, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CorreoEmpleados_BoletaAsync(ByVal CodPlanilla As String, ByVal userState As Object)
            If (Me.CorreoEmpleados_BoletaOperationCompleted Is Nothing) Then
                Me.CorreoEmpleados_BoletaOperationCompleted = AddressOf Me.OnCorreoEmpleados_BoletaOperationCompleted
            End If
            Me.InvokeAsync("CorreoEmpleados_Boleta", New Object() {CodPlanilla}, Me.CorreoEmpleados_BoletaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreoEmpleados_BoletaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CorreoEmpleados_BoletaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CorreoEmpleados_BoletaCompleted(Me, New CorreoEmpleados_BoletaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Reporte_BoletaPagos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Reporte_BoletaPagos(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal CodEmpleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Reporte_BoletaPagos", New Object() {CodArea, CodDepartamento, CodEmpleado, FechaInicio, FechaFin, Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporte_BoletaPagos(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal CodEmpleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Reporte_BoletaPagos", New Object() {CodArea, CodDepartamento, CodEmpleado, FechaInicio, FechaFin, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporte_BoletaPagos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Reporte_BoletaPagosAsync(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal CodEmpleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer)
            Me.Reporte_BoletaPagosAsync(CodArea, CodDepartamento, CodEmpleado, FechaInicio, FechaFin, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Reporte_BoletaPagosAsync(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal CodEmpleado As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.Reporte_BoletaPagosOperationCompleted Is Nothing) Then
                Me.Reporte_BoletaPagosOperationCompleted = AddressOf Me.OnReporte_BoletaPagosOperationCompleted
            End If
            Me.InvokeAsync("Reporte_BoletaPagos", New Object() {CodArea, CodDepartamento, CodEmpleado, FechaInicio, FechaFin, Opcion}, Me.Reporte_BoletaPagosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporte_BoletaPagosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Reporte_BoletaPagosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Reporte_BoletaPagosCompleted(Me, New Reporte_BoletaPagosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlEmpleados2", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlEmpleados2(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Estatus As Char, ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlEmpleados2", New Object() {CodArea, CodDepartamento, Estatus, Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlEmpleados2(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Estatus As Char, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlEmpleados2", New Object() {CodArea, CodDepartamento, Estatus, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlEmpleados2(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlEmpleados2Async(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Estatus As Char, ByVal Opcion As Integer)
            Me.Consultar_PlEmpleados2Async(CodArea, CodDepartamento, Estatus, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlEmpleados2Async(ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Estatus As Char, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.Consultar_PlEmpleados2OperationCompleted Is Nothing) Then
                Me.Consultar_PlEmpleados2OperationCompleted = AddressOf Me.OnConsultar_PlEmpleados2OperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlEmpleados2", New Object() {CodArea, CodDepartamento, Estatus, Opcion}, Me.Consultar_PlEmpleados2OperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlEmpleados2OperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlEmpleados2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlEmpleados2Completed(Me, New Consultar_PlEmpleados2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ReporteEmpleadosActivos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteEmpleadosActivos(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Estado As Char) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteEmpleadosActivos", New Object() {FechaInicio, FechaFin, Estado})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteEmpleadosActivos(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Estado As Char, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteEmpleadosActivos", New Object() {FechaInicio, FechaFin, Estado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteEmpleadosActivos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteEmpleadosActivosAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Estado As Char)
            Me.ReporteEmpleadosActivosAsync(FechaInicio, FechaFin, Estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteEmpleadosActivosAsync(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Estado As Char, ByVal userState As Object)
            If (Me.ReporteEmpleadosActivosOperationCompleted Is Nothing) Then
                Me.ReporteEmpleadosActivosOperationCompleted = AddressOf Me.OnReporteEmpleadosActivosOperationCompleted
            End If
            Me.InvokeAsync("ReporteEmpleadosActivos", New Object() {FechaInicio, FechaFin, Estado}, Me.ReporteEmpleadosActivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteEmpleadosActivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteEmpleadosActivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteEmpleadosActivosCompleted(Me, New ReporteEmpleadosActivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ReporteConstanciaSalario", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteConstanciaSalario(ByVal CodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteConstanciaSalario", New Object() {CodEmpleado, pUsuario, pPassword, pSucursal, pFirma, pCargo, pFechaRep})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteConstanciaSalario(ByVal CodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteConstanciaSalario", New Object() {CodEmpleado, pUsuario, pPassword, pSucursal, pFirma, pCargo, pFechaRep}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteConstanciaSalario(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteConstanciaSalarioAsync(ByVal CodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date)
            Me.ReporteConstanciaSalarioAsync(CodEmpleado, pUsuario, pPassword, pSucursal, pFirma, pCargo, pFechaRep, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteConstanciaSalarioAsync(ByVal CodEmpleado As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pFirma As String, ByVal pCargo As String, ByVal pFechaRep As Date, ByVal userState As Object)
            If (Me.ReporteConstanciaSalarioOperationCompleted Is Nothing) Then
                Me.ReporteConstanciaSalarioOperationCompleted = AddressOf Me.OnReporteConstanciaSalarioOperationCompleted
            End If
            Me.InvokeAsync("ReporteConstanciaSalario", New Object() {CodEmpleado, pUsuario, pPassword, pSucursal, pFirma, pCargo, pFechaRep}, Me.ReporteConstanciaSalarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteConstanciaSalarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteConstanciaSalarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteConstanciaSalarioCompleted(Me, New ReporteConstanciaSalarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Insertar_PlIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_PlIngresos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal CodTipoIngreso As String, ByVal Noplaza As String, ByVal Monto As Double, ByVal NoCuotas As Integer, ByVal Fecha As Date, ByVal FechaF As Date, ByVal Estado As String, ByVal Aplica As String, ByVal CodTipoPlanilla As Integer, ByVal Quincena As Integer) As Integer
            Dim results() As Object = Me.Invoke("Insertar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodTipoIngreso, Noplaza, Monto, NoCuotas, Fecha, FechaF, Estado, Aplica, CodTipoPlanilla, Quincena})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_PlIngresos( _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal CodEmpleado As String,  _
                    ByVal CodTipoIngreso As String,  _
                    ByVal Noplaza As String,  _
                    ByVal Monto As Double,  _
                    ByVal NoCuotas As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal FechaF As Date,  _
                    ByVal Estado As String,  _
                    ByVal Aplica As String,  _
                    ByVal CodTipoPlanilla As Integer,  _
                    ByVal Quincena As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodTipoIngreso, Noplaza, Monto, NoCuotas, Fecha, FechaF, Estado, Aplica, CodTipoPlanilla, Quincena}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_PlIngresos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlIngresosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal CodTipoIngreso As String, ByVal Noplaza As String, ByVal Monto As Double, ByVal NoCuotas As Integer, ByVal Fecha As Date, ByVal FechaF As Date, ByVal Estado As String, ByVal Aplica As String, ByVal CodTipoPlanilla As Integer, ByVal Quincena As Integer)
            Me.Insertar_PlIngresosAsync(Pusuario, Pwd, Psucursal, CodEmpleado, CodTipoIngreso, Noplaza, Monto, NoCuotas, Fecha, FechaF, Estado, Aplica, CodTipoPlanilla, Quincena, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlIngresosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal CodTipoIngreso As String, ByVal Noplaza As String, ByVal Monto As Double, ByVal NoCuotas As Integer, ByVal Fecha As Date, ByVal FechaF As Date, ByVal Estado As String, ByVal Aplica As String, ByVal CodTipoPlanilla As Integer, ByVal Quincena As Integer, ByVal userState As Object)
            If (Me.Insertar_PlIngresosOperationCompleted Is Nothing) Then
                Me.Insertar_PlIngresosOperationCompleted = AddressOf Me.OnInsertar_PlIngresosOperationCompleted
            End If
            Me.InvokeAsync("Insertar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodTipoIngreso, Noplaza, Monto, NoCuotas, Fecha, FechaF, Estado, Aplica, CodTipoPlanilla, Quincena}, Me.Insertar_PlIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_PlIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_PlIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_PlIngresosCompleted(Me, New Insertar_PlIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Modificar_PlIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Modificar_PlIngresos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal CodTipoIngreso As String, ByVal Noplaza As String, ByVal Monto As Double, ByVal NoCuotas As Integer, ByVal Fecha As Date, ByVal FechaF As Date, ByVal Estado As String, ByVal Aplica As String, ByVal Correlativo As Integer, ByVal CodTipoPlanilla As Integer, ByVal Quincena As Integer) As Integer
            Dim results() As Object = Me.Invoke("Modificar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodTipoIngreso, Noplaza, Monto, NoCuotas, Fecha, FechaF, Estado, Aplica, Correlativo, CodTipoPlanilla, Quincena})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificar_PlIngresos( _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal CodEmpleado As String,  _
                    ByVal CodTipoIngreso As String,  _
                    ByVal Noplaza As String,  _
                    ByVal Monto As Double,  _
                    ByVal NoCuotas As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal FechaF As Date,  _
                    ByVal Estado As String,  _
                    ByVal Aplica As String,  _
                    ByVal Correlativo As Integer,  _
                    ByVal CodTipoPlanilla As Integer,  _
                    ByVal Quincena As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Modificar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodTipoIngreso, Noplaza, Monto, NoCuotas, Fecha, FechaF, Estado, Aplica, Correlativo, CodTipoPlanilla, Quincena}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificar_PlIngresos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlIngresosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal CodTipoIngreso As String, ByVal Noplaza As String, ByVal Monto As Double, ByVal NoCuotas As Integer, ByVal Fecha As Date, ByVal FechaF As Date, ByVal Estado As String, ByVal Aplica As String, ByVal Correlativo As Integer, ByVal CodTipoPlanilla As Integer, ByVal Quincena As Integer)
            Me.Modificar_PlIngresosAsync(Pusuario, Pwd, Psucursal, CodEmpleado, CodTipoIngreso, Noplaza, Monto, NoCuotas, Fecha, FechaF, Estado, Aplica, Correlativo, CodTipoPlanilla, Quincena, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlIngresosAsync( _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal CodEmpleado As String,  _
                    ByVal CodTipoIngreso As String,  _
                    ByVal Noplaza As String,  _
                    ByVal Monto As Double,  _
                    ByVal NoCuotas As Integer,  _
                    ByVal Fecha As Date,  _
                    ByVal FechaF As Date,  _
                    ByVal Estado As String,  _
                    ByVal Aplica As String,  _
                    ByVal Correlativo As Integer,  _
                    ByVal CodTipoPlanilla As Integer,  _
                    ByVal Quincena As Integer,  _
                    ByVal userState As Object)
            If (Me.Modificar_PlIngresosOperationCompleted Is Nothing) Then
                Me.Modificar_PlIngresosOperationCompleted = AddressOf Me.OnModificar_PlIngresosOperationCompleted
            End If
            Me.InvokeAsync("Modificar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodTipoIngreso, Noplaza, Monto, NoCuotas, Fecha, FechaF, Estado, Aplica, Correlativo, CodTipoPlanilla, Quincena}, Me.Modificar_PlIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificar_PlIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Modificar_PlIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Modificar_PlIngresosCompleted(Me, New Modificar_PlIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Eliminar_PlIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_PlIngresos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Correlativo As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, Correlativo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_PlIngresos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Correlativo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, Correlativo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_PlIngresos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlIngresosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Correlativo As Integer)
            Me.Eliminar_PlIngresosAsync(Pusuario, Pwd, Psucursal, Correlativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlIngresosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Correlativo As Integer, ByVal userState As Object)
            If (Me.Eliminar_PlIngresosOperationCompleted Is Nothing) Then
                Me.Eliminar_PlIngresosOperationCompleted = AddressOf Me.OnEliminar_PlIngresosOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_PlIngresos", New Object() {Pusuario, Pwd, Psucursal, Correlativo}, Me.Eliminar_PlIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_PlIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_PlIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_PlIngresosCompleted(Me, New Eliminar_PlIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlPlanillas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlPlanillas(ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlPlanillas", New Object() {Opcion, FechaInicio, FechaFin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlPlanillas(ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlPlanillas", New Object() {Opcion, FechaInicio, FechaFin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlPlanillas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlPlanillasAsync(ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date)
            Me.Consultar_PlPlanillasAsync(Opcion, FechaInicio, FechaFin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlPlanillasAsync(ByVal Opcion As Integer, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal userState As Object)
            If (Me.Consultar_PlPlanillasOperationCompleted Is Nothing) Then
                Me.Consultar_PlPlanillasOperationCompleted = AddressOf Me.OnConsultar_PlPlanillasOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlPlanillas", New Object() {Opcion, FechaInicio, FechaFin}, Me.Consultar_PlPlanillasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlPlanillasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlPlanillasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlPlanillasCompleted(Me, New Consultar_PlPlanillasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Rpt_Planilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rpt_Planilla(ByVal CodPlanilla As Integer, ByVal Opcion As Integer, ByVal CodArea As String, ByVal CodDepartamento As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rpt_Planilla", New Object() {CodPlanilla, Opcion, CodArea, CodDepartamento})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRpt_Planilla(ByVal CodPlanilla As Integer, ByVal Opcion As Integer, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Rpt_Planilla", New Object() {CodPlanilla, Opcion, CodArea, CodDepartamento}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRpt_Planilla(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rpt_PlanillaAsync(ByVal CodPlanilla As Integer, ByVal Opcion As Integer, ByVal CodArea As String, ByVal CodDepartamento As String)
            Me.Rpt_PlanillaAsync(CodPlanilla, Opcion, CodArea, CodDepartamento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rpt_PlanillaAsync(ByVal CodPlanilla As Integer, ByVal Opcion As Integer, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal userState As Object)
            If (Me.Rpt_PlanillaOperationCompleted Is Nothing) Then
                Me.Rpt_PlanillaOperationCompleted = AddressOf Me.OnRpt_PlanillaOperationCompleted
            End If
            Me.InvokeAsync("Rpt_Planilla", New Object() {CodPlanilla, Opcion, CodArea, CodDepartamento}, Me.Rpt_PlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRpt_PlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rpt_PlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rpt_PlanillaCompleted(Me, New Rpt_PlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Rpt_PlanillaBonificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rpt_PlanillaBonificacion(ByVal CodPlanilla As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rpt_PlanillaBonificacion", New Object() {CodPlanilla})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRpt_PlanillaBonificacion(ByVal CodPlanilla As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Rpt_PlanillaBonificacion", New Object() {CodPlanilla}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRpt_PlanillaBonificacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rpt_PlanillaBonificacionAsync(ByVal CodPlanilla As Integer)
            Me.Rpt_PlanillaBonificacionAsync(CodPlanilla, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rpt_PlanillaBonificacionAsync(ByVal CodPlanilla As Integer, ByVal userState As Object)
            If (Me.Rpt_PlanillaBonificacionOperationCompleted Is Nothing) Then
                Me.Rpt_PlanillaBonificacionOperationCompleted = AddressOf Me.OnRpt_PlanillaBonificacionOperationCompleted
            End If
            Me.InvokeAsync("Rpt_PlanillaBonificacion", New Object() {CodPlanilla}, Me.Rpt_PlanillaBonificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRpt_PlanillaBonificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rpt_PlanillaBonificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rpt_PlanillaBonificacionCompleted(Me, New Rpt_PlanillaBonificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Rpt_PlanillaAguinaldo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rpt_PlanillaAguinaldo(ByVal CodPlanilla As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rpt_PlanillaAguinaldo", New Object() {CodPlanilla})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRpt_PlanillaAguinaldo(ByVal CodPlanilla As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Rpt_PlanillaAguinaldo", New Object() {CodPlanilla}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRpt_PlanillaAguinaldo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rpt_PlanillaAguinaldoAsync(ByVal CodPlanilla As Integer)
            Me.Rpt_PlanillaAguinaldoAsync(CodPlanilla, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rpt_PlanillaAguinaldoAsync(ByVal CodPlanilla As Integer, ByVal userState As Object)
            If (Me.Rpt_PlanillaAguinaldoOperationCompleted Is Nothing) Then
                Me.Rpt_PlanillaAguinaldoOperationCompleted = AddressOf Me.OnRpt_PlanillaAguinaldoOperationCompleted
            End If
            Me.InvokeAsync("Rpt_PlanillaAguinaldo", New Object() {CodPlanilla}, Me.Rpt_PlanillaAguinaldoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRpt_PlanillaAguinaldoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rpt_PlanillaAguinaldoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rpt_PlanillaAguinaldoCompleted(Me, New Rpt_PlanillaAguinaldoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Rpt_PlanillaComisiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rpt_PlanillaComisiones(ByVal CodPlanilla As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rpt_PlanillaComisiones", New Object() {CodPlanilla})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRpt_PlanillaComisiones(ByVal CodPlanilla As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Rpt_PlanillaComisiones", New Object() {CodPlanilla}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRpt_PlanillaComisiones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rpt_PlanillaComisionesAsync(ByVal CodPlanilla As Integer)
            Me.Rpt_PlanillaComisionesAsync(CodPlanilla, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rpt_PlanillaComisionesAsync(ByVal CodPlanilla As Integer, ByVal userState As Object)
            If (Me.Rpt_PlanillaComisionesOperationCompleted Is Nothing) Then
                Me.Rpt_PlanillaComisionesOperationCompleted = AddressOf Me.OnRpt_PlanillaComisionesOperationCompleted
            End If
            Me.InvokeAsync("Rpt_PlanillaComisiones", New Object() {CodPlanilla}, Me.Rpt_PlanillaComisionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnRpt_PlanillaComisionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rpt_PlanillaComisionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rpt_PlanillaComisionesCompleted(Me, New Rpt_PlanillaComisionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/VerificarDesembolso", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificarDesembolso(ByVal CodPlanilla As Integer) As Integer
            Dim results() As Object = Me.Invoke("VerificarDesembolso", New Object() {CodPlanilla})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificarDesembolso(ByVal CodPlanilla As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificarDesembolso", New Object() {CodPlanilla}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificarDesembolso(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificarDesembolsoAsync(ByVal CodPlanilla As Integer)
            Me.VerificarDesembolsoAsync(CodPlanilla, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificarDesembolsoAsync(ByVal CodPlanilla As Integer, ByVal userState As Object)
            If (Me.VerificarDesembolsoOperationCompleted Is Nothing) Then
                Me.VerificarDesembolsoOperationCompleted = AddressOf Me.OnVerificarDesembolsoOperationCompleted
            End If
            Me.InvokeAsync("VerificarDesembolso", New Object() {CodPlanilla}, Me.VerificarDesembolsoOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificarDesembolsoOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificarDesembolsoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificarDesembolsoCompleted(Me, New VerificarDesembolsoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ProcesarDesembolso", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcesarDesembolso(ByVal TipoPlanilla As Integer, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Usuario As String) As String
            Dim results() As Object = Me.Invoke("ProcesarDesembolso", New Object() {TipoPlanilla, FechaIni, FechaFin, Usuario})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginProcesarDesembolso(ByVal TipoPlanilla As Integer, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ProcesarDesembolso", New Object() {TipoPlanilla, FechaIni, FechaFin, Usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndProcesarDesembolso(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcesarDesembolsoAsync(ByVal TipoPlanilla As Integer, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Usuario As String)
            Me.ProcesarDesembolsoAsync(TipoPlanilla, FechaIni, FechaFin, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcesarDesembolsoAsync(ByVal TipoPlanilla As Integer, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Usuario As String, ByVal userState As Object)
            If (Me.ProcesarDesembolsoOperationCompleted Is Nothing) Then
                Me.ProcesarDesembolsoOperationCompleted = AddressOf Me.OnProcesarDesembolsoOperationCompleted
            End If
            Me.InvokeAsync("ProcesarDesembolso", New Object() {TipoPlanilla, FechaIni, FechaFin, Usuario}, Me.ProcesarDesembolsoOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcesarDesembolsoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcesarDesembolsoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcesarDesembolsoCompleted(Me, New ProcesarDesembolsoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Insertar_PlPlanillas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_PlPlanillas(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodTipoPlanilla As Integer, ByVal Fecha As Date, ByVal FechaInicio As Date, ByVal FechaFin As Date) As Integer
            Dim results() As Object = Me.Invoke("Insertar_PlPlanillas", New Object() {Pusuario, Pwd, Psucursal, CodTipoPlanilla, Fecha, FechaInicio, FechaFin})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_PlPlanillas(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodTipoPlanilla As Integer, ByVal Fecha As Date, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_PlPlanillas", New Object() {Pusuario, Pwd, Psucursal, CodTipoPlanilla, Fecha, FechaInicio, FechaFin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_PlPlanillas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlPlanillasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodTipoPlanilla As Integer, ByVal Fecha As Date, ByVal FechaInicio As Date, ByVal FechaFin As Date)
            Me.Insertar_PlPlanillasAsync(Pusuario, Pwd, Psucursal, CodTipoPlanilla, Fecha, FechaInicio, FechaFin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlPlanillasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodTipoPlanilla As Integer, ByVal Fecha As Date, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal userState As Object)
            If (Me.Insertar_PlPlanillasOperationCompleted Is Nothing) Then
                Me.Insertar_PlPlanillasOperationCompleted = AddressOf Me.OnInsertar_PlPlanillasOperationCompleted
            End If
            Me.InvokeAsync("Insertar_PlPlanillas", New Object() {Pusuario, Pwd, Psucursal, CodTipoPlanilla, Fecha, FechaInicio, FechaFin}, Me.Insertar_PlPlanillasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_PlPlanillasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_PlPlanillasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_PlPlanillasCompleted(Me, New Insertar_PlPlanillasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Insertar_PlDetPlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_PlDetPlanilla(ByVal pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal TipoPlanilla As Integer, ByVal Fecha As Date) As Integer
            Dim results() As Object = Me.Invoke("Insertar_PlDetPlanilla", New Object() {pusuario, Pwd, Psucursal, FechaInicio, FechaFin, Quincena, TipoPlanilla, Fecha})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_PlDetPlanilla(ByVal pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal TipoPlanilla As Integer, ByVal Fecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_PlDetPlanilla", New Object() {pusuario, Pwd, Psucursal, FechaInicio, FechaFin, Quincena, TipoPlanilla, Fecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_PlDetPlanilla(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlDetPlanillaAsync(ByVal pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal TipoPlanilla As Integer, ByVal Fecha As Date)
            Me.Insertar_PlDetPlanillaAsync(pusuario, Pwd, Psucursal, FechaInicio, FechaFin, Quincena, TipoPlanilla, Fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlDetPlanillaAsync(ByVal pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal TipoPlanilla As Integer, ByVal Fecha As Date, ByVal userState As Object)
            If (Me.Insertar_PlDetPlanillaOperationCompleted Is Nothing) Then
                Me.Insertar_PlDetPlanillaOperationCompleted = AddressOf Me.OnInsertar_PlDetPlanillaOperationCompleted
            End If
            Me.InvokeAsync("Insertar_PlDetPlanilla", New Object() {pusuario, Pwd, Psucursal, FechaInicio, FechaFin, Quincena, TipoPlanilla, Fecha}, Me.Insertar_PlDetPlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_PlDetPlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_PlDetPlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_PlDetPlanillaCompleted(Me, New Insertar_PlDetPlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ValidarCasosEspeciales", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarCasosEspeciales(ByVal CodEmpleado As String) As Boolean
            Dim results() As Object = Me.Invoke("ValidarCasosEspeciales", New Object() {CodEmpleado})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarCasosEspeciales(ByVal CodEmpleado As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarCasosEspeciales", New Object() {CodEmpleado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarCasosEspeciales(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarCasosEspecialesAsync(ByVal CodEmpleado As String)
            Me.ValidarCasosEspecialesAsync(CodEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarCasosEspecialesAsync(ByVal CodEmpleado As String, ByVal userState As Object)
            If (Me.ValidarCasosEspecialesOperationCompleted Is Nothing) Then
                Me.ValidarCasosEspecialesOperationCompleted = AddressOf Me.OnValidarCasosEspecialesOperationCompleted
            End If
            Me.InvokeAsync("ValidarCasosEspeciales", New Object() {CodEmpleado}, Me.ValidarCasosEspecialesOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarCasosEspecialesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarCasosEspecialesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarCasosEspecialesCompleted(Me, New ValidarCasosEspecialesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/InhabilitarDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InhabilitarDescuentos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Aplica As Char, ByVal Correlativo As Integer) As Integer
            Dim results() As Object = Me.Invoke("InhabilitarDescuentos", New Object() {Pusuario, Pwd, Psucursal, Aplica, Correlativo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInhabilitarDescuentos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Aplica As Char, ByVal Correlativo As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InhabilitarDescuentos", New Object() {Pusuario, Pwd, Psucursal, Aplica, Correlativo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInhabilitarDescuentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InhabilitarDescuentosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Aplica As Char, ByVal Correlativo As Integer)
            Me.InhabilitarDescuentosAsync(Pusuario, Pwd, Psucursal, Aplica, Correlativo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InhabilitarDescuentosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Aplica As Char, ByVal Correlativo As Integer, ByVal userState As Object)
            If (Me.InhabilitarDescuentosOperationCompleted Is Nothing) Then
                Me.InhabilitarDescuentosOperationCompleted = AddressOf Me.OnInhabilitarDescuentosOperationCompleted
            End If
            Me.InvokeAsync("InhabilitarDescuentos", New Object() {Pusuario, Pwd, Psucursal, Aplica, Correlativo}, Me.InhabilitarDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInhabilitarDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InhabilitarDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InhabilitarDescuentosCompleted(Me, New InhabilitarDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlDescuentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlDescuentos(ByVal Opcion As Integer, ByVal Correlativo As Integer, ByVal CodEmpleado As String, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlDescuentos", New Object() {Opcion, Correlativo, CodEmpleado, Fecha_Inicio, Fecha_Fin})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlDescuentos(ByVal Opcion As Integer, ByVal Correlativo As Integer, ByVal CodEmpleado As String, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlDescuentos", New Object() {Opcion, Correlativo, CodEmpleado, Fecha_Inicio, Fecha_Fin}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlDescuentos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlDescuentosAsync(ByVal Opcion As Integer, ByVal Correlativo As Integer, ByVal CodEmpleado As String, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date)
            Me.Consultar_PlDescuentosAsync(Opcion, Correlativo, CodEmpleado, Fecha_Inicio, Fecha_Fin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlDescuentosAsync(ByVal Opcion As Integer, ByVal Correlativo As Integer, ByVal CodEmpleado As String, ByVal Fecha_Inicio As Date, ByVal Fecha_Fin As Date, ByVal userState As Object)
            If (Me.Consultar_PlDescuentosOperationCompleted Is Nothing) Then
                Me.Consultar_PlDescuentosOperationCompleted = AddressOf Me.OnConsultar_PlDescuentosOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlDescuentos", New Object() {Opcion, Correlativo, CodEmpleado, Fecha_Inicio, Fecha_Fin}, Me.Consultar_PlDescuentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlDescuentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlDescuentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlDescuentosCompleted(Me, New Consultar_PlDescuentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/GenerarPlanilla2", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerarPlanilla2(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal CodPlanilla As Integer, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GenerarPlanilla2", New Object() {FechaInicio, FechaFin, Quincena, CodPlanilla, CodArea, CodDepartamento, Opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerarPlanilla2(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal CodPlanilla As Integer, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerarPlanilla2", New Object() {FechaInicio, FechaFin, Quincena, CodPlanilla, CodArea, CodDepartamento, Opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerarPlanilla2(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerarPlanilla2Async(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal CodPlanilla As Integer, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Opcion As Integer)
            Me.GenerarPlanilla2Async(FechaInicio, FechaFin, Quincena, CodPlanilla, CodArea, CodDepartamento, Opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerarPlanilla2Async(ByVal FechaInicio As Date, ByVal FechaFin As Date, ByVal Quincena As Integer, ByVal CodPlanilla As Integer, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Opcion As Integer, ByVal userState As Object)
            If (Me.GenerarPlanilla2OperationCompleted Is Nothing) Then
                Me.GenerarPlanilla2OperationCompleted = AddressOf Me.OnGenerarPlanilla2OperationCompleted
            End If
            Me.InvokeAsync("GenerarPlanilla2", New Object() {FechaInicio, FechaFin, Quincena, CodPlanilla, CodArea, CodDepartamento, Opcion}, Me.GenerarPlanilla2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerarPlanilla2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerarPlanilla2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerarPlanilla2Completed(Me, New GenerarPlanilla2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ValidarIngresoDescuento", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarIngresoDescuento(ByVal CodEmpleado As String, ByVal cuota As Double) As Boolean
            Dim results() As Object = Me.Invoke("ValidarIngresoDescuento", New Object() {CodEmpleado, cuota})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarIngresoDescuento(ByVal CodEmpleado As String, ByVal cuota As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarIngresoDescuento", New Object() {CodEmpleado, cuota}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarIngresoDescuento(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarIngresoDescuentoAsync(ByVal CodEmpleado As String, ByVal cuota As Double)
            Me.ValidarIngresoDescuentoAsync(CodEmpleado, cuota, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarIngresoDescuentoAsync(ByVal CodEmpleado As String, ByVal cuota As Double, ByVal userState As Object)
            If (Me.ValidarIngresoDescuentoOperationCompleted Is Nothing) Then
                Me.ValidarIngresoDescuentoOperationCompleted = AddressOf Me.OnValidarIngresoDescuentoOperationCompleted
            End If
            Me.InvokeAsync("ValidarIngresoDescuento", New Object() {CodEmpleado, cuota}, Me.ValidarIngresoDescuentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarIngresoDescuentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarIngresoDescuentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarIngresoDescuentoCompleted(Me, New ValidarIngresoDescuentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlPlazas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlPlazas(ByVal Filtro As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlPlazas", New Object() {Filtro})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlPlazas(ByVal Filtro As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlPlazas", New Object() {Filtro}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlPlazas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlPlazasAsync(ByVal Filtro As String)
            Me.Consultar_PlPlazasAsync(Filtro, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlPlazasAsync(ByVal Filtro As String, ByVal userState As Object)
            If (Me.Consultar_PlPlazasOperationCompleted Is Nothing) Then
                Me.Consultar_PlPlazasOperationCompleted = AddressOf Me.OnConsultar_PlPlazasOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlPlazas", New Object() {Filtro}, Me.Consultar_PlPlazasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlPlazasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlPlazasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlPlazasCompleted(Me, New Consultar_PlPlazasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Insertar_PlPlazas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_PlPlazas(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal CodDepartamento As String, ByVal CodArea As String, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal SueldoVariable As Char, ByVal SueldoMensual As Double, ByVal CodCargo As String, ByVal TipoPlanilla As Char, ByVal Estatus As Char, ByVal CasoEspecial As Boolean) As Integer
            Dim results() As Object = Me.Invoke("Insertar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodDepartamento, CodArea, FechaInicial, FechaFinal, SueldoVariable, SueldoMensual, CodCargo, TipoPlanilla, Estatus, CasoEspecial})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_PlPlazas( _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal CodEmpleado As String,  _
                    ByVal CodDepartamento As String,  _
                    ByVal CodArea As String,  _
                    ByVal FechaInicial As Date,  _
                    ByVal FechaFinal As Date,  _
                    ByVal SueldoVariable As Char,  _
                    ByVal SueldoMensual As Double,  _
                    ByVal CodCargo As String,  _
                    ByVal TipoPlanilla As Char,  _
                    ByVal Estatus As Char,  _
                    ByVal CasoEspecial As Boolean,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodDepartamento, CodArea, FechaInicial, FechaFinal, SueldoVariable, SueldoMensual, CodCargo, TipoPlanilla, Estatus, CasoEspecial}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_PlPlazas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlPlazasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal CodDepartamento As String, ByVal CodArea As String, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal SueldoVariable As Char, ByVal SueldoMensual As Double, ByVal CodCargo As String, ByVal TipoPlanilla As Char, ByVal Estatus As Char, ByVal CasoEspecial As Boolean)
            Me.Insertar_PlPlazasAsync(Pusuario, Pwd, Psucursal, CodEmpleado, CodDepartamento, CodArea, FechaInicial, FechaFinal, SueldoVariable, SueldoMensual, CodCargo, TipoPlanilla, Estatus, CasoEspecial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlPlazasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal CodDepartamento As String, ByVal CodArea As String, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal SueldoVariable As Char, ByVal SueldoMensual As Double, ByVal CodCargo As String, ByVal TipoPlanilla As Char, ByVal Estatus As Char, ByVal CasoEspecial As Boolean, ByVal userState As Object)
            If (Me.Insertar_PlPlazasOperationCompleted Is Nothing) Then
                Me.Insertar_PlPlazasOperationCompleted = AddressOf Me.OnInsertar_PlPlazasOperationCompleted
            End If
            Me.InvokeAsync("Insertar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, CodDepartamento, CodArea, FechaInicial, FechaFinal, SueldoVariable, SueldoMensual, CodCargo, TipoPlanilla, Estatus, CasoEspecial}, Me.Insertar_PlPlazasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_PlPlazasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_PlPlazasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_PlPlazasCompleted(Me, New Insertar_PlPlazasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Modificar_PlPlazas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Modificar_PlPlazas(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal NoPlaza As String, ByVal CodDepartamento As String, ByVal CodArea As String, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal SueldoVariable As Char, ByVal SueldoMensual As Double, ByVal CodCargo As String, ByVal TipoPlanilla As Char, ByVal Estatus As Char, ByVal CasoEspecial As Boolean) As Integer
            Dim results() As Object = Me.Invoke("Modificar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, NoPlaza, CodDepartamento, CodArea, FechaInicial, FechaFinal, SueldoVariable, SueldoMensual, CodCargo, TipoPlanilla, Estatus, CasoEspecial})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificar_PlPlazas( _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal CodEmpleado As String,  _
                    ByVal NoPlaza As String,  _
                    ByVal CodDepartamento As String,  _
                    ByVal CodArea As String,  _
                    ByVal FechaInicial As Date,  _
                    ByVal FechaFinal As Date,  _
                    ByVal SueldoVariable As Char,  _
                    ByVal SueldoMensual As Double,  _
                    ByVal CodCargo As String,  _
                    ByVal TipoPlanilla As Char,  _
                    ByVal Estatus As Char,  _
                    ByVal CasoEspecial As Boolean,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Modificar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, NoPlaza, CodDepartamento, CodArea, FechaInicial, FechaFinal, SueldoVariable, SueldoMensual, CodCargo, TipoPlanilla, Estatus, CasoEspecial}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificar_PlPlazas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlPlazasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal NoPlaza As String, ByVal CodDepartamento As String, ByVal CodArea As String, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal SueldoVariable As Char, ByVal SueldoMensual As Double, ByVal CodCargo As String, ByVal TipoPlanilla As Char, ByVal Estatus As Char, ByVal CasoEspecial As Boolean)
            Me.Modificar_PlPlazasAsync(Pusuario, Pwd, Psucursal, CodEmpleado, NoPlaza, CodDepartamento, CodArea, FechaInicial, FechaFinal, SueldoVariable, SueldoMensual, CodCargo, TipoPlanilla, Estatus, CasoEspecial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlPlazasAsync( _
                    ByVal Pusuario As String,  _
                    ByVal Pwd As String,  _
                    ByVal Psucursal As String,  _
                    ByVal CodEmpleado As String,  _
                    ByVal NoPlaza As String,  _
                    ByVal CodDepartamento As String,  _
                    ByVal CodArea As String,  _
                    ByVal FechaInicial As Date,  _
                    ByVal FechaFinal As Date,  _
                    ByVal SueldoVariable As Char,  _
                    ByVal SueldoMensual As Double,  _
                    ByVal CodCargo As String,  _
                    ByVal TipoPlanilla As Char,  _
                    ByVal Estatus As Char,  _
                    ByVal CasoEspecial As Boolean,  _
                    ByVal userState As Object)
            If (Me.Modificar_PlPlazasOperationCompleted Is Nothing) Then
                Me.Modificar_PlPlazasOperationCompleted = AddressOf Me.OnModificar_PlPlazasOperationCompleted
            End If
            Me.InvokeAsync("Modificar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, NoPlaza, CodDepartamento, CodArea, FechaInicial, FechaFinal, SueldoVariable, SueldoMensual, CodCargo, TipoPlanilla, Estatus, CasoEspecial}, Me.Modificar_PlPlazasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificar_PlPlazasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Modificar_PlPlazasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Modificar_PlPlazasCompleted(Me, New Modificar_PlPlazasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Eliminar_PlPlazas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_PlPlazas(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal Noplaza As String) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, Noplaza})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_PlPlazas(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal Noplaza As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, Noplaza}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_PlPlazas(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlPlazasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal Noplaza As String)
            Me.Eliminar_PlPlazasAsync(Pusuario, Pwd, Psucursal, CodEmpleado, Noplaza, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlPlazasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodEmpleado As String, ByVal Noplaza As String, ByVal userState As Object)
            If (Me.Eliminar_PlPlazasOperationCompleted Is Nothing) Then
                Me.Eliminar_PlPlazasOperationCompleted = AddressOf Me.OnEliminar_PlPlazasOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_PlPlazas", New Object() {Pusuario, Pwd, Psucursal, CodEmpleado, Noplaza}, Me.Eliminar_PlPlazasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_PlPlazasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_PlPlazasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_PlPlazasCompleted(Me, New Eliminar_PlPlazasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlCargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlCargos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Opcion As Integer, ByVal CodCargo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlCargos", New Object() {Pusuario, Pwd, Psucursal, Opcion, CodCargo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlCargos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Opcion As Integer, ByVal CodCargo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlCargos", New Object() {Pusuario, Pwd, Psucursal, Opcion, CodCargo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlCargos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlCargosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Opcion As Integer, ByVal CodCargo As String)
            Me.Consultar_PlCargosAsync(Pusuario, Pwd, Psucursal, Opcion, CodCargo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlCargosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Opcion As Integer, ByVal CodCargo As String, ByVal userState As Object)
            If (Me.Consultar_PlCargosOperationCompleted Is Nothing) Then
                Me.Consultar_PlCargosOperationCompleted = AddressOf Me.OnConsultar_PlCargosOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlCargos", New Object() {Pusuario, Pwd, Psucursal, Opcion, CodCargo}, Me.Consultar_PlCargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlCargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlCargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlCargosCompleted(Me, New Consultar_PlCargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Eliminar_PlDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_PlDepartamentos(ByVal Pusuario As String, ByVal Pwd As String, ByVal PSucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_PlDepartamentos", New Object() {Pusuario, Pwd, PSucursal, CodArea, CodDepartamento})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_PlDepartamentos(ByVal Pusuario As String, ByVal Pwd As String, ByVal PSucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_PlDepartamentos", New Object() {Pusuario, Pwd, PSucursal, CodArea, CodDepartamento}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_PlDepartamentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlDepartamentosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal PSucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String)
            Me.Eliminar_PlDepartamentosAsync(Pusuario, Pwd, PSucursal, CodArea, CodDepartamento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PlDepartamentosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal PSucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal userState As Object)
            If (Me.Eliminar_PlDepartamentosOperationCompleted Is Nothing) Then
                Me.Eliminar_PlDepartamentosOperationCompleted = AddressOf Me.OnEliminar_PlDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_PlDepartamentos", New Object() {Pusuario, Pwd, PSucursal, CodArea, CodDepartamento}, Me.Eliminar_PlDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_PlDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_PlDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_PlDepartamentosCompleted(Me, New Eliminar_PlDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Modificar_PlDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Modificar_PlDepartamentos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Descripcion As String) As Integer
            Dim results() As Object = Me.Invoke("Modificar_PlDepartamentos", New Object() {Pusuario, Pwd, Psucursal, CodArea, CodDepartamento, Descripcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificar_PlDepartamentos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Modificar_PlDepartamentos", New Object() {Pusuario, Pwd, Psucursal, CodArea, CodDepartamento, Descripcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificar_PlDepartamentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlDepartamentosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Descripcion As String)
            Me.Modificar_PlDepartamentosAsync(Pusuario, Pwd, Psucursal, CodArea, CodDepartamento, Descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Modificar_PlDepartamentosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Descripcion As String, ByVal userState As Object)
            If (Me.Modificar_PlDepartamentosOperationCompleted Is Nothing) Then
                Me.Modificar_PlDepartamentosOperationCompleted = AddressOf Me.OnModificar_PlDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("Modificar_PlDepartamentos", New Object() {Pusuario, Pwd, Psucursal, CodArea, CodDepartamento, Descripcion}, Me.Modificar_PlDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificar_PlDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Modificar_PlDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Modificar_PlDepartamentosCompleted(Me, New Modificar_PlDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Insertar_PlDepartamentos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insertar_PlDepartamentos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Descripcion As String, ByVal idcuenta As String) As Integer
            Dim results() As Object = Me.Invoke("Insertar_PlDepartamentos", New Object() {Pusuario, Pwd, Psucursal, CodArea, CodDepartamento, Descripcion, idcuenta})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertar_PlDepartamentos(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Descripcion As String, ByVal idcuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Insertar_PlDepartamentos", New Object() {Pusuario, Pwd, Psucursal, CodArea, CodDepartamento, Descripcion, idcuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertar_PlDepartamentos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlDepartamentosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Descripcion As String, ByVal idcuenta As String)
            Me.Insertar_PlDepartamentosAsync(Pusuario, Pwd, Psucursal, CodArea, CodDepartamento, Descripcion, idcuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insertar_PlDepartamentosAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal CodArea As String, ByVal CodDepartamento As String, ByVal Descripcion As String, ByVal idcuenta As String, ByVal userState As Object)
            If (Me.Insertar_PlDepartamentosOperationCompleted Is Nothing) Then
                Me.Insertar_PlDepartamentosOperationCompleted = AddressOf Me.OnInsertar_PlDepartamentosOperationCompleted
            End If
            Me.InvokeAsync("Insertar_PlDepartamentos", New Object() {Pusuario, Pwd, Psucursal, CodArea, CodDepartamento, Descripcion, idcuenta}, Me.Insertar_PlDepartamentosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertar_PlDepartamentosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insertar_PlDepartamentosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insertar_PlDepartamentosCompleted(Me, New Insertar_PlDepartamentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Consultar_PlAreas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PlAreas(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Opcion As Integer, ByVal codarea As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PlAreas", New Object() {Pusuario, Pwd, Psucursal, Opcion, codarea})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PlAreas(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Opcion As Integer, ByVal codarea As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PlAreas", New Object() {Pusuario, Pwd, Psucursal, Opcion, codarea}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PlAreas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlAreasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Opcion As Integer, ByVal codarea As String)
            Me.Consultar_PlAreasAsync(Pusuario, Pwd, Psucursal, Opcion, codarea, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PlAreasAsync(ByVal Pusuario As String, ByVal Pwd As String, ByVal Psucursal As String, ByVal Opcion As Integer, ByVal codarea As String, ByVal userState As Object)
            If (Me.Consultar_PlAreasOperationCompleted Is Nothing) Then
                Me.Consultar_PlAreasOperationCompleted = AddressOf Me.OnConsultar_PlAreasOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PlAreas", New Object() {Pusuario, Pwd, Psucursal, Opcion, codarea}, Me.Consultar_PlAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PlAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PlAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PlAreasCompleted(Me, New Consultar_PlAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CONSULTAR_PLEMPLEADOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_PLEMPLEADOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CODDEPARTAMENTO As Integer, ByVal OPCION As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_PLEMPLEADOS", New Object() {PUSUARIO, PWD, PSUCURSAL, CODDEPARTAMENTO, OPCION})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_PLEMPLEADOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CODDEPARTAMENTO As Integer, ByVal OPCION As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_PLEMPLEADOS", New Object() {PUSUARIO, PWD, PSUCURSAL, CODDEPARTAMENTO, OPCION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_PLEMPLEADOS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLEMPLEADOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CODDEPARTAMENTO As Integer, ByVal OPCION As Integer)
            Me.CONSULTAR_PLEMPLEADOSAsync(PUSUARIO, PWD, PSUCURSAL, CODDEPARTAMENTO, OPCION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLEMPLEADOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CODDEPARTAMENTO As Integer, ByVal OPCION As Integer, ByVal userState As Object)
            If (Me.CONSULTAR_PLEMPLEADOSOperationCompleted Is Nothing) Then
                Me.CONSULTAR_PLEMPLEADOSOperationCompleted = AddressOf Me.OnCONSULTAR_PLEMPLEADOSOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_PLEMPLEADOS", New Object() {PUSUARIO, PWD, PSUCURSAL, CODDEPARTAMENTO, OPCION}, Me.CONSULTAR_PLEMPLEADOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_PLEMPLEADOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_PLEMPLEADOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_PLEMPLEADOSCompleted(Me, New CONSULTAR_PLEMPLEADOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CONSULTAR_PLDEPARTAMENTOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_PLDEPARTAMENTOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal codarea As String, ByVal CodDepartamento As String, ByVal Departamento As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_PLDEPARTAMENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, codarea, CodDepartamento, Departamento})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_PLDEPARTAMENTOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal codarea As String, ByVal CodDepartamento As String, ByVal Departamento As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_PLDEPARTAMENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, codarea, CodDepartamento, Departamento}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_PLDEPARTAMENTOS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLDEPARTAMENTOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal codarea As String, ByVal CodDepartamento As String, ByVal Departamento As String)
            Me.CONSULTAR_PLDEPARTAMENTOSAsync(PUSUARIO, PWD, PSUCURSAL, OPCION, codarea, CodDepartamento, Departamento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLDEPARTAMENTOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal codarea As String, ByVal CodDepartamento As String, ByVal Departamento As String, ByVal userState As Object)
            If (Me.CONSULTAR_PLDEPARTAMENTOSOperationCompleted Is Nothing) Then
                Me.CONSULTAR_PLDEPARTAMENTOSOperationCompleted = AddressOf Me.OnCONSULTAR_PLDEPARTAMENTOSOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_PLDEPARTAMENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, codarea, CodDepartamento, Departamento}, Me.CONSULTAR_PLDEPARTAMENTOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_PLDEPARTAMENTOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_PLDEPARTAMENTOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_PLDEPARTAMENTOSCompleted(Me, New CONSULTAR_PLDEPARTAMENTOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/MODIFICAR_DESCUENTOSLEY", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICAR_DESCUENTOSLEY(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal VALOR As Double, ByVal CODPLANILLA As Integer, ByVal CODEMPLEADO As String, ByVal RECIBIR As Double, ByVal RETENIDO As Double) As Integer
            Dim results() As Object = Me.Invoke("MODIFICAR_DESCUENTOSLEY", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, VALOR, CODPLANILLA, CODEMPLEADO, RECIBIR, RETENIDO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICAR_DESCUENTOSLEY(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal VALOR As Double, ByVal CODPLANILLA As Integer, ByVal CODEMPLEADO As String, ByVal RECIBIR As Double, ByVal RETENIDO As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICAR_DESCUENTOSLEY", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, VALOR, CODPLANILLA, CODEMPLEADO, RECIBIR, RETENIDO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICAR_DESCUENTOSLEY(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_DESCUENTOSLEYAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal VALOR As Double, ByVal CODPLANILLA As Integer, ByVal CODEMPLEADO As String, ByVal RECIBIR As Double, ByVal RETENIDO As Double)
            Me.MODIFICAR_DESCUENTOSLEYAsync(PUSUARIO, PWD, PSUCURSAL, OPCION, VALOR, CODPLANILLA, CODEMPLEADO, RECIBIR, RETENIDO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_DESCUENTOSLEYAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal VALOR As Double, ByVal CODPLANILLA As Integer, ByVal CODEMPLEADO As String, ByVal RECIBIR As Double, ByVal RETENIDO As Double, ByVal userState As Object)
            If (Me.MODIFICAR_DESCUENTOSLEYOperationCompleted Is Nothing) Then
                Me.MODIFICAR_DESCUENTOSLEYOperationCompleted = AddressOf Me.OnMODIFICAR_DESCUENTOSLEYOperationCompleted
            End If
            Me.InvokeAsync("MODIFICAR_DESCUENTOSLEY", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, VALOR, CODPLANILLA, CODEMPLEADO, RECIBIR, RETENIDO}, Me.MODIFICAR_DESCUENTOSLEYOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICAR_DESCUENTOSLEYOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICAR_DESCUENTOSLEYCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICAR_DESCUENTOSLEYCompleted(Me, New MODIFICAR_DESCUENTOSLEYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CONSULTAR_PLANILLASCREADAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_PLANILLASCREADAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_PLANILLASCREADAS", New Object() {PUSUARIO, PWD, PSUCURSAL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_PLANILLASCREADAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_PLANILLASCREADAS", New Object() {PUSUARIO, PWD, PSUCURSAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_PLANILLASCREADAS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLANILLASCREADASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String)
            Me.CONSULTAR_PLANILLASCREADASAsync(PUSUARIO, PWD, PSUCURSAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLANILLASCREADASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal userState As Object)
            If (Me.CONSULTAR_PLANILLASCREADASOperationCompleted Is Nothing) Then
                Me.CONSULTAR_PLANILLASCREADASOperationCompleted = AddressOf Me.OnCONSULTAR_PLANILLASCREADASOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_PLANILLASCREADAS", New Object() {PUSUARIO, PWD, PSUCURSAL}, Me.CONSULTAR_PLANILLASCREADASOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_PLANILLASCREADASOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_PLANILLASCREADASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_PLANILLASCREADASCompleted(Me, New CONSULTAR_PLANILLASCREADASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CONSULTARDESCUENTOSLEY", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARDESCUENTOSLEY(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CODPLANILLA As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARDESCUENTOSLEY", New Object() {PUSUARIO, PWD, PSUCURSAL, CODPLANILLA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARDESCUENTOSLEY(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CODPLANILLA As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARDESCUENTOSLEY", New Object() {PUSUARIO, PWD, PSUCURSAL, CODPLANILLA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARDESCUENTOSLEY(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARDESCUENTOSLEYAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CODPLANILLA As Integer)
            Me.CONSULTARDESCUENTOSLEYAsync(PUSUARIO, PWD, PSUCURSAL, CODPLANILLA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARDESCUENTOSLEYAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CODPLANILLA As Integer, ByVal userState As Object)
            If (Me.CONSULTARDESCUENTOSLEYOperationCompleted Is Nothing) Then
                Me.CONSULTARDESCUENTOSLEYOperationCompleted = AddressOf Me.OnCONSULTARDESCUENTOSLEYOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARDESCUENTOSLEY", New Object() {PUSUARIO, PWD, PSUCURSAL, CODPLANILLA}, Me.CONSULTARDESCUENTOSLEYOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARDESCUENTOSLEYOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARDESCUENTOSLEYCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARDESCUENTOSLEYCompleted(Me, New CONSULTARDESCUENTOSLEYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CONSULTAR_PLTIPOPLANILLA", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_PLTIPOPLANILLA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_PLTIPOPLANILLA", New Object() {PUSUARIO, PWD, PSUCURSAL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_PLTIPOPLANILLA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_PLTIPOPLANILLA", New Object() {PUSUARIO, PWD, PSUCURSAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_PLTIPOPLANILLA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLTIPOPLANILLAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String)
            Me.CONSULTAR_PLTIPOPLANILLAAsync(PUSUARIO, PWD, PSUCURSAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLTIPOPLANILLAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal userState As Object)
            If (Me.CONSULTAR_PLTIPOPLANILLAOperationCompleted Is Nothing) Then
                Me.CONSULTAR_PLTIPOPLANILLAOperationCompleted = AddressOf Me.OnCONSULTAR_PLTIPOPLANILLAOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_PLTIPOPLANILLA", New Object() {PUSUARIO, PWD, PSUCURSAL}, Me.CONSULTAR_PLTIPOPLANILLAOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_PLTIPOPLANILLAOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_PLTIPOPLANILLACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_PLTIPOPLANILLACompleted(Me, New CONSULTAR_PLTIPOPLANILLACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/MODIFICAR_PLDESCUENTOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICAR_PLDESCUENTOS( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal CORRELATIVO As Integer,  _
                    ByVal CODEMPLEADO As String,  _
                    ByVal CODTIPODESCUENTO As String,  _
                    ByVal NOPLAZA As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal TIPOPLANILLA As String,  _
                    ByVal MONTOCUOTA As Double,  _
                    ByVal NOCUOTAS As Integer,  _
                    ByVal FECHAINICIO As Date,  _
                    ByVal REFERENCIA As String,  _
                    ByVal FECHAFIN As Date,  _
                    ByVal ESTADO As String,  _
                    ByVal FIJO As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PAGO As String,  _
                    ByVal FECHAACTU As Date) As Integer
            Dim results() As Object = Me.Invoke("MODIFICAR_PLDESCUENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, CODEMPLEADO, CODTIPODESCUENTO, NOPLAZA, MONTO, SALDO, TIPOPLANILLA, MONTOCUOTA, NOCUOTAS, FECHAINICIO, REFERENCIA, FECHAFIN, ESTADO, FIJO, OBSERVACION, PAGO, FECHAACTU})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICAR_PLDESCUENTOS( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal CORRELATIVO As Integer,  _
                    ByVal CODEMPLEADO As String,  _
                    ByVal CODTIPODESCUENTO As String,  _
                    ByVal NOPLAZA As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal TIPOPLANILLA As String,  _
                    ByVal MONTOCUOTA As Double,  _
                    ByVal NOCUOTAS As Integer,  _
                    ByVal FECHAINICIO As Date,  _
                    ByVal REFERENCIA As String,  _
                    ByVal FECHAFIN As Date,  _
                    ByVal ESTADO As String,  _
                    ByVal FIJO As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PAGO As String,  _
                    ByVal FECHAACTU As Date,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICAR_PLDESCUENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, CODEMPLEADO, CODTIPODESCUENTO, NOPLAZA, MONTO, SALDO, TIPOPLANILLA, MONTOCUOTA, NOCUOTAS, FECHAINICIO, REFERENCIA, FECHAFIN, ESTADO, FIJO, OBSERVACION, PAGO, FECHAACTU}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICAR_PLDESCUENTOS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_PLDESCUENTOSAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal CORRELATIVO As Integer,  _
                    ByVal CODEMPLEADO As String,  _
                    ByVal CODTIPODESCUENTO As String,  _
                    ByVal NOPLAZA As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal TIPOPLANILLA As String,  _
                    ByVal MONTOCUOTA As Double,  _
                    ByVal NOCUOTAS As Integer,  _
                    ByVal FECHAINICIO As Date,  _
                    ByVal REFERENCIA As String,  _
                    ByVal FECHAFIN As Date,  _
                    ByVal ESTADO As String,  _
                    ByVal FIJO As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PAGO As String,  _
                    ByVal FECHAACTU As Date)
            Me.MODIFICAR_PLDESCUENTOSAsync(PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, CODEMPLEADO, CODTIPODESCUENTO, NOPLAZA, MONTO, SALDO, TIPOPLANILLA, MONTOCUOTA, NOCUOTAS, FECHAINICIO, REFERENCIA, FECHAFIN, ESTADO, FIJO, OBSERVACION, PAGO, FECHAACTU, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_PLDESCUENTOSAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal CORRELATIVO As Integer,  _
                    ByVal CODEMPLEADO As String,  _
                    ByVal CODTIPODESCUENTO As String,  _
                    ByVal NOPLAZA As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal TIPOPLANILLA As String,  _
                    ByVal MONTOCUOTA As Double,  _
                    ByVal NOCUOTAS As Integer,  _
                    ByVal FECHAINICIO As Date,  _
                    ByVal REFERENCIA As String,  _
                    ByVal FECHAFIN As Date,  _
                    ByVal ESTADO As String,  _
                    ByVal FIJO As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PAGO As String,  _
                    ByVal FECHAACTU As Date,  _
                    ByVal userState As Object)
            If (Me.MODIFICAR_PLDESCUENTOSOperationCompleted Is Nothing) Then
                Me.MODIFICAR_PLDESCUENTOSOperationCompleted = AddressOf Me.OnMODIFICAR_PLDESCUENTOSOperationCompleted
            End If
            Me.InvokeAsync("MODIFICAR_PLDESCUENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, CODEMPLEADO, CODTIPODESCUENTO, NOPLAZA, MONTO, SALDO, TIPOPLANILLA, MONTOCUOTA, NOCUOTAS, FECHAINICIO, REFERENCIA, FECHAFIN, ESTADO, FIJO, OBSERVACION, PAGO, FECHAACTU}, Me.MODIFICAR_PLDESCUENTOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICAR_PLDESCUENTOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICAR_PLDESCUENTOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICAR_PLDESCUENTOSCompleted(Me, New MODIFICAR_PLDESCUENTOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CONSULTAR_PLDESCUENTOS2", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_PLDESCUENTOS2(ByVal PUSUARIO As String, ByVal PWD As String, ByVal SUCURSAL As String, ByVal CORRELATIVO As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_PLDESCUENTOS2", New Object() {PUSUARIO, PWD, SUCURSAL, CORRELATIVO})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_PLDESCUENTOS2(ByVal PUSUARIO As String, ByVal PWD As String, ByVal SUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_PLDESCUENTOS2", New Object() {PUSUARIO, PWD, SUCURSAL, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_PLDESCUENTOS2(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLDESCUENTOS2Async(ByVal PUSUARIO As String, ByVal PWD As String, ByVal SUCURSAL As String, ByVal CORRELATIVO As Integer)
            Me.CONSULTAR_PLDESCUENTOS2Async(PUSUARIO, PWD, SUCURSAL, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLDESCUENTOS2Async(ByVal PUSUARIO As String, ByVal PWD As String, ByVal SUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.CONSULTAR_PLDESCUENTOS2OperationCompleted Is Nothing) Then
                Me.CONSULTAR_PLDESCUENTOS2OperationCompleted = AddressOf Me.OnCONSULTAR_PLDESCUENTOS2OperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_PLDESCUENTOS2", New Object() {PUSUARIO, PWD, SUCURSAL, CORRELATIVO}, Me.CONSULTAR_PLDESCUENTOS2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_PLDESCUENTOS2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_PLDESCUENTOS2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_PLDESCUENTOS2Completed(Me, New CONSULTAR_PLDESCUENTOS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CONSULTAR_PLEMPLEADOS_ACTIVOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_PLEMPLEADOS_ACTIVOS() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_PLEMPLEADOS_ACTIVOS", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_PLEMPLEADOS_ACTIVOS(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_PLEMPLEADOS_ACTIVOS", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_PLEMPLEADOS_ACTIVOS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLEMPLEADOS_ACTIVOSAsync()
            Me.CONSULTAR_PLEMPLEADOS_ACTIVOSAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLEMPLEADOS_ACTIVOSAsync(ByVal userState As Object)
            If (Me.CONSULTAR_PLEMPLEADOS_ACTIVOSOperationCompleted Is Nothing) Then
                Me.CONSULTAR_PLEMPLEADOS_ACTIVOSOperationCompleted = AddressOf Me.OnCONSULTAR_PLEMPLEADOS_ACTIVOSOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_PLEMPLEADOS_ACTIVOS", New Object(-1) {}, Me.CONSULTAR_PLEMPLEADOS_ACTIVOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_PLEMPLEADOS_ACTIVOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_PLEMPLEADOS_ACTIVOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_PLEMPLEADOS_ACTIVOSCompleted(Me, New CONSULTAR_PLEMPLEADOS_ACTIVOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CONSULTAR_PLDIASTRABAJADOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_PLDIASTRABAJADOS(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal FILTRO As Integer, ByVal CORRELATIVO As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, FILTRO, CORRELATIVO})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_PLDIASTRABAJADOS(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal FILTRO As Integer, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, FILTRO, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_PLDIASTRABAJADOS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLDIASTRABAJADOSAsync(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal FILTRO As Integer, ByVal CORRELATIVO As Integer)
            Me.CONSULTAR_PLDIASTRABAJADOSAsync(FECHAINICIO, FECHAFIN, CODEMPLEADO, FILTRO, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_PLDIASTRABAJADOSAsync(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal FILTRO As Integer, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.CONSULTAR_PLDIASTRABAJADOSOperationCompleted Is Nothing) Then
                Me.CONSULTAR_PLDIASTRABAJADOSOperationCompleted = AddressOf Me.OnCONSULTAR_PLDIASTRABAJADOSOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, FILTRO, CORRELATIVO}, Me.CONSULTAR_PLDIASTRABAJADOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_PLDIASTRABAJADOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_PLDIASTRABAJADOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_PLDIASTRABAJADOSCompleted(Me, New CONSULTAR_PLDIASTRABAJADOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/INSERTAR_PLDIASTRABAJADOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTAR_PLDIASTRABAJADOS(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal TOTALDIAS As Integer, ByVal FECHAACTUAL As Date, ByVal USUARIO As String, ByVal OPCION As Integer) As Integer
            Dim results() As Object = Me.Invoke("INSERTAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, TOTALDIAS, FECHAACTUAL, USUARIO, OPCION})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTAR_PLDIASTRABAJADOS(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal TOTALDIAS As Integer, ByVal FECHAACTUAL As Date, ByVal USUARIO As String, ByVal OPCION As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, TOTALDIAS, FECHAACTUAL, USUARIO, OPCION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTAR_PLDIASTRABAJADOS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTAR_PLDIASTRABAJADOSAsync(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal TOTALDIAS As Integer, ByVal FECHAACTUAL As Date, ByVal USUARIO As String, ByVal OPCION As Integer)
            Me.INSERTAR_PLDIASTRABAJADOSAsync(FECHAINICIO, FECHAFIN, CODEMPLEADO, TOTALDIAS, FECHAACTUAL, USUARIO, OPCION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTAR_PLDIASTRABAJADOSAsync(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal TOTALDIAS As Integer, ByVal FECHAACTUAL As Date, ByVal USUARIO As String, ByVal OPCION As Integer, ByVal userState As Object)
            If (Me.INSERTAR_PLDIASTRABAJADOSOperationCompleted Is Nothing) Then
                Me.INSERTAR_PLDIASTRABAJADOSOperationCompleted = AddressOf Me.OnINSERTAR_PLDIASTRABAJADOSOperationCompleted
            End If
            Me.InvokeAsync("INSERTAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, TOTALDIAS, FECHAACTUAL, USUARIO, OPCION}, Me.INSERTAR_PLDIASTRABAJADOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTAR_PLDIASTRABAJADOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTAR_PLDIASTRABAJADOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTAR_PLDIASTRABAJADOSCompleted(Me, New INSERTAR_PLDIASTRABAJADOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/MODIFICAR_PLDIASTRABAJADOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICAR_PLDIASTRABAJADOS(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal TOTALDIAS As Integer, ByVal FECHAACTUAL As Date, ByVal USUARIO As String, ByVal ID As Integer) As Integer
            Dim results() As Object = Me.Invoke("MODIFICAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, TOTALDIAS, FECHAACTUAL, USUARIO, ID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICAR_PLDIASTRABAJADOS(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal TOTALDIAS As Integer, ByVal FECHAACTUAL As Date, ByVal USUARIO As String, ByVal ID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, TOTALDIAS, FECHAACTUAL, USUARIO, ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICAR_PLDIASTRABAJADOS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_PLDIASTRABAJADOSAsync(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal TOTALDIAS As Integer, ByVal FECHAACTUAL As Date, ByVal USUARIO As String, ByVal ID As Integer)
            Me.MODIFICAR_PLDIASTRABAJADOSAsync(FECHAINICIO, FECHAFIN, CODEMPLEADO, TOTALDIAS, FECHAACTUAL, USUARIO, ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_PLDIASTRABAJADOSAsync(ByVal FECHAINICIO As Date, ByVal FECHAFIN As Date, ByVal CODEMPLEADO As String, ByVal TOTALDIAS As Integer, ByVal FECHAACTUAL As Date, ByVal USUARIO As String, ByVal ID As Integer, ByVal userState As Object)
            If (Me.MODIFICAR_PLDIASTRABAJADOSOperationCompleted Is Nothing) Then
                Me.MODIFICAR_PLDIASTRABAJADOSOperationCompleted = AddressOf Me.OnMODIFICAR_PLDIASTRABAJADOSOperationCompleted
            End If
            Me.InvokeAsync("MODIFICAR_PLDIASTRABAJADOS", New Object() {FECHAINICIO, FECHAFIN, CODEMPLEADO, TOTALDIAS, FECHAACTUAL, USUARIO, ID}, Me.MODIFICAR_PLDIASTRABAJADOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICAR_PLDIASTRABAJADOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICAR_PLDIASTRABAJADOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICAR_PLDIASTRABAJADOSCompleted(Me, New MODIFICAR_PLDIASTRABAJADOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ELIMINAR_PLDIASTRABAJADOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ELIMINAR_PLDIASTRABAJADOS(ByVal CORRELATIVO As Integer) As Integer
            Dim results() As Object = Me.Invoke("ELIMINAR_PLDIASTRABAJADOS", New Object() {CORRELATIVO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginELIMINAR_PLDIASTRABAJADOS(ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ELIMINAR_PLDIASTRABAJADOS", New Object() {CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndELIMINAR_PLDIASTRABAJADOS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ELIMINAR_PLDIASTRABAJADOSAsync(ByVal CORRELATIVO As Integer)
            Me.ELIMINAR_PLDIASTRABAJADOSAsync(CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ELIMINAR_PLDIASTRABAJADOSAsync(ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.ELIMINAR_PLDIASTRABAJADOSOperationCompleted Is Nothing) Then
                Me.ELIMINAR_PLDIASTRABAJADOSOperationCompleted = AddressOf Me.OnELIMINAR_PLDIASTRABAJADOSOperationCompleted
            End If
            Me.InvokeAsync("ELIMINAR_PLDIASTRABAJADOS", New Object() {CORRELATIVO}, Me.ELIMINAR_PLDIASTRABAJADOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnELIMINAR_PLDIASTRABAJADOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ELIMINAR_PLDIASTRABAJADOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ELIMINAR_PLDIASTRABAJADOSCompleted(Me, New ELIMINAR_PLDIASTRABAJADOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Aguinaldo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Aguinaldo(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Aguinaldo", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginAguinaldo(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Aguinaldo", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAguinaldo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AguinaldoAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.AguinaldoAsync(pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AguinaldoAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.AguinaldoOperationCompleted Is Nothing) Then
                Me.AguinaldoOperationCompleted = AddressOf Me.OnAguinaldoOperationCompleted
            End If
            Me.InvokeAsync("Aguinaldo", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.AguinaldoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAguinaldoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AguinaldoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AguinaldoCompleted(Me, New AguinaldoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ELIMINARPLANILLA", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ELIMINARPLANILLA(ByVal CODPLANILLA As Integer) As Integer
            Dim results() As Object = Me.Invoke("ELIMINARPLANILLA", New Object() {CODPLANILLA})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginELIMINARPLANILLA(ByVal CODPLANILLA As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ELIMINARPLANILLA", New Object() {CODPLANILLA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndELIMINARPLANILLA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ELIMINARPLANILLAAsync(ByVal CODPLANILLA As Integer)
            Me.ELIMINARPLANILLAAsync(CODPLANILLA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ELIMINARPLANILLAAsync(ByVal CODPLANILLA As Integer, ByVal userState As Object)
            If (Me.ELIMINARPLANILLAOperationCompleted Is Nothing) Then
                Me.ELIMINARPLANILLAOperationCompleted = AddressOf Me.OnELIMINARPLANILLAOperationCompleted
            End If
            Me.InvokeAsync("ELIMINARPLANILLA", New Object() {CODPLANILLA}, Me.ELIMINARPLANILLAOperationCompleted, userState)
        End Sub
        
        Private Sub OnELIMINARPLANILLAOperationCompleted(ByVal arg As Object)
            If (Not (Me.ELIMINARPLANILLACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ELIMINARPLANILLACompleted(Me, New ELIMINARPLANILLACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/RPT_DETALLEPLANILLAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_DETALLEPLANILLAS(ByVal CODPLANILLA As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_DETALLEPLANILLAS", New Object() {CODPLANILLA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_DETALLEPLANILLAS(ByVal CODPLANILLA As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_DETALLEPLANILLAS", New Object() {CODPLANILLA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_DETALLEPLANILLAS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_DETALLEPLANILLASAsync(ByVal CODPLANILLA As Integer)
            Me.RPT_DETALLEPLANILLASAsync(CODPLANILLA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_DETALLEPLANILLASAsync(ByVal CODPLANILLA As Integer, ByVal userState As Object)
            If (Me.RPT_DETALLEPLANILLASOperationCompleted Is Nothing) Then
                Me.RPT_DETALLEPLANILLASOperationCompleted = AddressOf Me.OnRPT_DETALLEPLANILLASOperationCompleted
            End If
            Me.InvokeAsync("RPT_DETALLEPLANILLAS", New Object() {CODPLANILLA}, Me.RPT_DETALLEPLANILLASOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_DETALLEPLANILLASOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_DETALLEPLANILLASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_DETALLEPLANILLASCompleted(Me, New RPT_DETALLEPLANILLASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/RPT_PLAN_SUCURSAL", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_PLAN_SUCURSAL(ByVal CODPLANILLA As Integer, ByVal CODSUCURSAL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_PLAN_SUCURSAL", New Object() {CODPLANILLA, CODSUCURSAL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_PLAN_SUCURSAL(ByVal CODPLANILLA As Integer, ByVal CODSUCURSAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_PLAN_SUCURSAL", New Object() {CODPLANILLA, CODSUCURSAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_PLAN_SUCURSAL(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_PLAN_SUCURSALAsync(ByVal CODPLANILLA As Integer, ByVal CODSUCURSAL As String)
            Me.RPT_PLAN_SUCURSALAsync(CODPLANILLA, CODSUCURSAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_PLAN_SUCURSALAsync(ByVal CODPLANILLA As Integer, ByVal CODSUCURSAL As String, ByVal userState As Object)
            If (Me.RPT_PLAN_SUCURSALOperationCompleted Is Nothing) Then
                Me.RPT_PLAN_SUCURSALOperationCompleted = AddressOf Me.OnRPT_PLAN_SUCURSALOperationCompleted
            End If
            Me.InvokeAsync("RPT_PLAN_SUCURSAL", New Object() {CODPLANILLA, CODSUCURSAL}, Me.RPT_PLAN_SUCURSALOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_PLAN_SUCURSALOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_PLAN_SUCURSALCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_PLAN_SUCURSALCompleted(Me, New RPT_PLAN_SUCURSALCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/Bonificacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Bonificacion(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Bonificacion", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginBonificacion(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Bonificacion", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBonificacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BonificacionAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.BonificacionAsync(pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BonificacionAsync(ByVal pCodTipoPlanilla As String, ByVal pCodDepto As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.BonificacionOperationCompleted Is Nothing) Then
                Me.BonificacionOperationCompleted = AddressOf Me.OnBonificacionOperationCompleted
            End If
            Me.InvokeAsync("Bonificacion", New Object() {pCodTipoPlanilla, pCodDepto, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.BonificacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnBonificacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.BonificacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BonificacionCompleted(Me, New BonificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/CierrePlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CierrePlanilla(ByVal pCodTipoPlanilla As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal dsPlan As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal QUINCENA As Integer) As String
            Dim results() As Object = Me.Invoke("CierrePlanilla", New Object() {pCodTipoPlanilla, pFechaIni, pFechaFin, dsPlan, pUsuario, pPassword, pSucursal, QUINCENA})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCierrePlanilla(ByVal pCodTipoPlanilla As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal dsPlan As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal QUINCENA As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CierrePlanilla", New Object() {pCodTipoPlanilla, pFechaIni, pFechaFin, dsPlan, pUsuario, pPassword, pSucursal, QUINCENA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCierrePlanilla(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CierrePlanillaAsync(ByVal pCodTipoPlanilla As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal dsPlan As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal QUINCENA As Integer)
            Me.CierrePlanillaAsync(pCodTipoPlanilla, pFechaIni, pFechaFin, dsPlan, pUsuario, pPassword, pSucursal, QUINCENA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CierrePlanillaAsync(ByVal pCodTipoPlanilla As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal dsPlan As System.Data.DataSet, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal QUINCENA As Integer, ByVal userState As Object)
            If (Me.CierrePlanillaOperationCompleted Is Nothing) Then
                Me.CierrePlanillaOperationCompleted = AddressOf Me.OnCierrePlanillaOperationCompleted
            End If
            Me.InvokeAsync("CierrePlanilla", New Object() {pCodTipoPlanilla, pFechaIni, pFechaFin, dsPlan, pUsuario, pPassword, pSucursal, QUINCENA}, Me.CierrePlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCierrePlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CierrePlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CierrePlanillaCompleted(Me, New CierrePlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarDetallePlanilla", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDetallePlanilla(ByVal pNoPlanilla As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDetallePlanilla", New Object() {pNoPlanilla, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDetallePlanilla(ByVal pNoPlanilla As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDetallePlanilla", New Object() {pNoPlanilla, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDetallePlanilla(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetallePlanillaAsync(ByVal pNoPlanilla As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarDetallePlanillaAsync(pNoPlanilla, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetallePlanillaAsync(ByVal pNoPlanilla As String, ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDetallePlanillaOperationCompleted Is Nothing) Then
                Me.ConsultarDetallePlanillaOperationCompleted = AddressOf Me.OnConsultarDetallePlanillaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDetallePlanilla", New Object() {pNoPlanilla, pFechaIni, pFechaFin, pUsuario, pPassword, pSucursal}, Me.ConsultarDetallePlanillaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDetallePlanillaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDetallePlanillaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDetallePlanillaCompleted(Me, New ConsultarDetallePlanillaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarEmpleados", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEmpleados(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEmpleados", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEmpleados(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEmpleados", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEmpleados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEmpleadosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarEmpleadosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEmpleadosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEmpleadosOperationCompleted Is Nothing) Then
                Me.ConsultarEmpleadosOperationCompleted = AddressOf Me.OnConsultarEmpleadosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEmpleados", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarEmpleadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEmpleadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEmpleadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEmpleadosCompleted(Me, New ConsultarEmpleadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarEmpleadosxDepto", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEmpleadosxDepto(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pSalario As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEmpleadosxDepto", New Object() {pCampos, pFiltro, pOrden, pSalario, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEmpleadosxDepto(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pSalario As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEmpleadosxDepto", New Object() {pCampos, pFiltro, pOrden, pSalario, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEmpleadosxDepto(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEmpleadosxDeptoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pSalario As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarEmpleadosxDeptoAsync(pCampos, pFiltro, pOrden, pSalario, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEmpleadosxDeptoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pSalario As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEmpleadosxDeptoOperationCompleted Is Nothing) Then
                Me.ConsultarEmpleadosxDeptoOperationCompleted = AddressOf Me.OnConsultarEmpleadosxDeptoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEmpleadosxDepto", New Object() {pCampos, pFiltro, pOrden, pSalario, pUsuario, pPassword, pSucursal}, Me.ConsultarEmpleadosxDeptoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEmpleadosxDeptoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEmpleadosxDeptoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEmpleadosxDeptoCompleted(Me, New ConsultarEmpleadosxDeptoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLAbonos", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLAbonos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLAbonos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLAbonos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLAbonos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLAbonos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLAbonosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLAbonosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLAbonosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLAbonosOperationCompleted Is Nothing) Then
                Me.ConsultarPLAbonosOperationCompleted = AddressOf Me.OnConsultarPLAbonosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLAbonos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLAbonosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLAbonosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLAbonosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLAbonosCompleted(Me, New ConsultarPLAbonosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLAcciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLAcciones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLAcciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLAcciones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLAcciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLAcciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLAccionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLAccionesAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLAccionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLAccionesOperationCompleted Is Nothing) Then
                Me.ConsultarPLAccionesOperationCompleted = AddressOf Me.OnConsultarPLAccionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLAcciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLAccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLAccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLAccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLAccionesCompleted(Me, New ConsultarPLAccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLAreas", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLAreas(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLAreas", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLAreas(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLAreas", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLAreas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLAreasAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLAreasAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLAreasAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLAreasOperationCompleted Is Nothing) Then
                Me.ConsultarPLAreasOperationCompleted = AddressOf Me.OnConsultarPLAreasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLAreas", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLAreasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLAreasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLAreasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLAreasCompleted(Me, New ConsultarPLAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLAusentismo", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLAusentismo(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLAusentismo", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLAusentismo(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLAusentismo", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLAusentismo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLAusentismoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLAusentismoAsync(pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLAusentismoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pMostrarNombre As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLAusentismoOperationCompleted Is Nothing) Then
                Me.ConsultarPLAusentismoOperationCompleted = AddressOf Me.OnConsultarPLAusentismoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLAusentismo", New Object() {pCampos, pFiltro, pOrden, pMostrarNombre, pUsuario, pPassword, pSucursal}, Me.ConsultarPLAusentismoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLAusentismoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLAusentismoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLAusentismoCompleted(Me, New ConsultarPLAusentismoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibPlanilla/ConsultarPLCapacitaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", ResponseNamespace:="http://tempuri.org/wsSif/wsLibPlanilla", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPLCapacitaciones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPLCapacitaciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPLCapacitaciones(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPLCapacitaciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPLCapacitaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLCapacitacionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPLCapacitacionesAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPLCapacitacionesAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPLCapacitacionesOperationCompleted Is Nothing) Then
                Me.ConsultarPLCapacitacionesOperationCompleted = AddressOf Me.OnConsultarPLCapacitacionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPLCapacitaciones", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPLCapacitacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPLCapacitacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPLCapacitacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPLCapacitacionesCompleted(Me, New ConsultarPLCapacitacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLCapacitacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLCapacitacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLCapacitacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLCargosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLCargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLCargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLDescuentosISSSCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLDescuentosISSSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLDescuentosISSSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLDescuentosRentaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLDescuentosRentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLDescuentosRentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLEmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLEmpleadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLEmpleadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLGradoAcademicoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLGradoAcademicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLGradoAcademicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLHorasExtrasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLHorasExtrasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLHorasExtrasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLInstitucionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLInstitucionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLInstitucionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLMotivoAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLMotivoAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLMotivoAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLMotivoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLMotivoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLMotivoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLPensionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLPensionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLPensionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLPlazasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLPlazasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLPlazasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLTipoDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLTipoDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLTipoDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLTipoHoraExtraCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLTipoHoraExtraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLTipoHoraExtraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLTipoPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLTipoPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLTipoPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLTipoPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLTipoPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLTipoPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCorrelativoAbonosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoAbonosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoAbonosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerNoPlazaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerNoPlazaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerNoPlazaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Pagos_RojoCompletedEventHandler(ByVal sender As Object, ByVal e As Pagos_RojoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Pagos_RojoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReferenciaLaboralCompletedEventHandler(ByVal sender As Object, ByVal e As ReferenciaLaboralCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReferenciaLaboralCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_AusentismosCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_AusentismosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_AusentismosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_Datos_EmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_Datos_EmpleadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_Datos_EmpleadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_DescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_DescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_DescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_VacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_VacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_VacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As VacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarEliminarPLMotivoAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarEliminarPLMotivoAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarEliminarPLMotivoAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarEliminarPLMotivoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarEliminarPLMotivoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarEliminarPLMotivoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarEliminarPLTipoDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarEliminarPLTipoDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarEliminarPLTipoDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarEliminarPLTipoHoraExtraCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarEliminarPLTipoHoraExtraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarEliminarPLTipoHoraExtraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarEliminarPLTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarEliminarPLTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarEliminarPLTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarEliminarPLTipoPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarEliminarPLTipoPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarEliminarPLTipoPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarEliminarPLTipoPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarEliminarPLTipoPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarEliminarPLTipoPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLCargosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLCargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLCargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLDescuentosISSSCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLDescuentosISSSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLDescuentosISSSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLDescuentosRentaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLDescuentosRentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLDescuentosRentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLDescuentosTipoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLDescuentosTipoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLDescuentosTipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLEmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLEmpleadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLEmpleadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLGradoAcademicoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLGradoAcademicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLGradoAcademicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLHorasExtrasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLHorasExtrasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLHorasExtrasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLInstitucionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLInstitucionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLInstitucionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLMotivoAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLMotivoAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLMotivoAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLMotivoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLMotivoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLMotivoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLPensionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLPensionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLPensionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLPlazasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLPlazasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLPlazasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLTipoDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLTipoDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLTipoDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLTipoHoraExtraCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLTipoHoraExtraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLTipoHoraExtraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLTipoPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLTipoPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLTipoPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLTipoPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLTipoPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLTipoPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLAccionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLAccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLAccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLAreasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLAreasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLAreasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLAreasVerificacionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLAreasVerificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLAreasVerificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLCapacitacionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLCapacitacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLCapacitacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLCargosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLCargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLCargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLCargosVerificacionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLCargosVerificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLCargosVerificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLDepartamentosVerificacionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLDepartamentosVerificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLDepartamentosVerificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLDescuentosRentaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLDescuentosRentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLDescuentosRentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLEmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLEmpleadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLEmpleadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLGradoAcademicoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLGradoAcademicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLGradoAcademicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLHorasExtrasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLHorasExtrasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLHorasExtrasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLInstitucionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLInstitucionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLInstitucionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLInstitucionesVerificacionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLInstitucionesVerificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLInstitucionesVerificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLMotivoAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLMotivoAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLMotivoAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLMotivoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLMotivoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLMotivoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLPensionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLPensionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLPensionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLPensionesVerificacionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLPensionesVerificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLPensionesVerificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLPlazasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLPlazasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLPlazasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLPlazasVerificacionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLPlazasVerificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLPlazasVerificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLTipoDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLTipoDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLTipoDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLTipoHoraExtraCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLTipoHoraExtraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLTipoHoraExtraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLTipoPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLTipoPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLTipoPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLTipoPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLTipoPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLTipoPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPLVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPLVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPLVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GeneraPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GenerarCarneEmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As GenerarCarneEmpleadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerarCarneEmpleadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GenerarPartidaCompletedEventHandler(ByVal sender As Object, ByVal e As GenerarPartidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerarPartidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ImportarFileAFPCompletedEventHandler(ByVal sender As Object, ByVal e As ImportarFileAFPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportarFileAFPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ImportarFileNBCompletedEventHandler(ByVal sender As Object, ByVal e As ImportarFileNBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportarFileNBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ImprimirPLAbonosCompletedEventHandler(ByVal sender As Object, ByVal e As ImprimirPLAbonosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImprimirPLAbonosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLAbonosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLAbonosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLAbonosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLAccionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLAccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLAccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLAreasCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLAreasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLAreasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLCapacitacionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLCapacitacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLCapacitacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLCargosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLCargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLCargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLDescuentosISSSCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLDescuentosISSSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLDescuentosISSSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLDescuentosRentaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLDescuentosRentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLDescuentosRentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLEmpleadoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLEmpleadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLEmpleadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLGradoAcademicoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLGradoAcademicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLGradoAcademicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLHorasExtrasCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLHorasExtrasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLHorasExtrasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLInstitucionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLInstitucionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLInstitucionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLMotivoAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLMotivoAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLMotivoAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLMotivoRetiroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLMotivoRetiroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLMotivoRetiroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLPensionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLPensionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLPensionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLPlazasCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLPlazasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLPlazasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLTipoDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLTipoDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLTipoDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLTipoHoraExtraCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLTipoHoraExtraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLTipoHoraExtraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLTipoPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLTipoPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLTipoPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLTipoPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLTipoPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLTipoPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertarPLVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPLVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPLVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLAbonosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLAbonosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLAbonosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLAccionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLAccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLAccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPLAreasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPLAreasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPLAreasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_PlVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_PlVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_PlVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Modificar_PlVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Modificar_PlVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Modificar_PlVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_PlVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_PlVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_PlVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Calculo_VacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Calculo_VacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Calculo_VacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_PlCalculoVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_PlCalculoVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_PlCalculoVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Modificar_PlCalculoVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Modificar_PlCalculoVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Modificar_PlCalculoVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_PlCalculoVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_PlCalculoVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_PlCalculoVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlCalculoVacacionesCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlCalculoVacacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlCalculoVacacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GuardarPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As GuardarPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GuardarPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Total_ComisionesGerencialesCompletedEventHandler(ByVal sender As Object, ByVal e As Total_ComisionesGerencialesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Total_ComisionesGerencialesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Total_Comision_EjecutivoCompletedEventHandler(ByVal sender As Object, ByVal e As Total_Comision_EjecutivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Total_Comision_EjecutivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_SucursalesCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_SucursalesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_SucursalesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Bonificacion_AnualCompletedEventHandler(ByVal sender As Object, ByVal e As Bonificacion_AnualCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Bonificacion_AnualCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_PlDescuentosISSSCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_PlDescuentosISSSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_PlDescuentosISSSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Modificar_PlDescuentosISSSCompletedEventHandler(ByVal sender As Object, ByVal e As Modificar_PlDescuentosISSSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Modificar_PlDescuentosISSSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_PlDescuentosISSSCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_PlDescuentosISSSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_PlDescuentosISSSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlDescuentosISSSCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlDescuentosISSSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlDescuentosISSSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Detalle_Ingresos_BoletaPagosCompletedEventHandler(ByVal sender As Object, ByVal e As Detalle_Ingresos_BoletaPagosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Detalle_Ingresos_BoletaPagosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Detalle_Descuentos_BoletaPagosCompletedEventHandler(ByVal sender As Object, ByVal e As Detalle_Descuentos_BoletaPagosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Detalle_Descuentos_BoletaPagosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPlEmpleadosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPlEmpleadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPlEmpleadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EliminarPlEmpleadosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPlEmpleadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPlEmpleadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ModificarPlEmpleadosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPlEmpleadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPlEmpleadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub IngresarPlEmpleadosCompletedEventHandler(ByVal sender As Object, ByVal e As IngresarPlEmpleadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IngresarPlEmpleadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EnviarCorreoCompletedEventHandler(ByVal sender As Object, ByVal e As EnviarCorreoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EnviarCorreoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property mensaje() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CorreoEmpleados_BoletaCompletedEventHandler(ByVal sender As Object, ByVal e As CorreoEmpleados_BoletaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CorreoEmpleados_BoletaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Reporte_BoletaPagosCompletedEventHandler(ByVal sender As Object, ByVal e As Reporte_BoletaPagosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Reporte_BoletaPagosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlEmpleados2CompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlEmpleados2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlEmpleados2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteEmpleadosActivosCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteEmpleadosActivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteEmpleadosActivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ReporteConstanciaSalarioCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteConstanciaSalarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteConstanciaSalarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_PlIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_PlIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_PlIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Modificar_PlIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As Modificar_PlIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Modificar_PlIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_PlIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_PlIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_PlIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlPlanillasCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlPlanillasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlPlanillasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Rpt_PlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As Rpt_PlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rpt_PlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Rpt_PlanillaBonificacionCompletedEventHandler(ByVal sender As Object, ByVal e As Rpt_PlanillaBonificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rpt_PlanillaBonificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Rpt_PlanillaAguinaldoCompletedEventHandler(ByVal sender As Object, ByVal e As Rpt_PlanillaAguinaldoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rpt_PlanillaAguinaldoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Rpt_PlanillaComisionesCompletedEventHandler(ByVal sender As Object, ByVal e As Rpt_PlanillaComisionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rpt_PlanillaComisionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub VerificarDesembolsoCompletedEventHandler(ByVal sender As Object, ByVal e As VerificarDesembolsoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificarDesembolsoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ProcesarDesembolsoCompletedEventHandler(ByVal sender As Object, ByVal e As ProcesarDesembolsoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcesarDesembolsoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_PlPlanillasCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_PlPlanillasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_PlPlanillasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_PlDetPlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_PlDetPlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_PlDetPlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ValidarCasosEspecialesCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarCasosEspecialesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarCasosEspecialesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InhabilitarDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As InhabilitarDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InhabilitarDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlDescuentosCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlDescuentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlDescuentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GenerarPlanilla2CompletedEventHandler(ByVal sender As Object, ByVal e As GenerarPlanilla2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerarPlanilla2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ValidarIngresoDescuentoCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarIngresoDescuentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarIngresoDescuentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlPlazasCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlPlazasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlPlazasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_PlPlazasCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_PlPlazasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_PlPlazasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Modificar_PlPlazasCompletedEventHandler(ByVal sender As Object, ByVal e As Modificar_PlPlazasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Modificar_PlPlazasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_PlPlazasCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_PlPlazasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_PlPlazasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlCargosCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlCargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlCargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Eliminar_PlDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_PlDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_PlDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Modificar_PlDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As Modificar_PlDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Modificar_PlDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Insertar_PlDepartamentosCompletedEventHandler(ByVal sender As Object, ByVal e As Insertar_PlDepartamentosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insertar_PlDepartamentosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub Consultar_PlAreasCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PlAreasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PlAreasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CONSULTAR_PLEMPLEADOSCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_PLEMPLEADOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_PLEMPLEADOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CONSULTAR_PLDEPARTAMENTOSCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_PLDEPARTAMENTOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_PLDEPARTAMENTOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub MODIFICAR_DESCUENTOSLEYCompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICAR_DESCUENTOSLEYCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICAR_DESCUENTOSLEYCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CONSULTAR_PLANILLASCREADASCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_PLANILLASCREADASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_PLANILLASCREADASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CONSULTARDESCUENTOSLEYCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARDESCUENTOSLEYCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARDESCUENTOSLEYCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CONSULTAR_PLTIPOPLANILLACompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_PLTIPOPLANILLACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_PLTIPOPLANILLACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub MODIFICAR_PLDESCUENTOSCompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICAR_PLDESCUENTOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICAR_PLDESCUENTOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CONSULTAR_PLDESCUENTOS2CompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_PLDESCUENTOS2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_PLDESCUENTOS2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CONSULTAR_PLEMPLEADOS_ACTIVOSCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_PLEMPLEADOS_ACTIVOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_PLEMPLEADOS_ACTIVOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CONSULTAR_PLDIASTRABAJADOSCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_PLDIASTRABAJADOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_PLDIASTRABAJADOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub INSERTAR_PLDIASTRABAJADOSCompletedEventHandler(ByVal sender As Object, ByVal e As INSERTAR_PLDIASTRABAJADOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTAR_PLDIASTRABAJADOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub MODIFICAR_PLDIASTRABAJADOSCompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICAR_PLDIASTRABAJADOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICAR_PLDIASTRABAJADOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ELIMINAR_PLDIASTRABAJADOSCompletedEventHandler(ByVal sender As Object, ByVal e As ELIMINAR_PLDIASTRABAJADOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ELIMINAR_PLDIASTRABAJADOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AguinaldoCompletedEventHandler(ByVal sender As Object, ByVal e As AguinaldoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AguinaldoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ELIMINARPLANILLACompletedEventHandler(ByVal sender As Object, ByVal e As ELIMINARPLANILLACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ELIMINARPLANILLACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RPT_DETALLEPLANILLASCompletedEventHandler(ByVal sender As Object, ByVal e As RPT_DETALLEPLANILLASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_DETALLEPLANILLASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RPT_PLAN_SUCURSALCompletedEventHandler(ByVal sender As Object, ByVal e As RPT_PLAN_SUCURSALCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_PLAN_SUCURSALCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub BonificacionCompletedEventHandler(ByVal sender As Object, ByVal e As BonificacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BonificacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CierrePlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As CierrePlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CierrePlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarDetallePlanillaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDetallePlanillaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDetallePlanillaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEmpleadosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEmpleadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEmpleadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEmpleadosxDeptoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEmpleadosxDeptoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEmpleadosxDeptoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLAbonosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLAbonosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLAbonosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLAccionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLAccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLAccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLAreasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLAreasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLAreasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLAusentismoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLAusentismoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLAusentismoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPLCapacitacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPLCapacitacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPLCapacitacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
