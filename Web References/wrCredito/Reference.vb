'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace wrCredito
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="wsLibCredSoap", [Namespace]:="http://tempuri.org/wsSif/wsLibCred")>  _
    Partial Public Class wsLibCred
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private InsertarVehiculosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListadoCarteraPrestamoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificaClaveGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarAcreedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarBCEmbargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarBienInmuebleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarBitacoraGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCBBienesEmbargadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCBDocumentosxRecuperarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarCBHistDocumentosxRecuperarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDatGralOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDespachoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDetGarantiasPrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDICOMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarDuenosInmuebleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarEmpresaValuadoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarGarantiasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarGarantiasPrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarGestionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarGestoresxCreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarObligacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarObservacionesxAnalisisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPagaduriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPRCategoriaRiesgoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPresentacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPrestamosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRangoLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRefBancariaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRefComercialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRefFamiliarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRefPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarRestriccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarSeccionRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarSolCredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarSolCredROperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarSolP2CreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarTipGarantOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarTipoCobranzaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarTipoCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarTipoGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarTipoGestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarValuosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarVehiculosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoBienInmuebleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoBitacoraGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoDatGralOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoDespachoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoEmpresaValuadoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoGarantiasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoGestionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoGestoresxCreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoObligacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoObservacionesxAnalisisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoPagaduriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoPrestamosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoRangoLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoRefBancariaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoRefComercialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoRefFamiliarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoRefPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoSeccionRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoSolCredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoSolCredROperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoSolP2CreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoTipGarantOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoTipoCobranzaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoTipoCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoTipoGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoTipoGestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoValuosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoVehiculosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReporteHistorialCategoriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TablaAmortizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VerificaGestorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGestoresxCreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGestoresxCredito_AsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarHistorialCategoriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarObligacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarObservacionesxAnalisisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPagaduriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPRCategoriaRiesgoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPrestamosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPrestamosxInscripcionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPRPrestamosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRangoLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRecuperacionGestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRefBancariaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRefComercialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRefFamiliarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarRefPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarResultadosDICOMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarSeccionRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarSolCredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarSolCredROperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarSolicitudCreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarSolP2CreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipGarantOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipoCobranzaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipoCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipoGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipoGestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarValuosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarVehiculosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreditosSinPagoMesXGestionCreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Determinacion_Reservas_ConsolidadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Documentos_CobrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Documentos_Protesto_ReservaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarAcreedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBCEmbargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBienInmuebleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarBitacoraGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCBBienesEmbargadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCBDocumentosxRecuperarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDatGralOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDespachoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDetGarantiasPrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDICOMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDuenosInmuebleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarEmpresaValuadoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarGarantiasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarGarantiasPrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarGestionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarGestoresxCreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarObligacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarObservacionesxAnalisisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPagaduriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPRCategoriaRiesgoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPresentacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarPrestamosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarRangoLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarRefBancariaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarRefComercialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarRefFamiliarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarRefPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarRestriccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarSeccionRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarSolCredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarSolCredROperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarSolP2CreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarTipGarantOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarTipoCobranzaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarTipoCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarTipoGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarTipoGestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarValuosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarVehiculosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExportacionDatos_SolicitudOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Gestiones_Diarias_CobranzaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaAcreedoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaDuenosInmuebleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaPresentacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBCEmbargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBienInmuebleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarBitacoraGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCBBienesEMbargadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCBDocumentosxRecuperarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarCBHistDocumentosxRecuperarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDatGralOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDespachoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDetGarantiasPrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarDICOMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarEmpresaValuadoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertaRestriccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarGarantiasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarGarantiasPrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarGestionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarGestoresxCreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarHistorialCategoriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarObligacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarObservacionesxAnalisisOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPagaduriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPRCategoriaRiesgoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarPrestamosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarRangoLineaCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarRefBancariaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarRefComercialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarRefFamiliarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarRefPersonalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarSeccionRegistroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarSolCredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarSolCredROperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarSolP2CreditoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarTipGarantOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarTipoCobranzaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarTipoCreditosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarTipoGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarTipoGestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarTipoIngresosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarValuosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RptContratoInvestigacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private calcularInteresMigracionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarMontoCancelacionPrestamoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RptContratoMutuoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCorrelativoPrestamoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rep_TablaAmortizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarPrDetRestriccionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarPrDetRestriccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarPrRestricciones_Criterios_PagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarPrDet_RestriccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPrDet_RestriccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPrRestriccionesCriteriosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IngresarRestricciones_CriteriosEvaluacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPrTipoEvaluacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarPrTipoEvaluacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarPrTipoEvaluacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarPrTipoEvaluacionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ingresarEvaluacionPagaduriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarPrGiroEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarPrGiroEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarPrGiroEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPrGiroEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPrTipoEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarPrTipoEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarPrTipoEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarPrTipoEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private eliminarPrCatClasificacionPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPrCatClasificacionPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarPrCatClasificacionPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarPrCatClasificacionPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPrCriteriosEvaluacionPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private modificarPrCriteriosEvaluacionPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarPrCriteriosEvaluacionPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private insertarPrPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModificarPrPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private consultarPrPagaduriasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private validarNumeroSolicitudesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDatosAsociadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_Asoc_Tram_JudicialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Partida_Desembolso_PrestamoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PrDeduccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_PrDeduccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Modificar_PrDeduccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ingresar_PrDeduccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ingresar_PrCatGastosTramitacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Modificar_PrCatGastosTramitacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consultar_PrCatGastosTramitacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Eliminar_PrCatGastosTramitacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_TASAACTIVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_MORA_X_LINEAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_DOC_X_COBRAROperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_DOC_PROTESTO_RESERVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_GARANTIAS_INSCRITASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_GARANTIAS_PRENDARIASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CREDITOS_X_TIPOHIPOTECAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CREDITOS_SIN_GARANTIASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RPT_GARANTIAS_X_DEPTOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_ESTADOPRESTAMOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTARGRNOTARIOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICARGRNOTARIOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ELIMINARGRNOTARIOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARGRNOTARIOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VALIDAR_INSCRIPCION_PRESTAMOSGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARSOLICITUDESCREDITOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARPRESTAMOSHIPOTECARIOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_GRTIPODOCUMENTOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ELIMINAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ELIMINAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_GRTIPOHIPOTECASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_DATOSGENERALESASOCIADOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VERIFICAR_ANOTACIONPREVENTIVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTAR_MAX_PORCENTAJEVALUOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARDET_CERTIFICACIONEXTRACTADAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTAR_GRCERTIFICACION_ANOTACIONOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTARCERTIFICACIONEXTRACTADAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICARCERTIFICACIONEXTRACTADAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARGRPRESTAMOSINSCRIPCIONOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ELIMINARINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ELIMINARPRESTAMOSINSCRIPCIONOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTARPRESTAMOSINSCRIPCIONOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARPRESENTACIONESOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARRESTRICCIONESOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARACREEDORESOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICARINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTARINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARINSCRIPCIONGARANTIAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ELIMINARANOTACIONPREVENTIVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MODIFICARANOTACIONPREVENTIVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARANOTACIONPREVENTIVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private INSERTARANOACIONPREVENTIVAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CONSULTARDUENOSINMUEBLEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarCertificacionExtractadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarBitacoraPagosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutorizarDatosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CalculoCobroGestionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConstultarTAmortizaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBCEmbargosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBienInmuebleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarBitacoraGestoresOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCBBienesEmbargadosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCBDocumentosxRecuperarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCBHistDocumentosxRecuperarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarCertificacionExtractadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDatGralOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDatosDocumentosxRecuperarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDespachoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDetGarantiasPrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDICOMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEmpresaValuadoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGarantiasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGarantiasInternasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGarantiasPrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGarantiasPrNombreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGarantiasxTipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGastosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarGestionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SIF_ERP.My.MySettings.Default.SIF_ERP_wrCredito_wsLibCred
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event InsertarVehiculosCompleted As InsertarVehiculosCompletedEventHandler
        
        '''<remarks/>
        Public Event ListadoCarteraPrestamoCompleted As ListadoCarteraPrestamoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificaClaveGestoresCompleted As ModificaClaveGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarAcreedoresCompleted As ModificarAcreedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarBCEmbargosCompleted As ModificarBCEmbargosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarBienInmuebleCompleted As ModificarBienInmuebleCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarBitacoraGestoresCompleted As ModificarBitacoraGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCBBienesEmbargadosCompleted As ModificarCBBienesEmbargadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCBDocumentosxRecuperarCompleted As ModificarCBDocumentosxRecuperarCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarCBHistDocumentosxRecuperarCompleted As ModificarCBHistDocumentosxRecuperarCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDatGralCompleted As ModificarDatGralCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDespachoCompleted As ModificarDespachoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDetGarantiasPrCompleted As ModificarDetGarantiasPrCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDICOMCompleted As ModificarDICOMCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarDuenosInmuebleCompleted As ModificarDuenosInmuebleCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarEmpresaValuadoraCompleted As ModificarEmpresaValuadoraCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarGarantiasCompleted As ModificarGarantiasCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarGarantiasPrCompleted As ModificarGarantiasPrCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarGastosCompleted As ModificarGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarGestionesCompleted As ModificarGestionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarGestoresCompleted As ModificarGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarGestoresxCreditoCompleted As ModificarGestoresxCreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarIngresosCompleted As ModificarIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarLineaCreditosCompleted As ModificarLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarObligacionesCompleted As ModificarObligacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarObservacionesxAnalisisCompleted As ModificarObservacionesxAnalisisCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPagaduriaCompleted As ModificarPagaduriaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPRCategoriaRiesgoCompleted As ModificarPRCategoriaRiesgoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPresentacionesCompleted As ModificarPresentacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPrestamosCompleted As ModificarPrestamosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRangoLineaCreditosCompleted As ModificarRangoLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRefBancariaCompleted As ModificarRefBancariaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRefComercialCompleted As ModificarRefComercialCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRefFamiliarCompleted As ModificarRefFamiliarCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRefPersonalCompleted As ModificarRefPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarRestriccionesCompleted As ModificarRestriccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarSeccionRegistroCompleted As ModificarSeccionRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarSolCredCompleted As ModificarSolCredCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarSolCredRCompleted As ModificarSolCredRCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarSolP2CreditoCompleted As ModificarSolP2CreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarTipGarantCompleted As ModificarTipGarantCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarTipoCobranzaCompleted As ModificarTipoCobranzaCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarTipoCreditosCompleted As ModificarTipoCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarTipoGastosCompleted As ModificarTipoGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarTipoGestionCompleted As ModificarTipoGestionCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarTipoIngresosCompleted As ModificarTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarValuosCompleted As ModificarValuosCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarVehiculosCompleted As ModificarVehiculosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoBienInmuebleCompleted As ObtenerCorrelativoBienInmuebleCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoBitacoraGestoresCompleted As ObtenerCorrelativoBitacoraGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoDatGralCompleted As ObtenerCorrelativoDatGralCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoDespachoCompleted As ObtenerCorrelativoDespachoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoEmpresaValuadoraCompleted As ObtenerCorrelativoEmpresaValuadoraCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoGarantiasCompleted As ObtenerCorrelativoGarantiasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoGastosCompleted As ObtenerCorrelativoGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoGestionesCompleted As ObtenerCorrelativoGestionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoGestoresCompleted As ObtenerCorrelativoGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoGestoresxCreditoCompleted As ObtenerCorrelativoGestoresxCreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoIngresosCompleted As ObtenerCorrelativoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoLineaCreditosCompleted As ObtenerCorrelativoLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoObligacionesCompleted As ObtenerCorrelativoObligacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoObservacionesxAnalisisCompleted As ObtenerCorrelativoObservacionesxAnalisisCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoPagaduriaCompleted As ObtenerCorrelativoPagaduriaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoPrestamosCompleted As ObtenerCorrelativoPrestamosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoRangoLineaCreditosCompleted As ObtenerCorrelativoRangoLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoRefBancariaCompleted As ObtenerCorrelativoRefBancariaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoRefComercialCompleted As ObtenerCorrelativoRefComercialCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoRefFamiliarCompleted As ObtenerCorrelativoRefFamiliarCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoRefPersonalCompleted As ObtenerCorrelativoRefPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoSeccionRegistroCompleted As ObtenerCorrelativoSeccionRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoSolCredCompleted As ObtenerCorrelativoSolCredCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoSolCredRCompleted As ObtenerCorrelativoSolCredRCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoSolP2CreditoCompleted As ObtenerCorrelativoSolP2CreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoTipGarantCompleted As ObtenerCorrelativoTipGarantCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoTipoCobranzaCompleted As ObtenerCorrelativoTipoCobranzaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoTipoCreditosCompleted As ObtenerCorrelativoTipoCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoTipoGastosCompleted As ObtenerCorrelativoTipoGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoTipoGestionCompleted As ObtenerCorrelativoTipoGestionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoTipoIngresosCompleted As ObtenerCorrelativoTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoValuosCompleted As ObtenerCorrelativoValuosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoVehiculosCompleted As ObtenerCorrelativoVehiculosCompletedEventHandler
        
        '''<remarks/>
        Public Event ReporteHistorialCategoriaCompleted As ReporteHistorialCategoriaCompletedEventHandler
        
        '''<remarks/>
        Public Event TablaAmortizacionCompleted As TablaAmortizacionCompletedEventHandler
        
        '''<remarks/>
        Public Event VerificaGestorCompleted As VerificaGestorCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGestoresCompleted As ConsultarGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGestoresxCreditoCompleted As ConsultarGestoresxCreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGestoresxCredito_AsociadoCompleted As ConsultarGestoresxCredito_AsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarHistorialCategoriaCompleted As ConsultarHistorialCategoriaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarIngresosCompleted As ConsultarIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarLineaCreditosCompleted As ConsultarLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarObligacionesCompleted As ConsultarObligacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarObservacionesxAnalisisCompleted As ConsultarObservacionesxAnalisisCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPagaduriaCompleted As ConsultarPagaduriaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPRCategoriaRiesgoCompleted As ConsultarPRCategoriaRiesgoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPrestamosCompleted As ConsultarPrestamosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPrestamosxInscripcionCompleted As ConsultarPrestamosxInscripcionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPRPrestamosCompleted As ConsultarPRPrestamosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRangoLineaCreditosCompleted As ConsultarRangoLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRecuperacionGestionCompleted As ConsultarRecuperacionGestionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRefBancariaCompleted As ConsultarRefBancariaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRefComercialCompleted As ConsultarRefComercialCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRefFamiliarCompleted As ConsultarRefFamiliarCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarRefPersonalCompleted As ConsultarRefPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarResultadosDICOMCompleted As ConsultarResultadosDICOMCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarSeccionRegistroCompleted As ConsultarSeccionRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarSolCredCompleted As ConsultarSolCredCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarSolCredRCompleted As ConsultarSolCredRCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarSolicitudCreditoCompleted As ConsultarSolicitudCreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarSolP2CreditoCompleted As ConsultarSolP2CreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipGarantCompleted As ConsultarTipGarantCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipoCobranzaCompleted As ConsultarTipoCobranzaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipoCreditosCompleted As ConsultarTipoCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipoGastosCompleted As ConsultarTipoGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipoGestionCompleted As ConsultarTipoGestionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarTipoIngresosCompleted As ConsultarTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarValuosCompleted As ConsultarValuosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarVehiculosCompleted As ConsultarVehiculosCompletedEventHandler
        
        '''<remarks/>
        Public Event CreditosSinPagoMesXGestionCreditoCompleted As CreditosSinPagoMesXGestionCreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event Determinacion_Reservas_ConsolidadoCompleted As Determinacion_Reservas_ConsolidadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Documentos_CobrarCompleted As Documentos_CobrarCompletedEventHandler
        
        '''<remarks/>
        Public Event Documentos_Protesto_ReservaCompleted As Documentos_Protesto_ReservaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarAcreedoresCompleted As EliminarAcreedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBCEmbargosCompleted As EliminarBCEmbargosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBienInmuebleCompleted As EliminarBienInmuebleCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarBitacoraGestoresCompleted As EliminarBitacoraGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCBBienesEmbargadosCompleted As EliminarCBBienesEmbargadosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCBDocumentosxRecuperarCompleted As EliminarCBDocumentosxRecuperarCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDatGralCompleted As EliminarDatGralCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDespachoCompleted As EliminarDespachoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDetGarantiasPrCompleted As EliminarDetGarantiasPrCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDICOMCompleted As EliminarDICOMCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDuenosInmuebleCompleted As EliminarDuenosInmuebleCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarEmpresaValuadoraCompleted As EliminarEmpresaValuadoraCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarGarantiasCompleted As EliminarGarantiasCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarGarantiasPrCompleted As EliminarGarantiasPrCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarGastosCompleted As EliminarGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarGestionesCompleted As EliminarGestionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarGestoresCompleted As EliminarGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarGestoresxCreditoCompleted As EliminarGestoresxCreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarIngresosCompleted As EliminarIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarLineaCreditosCompleted As EliminarLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarObligacionesCompleted As EliminarObligacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarObservacionesxAnalisisCompleted As EliminarObservacionesxAnalisisCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPagaduriaCompleted As EliminarPagaduriaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPRCategoriaRiesgoCompleted As EliminarPRCategoriaRiesgoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPresentacionesCompleted As EliminarPresentacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarPrestamosCompleted As EliminarPrestamosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarRangoLineaCreditosCompleted As EliminarRangoLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarRefBancariaCompleted As EliminarRefBancariaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarRefComercialCompleted As EliminarRefComercialCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarRefFamiliarCompleted As EliminarRefFamiliarCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarRefPersonalCompleted As EliminarRefPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarRestriccionesCompleted As EliminarRestriccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarSeccionRegistroCompleted As EliminarSeccionRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarSolCredCompleted As EliminarSolCredCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarSolCredRCompleted As EliminarSolCredRCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarSolP2CreditoCompleted As EliminarSolP2CreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarTipGarantCompleted As EliminarTipGarantCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarTipoCobranzaCompleted As EliminarTipoCobranzaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarTipoCreditosCompleted As EliminarTipoCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarTipoGastosCompleted As EliminarTipoGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarTipoGestionCompleted As EliminarTipoGestionCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarTipoIngresosCompleted As EliminarTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarValuosCompleted As EliminarValuosCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarVehiculosCompleted As EliminarVehiculosCompletedEventHandler
        
        '''<remarks/>
        Public Event ExportacionDatos_SolicitudCompleted As ExportacionDatos_SolicitudCompletedEventHandler
        
        '''<remarks/>
        Public Event Gestiones_Diarias_CobranzaCompleted As Gestiones_Diarias_CobranzaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaAcreedoresCompleted As InsertaAcreedoresCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaDuenosInmuebleCompleted As InsertaDuenosInmuebleCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaPresentacionesCompleted As InsertaPresentacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBCEmbargosCompleted As InsertarBCEmbargosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBienInmuebleCompleted As InsertarBienInmuebleCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarBitacoraGestoresCompleted As InsertarBitacoraGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCBBienesEMbargadosCompleted As InsertarCBBienesEMbargadosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCBDocumentosxRecuperarCompleted As InsertarCBDocumentosxRecuperarCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarCBHistDocumentosxRecuperarCompleted As InsertarCBHistDocumentosxRecuperarCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDatGralCompleted As InsertarDatGralCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDespachoCompleted As InsertarDespachoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDetGarantiasPrCompleted As InsertarDetGarantiasPrCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarDICOMCompleted As InsertarDICOMCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarEmpresaValuadoraCompleted As InsertarEmpresaValuadoraCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertaRestriccionesCompleted As InsertaRestriccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarGarantiasCompleted As InsertarGarantiasCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarGarantiasPrCompleted As InsertarGarantiasPrCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarGastosCompleted As InsertarGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarGestionesCompleted As InsertarGestionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarGestoresCompleted As InsertarGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarGestoresxCreditoCompleted As InsertarGestoresxCreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarHistorialCategoriaCompleted As InsertarHistorialCategoriaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarIngresosCompleted As InsertarIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarLineaCreditosCompleted As InsertarLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarObligacionesCompleted As InsertarObligacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarObservacionesxAnalisisCompleted As InsertarObservacionesxAnalisisCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPagaduriaCompleted As InsertarPagaduriaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPRCategoriaRiesgoCompleted As InsertarPRCategoriaRiesgoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarPrestamosCompleted As InsertarPrestamosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarRangoLineaCreditosCompleted As InsertarRangoLineaCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarRefBancariaCompleted As InsertarRefBancariaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarRefComercialCompleted As InsertarRefComercialCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarRefFamiliarCompleted As InsertarRefFamiliarCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarRefPersonalCompleted As InsertarRefPersonalCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarSeccionRegistroCompleted As InsertarSeccionRegistroCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarSolCredCompleted As InsertarSolCredCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarSolCredRCompleted As InsertarSolCredRCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarSolP2CreditoCompleted As InsertarSolP2CreditoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarTipGarantCompleted As InsertarTipGarantCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarTipoCobranzaCompleted As InsertarTipoCobranzaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarTipoCreditosCompleted As InsertarTipoCreditosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarTipoGastosCompleted As InsertarTipoGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarTipoGestionCompleted As InsertarTipoGestionCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarTipoIngresosCompleted As InsertarTipoIngresosCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarValuosCompleted As InsertarValuosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCredCompleted As ConsultarCredCompletedEventHandler
        
        '''<remarks/>
        Public Event RptContratoInvestigacionCompleted As RptContratoInvestigacionCompletedEventHandler
        
        '''<remarks/>
        Public Event calcularInteresMigracionCompleted As calcularInteresMigracionCompletedEventHandler
        
        '''<remarks/>
        Public Event validarMontoCancelacionPrestamoCompleted As validarMontoCancelacionPrestamoCompletedEventHandler
        
        '''<remarks/>
        Public Event RptContratoMutuoCompleted As RptContratoMutuoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCorrelativoPrestamoCompleted As ObtenerCorrelativoPrestamoCompletedEventHandler
        
        '''<remarks/>
        Public Event Rep_TablaAmortizacionCompleted As Rep_TablaAmortizacionCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarPrDetRestriccionsCompleted As modificarPrDetRestriccionsCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarPrDetRestriccionesCompleted As insertarPrDetRestriccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarPrRestricciones_Criterios_PagaduriasCompleted As eliminarPrRestricciones_Criterios_PagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarPrDet_RestriccionesCompleted As eliminarPrDet_RestriccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPrDet_RestriccionesCompleted As consultarPrDet_RestriccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPrRestriccionesCriteriosCompleted As consultarPrRestriccionesCriteriosCompletedEventHandler
        
        '''<remarks/>
        Public Event IngresarRestricciones_CriteriosEvaluacionCompleted As IngresarRestricciones_CriteriosEvaluacionCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPrTipoEvaluacionesCompleted As consultarPrTipoEvaluacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarPrTipoEvaluacionesCompleted As eliminarPrTipoEvaluacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarPrTipoEvaluacionesCompleted As modificarPrTipoEvaluacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarPrTipoEvaluacionesCompleted As insertarPrTipoEvaluacionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ingresarEvaluacionPagaduriaCompleted As ingresarEvaluacionPagaduriaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarPrGiroEmpresaCompleted As insertarPrGiroEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarPrGiroEmpresaCompleted As modificarPrGiroEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarPrGiroEmpresaCompleted As eliminarPrGiroEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPrGiroEmpresaCompleted As consultarPrGiroEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPrTipoEmpresaCompleted As consultarPrTipoEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarPrTipoEmpresaCompleted As eliminarPrTipoEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarPrTipoEmpresaCompleted As modificarPrTipoEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarPrTipoEmpresaCompleted As insertarPrTipoEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event eliminarPrCatClasificacionPagaduriasCompleted As eliminarPrCatClasificacionPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPrCatClasificacionPagaduriasCompleted As consultarPrCatClasificacionPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarPrCatClasificacionPagaduriasCompleted As modificarPrCatClasificacionPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarPrCatClasificacionPagaduriasCompleted As insertarPrCatClasificacionPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPrCriteriosEvaluacionPagaduriasCompleted As consultarPrCriteriosEvaluacionPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event modificarPrCriteriosEvaluacionPagaduriasCompleted As modificarPrCriteriosEvaluacionPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarPrCriteriosEvaluacionPagaduriasCompleted As insertarPrCriteriosEvaluacionPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event insertarPrPagaduriasCompleted As insertarPrPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event ModificarPrPagaduriasCompleted As ModificarPrPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event consultarPrPagaduriasCompleted As consultarPrPagaduriasCompletedEventHandler
        
        '''<remarks/>
        Public Event validarNumeroSolicitudesCompleted As validarNumeroSolicitudesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDatosAsociadoCompleted As ConsultarDatosAsociadoCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_Asoc_Tram_JudicialCompleted As Consultar_Asoc_Tram_JudicialCompletedEventHandler
        
        '''<remarks/>
        Public Event Partida_Desembolso_PrestamoCompleted As Partida_Desembolso_PrestamoCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PrDeduccionesCompleted As Consultar_PrDeduccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_PrDeduccionesCompleted As Eliminar_PrDeduccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Modificar_PrDeduccionesCompleted As Modificar_PrDeduccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Ingresar_PrDeduccionesCompleted As Ingresar_PrDeduccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event Ingresar_PrCatGastosTramitacionCompleted As Ingresar_PrCatGastosTramitacionCompletedEventHandler
        
        '''<remarks/>
        Public Event Modificar_PrCatGastosTramitacionCompleted As Modificar_PrCatGastosTramitacionCompletedEventHandler
        
        '''<remarks/>
        Public Event Consultar_PrCatGastosTramitacionCompleted As Consultar_PrCatGastosTramitacionCompletedEventHandler
        
        '''<remarks/>
        Public Event Eliminar_PrCatGastosTramitacionCompleted As Eliminar_PrCatGastosTramitacionCompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_TASAACTIVACompleted As RPT_TASAACTIVACompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_MORA_X_LINEACompleted As RPT_MORA_X_LINEACompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_DOC_X_COBRARCompleted As RPT_DOC_X_COBRARCompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_DOC_PROTESTO_RESERVACompleted As RPT_DOC_PROTESTO_RESERVACompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_GARANTIAS_INSCRITASCompleted As RPT_GARANTIAS_INSCRITASCompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_GARANTIAS_PRENDARIASCompleted As RPT_GARANTIAS_PRENDARIASCompletedEventHandler
        
        '''<remarks/>
        Public Event CREDITOS_X_TIPOHIPOTECACompleted As CREDITOS_X_TIPOHIPOTECACompletedEventHandler
        
        '''<remarks/>
        Public Event CREDITOS_SIN_GARANTIASCompleted As CREDITOS_SIN_GARANTIASCompletedEventHandler
        
        '''<remarks/>
        Public Event RPT_GARANTIAS_X_DEPTOCompleted As RPT_GARANTIAS_X_DEPTOCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_ESTADOPRESTAMOCompleted As CONSULTAR_ESTADOPRESTAMOCompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTARGRNOTARIOSCompleted As INSERTARGRNOTARIOSCompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICARGRNOTARIOSCompleted As MODIFICARGRNOTARIOSCompletedEventHandler
        
        '''<remarks/>
        Public Event ELIMINARGRNOTARIOCompleted As ELIMINARGRNOTARIOCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARGRNOTARIOCompleted As CONSULTARGRNOTARIOCompletedEventHandler
        
        '''<remarks/>
        Public Event VALIDAR_INSCRIPCION_PRESTAMOSGARANTIACompleted As VALIDAR_INSCRIPCION_PRESTAMOSGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARSOLICITUDESCREDITOCompleted As CONSULTARSOLICITUDESCREDITOCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARPRESTAMOSHIPOTECARIOSCompleted As CONSULTARPRESTAMOSHIPOTECARIOSCompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGACompleted As MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_GRTIPODOCUMENTOSCompleted As CONSULTAR_GRTIPODOCUMENTOSCompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIACompleted As MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event ELIMINAR_GRMOVIMIENTOSDOCGARANTIASCompleted As ELIMINAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICAR_GRMOVIMIENTOSDOCGARANTIASCompleted As MODIFICAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_GRMOVIMIENTOSDOCGARANTIASCompleted As CONSULTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTAR_GRMOVIMIENTOSDOCGARANTIASCompleted As INSERTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventHandler
        
        '''<remarks/>
        Public Event ELIMINAR_GRHISTOINSCRIPCIONGARANTIACompleted As ELIMINAR_GRHISTOINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICAR_GRHISTOINSCRIPCIONGARANTIACompleted As MODIFICAR_GRHISTOINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_GRHISTOINSCRIPCIONGARANTIACompleted As CONSULTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTAR_GRHISTOINSCRIPCIONGARANTIACompleted As INSERTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_GRTIPOHIPOTECASCompleted As CONSULTAR_GRTIPOHIPOTECASCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_DATOSGENERALESASOCIADOSCompleted As CONSULTAR_DATOSGENERALESASOCIADOSCompletedEventHandler
        
        '''<remarks/>
        Public Event VERIFICAR_ANOTACIONPREVENTIVACompleted As VERIFICAR_ANOTACIONPREVENTIVACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASCompleted As CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTAR_MAX_PORCENTAJEVALUOCompleted As CONSULTAR_MAX_PORCENTAJEVALUOCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARDET_CERTIFICACIONEXTRACTADACompleted As CONSULTARDET_CERTIFICACIONEXTRACTADACompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTAR_GRCERTIFICACION_ANOTACIONCompleted As INSERTAR_GRCERTIFICACION_ANOTACIONCompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTARCERTIFICACIONEXTRACTADACompleted As INSERTARCERTIFICACIONEXTRACTADACompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICARCERTIFICACIONEXTRACTADACompleted As MODIFICARCERTIFICACIONEXTRACTADACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARGRPRESTAMOSINSCRIPCIONCompleted As CONSULTARGRPRESTAMOSINSCRIPCIONCompletedEventHandler
        
        '''<remarks/>
        Public Event ELIMINARINSCRIPCIONGARANTIACompleted As ELIMINARINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event ELIMINARPRESTAMOSINSCRIPCIONCompleted As ELIMINARPRESTAMOSINSCRIPCIONCompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTARPRESTAMOSINSCRIPCIONCompleted As INSERTARPRESTAMOSINSCRIPCIONCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARPRESENTACIONESCompleted As CONSULTARPRESENTACIONESCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARRESTRICCIONESCompleted As CONSULTARRESTRICCIONESCompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARACREEDORESCompleted As CONSULTARACREEDORESCompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICARINSCRIPCIONGARANTIACompleted As MODIFICARINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTARINSCRIPCIONGARANTIACompleted As INSERTARINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARINSCRIPCIONGARANTIACompleted As CONSULTARINSCRIPCIONGARANTIACompletedEventHandler
        
        '''<remarks/>
        Public Event ELIMINARANOTACIONPREVENTIVACompleted As ELIMINARANOTACIONPREVENTIVACompletedEventHandler
        
        '''<remarks/>
        Public Event MODIFICARANOTACIONPREVENTIVACompleted As MODIFICARANOTACIONPREVENTIVACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARANOTACIONPREVENTIVACompleted As CONSULTARANOTACIONPREVENTIVACompletedEventHandler
        
        '''<remarks/>
        Public Event INSERTARANOACIONPREVENTIVACompleted As INSERTARANOACIONPREVENTIVACompletedEventHandler
        
        '''<remarks/>
        Public Event CONSULTARDUENOSINMUEBLECompleted As CONSULTARDUENOSINMUEBLECompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarCertificacionExtractadaCompleted As EliminarCertificacionExtractadaCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarBitacoraPagosCompleted As ActualizarBitacoraPagosCompletedEventHandler
        
        '''<remarks/>
        Public Event AutorizarDatosCompleted As AutorizarDatosCompletedEventHandler
        
        '''<remarks/>
        Public Event CalculoCobroGestionesCompleted As CalculoCobroGestionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConstultarTAmortizaCompleted As ConstultarTAmortizaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBCEmbargosCompleted As ConsultarBCEmbargosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBienInmuebleCompleted As ConsultarBienInmuebleCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarBitacoraGestoresCompleted As ConsultarBitacoraGestoresCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCBBienesEmbargadosCompleted As ConsultarCBBienesEmbargadosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCBDocumentosxRecuperarCompleted As ConsultarCBDocumentosxRecuperarCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCBHistDocumentosxRecuperarCompleted As ConsultarCBHistDocumentosxRecuperarCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCertificacionExtractadaCompleted As ConsultarCertificacionExtractadaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDatGralCompleted As ConsultarDatGralCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDatosDocumentosxRecuperarCompleted As ConsultarDatosDocumentosxRecuperarCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDespachoCompleted As ConsultarDespachoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDetGarantiasPrCompleted As ConsultarDetGarantiasPrCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDICOMCompleted As ConsultarDICOMCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEmpresaValuadoraCompleted As ConsultarEmpresaValuadoraCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGarantiasCompleted As ConsultarGarantiasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGarantiasInternasCompleted As ConsultarGarantiasInternasCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGarantiasPrCompleted As ConsultarGarantiasPrCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGarantiasPrNombreCompleted As ConsultarGarantiasPrNombreCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGarantiasxTipoCompleted As ConsultarGarantiasxTipoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGastosCompleted As ConsultarGastosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarGestionesCompleted As ConsultarGestionesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarVehiculos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarVehiculos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarVehiculos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarVehiculos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarVehiculos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarVehiculos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarVehiculosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarVehiculosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarVehiculosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarVehiculosOperationCompleted Is Nothing) Then
                Me.InsertarVehiculosOperationCompleted = AddressOf Me.OnInsertarVehiculosOperationCompleted
            End If
            Me.InvokeAsync("InsertarVehiculos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarVehiculosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarVehiculosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarVehiculosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarVehiculosCompleted(Me, New InsertarVehiculosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ListadoCarteraPrestamo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListadoCarteraPrestamo(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTodos As Boolean, ByVal pCodTipoCredito As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListadoCarteraPrestamo", New Object() {pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal, pTodos, pCodTipoCredito})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginListadoCarteraPrestamo(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTodos As Boolean, ByVal pCodTipoCredito As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListadoCarteraPrestamo", New Object() {pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal, pTodos, pCodTipoCredito}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndListadoCarteraPrestamo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListadoCarteraPrestamoAsync(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTodos As Boolean, ByVal pCodTipoCredito As String)
            Me.ListadoCarteraPrestamoAsync(pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal, pTodos, pCodTipoCredito, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListadoCarteraPrestamoAsync(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal pTodos As Boolean, ByVal pCodTipoCredito As String, ByVal userState As Object)
            If (Me.ListadoCarteraPrestamoOperationCompleted Is Nothing) Then
                Me.ListadoCarteraPrestamoOperationCompleted = AddressOf Me.OnListadoCarteraPrestamoOperationCompleted
            End If
            Me.InvokeAsync("ListadoCarteraPrestamo", New Object() {pFechaInicio, pFechaFin, pUsuario, pPassword, pSucursal, pTodos, pCodTipoCredito}, Me.ListadoCarteraPrestamoOperationCompleted, userState)
        End Sub
        
        Private Sub OnListadoCarteraPrestamoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListadoCarteraPrestamoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListadoCarteraPrestamoCompleted(Me, New ListadoCarteraPrestamoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificaClaveGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificaClaveGestores(ByVal pCodGestor As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificaClaveGestores", New Object() {pCodGestor, pClave, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificaClaveGestores(ByVal pCodGestor As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificaClaveGestores", New Object() {pCodGestor, pClave, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificaClaveGestores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificaClaveGestoresAsync(ByVal pCodGestor As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificaClaveGestoresAsync(pCodGestor, pClave, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificaClaveGestoresAsync(ByVal pCodGestor As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificaClaveGestoresOperationCompleted Is Nothing) Then
                Me.ModificaClaveGestoresOperationCompleted = AddressOf Me.OnModificaClaveGestoresOperationCompleted
            End If
            Me.InvokeAsync("ModificaClaveGestores", New Object() {pCodGestor, pClave, pUs, pPa, pSucursal}, Me.ModificaClaveGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificaClaveGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificaClaveGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificaClaveGestoresCompleted(Me, New ModificaClaveGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarAcreedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarAcreedores(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarAcreedores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarAcreedores(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarAcreedores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarAcreedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarAcreedoresAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarAcreedoresAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarAcreedoresAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarAcreedoresOperationCompleted Is Nothing) Then
                Me.ModificarAcreedoresOperationCompleted = AddressOf Me.OnModificarAcreedoresOperationCompleted
            End If
            Me.InvokeAsync("ModificarAcreedores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarAcreedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarAcreedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarAcreedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarAcreedoresCompleted(Me, New ModificarAcreedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarBCEmbargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarBCEmbargos(ByVal pCamposValores As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarBCEmbargos", New Object() {pCamposValores, pCodPrestamo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarBCEmbargos(ByVal pCamposValores As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBCEmbargos", New Object() {pCamposValores, pCodPrestamo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarBCEmbargos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarBCEmbargosAsync(ByVal pCamposValores As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarBCEmbargosAsync(pCamposValores, pCodPrestamo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarBCEmbargosAsync(ByVal pCamposValores As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarBCEmbargosOperationCompleted Is Nothing) Then
                Me.ModificarBCEmbargosOperationCompleted = AddressOf Me.OnModificarBCEmbargosOperationCompleted
            End If
            Me.InvokeAsync("ModificarBCEmbargos", New Object() {pCamposValores, pCodPrestamo, pUsuario, pPassword, pSucursal}, Me.ModificarBCEmbargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarBCEmbargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBCEmbargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBCEmbargosCompleted(Me, New ModificarBCEmbargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarBienInmueble", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarBienInmueble(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarBienInmueble", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarBienInmueble(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBienInmueble", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarBienInmueble(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarBienInmuebleAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarBienInmuebleAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarBienInmuebleAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarBienInmuebleOperationCompleted Is Nothing) Then
                Me.ModificarBienInmuebleOperationCompleted = AddressOf Me.OnModificarBienInmuebleOperationCompleted
            End If
            Me.InvokeAsync("ModificarBienInmueble", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarBienInmuebleOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarBienInmuebleOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBienInmuebleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBienInmuebleCompleted(Me, New ModificarBienInmuebleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarBitacoraGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarBitacoraGestores(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarBitacoraGestores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarBitacoraGestores(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBitacoraGestores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarBitacoraGestores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarBitacoraGestoresAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarBitacoraGestoresAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarBitacoraGestoresAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarBitacoraGestoresOperationCompleted Is Nothing) Then
                Me.ModificarBitacoraGestoresOperationCompleted = AddressOf Me.OnModificarBitacoraGestoresOperationCompleted
            End If
            Me.InvokeAsync("ModificarBitacoraGestores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarBitacoraGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarBitacoraGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBitacoraGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBitacoraGestoresCompleted(Me, New ModificarBitacoraGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarCBBienesEmbargados", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCBBienesEmbargados(ByVal pCamposValores As String, ByVal pCodigoEmbargo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCBBienesEmbargados", New Object() {pCamposValores, pCodigoEmbargo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCBBienesEmbargados(ByVal pCamposValores As String, ByVal pCodigoEmbargo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCBBienesEmbargados", New Object() {pCamposValores, pCodigoEmbargo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCBBienesEmbargados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCBBienesEmbargadosAsync(ByVal pCamposValores As String, ByVal pCodigoEmbargo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarCBBienesEmbargadosAsync(pCamposValores, pCodigoEmbargo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCBBienesEmbargadosAsync(ByVal pCamposValores As String, ByVal pCodigoEmbargo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCBBienesEmbargadosOperationCompleted Is Nothing) Then
                Me.ModificarCBBienesEmbargadosOperationCompleted = AddressOf Me.OnModificarCBBienesEmbargadosOperationCompleted
            End If
            Me.InvokeAsync("ModificarCBBienesEmbargados", New Object() {pCamposValores, pCodigoEmbargo, pUsuario, pPassword, pSucursal}, Me.ModificarCBBienesEmbargadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCBBienesEmbargadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCBBienesEmbargadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCBBienesEmbargadosCompleted(Me, New ModificarCBBienesEmbargadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarCBDocumentosxRecuperar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCBDocumentosxRecuperar(ByVal pCamposValores As String, ByVal pCodPrestamo As String, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCBDocumentosxRecuperar", New Object() {pCamposValores, pCodPrestamo, pTipo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCBDocumentosxRecuperar(ByVal pCamposValores As String, ByVal pCodPrestamo As String, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCBDocumentosxRecuperar", New Object() {pCamposValores, pCodPrestamo, pTipo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCBDocumentosxRecuperar(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCBDocumentosxRecuperarAsync(ByVal pCamposValores As String, ByVal pCodPrestamo As String, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarCBDocumentosxRecuperarAsync(pCamposValores, pCodPrestamo, pTipo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCBDocumentosxRecuperarAsync(ByVal pCamposValores As String, ByVal pCodPrestamo As String, ByVal pTipo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCBDocumentosxRecuperarOperationCompleted Is Nothing) Then
                Me.ModificarCBDocumentosxRecuperarOperationCompleted = AddressOf Me.OnModificarCBDocumentosxRecuperarOperationCompleted
            End If
            Me.InvokeAsync("ModificarCBDocumentosxRecuperar", New Object() {pCamposValores, pCodPrestamo, pTipo, pUsuario, pPassword, pSucursal}, Me.ModificarCBDocumentosxRecuperarOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCBDocumentosxRecuperarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCBDocumentosxRecuperarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCBDocumentosxRecuperarCompleted(Me, New ModificarCBDocumentosxRecuperarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarCBHistDocumentosxRecuperar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarCBHistDocumentosxRecuperar(ByVal pCamposValores As String, ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarCBHistDocumentosxRecuperar", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarCBHistDocumentosxRecuperar(ByVal pCamposValores As String, ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarCBHistDocumentosxRecuperar", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarCBHistDocumentosxRecuperar(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarCBHistDocumentosxRecuperarAsync(ByVal pCamposValores As String, ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarCBHistDocumentosxRecuperarAsync(pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarCBHistDocumentosxRecuperarAsync(ByVal pCamposValores As String, ByVal pCorrelativo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarCBHistDocumentosxRecuperarOperationCompleted Is Nothing) Then
                Me.ModificarCBHistDocumentosxRecuperarOperationCompleted = AddressOf Me.OnModificarCBHistDocumentosxRecuperarOperationCompleted
            End If
            Me.InvokeAsync("ModificarCBHistDocumentosxRecuperar", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal}, Me.ModificarCBHistDocumentosxRecuperarOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarCBHistDocumentosxRecuperarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarCBHistDocumentosxRecuperarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarCBHistDocumentosxRecuperarCompleted(Me, New ModificarCBHistDocumentosxRecuperarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarDatGral", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDatGral(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDatGral", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDatGral(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDatGral", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDatGral(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDatGralAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDatGralAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDatGralAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDatGralOperationCompleted Is Nothing) Then
                Me.ModificarDatGralOperationCompleted = AddressOf Me.OnModificarDatGralOperationCompleted
            End If
            Me.InvokeAsync("ModificarDatGral", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDatGralOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDatGralOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDatGralCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDatGralCompleted(Me, New ModificarDatGralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarDespacho", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDespacho(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDespacho", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDespacho(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDespacho", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDespacho(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDespachoAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDespachoAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDespachoAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDespachoOperationCompleted Is Nothing) Then
                Me.ModificarDespachoOperationCompleted = AddressOf Me.OnModificarDespachoOperationCompleted
            End If
            Me.InvokeAsync("ModificarDespacho", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDespachoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDespachoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDespachoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDespachoCompleted(Me, New ModificarDespachoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarDetGarantiasPr", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDetGarantiasPr(ByVal pCamposyValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDetGarantiasPr", New Object() {pCamposyValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDetGarantiasPr(ByVal pCamposyValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDetGarantiasPr", New Object() {pCamposyValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDetGarantiasPr(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDetGarantiasPrAsync(ByVal pCamposyValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarDetGarantiasPrAsync(pCamposyValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDetGarantiasPrAsync(ByVal pCamposyValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDetGarantiasPrOperationCompleted Is Nothing) Then
                Me.ModificarDetGarantiasPrOperationCompleted = AddressOf Me.OnModificarDetGarantiasPrOperationCompleted
            End If
            Me.InvokeAsync("ModificarDetGarantiasPr", New Object() {pCamposyValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarDetGarantiasPrOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDetGarantiasPrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDetGarantiasPrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDetGarantiasPrCompleted(Me, New ModificarDetGarantiasPrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarDICOM", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDICOM(ByVal pCamposValores As String, ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDICOM", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDICOM(ByVal pCamposValores As String, ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDICOM", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDICOM(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDICOMAsync(ByVal pCamposValores As String, ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarDICOMAsync(pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDICOMAsync(ByVal pCamposValores As String, ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDICOMOperationCompleted Is Nothing) Then
                Me.ModificarDICOMOperationCompleted = AddressOf Me.OnModificarDICOMOperationCompleted
            End If
            Me.InvokeAsync("ModificarDICOM", New Object() {pCamposValores, pCorrelativo, pUsuario, pPassword, pSucursal}, Me.ModificarDICOMOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDICOMOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDICOMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDICOMCompleted(Me, New ModificarDICOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarDuenosInmueble", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarDuenosInmueble(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarDuenosInmueble", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarDuenosInmueble(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarDuenosInmueble", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarDuenosInmueble(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarDuenosInmuebleAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarDuenosInmuebleAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarDuenosInmuebleAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarDuenosInmuebleOperationCompleted Is Nothing) Then
                Me.ModificarDuenosInmuebleOperationCompleted = AddressOf Me.OnModificarDuenosInmuebleOperationCompleted
            End If
            Me.InvokeAsync("ModificarDuenosInmueble", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarDuenosInmuebleOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarDuenosInmuebleOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarDuenosInmuebleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarDuenosInmuebleCompleted(Me, New ModificarDuenosInmuebleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarEmpresaValuadora", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarEmpresaValuadora(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarEmpresaValuadora", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarEmpresaValuadora(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarEmpresaValuadora", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarEmpresaValuadora(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarEmpresaValuadoraAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarEmpresaValuadoraAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarEmpresaValuadoraAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarEmpresaValuadoraOperationCompleted Is Nothing) Then
                Me.ModificarEmpresaValuadoraOperationCompleted = AddressOf Me.OnModificarEmpresaValuadoraOperationCompleted
            End If
            Me.InvokeAsync("ModificarEmpresaValuadora", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarEmpresaValuadoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarEmpresaValuadoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarEmpresaValuadoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarEmpresaValuadoraCompleted(Me, New ModificarEmpresaValuadoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarGarantias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarGarantias(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarGarantias", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarGarantias(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarGarantias", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarGarantias(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarGarantiasAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarGarantiasAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarGarantiasAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarGarantiasOperationCompleted Is Nothing) Then
                Me.ModificarGarantiasOperationCompleted = AddressOf Me.OnModificarGarantiasOperationCompleted
            End If
            Me.InvokeAsync("ModificarGarantias", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarGarantiasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarGarantiasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarGarantiasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarGarantiasCompleted(Me, New ModificarGarantiasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarGarantiasPr", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarGarantiasPr(ByVal pCamposyValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarGarantiasPr", New Object() {pCamposyValores, pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarGarantiasPr(ByVal pCamposyValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarGarantiasPr", New Object() {pCamposyValores, pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarGarantiasPr(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarGarantiasPrAsync(ByVal pCamposyValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarGarantiasPrAsync(pCamposyValores, pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarGarantiasPrAsync(ByVal pCamposyValores As String, ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarGarantiasPrOperationCompleted Is Nothing) Then
                Me.ModificarGarantiasPrOperationCompleted = AddressOf Me.OnModificarGarantiasPrOperationCompleted
            End If
            Me.InvokeAsync("ModificarGarantiasPr", New Object() {pCamposyValores, pFiltro, pUsuario, pPassword, pSucursal}, Me.ModificarGarantiasPrOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarGarantiasPrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarGarantiasPrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarGarantiasPrCompleted(Me, New ModificarGarantiasPrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarGastos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarGastos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarGastos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarGastos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarGastos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarGastosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarGastosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarGastosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarGastosOperationCompleted Is Nothing) Then
                Me.ModificarGastosOperationCompleted = AddressOf Me.OnModificarGastosOperationCompleted
            End If
            Me.InvokeAsync("ModificarGastos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarGastosCompleted(Me, New ModificarGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarGestiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarGestiones(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarGestiones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarGestiones(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarGestiones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarGestiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarGestionesAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarGestionesAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarGestionesAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarGestionesOperationCompleted Is Nothing) Then
                Me.ModificarGestionesOperationCompleted = AddressOf Me.OnModificarGestionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarGestiones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarGestionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarGestionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarGestionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarGestionesCompleted(Me, New ModificarGestionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarGestores(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarGestores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarGestores(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarGestores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarGestores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarGestoresAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarGestoresAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarGestoresAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarGestoresOperationCompleted Is Nothing) Then
                Me.ModificarGestoresOperationCompleted = AddressOf Me.OnModificarGestoresOperationCompleted
            End If
            Me.InvokeAsync("ModificarGestores", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarGestoresCompleted(Me, New ModificarGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarGestoresxCredito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarGestoresxCredito(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarGestoresxCredito", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarGestoresxCredito(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarGestoresxCredito", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarGestoresxCredito(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarGestoresxCreditoAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarGestoresxCreditoAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarGestoresxCreditoAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarGestoresxCreditoOperationCompleted Is Nothing) Then
                Me.ModificarGestoresxCreditoOperationCompleted = AddressOf Me.OnModificarGestoresxCreditoOperationCompleted
            End If
            Me.InvokeAsync("ModificarGestoresxCredito", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarGestoresxCreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarGestoresxCreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarGestoresxCreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarGestoresxCreditoCompleted(Me, New ModificarGestoresxCreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarIngresos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarIngresos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarIngresos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarIngresos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarIngresosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarIngresosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarIngresosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarIngresosOperationCompleted Is Nothing) Then
                Me.ModificarIngresosOperationCompleted = AddressOf Me.OnModificarIngresosOperationCompleted
            End If
            Me.InvokeAsync("ModificarIngresos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarIngresosCompleted(Me, New ModificarIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarLineaCreditos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarLineaCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarLineaCreditos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarLineaCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarLineaCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarLineaCreditosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarLineaCreditosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarLineaCreditosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarLineaCreditosOperationCompleted Is Nothing) Then
                Me.ModificarLineaCreditosOperationCompleted = AddressOf Me.OnModificarLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("ModificarLineaCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarLineaCreditosCompleted(Me, New ModificarLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarObligaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarObligaciones(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarObligaciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarObligaciones(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarObligaciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarObligaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarObligacionesAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarObligacionesAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarObligacionesAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarObligacionesOperationCompleted Is Nothing) Then
                Me.ModificarObligacionesOperationCompleted = AddressOf Me.OnModificarObligacionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarObligaciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarObligacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarObligacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarObligacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarObligacionesCompleted(Me, New ModificarObligacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarObservacionesxAnalisis", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarObservacionesxAnalisis(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarObservacionesxAnalisis", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarObservacionesxAnalisis(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarObservacionesxAnalisis", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarObservacionesxAnalisis(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarObservacionesxAnalisisAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarObservacionesxAnalisisAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarObservacionesxAnalisisAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarObservacionesxAnalisisOperationCompleted Is Nothing) Then
                Me.ModificarObservacionesxAnalisisOperationCompleted = AddressOf Me.OnModificarObservacionesxAnalisisOperationCompleted
            End If
            Me.InvokeAsync("ModificarObservacionesxAnalisis", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarObservacionesxAnalisisOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarObservacionesxAnalisisOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarObservacionesxAnalisisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarObservacionesxAnalisisCompleted(Me, New ModificarObservacionesxAnalisisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarPagaduria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPagaduria(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPagaduria", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPagaduria(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPagaduria", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPagaduria(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPagaduriaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarPagaduriaAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPagaduriaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPagaduriaOperationCompleted Is Nothing) Then
                Me.ModificarPagaduriaOperationCompleted = AddressOf Me.OnModificarPagaduriaOperationCompleted
            End If
            Me.InvokeAsync("ModificarPagaduria", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarPagaduriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPagaduriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPagaduriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPagaduriaCompleted(Me, New ModificarPagaduriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarPRCategoriaRiesgo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPRCategoriaRiesgo(ByVal pCamposyValores As String, ByVal Categoria As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPRCategoriaRiesgo", New Object() {pCamposyValores, Categoria, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPRCategoriaRiesgo(ByVal pCamposyValores As String, ByVal Categoria As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPRCategoriaRiesgo", New Object() {pCamposyValores, Categoria, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPRCategoriaRiesgo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPRCategoriaRiesgoAsync(ByVal pCamposyValores As String, ByVal Categoria As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ModificarPRCategoriaRiesgoAsync(pCamposyValores, Categoria, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPRCategoriaRiesgoAsync(ByVal pCamposyValores As String, ByVal Categoria As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPRCategoriaRiesgoOperationCompleted Is Nothing) Then
                Me.ModificarPRCategoriaRiesgoOperationCompleted = AddressOf Me.OnModificarPRCategoriaRiesgoOperationCompleted
            End If
            Me.InvokeAsync("ModificarPRCategoriaRiesgo", New Object() {pCamposyValores, Categoria, pUsuario, pPassword, pSucursal}, Me.ModificarPRCategoriaRiesgoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPRCategoriaRiesgoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPRCategoriaRiesgoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPRCategoriaRiesgoCompleted(Me, New ModificarPRCategoriaRiesgoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarPresentaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPresentaciones(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPresentaciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPresentaciones(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPresentaciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPresentaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPresentacionesAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarPresentacionesAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPresentacionesAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPresentacionesOperationCompleted Is Nothing) Then
                Me.ModificarPresentacionesOperationCompleted = AddressOf Me.OnModificarPresentacionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarPresentaciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarPresentacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPresentacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPresentacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPresentacionesCompleted(Me, New ModificarPresentacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarPrestamos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPrestamos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarPrestamos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPrestamos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPrestamos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPrestamos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPrestamosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarPrestamosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPrestamosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarPrestamosOperationCompleted Is Nothing) Then
                Me.ModificarPrestamosOperationCompleted = AddressOf Me.OnModificarPrestamosOperationCompleted
            End If
            Me.InvokeAsync("ModificarPrestamos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarPrestamosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPrestamosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPrestamosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPrestamosCompleted(Me, New ModificarPrestamosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarRangoLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRangoLineaCreditos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRangoLineaCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRangoLineaCreditos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRangoLineaCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRangoLineaCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRangoLineaCreditosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarRangoLineaCreditosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRangoLineaCreditosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRangoLineaCreditosOperationCompleted Is Nothing) Then
                Me.ModificarRangoLineaCreditosOperationCompleted = AddressOf Me.OnModificarRangoLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("ModificarRangoLineaCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarRangoLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRangoLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRangoLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRangoLineaCreditosCompleted(Me, New ModificarRangoLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarRefBancaria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRefBancaria(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRefBancaria", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRefBancaria(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRefBancaria", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRefBancaria(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRefBancariaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarRefBancariaAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRefBancariaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRefBancariaOperationCompleted Is Nothing) Then
                Me.ModificarRefBancariaOperationCompleted = AddressOf Me.OnModificarRefBancariaOperationCompleted
            End If
            Me.InvokeAsync("ModificarRefBancaria", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarRefBancariaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRefBancariaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRefBancariaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRefBancariaCompleted(Me, New ModificarRefBancariaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarRefComercial", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRefComercial(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRefComercial", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRefComercial(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRefComercial", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRefComercial(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRefComercialAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarRefComercialAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRefComercialAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRefComercialOperationCompleted Is Nothing) Then
                Me.ModificarRefComercialOperationCompleted = AddressOf Me.OnModificarRefComercialOperationCompleted
            End If
            Me.InvokeAsync("ModificarRefComercial", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarRefComercialOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRefComercialOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRefComercialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRefComercialCompleted(Me, New ModificarRefComercialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarRefFamiliar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRefFamiliar(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRefFamiliar", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRefFamiliar(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRefFamiliar", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRefFamiliar(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRefFamiliarAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarRefFamiliarAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRefFamiliarAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRefFamiliarOperationCompleted Is Nothing) Then
                Me.ModificarRefFamiliarOperationCompleted = AddressOf Me.OnModificarRefFamiliarOperationCompleted
            End If
            Me.InvokeAsync("ModificarRefFamiliar", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarRefFamiliarOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRefFamiliarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRefFamiliarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRefFamiliarCompleted(Me, New ModificarRefFamiliarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarRefPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRefPersonal(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRefPersonal", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRefPersonal(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRefPersonal", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRefPersonal(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRefPersonalAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarRefPersonalAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRefPersonalAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRefPersonalOperationCompleted Is Nothing) Then
                Me.ModificarRefPersonalOperationCompleted = AddressOf Me.OnModificarRefPersonalOperationCompleted
            End If
            Me.InvokeAsync("ModificarRefPersonal", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarRefPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRefPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRefPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRefPersonalCompleted(Me, New ModificarRefPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarRestricciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarRestricciones(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarRestricciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarRestricciones(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarRestricciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarRestricciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarRestriccionesAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarRestriccionesAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarRestriccionesAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarRestriccionesOperationCompleted Is Nothing) Then
                Me.ModificarRestriccionesOperationCompleted = AddressOf Me.OnModificarRestriccionesOperationCompleted
            End If
            Me.InvokeAsync("ModificarRestricciones", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarRestriccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarRestriccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarRestriccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarRestriccionesCompleted(Me, New ModificarRestriccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarSeccionRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarSeccionRegistro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarSeccionRegistro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarSeccionRegistro(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarSeccionRegistro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarSeccionRegistro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarSeccionRegistroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarSeccionRegistroAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarSeccionRegistroAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarSeccionRegistroOperationCompleted Is Nothing) Then
                Me.ModificarSeccionRegistroOperationCompleted = AddressOf Me.OnModificarSeccionRegistroOperationCompleted
            End If
            Me.InvokeAsync("ModificarSeccionRegistro", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarSeccionRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarSeccionRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarSeccionRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarSeccionRegistroCompleted(Me, New ModificarSeccionRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarSolCred", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarSolCred(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarSolCred", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarSolCred(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarSolCred", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarSolCred(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarSolCredAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarSolCredAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarSolCredAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarSolCredOperationCompleted Is Nothing) Then
                Me.ModificarSolCredOperationCompleted = AddressOf Me.OnModificarSolCredOperationCompleted
            End If
            Me.InvokeAsync("ModificarSolCred", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarSolCredOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarSolCredOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarSolCredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarSolCredCompleted(Me, New ModificarSolCredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarSolCredR", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarSolCredR(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarSolCredR", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarSolCredR(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarSolCredR", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarSolCredR(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarSolCredRAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarSolCredRAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarSolCredRAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarSolCredROperationCompleted Is Nothing) Then
                Me.ModificarSolCredROperationCompleted = AddressOf Me.OnModificarSolCredROperationCompleted
            End If
            Me.InvokeAsync("ModificarSolCredR", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarSolCredROperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarSolCredROperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarSolCredRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarSolCredRCompleted(Me, New ModificarSolCredRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarSolP2Credito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarSolP2Credito(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarSolP2Credito", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarSolP2Credito(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarSolP2Credito", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarSolP2Credito(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarSolP2CreditoAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarSolP2CreditoAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarSolP2CreditoAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarSolP2CreditoOperationCompleted Is Nothing) Then
                Me.ModificarSolP2CreditoOperationCompleted = AddressOf Me.OnModificarSolP2CreditoOperationCompleted
            End If
            Me.InvokeAsync("ModificarSolP2Credito", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarSolP2CreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarSolP2CreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarSolP2CreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarSolP2CreditoCompleted(Me, New ModificarSolP2CreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarTipGarant", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarTipGarant(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarTipGarant", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarTipGarant(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarTipGarant", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarTipGarant(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarTipGarantAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarTipGarantAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarTipGarantAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarTipGarantOperationCompleted Is Nothing) Then
                Me.ModificarTipGarantOperationCompleted = AddressOf Me.OnModificarTipGarantOperationCompleted
            End If
            Me.InvokeAsync("ModificarTipGarant", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarTipGarantOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarTipGarantOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarTipGarantCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarTipGarantCompleted(Me, New ModificarTipGarantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarTipoCobranza", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarTipoCobranza(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarTipoCobranza", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarTipoCobranza(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarTipoCobranza", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarTipoCobranza(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoCobranzaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarTipoCobranzaAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoCobranzaAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarTipoCobranzaOperationCompleted Is Nothing) Then
                Me.ModificarTipoCobranzaOperationCompleted = AddressOf Me.OnModificarTipoCobranzaOperationCompleted
            End If
            Me.InvokeAsync("ModificarTipoCobranza", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarTipoCobranzaOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarTipoCobranzaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarTipoCobranzaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarTipoCobranzaCompleted(Me, New ModificarTipoCobranzaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarTipoCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarTipoCreditos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarTipoCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarTipoCreditos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarTipoCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarTipoCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoCreditosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarTipoCreditosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoCreditosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarTipoCreditosOperationCompleted Is Nothing) Then
                Me.ModificarTipoCreditosOperationCompleted = AddressOf Me.OnModificarTipoCreditosOperationCompleted
            End If
            Me.InvokeAsync("ModificarTipoCreditos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarTipoCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarTipoCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarTipoCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarTipoCreditosCompleted(Me, New ModificarTipoCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarTipoGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarTipoGastos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarTipoGastos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarTipoGastos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarTipoGastos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarTipoGastos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoGastosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarTipoGastosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoGastosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarTipoGastosOperationCompleted Is Nothing) Then
                Me.ModificarTipoGastosOperationCompleted = AddressOf Me.OnModificarTipoGastosOperationCompleted
            End If
            Me.InvokeAsync("ModificarTipoGastos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarTipoGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarTipoGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarTipoGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarTipoGastosCompleted(Me, New ModificarTipoGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarTipoGestion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarTipoGestion(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarTipoGestion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarTipoGestion(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarTipoGestion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarTipoGestion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoGestionAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarTipoGestionAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoGestionAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarTipoGestionOperationCompleted Is Nothing) Then
                Me.ModificarTipoGestionOperationCompleted = AddressOf Me.OnModificarTipoGestionOperationCompleted
            End If
            Me.InvokeAsync("ModificarTipoGestion", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarTipoGestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarTipoGestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarTipoGestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarTipoGestionCompleted(Me, New ModificarTipoGestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarTipoIngresos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarTipoIngresos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarTipoIngresos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarTipoIngresos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarTipoIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoIngresosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarTipoIngresosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarTipoIngresosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarTipoIngresosOperationCompleted Is Nothing) Then
                Me.ModificarTipoIngresosOperationCompleted = AddressOf Me.OnModificarTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("ModificarTipoIngresos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarTipoIngresosCompleted(Me, New ModificarTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarValuos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarValuos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarValuos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarValuos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarValuos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarValuos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarValuosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarValuosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarValuosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarValuosOperationCompleted Is Nothing) Then
                Me.ModificarValuosOperationCompleted = AddressOf Me.OnModificarValuosOperationCompleted
            End If
            Me.InvokeAsync("ModificarValuos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarValuosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarValuosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarValuosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarValuosCompleted(Me, New ModificarValuosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarVehiculos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarVehiculos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ModificarVehiculos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarVehiculos(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarVehiculos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarVehiculos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarVehiculosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ModificarVehiculosAsync(pCorrelativo, pCamposyValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarVehiculosAsync(ByVal pCorrelativo As String, ByVal pCamposyValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ModificarVehiculosOperationCompleted Is Nothing) Then
                Me.ModificarVehiculosOperationCompleted = AddressOf Me.OnModificarVehiculosOperationCompleted
            End If
            Me.InvokeAsync("ModificarVehiculos", New Object() {pCorrelativo, pCamposyValores, pUs, pPa, pSucursal}, Me.ModificarVehiculosOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarVehiculosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarVehiculosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarVehiculosCompleted(Me, New ModificarVehiculosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoBienInmueble", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoBienInmueble(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoBienInmueble", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoBienInmueble(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoBienInmueble", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoBienInmueble(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoBienInmuebleAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoBienInmuebleAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoBienInmuebleAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoBienInmuebleOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoBienInmuebleOperationCompleted = AddressOf Me.OnObtenerCorrelativoBienInmuebleOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoBienInmueble", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoBienInmuebleOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoBienInmuebleOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoBienInmuebleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoBienInmuebleCompleted(Me, New ObtenerCorrelativoBienInmuebleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoBitacoraGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoBitacoraGestores(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoBitacoraGestores", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoBitacoraGestores(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoBitacoraGestores", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoBitacoraGestores(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoBitacoraGestoresAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoBitacoraGestoresAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoBitacoraGestoresAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoBitacoraGestoresOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoBitacoraGestoresOperationCompleted = AddressOf Me.OnObtenerCorrelativoBitacoraGestoresOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoBitacoraGestores", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoBitacoraGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoBitacoraGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoBitacoraGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoBitacoraGestoresCompleted(Me, New ObtenerCorrelativoBitacoraGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoDatGral", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoDatGral(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoDatGral", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoDatGral(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoDatGral", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoDatGral(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDatGralAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoDatGralAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDatGralAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoDatGralOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoDatGralOperationCompleted = AddressOf Me.OnObtenerCorrelativoDatGralOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoDatGral", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoDatGralOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoDatGralOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoDatGralCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoDatGralCompleted(Me, New ObtenerCorrelativoDatGralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoDespacho", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoDespacho(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoDespacho", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoDespacho(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoDespacho", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoDespacho(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDespachoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoDespachoAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoDespachoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoDespachoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoDespachoOperationCompleted = AddressOf Me.OnObtenerCorrelativoDespachoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoDespacho", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoDespachoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoDespachoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoDespachoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoDespachoCompleted(Me, New ObtenerCorrelativoDespachoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoEmpresaValuadora", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoEmpresaValuadora(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoEmpresaValuadora", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoEmpresaValuadora(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoEmpresaValuadora", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoEmpresaValuadora(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoEmpresaValuadoraAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoEmpresaValuadoraAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoEmpresaValuadoraAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoEmpresaValuadoraOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoEmpresaValuadoraOperationCompleted = AddressOf Me.OnObtenerCorrelativoEmpresaValuadoraOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoEmpresaValuadora", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoEmpresaValuadoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoEmpresaValuadoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoEmpresaValuadoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoEmpresaValuadoraCompleted(Me, New ObtenerCorrelativoEmpresaValuadoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoGarantias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoGarantias(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoGarantias", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoGarantias(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoGarantias", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoGarantias(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGarantiasAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoGarantiasAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGarantiasAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoGarantiasOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoGarantiasOperationCompleted = AddressOf Me.OnObtenerCorrelativoGarantiasOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoGarantias", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoGarantiasOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoGarantiasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoGarantiasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoGarantiasCompleted(Me, New ObtenerCorrelativoGarantiasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoGastos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoGastos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoGastos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoGastos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoGastos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGastosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoGastosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGastosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoGastosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoGastosOperationCompleted = AddressOf Me.OnObtenerCorrelativoGastosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoGastos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoGastosCompleted(Me, New ObtenerCorrelativoGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoGestiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoGestiones(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoGestiones", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoGestiones(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoGestiones", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoGestiones(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGestionesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoGestionesAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGestionesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoGestionesOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoGestionesOperationCompleted = AddressOf Me.OnObtenerCorrelativoGestionesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoGestiones", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoGestionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoGestionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoGestionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoGestionesCompleted(Me, New ObtenerCorrelativoGestionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoGestores(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoGestores", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoGestores(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoGestores", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoGestores(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGestoresAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoGestoresAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGestoresAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoGestoresOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoGestoresOperationCompleted = AddressOf Me.OnObtenerCorrelativoGestoresOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoGestores", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoGestoresCompleted(Me, New ObtenerCorrelativoGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoGestoresxCredito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoGestoresxCredito(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoGestoresxCredito", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoGestoresxCredito(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoGestoresxCredito", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoGestoresxCredito(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGestoresxCreditoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoGestoresxCreditoAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoGestoresxCreditoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoGestoresxCreditoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoGestoresxCreditoOperationCompleted = AddressOf Me.OnObtenerCorrelativoGestoresxCreditoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoGestoresxCredito", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoGestoresxCreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoGestoresxCreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoGestoresxCreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoGestoresxCreditoCompleted(Me, New ObtenerCorrelativoGestoresxCreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoIngresos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoIngresos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoIngresos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoIngresos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoIngresos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoIngresosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoIngresosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoIngresosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoIngresosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoIngresosOperationCompleted = AddressOf Me.OnObtenerCorrelativoIngresosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoIngresos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoIngresosCompleted(Me, New ObtenerCorrelativoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoLineaCreditos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoLineaCreditos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoLineaCreditos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoLineaCreditos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoLineaCreditos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoLineaCreditosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoLineaCreditosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoLineaCreditosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoLineaCreditosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoLineaCreditosOperationCompleted = AddressOf Me.OnObtenerCorrelativoLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoLineaCreditos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoLineaCreditosCompleted(Me, New ObtenerCorrelativoLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoObligaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoObligaciones(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoObligaciones", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoObligaciones(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoObligaciones", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoObligaciones(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoObligacionesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoObligacionesAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoObligacionesAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoObligacionesOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoObligacionesOperationCompleted = AddressOf Me.OnObtenerCorrelativoObligacionesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoObligaciones", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoObligacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoObligacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoObligacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoObligacionesCompleted(Me, New ObtenerCorrelativoObligacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoObservacionesxAnalisis", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoObservacionesxAnalisis(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoObservacionesxAnalisis", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoObservacionesxAnalisis(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoObservacionesxAnalisis", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoObservacionesxAnalisis(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoObservacionesxAnalisisAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoObservacionesxAnalisisAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoObservacionesxAnalisisAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoObservacionesxAnalisisOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoObservacionesxAnalisisOperationCompleted = AddressOf Me.OnObtenerCorrelativoObservacionesxAnalisisOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoObservacionesxAnalisis", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoObservacionesxAnalisisOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoObservacionesxAnalisisOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoObservacionesxAnalisisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoObservacionesxAnalisisCompleted(Me, New ObtenerCorrelativoObservacionesxAnalisisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoPagaduria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoPagaduria(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoPagaduria", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoPagaduria(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoPagaduria", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoPagaduria(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoPagaduriaAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoPagaduriaAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoPagaduriaAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoPagaduriaOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoPagaduriaOperationCompleted = AddressOf Me.OnObtenerCorrelativoPagaduriaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoPagaduria", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoPagaduriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoPagaduriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoPagaduriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoPagaduriaCompleted(Me, New ObtenerCorrelativoPagaduriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoPrestamos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoPrestamos(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal codTipoCredito As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoPrestamos", New Object() {pMes, pAnio, pUs, pPa, pSucursal, codTipoCredito})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoPrestamos(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal codTipoCredito As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoPrestamos", New Object() {pMes, pAnio, pUs, pPa, pSucursal, codTipoCredito}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoPrestamos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoPrestamosAsync(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal codTipoCredito As String)
            Me.ObtenerCorrelativoPrestamosAsync(pMes, pAnio, pUs, pPa, pSucursal, codTipoCredito, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoPrestamosAsync(ByVal pMes As Integer, ByVal pAnio As Integer, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal codTipoCredito As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoPrestamosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoPrestamosOperationCompleted = AddressOf Me.OnObtenerCorrelativoPrestamosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoPrestamos", New Object() {pMes, pAnio, pUs, pPa, pSucursal, codTipoCredito}, Me.ObtenerCorrelativoPrestamosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoPrestamosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoPrestamosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoPrestamosCompleted(Me, New ObtenerCorrelativoPrestamosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoRangoLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoRangoLineaCreditos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoRangoLineaCreditos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoRangoLineaCreditos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoRangoLineaCreditos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoRangoLineaCreditos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRangoLineaCreditosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoRangoLineaCreditosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRangoLineaCreditosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoRangoLineaCreditosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoRangoLineaCreditosOperationCompleted = AddressOf Me.OnObtenerCorrelativoRangoLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoRangoLineaCreditos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoRangoLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoRangoLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoRangoLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoRangoLineaCreditosCompleted(Me, New ObtenerCorrelativoRangoLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoRefBancaria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoRefBancaria(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoRefBancaria", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoRefBancaria(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoRefBancaria", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoRefBancaria(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRefBancariaAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoRefBancariaAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRefBancariaAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoRefBancariaOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoRefBancariaOperationCompleted = AddressOf Me.OnObtenerCorrelativoRefBancariaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoRefBancaria", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoRefBancariaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoRefBancariaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoRefBancariaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoRefBancariaCompleted(Me, New ObtenerCorrelativoRefBancariaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoRefComercial", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoRefComercial(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoRefComercial", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoRefComercial(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoRefComercial", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoRefComercial(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRefComercialAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoRefComercialAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRefComercialAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoRefComercialOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoRefComercialOperationCompleted = AddressOf Me.OnObtenerCorrelativoRefComercialOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoRefComercial", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoRefComercialOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoRefComercialOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoRefComercialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoRefComercialCompleted(Me, New ObtenerCorrelativoRefComercialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoRefFamiliar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoRefFamiliar(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoRefFamiliar", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoRefFamiliar(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoRefFamiliar", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoRefFamiliar(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRefFamiliarAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoRefFamiliarAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRefFamiliarAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoRefFamiliarOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoRefFamiliarOperationCompleted = AddressOf Me.OnObtenerCorrelativoRefFamiliarOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoRefFamiliar", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoRefFamiliarOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoRefFamiliarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoRefFamiliarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoRefFamiliarCompleted(Me, New ObtenerCorrelativoRefFamiliarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoRefPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoRefPersonal(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoRefPersonal", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoRefPersonal(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoRefPersonal", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoRefPersonal(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRefPersonalAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoRefPersonalAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoRefPersonalAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoRefPersonalOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoRefPersonalOperationCompleted = AddressOf Me.OnObtenerCorrelativoRefPersonalOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoRefPersonal", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoRefPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoRefPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoRefPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoRefPersonalCompleted(Me, New ObtenerCorrelativoRefPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoSeccionRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoSeccionRegistro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoSeccionRegistro", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoSeccionRegistro(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoSeccionRegistro", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoSeccionRegistro(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSeccionRegistroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoSeccionRegistroAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSeccionRegistroAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoSeccionRegistroOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoSeccionRegistroOperationCompleted = AddressOf Me.OnObtenerCorrelativoSeccionRegistroOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoSeccionRegistro", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoSeccionRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoSeccionRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoSeccionRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoSeccionRegistroCompleted(Me, New ObtenerCorrelativoSeccionRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoSolCred", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoSolCred(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoSolCred", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoSolCred(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoSolCred", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoSolCred(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSolCredAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoSolCredAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSolCredAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoSolCredOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoSolCredOperationCompleted = AddressOf Me.OnObtenerCorrelativoSolCredOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoSolCred", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoSolCredOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoSolCredOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoSolCredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoSolCredCompleted(Me, New ObtenerCorrelativoSolCredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoSolCredR", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoSolCredR(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoSolCredR", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoSolCredR(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoSolCredR", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoSolCredR(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSolCredRAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoSolCredRAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSolCredRAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoSolCredROperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoSolCredROperationCompleted = AddressOf Me.OnObtenerCorrelativoSolCredROperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoSolCredR", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoSolCredROperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoSolCredROperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoSolCredRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoSolCredRCompleted(Me, New ObtenerCorrelativoSolCredRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoSolP2Credito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoSolP2Credito(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoSolP2Credito", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoSolP2Credito(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoSolP2Credito", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoSolP2Credito(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSolP2CreditoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoSolP2CreditoAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoSolP2CreditoAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoSolP2CreditoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoSolP2CreditoOperationCompleted = AddressOf Me.OnObtenerCorrelativoSolP2CreditoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoSolP2Credito", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoSolP2CreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoSolP2CreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoSolP2CreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoSolP2CreditoCompleted(Me, New ObtenerCorrelativoSolP2CreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoTipGarant", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoTipGarant(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoTipGarant", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoTipGarant(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoTipGarant", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoTipGarant(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipGarantAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoTipGarantAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipGarantAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoTipGarantOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoTipGarantOperationCompleted = AddressOf Me.OnObtenerCorrelativoTipGarantOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoTipGarant", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoTipGarantOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoTipGarantOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoTipGarantCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoTipGarantCompleted(Me, New ObtenerCorrelativoTipGarantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoTipoCobranza", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoTipoCobranza(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoTipoCobranza", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoTipoCobranza(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoTipoCobranza", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoTipoCobranza(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoCobranzaAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoTipoCobranzaAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoCobranzaAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoTipoCobranzaOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoTipoCobranzaOperationCompleted = AddressOf Me.OnObtenerCorrelativoTipoCobranzaOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoTipoCobranza", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoTipoCobranzaOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoTipoCobranzaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoTipoCobranzaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoTipoCobranzaCompleted(Me, New ObtenerCorrelativoTipoCobranzaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoTipoCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoTipoCreditos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoTipoCreditos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoTipoCreditos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoTipoCreditos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoTipoCreditos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoCreditosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoTipoCreditosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoCreditosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoTipoCreditosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoTipoCreditosOperationCompleted = AddressOf Me.OnObtenerCorrelativoTipoCreditosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoTipoCreditos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoTipoCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoTipoCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoTipoCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoTipoCreditosCompleted(Me, New ObtenerCorrelativoTipoCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoTipoGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoTipoGastos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoTipoGastos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoTipoGastos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoTipoGastos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoTipoGastos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoGastosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoTipoGastosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoGastosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoTipoGastosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoTipoGastosOperationCompleted = AddressOf Me.OnObtenerCorrelativoTipoGastosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoTipoGastos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoTipoGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoTipoGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoTipoGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoTipoGastosCompleted(Me, New ObtenerCorrelativoTipoGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoTipoGestion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoTipoGestion(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoTipoGestion", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoTipoGestion(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoTipoGestion", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoTipoGestion(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoGestionAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoTipoGestionAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoGestionAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoTipoGestionOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoTipoGestionOperationCompleted = AddressOf Me.OnObtenerCorrelativoTipoGestionOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoTipoGestion", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoTipoGestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoTipoGestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoTipoGestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoTipoGestionCompleted(Me, New ObtenerCorrelativoTipoGestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoTipoIngresos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoTipoIngresos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoTipoIngresos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoTipoIngresos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoTipoIngresos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoIngresosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoTipoIngresosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoTipoIngresosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoTipoIngresosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoTipoIngresosOperationCompleted = AddressOf Me.OnObtenerCorrelativoTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoTipoIngresos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoTipoIngresosCompleted(Me, New ObtenerCorrelativoTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoValuos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoValuos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoValuos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoValuos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoValuos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoValuos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoValuosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoValuosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoValuosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoValuosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoValuosOperationCompleted = AddressOf Me.OnObtenerCorrelativoValuosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoValuos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoValuosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoValuosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoValuosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoValuosCompleted(Me, New ObtenerCorrelativoValuosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoVehiculos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoVehiculos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Long
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoVehiculos", New Object() {pCampo, pUs, pPa, pSucursal})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoVehiculos(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoVehiculos", New Object() {pCampo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoVehiculos(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoVehiculosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ObtenerCorrelativoVehiculosAsync(pCampo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoVehiculosAsync(ByVal pCampo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoVehiculosOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoVehiculosOperationCompleted = AddressOf Me.OnObtenerCorrelativoVehiculosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoVehiculos", New Object() {pCampo, pUs, pPa, pSucursal}, Me.ObtenerCorrelativoVehiculosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoVehiculosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoVehiculosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoVehiculosCompleted(Me, New ObtenerCorrelativoVehiculosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ReporteHistorialCategoria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReporteHistorialCategoria(ByVal pAnnio As Integer, ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReporteHistorialCategoria", New Object() {pAnnio, pFiltro, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginReporteHistorialCategoria(ByVal pAnnio As Integer, ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReporteHistorialCategoria", New Object() {pAnnio, pFiltro, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReporteHistorialCategoria(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReporteHistorialCategoriaAsync(ByVal pAnnio As Integer, ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ReporteHistorialCategoriaAsync(pAnnio, pFiltro, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReporteHistorialCategoriaAsync(ByVal pAnnio As Integer, ByVal pFiltro As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ReporteHistorialCategoriaOperationCompleted Is Nothing) Then
                Me.ReporteHistorialCategoriaOperationCompleted = AddressOf Me.OnReporteHistorialCategoriaOperationCompleted
            End If
            Me.InvokeAsync("ReporteHistorialCategoria", New Object() {pAnnio, pFiltro, pUs, pPa, pSucursal}, Me.ReporteHistorialCategoriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnReporteHistorialCategoriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReporteHistorialCategoriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReporteHistorialCategoriaCompleted(Me, New ReporteHistorialCategoriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/TablaAmortizacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TablaAmortizacion(ByVal codPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TablaAmortizacion", New Object() {codPrestamo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginTablaAmortizacion(ByVal codPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TablaAmortizacion", New Object() {codPrestamo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndTablaAmortizacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TablaAmortizacionAsync(ByVal codPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.TablaAmortizacionAsync(codPrestamo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TablaAmortizacionAsync(ByVal codPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.TablaAmortizacionOperationCompleted Is Nothing) Then
                Me.TablaAmortizacionOperationCompleted = AddressOf Me.OnTablaAmortizacionOperationCompleted
            End If
            Me.InvokeAsync("TablaAmortizacion", New Object() {codPrestamo, pUsuario, pPassword, pSucursal}, Me.TablaAmortizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnTablaAmortizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.TablaAmortizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TablaAmortizacionCompleted(Me, New TablaAmortizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/VerificaGestor", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VerificaGestor(ByVal sGestor As String, ByVal sClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As String
            Dim results() As Object = Me.Invoke("VerificaGestor", New Object() {sGestor, sClave, pUsuario, pPassword, pSucursal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginVerificaGestor(ByVal sGestor As String, ByVal sClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VerificaGestor", New Object() {sGestor, sClave, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVerificaGestor(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerificaGestorAsync(ByVal sGestor As String, ByVal sClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.VerificaGestorAsync(sGestor, sClave, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerificaGestorAsync(ByVal sGestor As String, ByVal sClave As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.VerificaGestorOperationCompleted Is Nothing) Then
                Me.VerificaGestorOperationCompleted = AddressOf Me.OnVerificaGestorOperationCompleted
            End If
            Me.InvokeAsync("VerificaGestor", New Object() {sGestor, sClave, pUsuario, pPassword, pSucursal}, Me.VerificaGestorOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificaGestorOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerificaGestorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerificaGestorCompleted(Me, New VerificaGestorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGestores(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGestores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGestores(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGestores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGestores(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGestoresAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarGestoresAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGestoresAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGestoresOperationCompleted Is Nothing) Then
                Me.ConsultarGestoresOperationCompleted = AddressOf Me.OnConsultarGestoresOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGestores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGestoresCompleted(Me, New ConsultarGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGestoresxCredito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGestoresxCredito(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGestoresxCredito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGestoresxCredito(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGestoresxCredito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGestoresxCredito(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGestoresxCreditoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarGestoresxCreditoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGestoresxCreditoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGestoresxCreditoOperationCompleted Is Nothing) Then
                Me.ConsultarGestoresxCreditoOperationCompleted = AddressOf Me.OnConsultarGestoresxCreditoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGestoresxCredito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarGestoresxCreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGestoresxCreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGestoresxCreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGestoresxCreditoCompleted(Me, New ConsultarGestoresxCreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGestoresxCredito_Asociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGestoresxCredito_Asociado(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGestoresxCredito_Asociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGestoresxCredito_Asociado(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGestoresxCredito_Asociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGestoresxCredito_Asociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGestoresxCredito_AsociadoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarGestoresxCredito_AsociadoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGestoresxCredito_AsociadoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGestoresxCredito_AsociadoOperationCompleted Is Nothing) Then
                Me.ConsultarGestoresxCredito_AsociadoOperationCompleted = AddressOf Me.OnConsultarGestoresxCredito_AsociadoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGestoresxCredito_Asociado", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarGestoresxCredito_AsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGestoresxCredito_AsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGestoresxCredito_AsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGestoresxCredito_AsociadoCompleted(Me, New ConsultarGestoresxCredito_AsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarHistorialCategoria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarHistorialCategoria(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarHistorialCategoria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarHistorialCategoria(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarHistorialCategoria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarHistorialCategoria(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarHistorialCategoriaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarHistorialCategoriaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarHistorialCategoriaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarHistorialCategoriaOperationCompleted Is Nothing) Then
                Me.ConsultarHistorialCategoriaOperationCompleted = AddressOf Me.OnConsultarHistorialCategoriaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarHistorialCategoria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarHistorialCategoriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarHistorialCategoriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarHistorialCategoriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarHistorialCategoriaCompleted(Me, New ConsultarHistorialCategoriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarIngresos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarIngresos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarIngresos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarIngresos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarIngresos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarIngresosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarIngresosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarIngresosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarIngresosOperationCompleted Is Nothing) Then
                Me.ConsultarIngresosOperationCompleted = AddressOf Me.OnConsultarIngresosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarIngresos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarIngresosCompleted(Me, New ConsultarIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarLineaCreditos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarLineaCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarLineaCreditos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarLineaCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarLineaCreditos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarLineaCreditosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarLineaCreditosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarLineaCreditosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarLineaCreditosOperationCompleted Is Nothing) Then
                Me.ConsultarLineaCreditosOperationCompleted = AddressOf Me.OnConsultarLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarLineaCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarLineaCreditosCompleted(Me, New ConsultarLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarObligaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarObligaciones(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarObligaciones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarObligaciones(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarObligaciones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarObligaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarObligacionesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarObligacionesAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarObligacionesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarObligacionesOperationCompleted Is Nothing) Then
                Me.ConsultarObligacionesOperationCompleted = AddressOf Me.OnConsultarObligacionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarObligaciones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarObligacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarObligacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarObligacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarObligacionesCompleted(Me, New ConsultarObligacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarObservacionesxAnalisis", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarObservacionesxAnalisis(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarObservacionesxAnalisis", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarObservacionesxAnalisis(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarObservacionesxAnalisis", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarObservacionesxAnalisis(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarObservacionesxAnalisisAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarObservacionesxAnalisisAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarObservacionesxAnalisisAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarObservacionesxAnalisisOperationCompleted Is Nothing) Then
                Me.ConsultarObservacionesxAnalisisOperationCompleted = AddressOf Me.OnConsultarObservacionesxAnalisisOperationCompleted
            End If
            Me.InvokeAsync("ConsultarObservacionesxAnalisis", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarObservacionesxAnalisisOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarObservacionesxAnalisisOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarObservacionesxAnalisisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarObservacionesxAnalisisCompleted(Me, New ConsultarObservacionesxAnalisisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarPagaduria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPagaduria(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPagaduria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPagaduria(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPagaduria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPagaduria(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPagaduriaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarPagaduriaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPagaduriaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPagaduriaOperationCompleted Is Nothing) Then
                Me.ConsultarPagaduriaOperationCompleted = AddressOf Me.OnConsultarPagaduriaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPagaduria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarPagaduriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPagaduriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPagaduriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPagaduriaCompleted(Me, New ConsultarPagaduriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarPRCategoriaRiesgo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPRCategoriaRiesgo(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPRCategoriaRiesgo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPRCategoriaRiesgo(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPRCategoriaRiesgo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPRCategoriaRiesgo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPRCategoriaRiesgoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPRCategoriaRiesgoAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPRCategoriaRiesgoAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPRCategoriaRiesgoOperationCompleted Is Nothing) Then
                Me.ConsultarPRCategoriaRiesgoOperationCompleted = AddressOf Me.OnConsultarPRCategoriaRiesgoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPRCategoriaRiesgo", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarPRCategoriaRiesgoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPRCategoriaRiesgoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPRCategoriaRiesgoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPRCategoriaRiesgoCompleted(Me, New ConsultarPRCategoriaRiesgoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarPrestamos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPrestamos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPrestamos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPrestamos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPrestamos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPrestamos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPrestamosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarPrestamosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPrestamosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPrestamosOperationCompleted Is Nothing) Then
                Me.ConsultarPrestamosOperationCompleted = AddressOf Me.OnConsultarPrestamosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPrestamos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarPrestamosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPrestamosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPrestamosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPrestamosCompleted(Me, New ConsultarPrestamosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarPrestamosxInscripcion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPrestamosxInscripcion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPrestamosxInscripcion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPrestamosxInscripcion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPrestamosxInscripcion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPrestamosxInscripcion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPrestamosxInscripcionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarPrestamosxInscripcionAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPrestamosxInscripcionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPrestamosxInscripcionOperationCompleted Is Nothing) Then
                Me.ConsultarPrestamosxInscripcionOperationCompleted = AddressOf Me.OnConsultarPrestamosxInscripcionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPrestamosxInscripcion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarPrestamosxInscripcionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPrestamosxInscripcionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPrestamosxInscripcionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPrestamosxInscripcionCompleted(Me, New ConsultarPrestamosxInscripcionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarPRPrestamos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPRPrestamos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pJoin As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPRPrestamos", New Object() {pCampos, pFiltro, pOrden, pJoin, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarPRPrestamos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pJoin As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarPRPrestamos", New Object() {pCampos, pFiltro, pOrden, pJoin, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarPRPrestamos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPRPrestamosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pJoin As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarPRPrestamosAsync(pCampos, pFiltro, pOrden, pJoin, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPRPrestamosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pJoin As Boolean, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarPRPrestamosOperationCompleted Is Nothing) Then
                Me.ConsultarPRPrestamosOperationCompleted = AddressOf Me.OnConsultarPRPrestamosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPRPrestamos", New Object() {pCampos, pFiltro, pOrden, pJoin, pUsuario, pPassword, pSucursal}, Me.ConsultarPRPrestamosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPRPrestamosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPRPrestamosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPRPrestamosCompleted(Me, New ConsultarPRPrestamosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarRangoLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRangoLineaCreditos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRangoLineaCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRangoLineaCreditos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRangoLineaCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRangoLineaCreditos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRangoLineaCreditosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarRangoLineaCreditosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRangoLineaCreditosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRangoLineaCreditosOperationCompleted Is Nothing) Then
                Me.ConsultarRangoLineaCreditosOperationCompleted = AddressOf Me.OnConsultarRangoLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRangoLineaCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarRangoLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRangoLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRangoLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRangoLineaCreditosCompleted(Me, New ConsultarRangoLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarRecuperacionGestion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRecuperacionGestion(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pCodGestor As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRecuperacionGestion", New Object() {pFechaInicio, pFechaFin, pCodGestor, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRecuperacionGestion(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pCodGestor As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRecuperacionGestion", New Object() {pFechaInicio, pFechaFin, pCodGestor, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRecuperacionGestion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRecuperacionGestionAsync(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pCodGestor As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarRecuperacionGestionAsync(pFechaInicio, pFechaFin, pCodGestor, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRecuperacionGestionAsync(ByVal pFechaInicio As Date, ByVal pFechaFin As Date, ByVal pCodGestor As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRecuperacionGestionOperationCompleted Is Nothing) Then
                Me.ConsultarRecuperacionGestionOperationCompleted = AddressOf Me.OnConsultarRecuperacionGestionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRecuperacionGestion", New Object() {pFechaInicio, pFechaFin, pCodGestor, pUsuario, pPassword, pSucursal}, Me.ConsultarRecuperacionGestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRecuperacionGestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRecuperacionGestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRecuperacionGestionCompleted(Me, New ConsultarRecuperacionGestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarRefBancaria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRefBancaria(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRefBancaria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRefBancaria(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRefBancaria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRefBancaria(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRefBancariaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarRefBancariaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRefBancariaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRefBancariaOperationCompleted Is Nothing) Then
                Me.ConsultarRefBancariaOperationCompleted = AddressOf Me.OnConsultarRefBancariaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRefBancaria", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarRefBancariaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRefBancariaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRefBancariaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRefBancariaCompleted(Me, New ConsultarRefBancariaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarRefComercial", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRefComercial(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRefComercial", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRefComercial(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRefComercial", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRefComercial(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRefComercialAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarRefComercialAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRefComercialAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRefComercialOperationCompleted Is Nothing) Then
                Me.ConsultarRefComercialOperationCompleted = AddressOf Me.OnConsultarRefComercialOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRefComercial", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarRefComercialOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRefComercialOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRefComercialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRefComercialCompleted(Me, New ConsultarRefComercialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarRefFamiliar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRefFamiliar(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRefFamiliar", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRefFamiliar(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRefFamiliar", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRefFamiliar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRefFamiliarAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarRefFamiliarAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRefFamiliarAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRefFamiliarOperationCompleted Is Nothing) Then
                Me.ConsultarRefFamiliarOperationCompleted = AddressOf Me.OnConsultarRefFamiliarOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRefFamiliar", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarRefFamiliarOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRefFamiliarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRefFamiliarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRefFamiliarCompleted(Me, New ConsultarRefFamiliarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarRefPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarRefPersonal(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarRefPersonal", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarRefPersonal(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarRefPersonal", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarRefPersonal(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarRefPersonalAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarRefPersonalAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarRefPersonalAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarRefPersonalOperationCompleted Is Nothing) Then
                Me.ConsultarRefPersonalOperationCompleted = AddressOf Me.OnConsultarRefPersonalOperationCompleted
            End If
            Me.InvokeAsync("ConsultarRefPersonal", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarRefPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarRefPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarRefPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarRefPersonalCompleted(Me, New ConsultarRefPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarResultadosDICOM", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarResultadosDICOM(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarResultadosDICOM", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarResultadosDICOM(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarResultadosDICOM", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarResultadosDICOM(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarResultadosDICOMAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarResultadosDICOMAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarResultadosDICOMAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarResultadosDICOMOperationCompleted Is Nothing) Then
                Me.ConsultarResultadosDICOMOperationCompleted = AddressOf Me.OnConsultarResultadosDICOMOperationCompleted
            End If
            Me.InvokeAsync("ConsultarResultadosDICOM", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarResultadosDICOMOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarResultadosDICOMOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarResultadosDICOMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarResultadosDICOMCompleted(Me, New ConsultarResultadosDICOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarSeccionRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarSeccionRegistro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarSeccionRegistro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarSeccionRegistro(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarSeccionRegistro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarSeccionRegistro(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarSeccionRegistroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarSeccionRegistroAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarSeccionRegistroAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarSeccionRegistroOperationCompleted Is Nothing) Then
                Me.ConsultarSeccionRegistroOperationCompleted = AddressOf Me.OnConsultarSeccionRegistroOperationCompleted
            End If
            Me.InvokeAsync("ConsultarSeccionRegistro", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarSeccionRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarSeccionRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarSeccionRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarSeccionRegistroCompleted(Me, New ConsultarSeccionRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarSolCred", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarSolCred(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarSolCred", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarSolCred(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarSolCred", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarSolCred(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolCredAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarSolCredAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolCredAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarSolCredOperationCompleted Is Nothing) Then
                Me.ConsultarSolCredOperationCompleted = AddressOf Me.OnConsultarSolCredOperationCompleted
            End If
            Me.InvokeAsync("ConsultarSolCred", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarSolCredOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarSolCredOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarSolCredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarSolCredCompleted(Me, New ConsultarSolCredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarSolCredR", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarSolCredR(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarSolCredR", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarSolCredR(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarSolCredR", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarSolCredR(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolCredRAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarSolCredRAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolCredRAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarSolCredROperationCompleted Is Nothing) Then
                Me.ConsultarSolCredROperationCompleted = AddressOf Me.OnConsultarSolCredROperationCompleted
            End If
            Me.InvokeAsync("ConsultarSolCredR", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarSolCredROperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarSolCredROperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarSolCredRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarSolCredRCompleted(Me, New ConsultarSolCredRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarSolicitudCredito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarSolicitudCredito(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarSolicitudCredito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarSolicitudCredito(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarSolicitudCredito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarSolicitudCredito(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolicitudCreditoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarSolicitudCreditoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolicitudCreditoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarSolicitudCreditoOperationCompleted Is Nothing) Then
                Me.ConsultarSolicitudCreditoOperationCompleted = AddressOf Me.OnConsultarSolicitudCreditoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarSolicitudCredito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarSolicitudCreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarSolicitudCreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarSolicitudCreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarSolicitudCreditoCompleted(Me, New ConsultarSolicitudCreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarSolP2Credito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarSolP2Credito(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarSolP2Credito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarSolP2Credito(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarSolP2Credito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarSolP2Credito(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolP2CreditoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarSolP2CreditoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarSolP2CreditoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarSolP2CreditoOperationCompleted Is Nothing) Then
                Me.ConsultarSolP2CreditoOperationCompleted = AddressOf Me.OnConsultarSolP2CreditoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarSolP2Credito", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarSolP2CreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarSolP2CreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarSolP2CreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarSolP2CreditoCompleted(Me, New ConsultarSolP2CreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarTipGarant", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipGarant(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTipGarant", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTipGarant(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTipGarant", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTipGarant(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipGarantAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTipGarantAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipGarantAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTipGarantOperationCompleted Is Nothing) Then
                Me.ConsultarTipGarantOperationCompleted = AddressOf Me.OnConsultarTipGarantOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipGarant", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarTipGarantOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipGarantOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipGarantCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipGarantCompleted(Me, New ConsultarTipGarantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarTipoCobranza", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipoCobranza(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTipoCobranza", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTipoCobranza(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTipoCobranza", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTipoCobranza(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoCobranzaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTipoCobranzaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoCobranzaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTipoCobranzaOperationCompleted Is Nothing) Then
                Me.ConsultarTipoCobranzaOperationCompleted = AddressOf Me.OnConsultarTipoCobranzaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipoCobranza", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarTipoCobranzaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipoCobranzaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipoCobranzaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipoCobranzaCompleted(Me, New ConsultarTipoCobranzaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarTipoCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipoCreditos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTipoCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTipoCreditos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTipoCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTipoCreditos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoCreditosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTipoCreditosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoCreditosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTipoCreditosOperationCompleted Is Nothing) Then
                Me.ConsultarTipoCreditosOperationCompleted = AddressOf Me.OnConsultarTipoCreditosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipoCreditos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarTipoCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipoCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipoCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipoCreditosCompleted(Me, New ConsultarTipoCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarTipoGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipoGastos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTipoGastos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTipoGastos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTipoGastos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTipoGastos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoGastosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTipoGastosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoGastosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTipoGastosOperationCompleted Is Nothing) Then
                Me.ConsultarTipoGastosOperationCompleted = AddressOf Me.OnConsultarTipoGastosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipoGastos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarTipoGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipoGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipoGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipoGastosCompleted(Me, New ConsultarTipoGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarTipoGestion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipoGestion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTipoGestion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTipoGestion(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTipoGestion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTipoGestion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoGestionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTipoGestionAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoGestionAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTipoGestionOperationCompleted Is Nothing) Then
                Me.ConsultarTipoGestionOperationCompleted = AddressOf Me.OnConsultarTipoGestionOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipoGestion", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarTipoGestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipoGestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipoGestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipoGestionCompleted(Me, New ConsultarTipoGestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarTipoIngresos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarTipoIngresos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarTipoIngresos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarTipoIngresos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarTipoIngresos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoIngresosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarTipoIngresosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarTipoIngresosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarTipoIngresosOperationCompleted Is Nothing) Then
                Me.ConsultarTipoIngresosOperationCompleted = AddressOf Me.OnConsultarTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarTipoIngresos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarTipoIngresosCompleted(Me, New ConsultarTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarValuos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarValuos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombres As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarValuos", New Object() {pListaCampos, pFiltro, pOrden, pNombres, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarValuos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombres As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarValuos", New Object() {pListaCampos, pFiltro, pOrden, pNombres, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarValuos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarValuosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombres As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarValuosAsync(pListaCampos, pFiltro, pOrden, pNombres, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarValuosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pNombres As Boolean, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarValuosOperationCompleted Is Nothing) Then
                Me.ConsultarValuosOperationCompleted = AddressOf Me.OnConsultarValuosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarValuos", New Object() {pListaCampos, pFiltro, pOrden, pNombres, pUs, pPa, pSucursal}, Me.ConsultarValuosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarValuosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarValuosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarValuosCompleted(Me, New ConsultarValuosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarVehiculos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarVehiculos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarVehiculos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarVehiculos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarVehiculos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarVehiculos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarVehiculosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarVehiculosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarVehiculosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarVehiculosOperationCompleted Is Nothing) Then
                Me.ConsultarVehiculosOperationCompleted = AddressOf Me.OnConsultarVehiculosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarVehiculos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarVehiculosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarVehiculosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarVehiculosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarVehiculosCompleted(Me, New ConsultarVehiculosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CreditosSinPagoMesXGestionCredito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreditosSinPagoMesXGestionCredito(ByVal pTodos As Boolean, ByVal pCodGestor As String, ByVal pFecha As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CreditosSinPagoMesXGestionCredito", New Object() {pTodos, pCodGestor, pFecha, pFecha2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCreditosSinPagoMesXGestionCredito(ByVal pTodos As Boolean, ByVal pCodGestor As String, ByVal pFecha As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreditosSinPagoMesXGestionCredito", New Object() {pTodos, pCodGestor, pFecha, pFecha2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreditosSinPagoMesXGestionCredito(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreditosSinPagoMesXGestionCreditoAsync(ByVal pTodos As Boolean, ByVal pCodGestor As String, ByVal pFecha As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CreditosSinPagoMesXGestionCreditoAsync(pTodos, pCodGestor, pFecha, pFecha2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreditosSinPagoMesXGestionCreditoAsync(ByVal pTodos As Boolean, ByVal pCodGestor As String, ByVal pFecha As Date, ByVal pFecha2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CreditosSinPagoMesXGestionCreditoOperationCompleted Is Nothing) Then
                Me.CreditosSinPagoMesXGestionCreditoOperationCompleted = AddressOf Me.OnCreditosSinPagoMesXGestionCreditoOperationCompleted
            End If
            Me.InvokeAsync("CreditosSinPagoMesXGestionCredito", New Object() {pTodos, pCodGestor, pFecha, pFecha2, pUsuario, pPassword, pSucursal}, Me.CreditosSinPagoMesXGestionCreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreditosSinPagoMesXGestionCreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreditosSinPagoMesXGestionCreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreditosSinPagoMesXGestionCreditoCompleted(Me, New CreditosSinPagoMesXGestionCreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Determinacion_Reservas_Consolidado", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Determinacion_Reservas_Consolidado( _
                    ByVal pFecha As Date,  _
                    ByVal pGrupo As TipoAgrupacionCreditos,  _
                    ByVal pSaldo As Decimal,  _
                    ByVal pNo As Decimal,  _
                    ByVal pReserva As Decimal,  _
                    ByVal pSaldoCP As Decimal,  _
                    ByVal pNoCP As Decimal,  _
                    ByVal pReservaCP As Decimal,  _
                    ByVal pReservaCI As Decimal,  _
                    ByVal pNoDP As Decimal,  _
                    ByVal pSaldoDP As Decimal,  _
                    ByVal pReservaDP As Decimal,  _
                    ByVal pGuardarIndice As Boolean,  _
                    ByVal pUs As String,  _
                    ByVal pPa As String,  _
                    ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Determinacion_Reservas_Consolidado", New Object() {pFecha, pGrupo, pSaldo, pNo, pReserva, pSaldoCP, pNoCP, pReservaCP, pReservaCI, pNoDP, pSaldoDP, pReservaDP, pGuardarIndice, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginDeterminacion_Reservas_Consolidado( _
                    ByVal pFecha As Date,  _
                    ByVal pGrupo As TipoAgrupacionCreditos,  _
                    ByVal pSaldo As Decimal,  _
                    ByVal pNo As Decimal,  _
                    ByVal pReserva As Decimal,  _
                    ByVal pSaldoCP As Decimal,  _
                    ByVal pNoCP As Decimal,  _
                    ByVal pReservaCP As Decimal,  _
                    ByVal pReservaCI As Decimal,  _
                    ByVal pNoDP As Decimal,  _
                    ByVal pSaldoDP As Decimal,  _
                    ByVal pReservaDP As Decimal,  _
                    ByVal pGuardarIndice As Boolean,  _
                    ByVal pUs As String,  _
                    ByVal pPa As String,  _
                    ByVal pSucursal As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Determinacion_Reservas_Consolidado", New Object() {pFecha, pGrupo, pSaldo, pNo, pReserva, pSaldoCP, pNoCP, pReservaCP, pReservaCI, pNoDP, pSaldoDP, pReservaDP, pGuardarIndice, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeterminacion_Reservas_Consolidado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Determinacion_Reservas_ConsolidadoAsync( _
                    ByVal pFecha As Date,  _
                    ByVal pGrupo As TipoAgrupacionCreditos,  _
                    ByVal pSaldo As Decimal,  _
                    ByVal pNo As Decimal,  _
                    ByVal pReserva As Decimal,  _
                    ByVal pSaldoCP As Decimal,  _
                    ByVal pNoCP As Decimal,  _
                    ByVal pReservaCP As Decimal,  _
                    ByVal pReservaCI As Decimal,  _
                    ByVal pNoDP As Decimal,  _
                    ByVal pSaldoDP As Decimal,  _
                    ByVal pReservaDP As Decimal,  _
                    ByVal pGuardarIndice As Boolean,  _
                    ByVal pUs As String,  _
                    ByVal pPa As String,  _
                    ByVal pSucursal As String)
            Me.Determinacion_Reservas_ConsolidadoAsync(pFecha, pGrupo, pSaldo, pNo, pReserva, pSaldoCP, pNoCP, pReservaCP, pReservaCI, pNoDP, pSaldoDP, pReservaDP, pGuardarIndice, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Determinacion_Reservas_ConsolidadoAsync( _
                    ByVal pFecha As Date,  _
                    ByVal pGrupo As TipoAgrupacionCreditos,  _
                    ByVal pSaldo As Decimal,  _
                    ByVal pNo As Decimal,  _
                    ByVal pReserva As Decimal,  _
                    ByVal pSaldoCP As Decimal,  _
                    ByVal pNoCP As Decimal,  _
                    ByVal pReservaCP As Decimal,  _
                    ByVal pReservaCI As Decimal,  _
                    ByVal pNoDP As Decimal,  _
                    ByVal pSaldoDP As Decimal,  _
                    ByVal pReservaDP As Decimal,  _
                    ByVal pGuardarIndice As Boolean,  _
                    ByVal pUs As String,  _
                    ByVal pPa As String,  _
                    ByVal pSucursal As String,  _
                    ByVal userState As Object)
            If (Me.Determinacion_Reservas_ConsolidadoOperationCompleted Is Nothing) Then
                Me.Determinacion_Reservas_ConsolidadoOperationCompleted = AddressOf Me.OnDeterminacion_Reservas_ConsolidadoOperationCompleted
            End If
            Me.InvokeAsync("Determinacion_Reservas_Consolidado", New Object() {pFecha, pGrupo, pSaldo, pNo, pReserva, pSaldoCP, pNoCP, pReservaCP, pReservaCI, pNoDP, pSaldoDP, pReservaDP, pGuardarIndice, pUs, pPa, pSucursal}, Me.Determinacion_Reservas_ConsolidadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeterminacion_Reservas_ConsolidadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Determinacion_Reservas_ConsolidadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Determinacion_Reservas_ConsolidadoCompleted(Me, New Determinacion_Reservas_ConsolidadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Documentos_Cobrar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Documentos_Cobrar(ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Documentos_Cobrar", New Object() {pFecha, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginDocumentos_Cobrar(ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Documentos_Cobrar", New Object() {pFecha, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDocumentos_Cobrar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Documentos_CobrarAsync(ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Documentos_CobrarAsync(pFecha, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Documentos_CobrarAsync(ByVal pFecha As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Documentos_CobrarOperationCompleted Is Nothing) Then
                Me.Documentos_CobrarOperationCompleted = AddressOf Me.OnDocumentos_CobrarOperationCompleted
            End If
            Me.InvokeAsync("Documentos_Cobrar", New Object() {pFecha, pUs, pPa, pSucursal}, Me.Documentos_CobrarOperationCompleted, userState)
        End Sub
        
        Private Sub OnDocumentos_CobrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.Documentos_CobrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Documentos_CobrarCompleted(Me, New Documentos_CobrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Documentos_Protesto_Reserva", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Documentos_Protesto_Reserva(ByVal pFecha As Date, ByVal pTipo As TipoReporteReserva, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Documentos_Protesto_Reserva", New Object() {pFecha, pTipo, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginDocumentos_Protesto_Reserva(ByVal pFecha As Date, ByVal pTipo As TipoReporteReserva, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Documentos_Protesto_Reserva", New Object() {pFecha, pTipo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDocumentos_Protesto_Reserva(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Documentos_Protesto_ReservaAsync(ByVal pFecha As Date, ByVal pTipo As TipoReporteReserva, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Documentos_Protesto_ReservaAsync(pFecha, pTipo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Documentos_Protesto_ReservaAsync(ByVal pFecha As Date, ByVal pTipo As TipoReporteReserva, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Documentos_Protesto_ReservaOperationCompleted Is Nothing) Then
                Me.Documentos_Protesto_ReservaOperationCompleted = AddressOf Me.OnDocumentos_Protesto_ReservaOperationCompleted
            End If
            Me.InvokeAsync("Documentos_Protesto_Reserva", New Object() {pFecha, pTipo, pUs, pPa, pSucursal}, Me.Documentos_Protesto_ReservaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDocumentos_Protesto_ReservaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Documentos_Protesto_ReservaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Documentos_Protesto_ReservaCompleted(Me, New Documentos_Protesto_ReservaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarAcreedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarAcreedores(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarAcreedores", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarAcreedores(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarAcreedores", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarAcreedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarAcreedoresAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarAcreedoresAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarAcreedoresAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarAcreedoresOperationCompleted Is Nothing) Then
                Me.EliminarAcreedoresOperationCompleted = AddressOf Me.OnEliminarAcreedoresOperationCompleted
            End If
            Me.InvokeAsync("EliminarAcreedores", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarAcreedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarAcreedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarAcreedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarAcreedoresCompleted(Me, New EliminarAcreedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarBCEmbargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBCEmbargos(ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarBCEmbargos", New Object() {pCodPrestamo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBCEmbargos(ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBCEmbargos", New Object() {pCodPrestamo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBCEmbargos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBCEmbargosAsync(ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarBCEmbargosAsync(pCodPrestamo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBCEmbargosAsync(ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarBCEmbargosOperationCompleted Is Nothing) Then
                Me.EliminarBCEmbargosOperationCompleted = AddressOf Me.OnEliminarBCEmbargosOperationCompleted
            End If
            Me.InvokeAsync("EliminarBCEmbargos", New Object() {pCodPrestamo, pUsuario, pPassword, pSucursal}, Me.EliminarBCEmbargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBCEmbargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBCEmbargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBCEmbargosCompleted(Me, New EliminarBCEmbargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarBienInmueble", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBienInmueble(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarBienInmueble", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBienInmueble(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBienInmueble", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBienInmueble(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBienInmuebleAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarBienInmuebleAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBienInmuebleAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarBienInmuebleOperationCompleted Is Nothing) Then
                Me.EliminarBienInmuebleOperationCompleted = AddressOf Me.OnEliminarBienInmuebleOperationCompleted
            End If
            Me.InvokeAsync("EliminarBienInmueble", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarBienInmuebleOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBienInmuebleOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBienInmuebleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBienInmuebleCompleted(Me, New EliminarBienInmuebleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarBitacoraGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarBitacoraGestores(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarBitacoraGestores", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarBitacoraGestores(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarBitacoraGestores", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarBitacoraGestores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarBitacoraGestoresAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarBitacoraGestoresAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarBitacoraGestoresAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarBitacoraGestoresOperationCompleted Is Nothing) Then
                Me.EliminarBitacoraGestoresOperationCompleted = AddressOf Me.OnEliminarBitacoraGestoresOperationCompleted
            End If
            Me.InvokeAsync("EliminarBitacoraGestores", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarBitacoraGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarBitacoraGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarBitacoraGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarBitacoraGestoresCompleted(Me, New EliminarBitacoraGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarCBBienesEmbargados", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCBBienesEmbargados(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCBBienesEmbargados", New Object() {pFiltro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCBBienesEmbargados(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCBBienesEmbargados", New Object() {pFiltro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCBBienesEmbargados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCBBienesEmbargadosAsync(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarCBBienesEmbargadosAsync(pFiltro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCBBienesEmbargadosAsync(ByVal pFiltro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCBBienesEmbargadosOperationCompleted Is Nothing) Then
                Me.EliminarCBBienesEmbargadosOperationCompleted = AddressOf Me.OnEliminarCBBienesEmbargadosOperationCompleted
            End If
            Me.InvokeAsync("EliminarCBBienesEmbargados", New Object() {pFiltro, pUsuario, pPassword, pSucursal}, Me.EliminarCBBienesEmbargadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCBBienesEmbargadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCBBienesEmbargadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCBBienesEmbargadosCompleted(Me, New EliminarCBBienesEmbargadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarCBDocumentosxRecuperar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCBDocumentosxRecuperar(ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCBDocumentosxRecuperar", New Object() {pCodPrestamo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCBDocumentosxRecuperar(ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCBDocumentosxRecuperar", New Object() {pCodPrestamo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCBDocumentosxRecuperar(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCBDocumentosxRecuperarAsync(ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarCBDocumentosxRecuperarAsync(pCodPrestamo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCBDocumentosxRecuperarAsync(ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCBDocumentosxRecuperarOperationCompleted Is Nothing) Then
                Me.EliminarCBDocumentosxRecuperarOperationCompleted = AddressOf Me.OnEliminarCBDocumentosxRecuperarOperationCompleted
            End If
            Me.InvokeAsync("EliminarCBDocumentosxRecuperar", New Object() {pCodPrestamo, pUsuario, pPassword, pSucursal}, Me.EliminarCBDocumentosxRecuperarOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCBDocumentosxRecuperarOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCBDocumentosxRecuperarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCBDocumentosxRecuperarCompleted(Me, New EliminarCBDocumentosxRecuperarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarDatGral", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDatGral(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDatGral", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDatGral(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDatGral", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDatGral(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDatGralAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDatGralAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDatGralAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDatGralOperationCompleted Is Nothing) Then
                Me.EliminarDatGralOperationCompleted = AddressOf Me.OnEliminarDatGralOperationCompleted
            End If
            Me.InvokeAsync("EliminarDatGral", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarDatGralOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDatGralOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDatGralCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDatGralCompleted(Me, New EliminarDatGralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarDespacho", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDespacho(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDespacho", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDespacho(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDespacho", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDespacho(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDespachoAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDespachoAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDespachoAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDespachoOperationCompleted Is Nothing) Then
                Me.EliminarDespachoOperationCompleted = AddressOf Me.OnEliminarDespachoOperationCompleted
            End If
            Me.InvokeAsync("EliminarDespacho", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarDespachoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDespachoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDespachoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDespachoCompleted(Me, New EliminarDespachoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarDetGarantiasPr", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDetGarantiasPr(ByVal Filtro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDetGarantiasPr", New Object() {Filtro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDetGarantiasPr(ByVal Filtro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDetGarantiasPr", New Object() {Filtro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDetGarantiasPr(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDetGarantiasPrAsync(ByVal Filtro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarDetGarantiasPrAsync(Filtro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDetGarantiasPrAsync(ByVal Filtro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDetGarantiasPrOperationCompleted Is Nothing) Then
                Me.EliminarDetGarantiasPrOperationCompleted = AddressOf Me.OnEliminarDetGarantiasPrOperationCompleted
            End If
            Me.InvokeAsync("EliminarDetGarantiasPr", New Object() {Filtro, pUsuario, pPassword, pSucursal}, Me.EliminarDetGarantiasPrOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDetGarantiasPrOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDetGarantiasPrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDetGarantiasPrCompleted(Me, New EliminarDetGarantiasPrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarDICOM", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDICOM(ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDICOM", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDICOM(ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDICOM", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDICOM(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDICOMAsync(ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarDICOMAsync(pCorrelativo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDICOMAsync(ByVal pCorrelativo As Integer, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDICOMOperationCompleted Is Nothing) Then
                Me.EliminarDICOMOperationCompleted = AddressOf Me.OnEliminarDICOMOperationCompleted
            End If
            Me.InvokeAsync("EliminarDICOM", New Object() {pCorrelativo, pUsuario, pPassword, pSucursal}, Me.EliminarDICOMOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDICOMOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDICOMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDICOMCompleted(Me, New EliminarDICOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarDuenosInmueble", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDuenosInmueble(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarDuenosInmueble", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarDuenosInmueble(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarDuenosInmueble", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarDuenosInmueble(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDuenosInmuebleAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarDuenosInmuebleAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDuenosInmuebleAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarDuenosInmuebleOperationCompleted Is Nothing) Then
                Me.EliminarDuenosInmuebleOperationCompleted = AddressOf Me.OnEliminarDuenosInmuebleOperationCompleted
            End If
            Me.InvokeAsync("EliminarDuenosInmueble", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarDuenosInmuebleOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDuenosInmuebleOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDuenosInmuebleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDuenosInmuebleCompleted(Me, New EliminarDuenosInmuebleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarEmpresaValuadora", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarEmpresaValuadora(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarEmpresaValuadora", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarEmpresaValuadora(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarEmpresaValuadora", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarEmpresaValuadora(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarEmpresaValuadoraAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarEmpresaValuadoraAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarEmpresaValuadoraAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarEmpresaValuadoraOperationCompleted Is Nothing) Then
                Me.EliminarEmpresaValuadoraOperationCompleted = AddressOf Me.OnEliminarEmpresaValuadoraOperationCompleted
            End If
            Me.InvokeAsync("EliminarEmpresaValuadora", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarEmpresaValuadoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarEmpresaValuadoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarEmpresaValuadoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarEmpresaValuadoraCompleted(Me, New EliminarEmpresaValuadoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarGarantias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarGarantias(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarGarantias", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarGarantias(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarGarantias", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarGarantias(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarGarantiasAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarGarantiasAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarGarantiasAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarGarantiasOperationCompleted Is Nothing) Then
                Me.EliminarGarantiasOperationCompleted = AddressOf Me.OnEliminarGarantiasOperationCompleted
            End If
            Me.InvokeAsync("EliminarGarantias", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarGarantiasOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarGarantiasOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarGarantiasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarGarantiasCompleted(Me, New EliminarGarantiasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarGarantiasPr", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarGarantiasPr(ByVal Filtro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarGarantiasPr", New Object() {Filtro, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarGarantiasPr(ByVal Filtro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarGarantiasPr", New Object() {Filtro, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarGarantiasPr(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarGarantiasPrAsync(ByVal Filtro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarGarantiasPrAsync(Filtro, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarGarantiasPrAsync(ByVal Filtro As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarGarantiasPrOperationCompleted Is Nothing) Then
                Me.EliminarGarantiasPrOperationCompleted = AddressOf Me.OnEliminarGarantiasPrOperationCompleted
            End If
            Me.InvokeAsync("EliminarGarantiasPr", New Object() {Filtro, pUsuario, pPassword, pSucursal}, Me.EliminarGarantiasPrOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarGarantiasPrOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarGarantiasPrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarGarantiasPrCompleted(Me, New EliminarGarantiasPrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarGastos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarGastos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarGastos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarGastos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarGastos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarGastosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarGastosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarGastosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarGastosOperationCompleted Is Nothing) Then
                Me.EliminarGastosOperationCompleted = AddressOf Me.OnEliminarGastosOperationCompleted
            End If
            Me.InvokeAsync("EliminarGastos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarGastosCompleted(Me, New EliminarGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarGestiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarGestiones(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarGestiones", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarGestiones(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarGestiones", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarGestiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarGestionesAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarGestionesAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarGestionesAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarGestionesOperationCompleted Is Nothing) Then
                Me.EliminarGestionesOperationCompleted = AddressOf Me.OnEliminarGestionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarGestiones", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarGestionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarGestionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarGestionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarGestionesCompleted(Me, New EliminarGestionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarGestores(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarGestores", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarGestores(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarGestores", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarGestores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarGestoresAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarGestoresAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarGestoresAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarGestoresOperationCompleted Is Nothing) Then
                Me.EliminarGestoresOperationCompleted = AddressOf Me.OnEliminarGestoresOperationCompleted
            End If
            Me.InvokeAsync("EliminarGestores", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarGestoresCompleted(Me, New EliminarGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarGestoresxCredito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarGestoresxCredito(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarGestoresxCredito", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarGestoresxCredito(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarGestoresxCredito", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarGestoresxCredito(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarGestoresxCreditoAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarGestoresxCreditoAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarGestoresxCreditoAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarGestoresxCreditoOperationCompleted Is Nothing) Then
                Me.EliminarGestoresxCreditoOperationCompleted = AddressOf Me.OnEliminarGestoresxCreditoOperationCompleted
            End If
            Me.InvokeAsync("EliminarGestoresxCredito", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarGestoresxCreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarGestoresxCreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarGestoresxCreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarGestoresxCreditoCompleted(Me, New EliminarGestoresxCreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarIngresos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarIngresos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarIngresos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarIngresos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarIngresosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarIngresosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarIngresosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarIngresosOperationCompleted Is Nothing) Then
                Me.EliminarIngresosOperationCompleted = AddressOf Me.OnEliminarIngresosOperationCompleted
            End If
            Me.InvokeAsync("EliminarIngresos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarIngresosCompleted(Me, New EliminarIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarLineaCreditos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarLineaCreditos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarLineaCreditos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarLineaCreditos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarLineaCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarLineaCreditosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarLineaCreditosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarLineaCreditosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarLineaCreditosOperationCompleted Is Nothing) Then
                Me.EliminarLineaCreditosOperationCompleted = AddressOf Me.OnEliminarLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("EliminarLineaCreditos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarLineaCreditosCompleted(Me, New EliminarLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarObligaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarObligaciones(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarObligaciones", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarObligaciones(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarObligaciones", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarObligaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarObligacionesAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarObligacionesAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarObligacionesAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarObligacionesOperationCompleted Is Nothing) Then
                Me.EliminarObligacionesOperationCompleted = AddressOf Me.OnEliminarObligacionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarObligaciones", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarObligacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarObligacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarObligacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarObligacionesCompleted(Me, New EliminarObligacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarObservacionesxAnalisis", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarObservacionesxAnalisis(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarObservacionesxAnalisis", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarObservacionesxAnalisis(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarObservacionesxAnalisis", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarObservacionesxAnalisis(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarObservacionesxAnalisisAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarObservacionesxAnalisisAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarObservacionesxAnalisisAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarObservacionesxAnalisisOperationCompleted Is Nothing) Then
                Me.EliminarObservacionesxAnalisisOperationCompleted = AddressOf Me.OnEliminarObservacionesxAnalisisOperationCompleted
            End If
            Me.InvokeAsync("EliminarObservacionesxAnalisis", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarObservacionesxAnalisisOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarObservacionesxAnalisisOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarObservacionesxAnalisisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarObservacionesxAnalisisCompleted(Me, New EliminarObservacionesxAnalisisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarPagaduria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPagaduria(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPagaduria", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPagaduria(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPagaduria", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPagaduria(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPagaduriaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarPagaduriaAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPagaduriaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPagaduriaOperationCompleted Is Nothing) Then
                Me.EliminarPagaduriaOperationCompleted = AddressOf Me.OnEliminarPagaduriaOperationCompleted
            End If
            Me.InvokeAsync("EliminarPagaduria", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarPagaduriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPagaduriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPagaduriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPagaduriaCompleted(Me, New EliminarPagaduriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarPRCategoriaRiesgo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPRCategoriaRiesgo(ByVal Categoria As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPRCategoriaRiesgo", New Object() {Categoria, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPRCategoriaRiesgo(ByVal Categoria As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPRCategoriaRiesgo", New Object() {Categoria, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPRCategoriaRiesgo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPRCategoriaRiesgoAsync(ByVal Categoria As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.EliminarPRCategoriaRiesgoAsync(Categoria, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPRCategoriaRiesgoAsync(ByVal Categoria As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPRCategoriaRiesgoOperationCompleted Is Nothing) Then
                Me.EliminarPRCategoriaRiesgoOperationCompleted = AddressOf Me.OnEliminarPRCategoriaRiesgoOperationCompleted
            End If
            Me.InvokeAsync("EliminarPRCategoriaRiesgo", New Object() {Categoria, pUsuario, pPassword, pSucursal}, Me.EliminarPRCategoriaRiesgoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPRCategoriaRiesgoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPRCategoriaRiesgoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPRCategoriaRiesgoCompleted(Me, New EliminarPRCategoriaRiesgoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarPresentaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPresentaciones(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPresentaciones", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPresentaciones(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPresentaciones", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPresentaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPresentacionesAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarPresentacionesAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPresentacionesAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPresentacionesOperationCompleted Is Nothing) Then
                Me.EliminarPresentacionesOperationCompleted = AddressOf Me.OnEliminarPresentacionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarPresentaciones", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarPresentacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPresentacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPresentacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPresentacionesCompleted(Me, New EliminarPresentacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarPrestamos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPrestamos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarPrestamos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPrestamos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPrestamos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPrestamos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarPrestamosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarPrestamosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarPrestamosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarPrestamosOperationCompleted Is Nothing) Then
                Me.EliminarPrestamosOperationCompleted = AddressOf Me.OnEliminarPrestamosOperationCompleted
            End If
            Me.InvokeAsync("EliminarPrestamos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarPrestamosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarPrestamosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarPrestamosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarPrestamosCompleted(Me, New EliminarPrestamosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarRangoLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarRangoLineaCreditos(ByVal pLlave As String, ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarRangoLineaCreditos", New Object() {pLlave, pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarRangoLineaCreditos(ByVal pLlave As String, ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarRangoLineaCreditos", New Object() {pLlave, pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarRangoLineaCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarRangoLineaCreditosAsync(ByVal pLlave As String, ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarRangoLineaCreditosAsync(pLlave, pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarRangoLineaCreditosAsync(ByVal pLlave As String, ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarRangoLineaCreditosOperationCompleted Is Nothing) Then
                Me.EliminarRangoLineaCreditosOperationCompleted = AddressOf Me.OnEliminarRangoLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("EliminarRangoLineaCreditos", New Object() {pLlave, pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarRangoLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarRangoLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarRangoLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarRangoLineaCreditosCompleted(Me, New EliminarRangoLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarRefBancaria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarRefBancaria(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarRefBancaria", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarRefBancaria(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarRefBancaria", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarRefBancaria(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarRefBancariaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarRefBancariaAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarRefBancariaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarRefBancariaOperationCompleted Is Nothing) Then
                Me.EliminarRefBancariaOperationCompleted = AddressOf Me.OnEliminarRefBancariaOperationCompleted
            End If
            Me.InvokeAsync("EliminarRefBancaria", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarRefBancariaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarRefBancariaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarRefBancariaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarRefBancariaCompleted(Me, New EliminarRefBancariaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarRefComercial", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarRefComercial(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarRefComercial", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarRefComercial(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarRefComercial", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarRefComercial(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarRefComercialAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarRefComercialAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarRefComercialAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarRefComercialOperationCompleted Is Nothing) Then
                Me.EliminarRefComercialOperationCompleted = AddressOf Me.OnEliminarRefComercialOperationCompleted
            End If
            Me.InvokeAsync("EliminarRefComercial", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarRefComercialOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarRefComercialOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarRefComercialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarRefComercialCompleted(Me, New EliminarRefComercialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarRefFamiliar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarRefFamiliar(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarRefFamiliar", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarRefFamiliar(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarRefFamiliar", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarRefFamiliar(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarRefFamiliarAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarRefFamiliarAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarRefFamiliarAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarRefFamiliarOperationCompleted Is Nothing) Then
                Me.EliminarRefFamiliarOperationCompleted = AddressOf Me.OnEliminarRefFamiliarOperationCompleted
            End If
            Me.InvokeAsync("EliminarRefFamiliar", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarRefFamiliarOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarRefFamiliarOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarRefFamiliarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarRefFamiliarCompleted(Me, New EliminarRefFamiliarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarRefPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarRefPersonal(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarRefPersonal", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarRefPersonal(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarRefPersonal", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarRefPersonal(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarRefPersonalAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarRefPersonalAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarRefPersonalAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarRefPersonalOperationCompleted Is Nothing) Then
                Me.EliminarRefPersonalOperationCompleted = AddressOf Me.OnEliminarRefPersonalOperationCompleted
            End If
            Me.InvokeAsync("EliminarRefPersonal", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarRefPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarRefPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarRefPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarRefPersonalCompleted(Me, New EliminarRefPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarRestricciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarRestricciones(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarRestricciones", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarRestricciones(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarRestricciones", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarRestricciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarRestriccionesAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarRestriccionesAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarRestriccionesAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarRestriccionesOperationCompleted Is Nothing) Then
                Me.EliminarRestriccionesOperationCompleted = AddressOf Me.OnEliminarRestriccionesOperationCompleted
            End If
            Me.InvokeAsync("EliminarRestricciones", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarRestriccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarRestriccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarRestriccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarRestriccionesCompleted(Me, New EliminarRestriccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarSeccionRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarSeccionRegistro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarSeccionRegistro", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarSeccionRegistro(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarSeccionRegistro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarSeccionRegistro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarSeccionRegistroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarSeccionRegistroAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarSeccionRegistroAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarSeccionRegistroOperationCompleted Is Nothing) Then
                Me.EliminarSeccionRegistroOperationCompleted = AddressOf Me.OnEliminarSeccionRegistroOperationCompleted
            End If
            Me.InvokeAsync("EliminarSeccionRegistro", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarSeccionRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarSeccionRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarSeccionRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarSeccionRegistroCompleted(Me, New EliminarSeccionRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarSolCred", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarSolCred(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarSolCred", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarSolCred(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarSolCred", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarSolCred(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarSolCredAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarSolCredAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarSolCredAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarSolCredOperationCompleted Is Nothing) Then
                Me.EliminarSolCredOperationCompleted = AddressOf Me.OnEliminarSolCredOperationCompleted
            End If
            Me.InvokeAsync("EliminarSolCred", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarSolCredOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarSolCredOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarSolCredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarSolCredCompleted(Me, New EliminarSolCredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarSolCredR", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarSolCredR(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarSolCredR", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarSolCredR(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarSolCredR", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarSolCredR(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarSolCredRAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarSolCredRAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarSolCredRAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarSolCredROperationCompleted Is Nothing) Then
                Me.EliminarSolCredROperationCompleted = AddressOf Me.OnEliminarSolCredROperationCompleted
            End If
            Me.InvokeAsync("EliminarSolCredR", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarSolCredROperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarSolCredROperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarSolCredRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarSolCredRCompleted(Me, New EliminarSolCredRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarSolP2Credito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarSolP2Credito(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarSolP2Credito", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarSolP2Credito(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarSolP2Credito", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarSolP2Credito(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarSolP2CreditoAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarSolP2CreditoAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarSolP2CreditoAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarSolP2CreditoOperationCompleted Is Nothing) Then
                Me.EliminarSolP2CreditoOperationCompleted = AddressOf Me.OnEliminarSolP2CreditoOperationCompleted
            End If
            Me.InvokeAsync("EliminarSolP2Credito", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarSolP2CreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarSolP2CreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarSolP2CreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarSolP2CreditoCompleted(Me, New EliminarSolP2CreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarTipGarant", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarTipGarant(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarTipGarant", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarTipGarant(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarTipGarant", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarTipGarant(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarTipGarantAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarTipGarantAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarTipGarantAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarTipGarantOperationCompleted Is Nothing) Then
                Me.EliminarTipGarantOperationCompleted = AddressOf Me.OnEliminarTipGarantOperationCompleted
            End If
            Me.InvokeAsync("EliminarTipGarant", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarTipGarantOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarTipGarantOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarTipGarantCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarTipGarantCompleted(Me, New EliminarTipGarantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarTipoCobranza", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarTipoCobranza(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarTipoCobranza", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarTipoCobranza(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarTipoCobranza", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarTipoCobranza(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoCobranzaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarTipoCobranzaAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoCobranzaAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarTipoCobranzaOperationCompleted Is Nothing) Then
                Me.EliminarTipoCobranzaOperationCompleted = AddressOf Me.OnEliminarTipoCobranzaOperationCompleted
            End If
            Me.InvokeAsync("EliminarTipoCobranza", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarTipoCobranzaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarTipoCobranzaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarTipoCobranzaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarTipoCobranzaCompleted(Me, New EliminarTipoCobranzaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarTipoCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarTipoCreditos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarTipoCreditos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarTipoCreditos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarTipoCreditos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarTipoCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoCreditosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarTipoCreditosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoCreditosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarTipoCreditosOperationCompleted Is Nothing) Then
                Me.EliminarTipoCreditosOperationCompleted = AddressOf Me.OnEliminarTipoCreditosOperationCompleted
            End If
            Me.InvokeAsync("EliminarTipoCreditos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarTipoCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarTipoCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarTipoCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarTipoCreditosCompleted(Me, New EliminarTipoCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarTipoGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarTipoGastos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarTipoGastos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarTipoGastos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarTipoGastos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarTipoGastos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoGastosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarTipoGastosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoGastosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarTipoGastosOperationCompleted Is Nothing) Then
                Me.EliminarTipoGastosOperationCompleted = AddressOf Me.OnEliminarTipoGastosOperationCompleted
            End If
            Me.InvokeAsync("EliminarTipoGastos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarTipoGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarTipoGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarTipoGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarTipoGastosCompleted(Me, New EliminarTipoGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarTipoGestion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarTipoGestion(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarTipoGestion", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarTipoGestion(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarTipoGestion", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarTipoGestion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoGestionAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarTipoGestionAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoGestionAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarTipoGestionOperationCompleted Is Nothing) Then
                Me.EliminarTipoGestionOperationCompleted = AddressOf Me.OnEliminarTipoGestionOperationCompleted
            End If
            Me.InvokeAsync("EliminarTipoGestion", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarTipoGestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarTipoGestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarTipoGestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarTipoGestionCompleted(Me, New EliminarTipoGestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarTipoIngresos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarTipoIngresos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarTipoIngresos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarTipoIngresos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarTipoIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoIngresosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarTipoIngresosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarTipoIngresosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarTipoIngresosOperationCompleted Is Nothing) Then
                Me.EliminarTipoIngresosOperationCompleted = AddressOf Me.OnEliminarTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("EliminarTipoIngresos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarTipoIngresosCompleted(Me, New EliminarTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarValuos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarValuos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarValuos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarValuos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarValuos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarValuos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarValuosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarValuosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarValuosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarValuosOperationCompleted Is Nothing) Then
                Me.EliminarValuosOperationCompleted = AddressOf Me.OnEliminarValuosOperationCompleted
            End If
            Me.InvokeAsync("EliminarValuos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarValuosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarValuosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarValuosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarValuosCompleted(Me, New EliminarValuosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarVehiculos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarVehiculos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarVehiculos", New Object() {pCorrelativo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarVehiculos(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarVehiculos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarVehiculos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarVehiculosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarVehiculosAsync(pCorrelativo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarVehiculosAsync(ByVal pCorrelativo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarVehiculosOperationCompleted Is Nothing) Then
                Me.EliminarVehiculosOperationCompleted = AddressOf Me.OnEliminarVehiculosOperationCompleted
            End If
            Me.InvokeAsync("EliminarVehiculos", New Object() {pCorrelativo, pUs, pPa, pSucursal}, Me.EliminarVehiculosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarVehiculosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarVehiculosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarVehiculosCompleted(Me, New EliminarVehiculosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ExportacionDatos_Solicitud", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExportacionDatos_Solicitud(ByVal pTodos As Boolean, ByVal pFiltro As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ExportacionDatos_Solicitud", New Object() {pTodos, pFiltro, pR1, pR2, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginExportacionDatos_Solicitud(ByVal pTodos As Boolean, ByVal pFiltro As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExportacionDatos_Solicitud", New Object() {pTodos, pFiltro, pR1, pR2, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndExportacionDatos_Solicitud(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExportacionDatos_SolicitudAsync(ByVal pTodos As Boolean, ByVal pFiltro As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ExportacionDatos_SolicitudAsync(pTodos, pFiltro, pR1, pR2, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportacionDatos_SolicitudAsync(ByVal pTodos As Boolean, ByVal pFiltro As String, ByVal pR1 As Date, ByVal pR2 As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ExportacionDatos_SolicitudOperationCompleted Is Nothing) Then
                Me.ExportacionDatos_SolicitudOperationCompleted = AddressOf Me.OnExportacionDatos_SolicitudOperationCompleted
            End If
            Me.InvokeAsync("ExportacionDatos_Solicitud", New Object() {pTodos, pFiltro, pR1, pR2, pUsuario, pPassword, pSucursal}, Me.ExportacionDatos_SolicitudOperationCompleted, userState)
        End Sub
        
        Private Sub OnExportacionDatos_SolicitudOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExportacionDatos_SolicitudCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExportacionDatos_SolicitudCompleted(Me, New ExportacionDatos_SolicitudCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Gestiones_Diarias_Cobranza", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Gestiones_Diarias_Cobranza(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Gestiones_Diarias_Cobranza", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGestiones_Diarias_Cobranza(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Gestiones_Diarias_Cobranza", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGestiones_Diarias_Cobranza(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Gestiones_Diarias_CobranzaAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.Gestiones_Diarias_CobranzaAsync(pFechaIni, pFechaFin, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Gestiones_Diarias_CobranzaAsync(ByVal pFechaIni As Date, ByVal pFechaFin As Date, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.Gestiones_Diarias_CobranzaOperationCompleted Is Nothing) Then
                Me.Gestiones_Diarias_CobranzaOperationCompleted = AddressOf Me.OnGestiones_Diarias_CobranzaOperationCompleted
            End If
            Me.InvokeAsync("Gestiones_Diarias_Cobranza", New Object() {pFechaIni, pFechaFin, pUs, pPa, pSucursal}, Me.Gestiones_Diarias_CobranzaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGestiones_Diarias_CobranzaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Gestiones_Diarias_CobranzaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Gestiones_Diarias_CobranzaCompleted(Me, New Gestiones_Diarias_CobranzaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertaAcreedores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaAcreedores(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaAcreedores", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaAcreedores(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaAcreedores", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaAcreedores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaAcreedoresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaAcreedoresAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaAcreedoresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaAcreedoresOperationCompleted Is Nothing) Then
                Me.InsertaAcreedoresOperationCompleted = AddressOf Me.OnInsertaAcreedoresOperationCompleted
            End If
            Me.InvokeAsync("InsertaAcreedores", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaAcreedoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaAcreedoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaAcreedoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaAcreedoresCompleted(Me, New InsertaAcreedoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertaDuenosInmueble", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaDuenosInmueble(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaDuenosInmueble", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaDuenosInmueble(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaDuenosInmueble", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaDuenosInmueble(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaDuenosInmuebleAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaDuenosInmuebleAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaDuenosInmuebleAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaDuenosInmuebleOperationCompleted Is Nothing) Then
                Me.InsertaDuenosInmuebleOperationCompleted = AddressOf Me.OnInsertaDuenosInmuebleOperationCompleted
            End If
            Me.InvokeAsync("InsertaDuenosInmueble", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaDuenosInmuebleOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaDuenosInmuebleOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaDuenosInmuebleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaDuenosInmuebleCompleted(Me, New InsertaDuenosInmuebleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertaPresentaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaPresentaciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaPresentaciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaPresentaciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaPresentaciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaPresentaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaPresentacionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaPresentacionesAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaPresentacionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaPresentacionesOperationCompleted Is Nothing) Then
                Me.InsertaPresentacionesOperationCompleted = AddressOf Me.OnInsertaPresentacionesOperationCompleted
            End If
            Me.InvokeAsync("InsertaPresentaciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaPresentacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaPresentacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaPresentacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaPresentacionesCompleted(Me, New InsertaPresentacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarBCEmbargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBCEmbargos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarBCEmbargos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBCEmbargos(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBCEmbargos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBCEmbargos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBCEmbargosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarBCEmbargosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBCEmbargosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarBCEmbargosOperationCompleted Is Nothing) Then
                Me.InsertarBCEmbargosOperationCompleted = AddressOf Me.OnInsertarBCEmbargosOperationCompleted
            End If
            Me.InvokeAsync("InsertarBCEmbargos", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarBCEmbargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBCEmbargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBCEmbargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBCEmbargosCompleted(Me, New InsertarBCEmbargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarBienInmueble", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBienInmueble(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarBienInmueble", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBienInmueble(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBienInmueble", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBienInmueble(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBienInmuebleAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarBienInmuebleAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBienInmuebleAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarBienInmuebleOperationCompleted Is Nothing) Then
                Me.InsertarBienInmuebleOperationCompleted = AddressOf Me.OnInsertarBienInmuebleOperationCompleted
            End If
            Me.InvokeAsync("InsertarBienInmueble", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarBienInmuebleOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBienInmuebleOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBienInmuebleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBienInmuebleCompleted(Me, New InsertarBienInmuebleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarBitacoraGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarBitacoraGestores(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarBitacoraGestores", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarBitacoraGestores(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarBitacoraGestores", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarBitacoraGestores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarBitacoraGestoresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarBitacoraGestoresAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarBitacoraGestoresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarBitacoraGestoresOperationCompleted Is Nothing) Then
                Me.InsertarBitacoraGestoresOperationCompleted = AddressOf Me.OnInsertarBitacoraGestoresOperationCompleted
            End If
            Me.InvokeAsync("InsertarBitacoraGestores", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarBitacoraGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarBitacoraGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarBitacoraGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarBitacoraGestoresCompleted(Me, New InsertarBitacoraGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarCBBienesEMbargados", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCBBienesEMbargados(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCBBienesEMbargados", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCBBienesEMbargados(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCBBienesEMbargados", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCBBienesEMbargados(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCBBienesEMbargadosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarCBBienesEMbargadosAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCBBienesEMbargadosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCBBienesEMbargadosOperationCompleted Is Nothing) Then
                Me.InsertarCBBienesEMbargadosOperationCompleted = AddressOf Me.OnInsertarCBBienesEMbargadosOperationCompleted
            End If
            Me.InvokeAsync("InsertarCBBienesEMbargados", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarCBBienesEMbargadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCBBienesEMbargadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCBBienesEMbargadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCBBienesEMbargadosCompleted(Me, New InsertarCBBienesEMbargadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarCBDocumentosxRecuperar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCBDocumentosxRecuperar(ByVal pCampos As String, ByVal pValores As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCBDocumentosxRecuperar", New Object() {pCampos, pValores, pCodPrestamo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCBDocumentosxRecuperar(ByVal pCampos As String, ByVal pValores As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCBDocumentosxRecuperar", New Object() {pCampos, pValores, pCodPrestamo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCBDocumentosxRecuperar(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCBDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarCBDocumentosxRecuperarAsync(pCampos, pValores, pCodPrestamo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCBDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCBDocumentosxRecuperarOperationCompleted Is Nothing) Then
                Me.InsertarCBDocumentosxRecuperarOperationCompleted = AddressOf Me.OnInsertarCBDocumentosxRecuperarOperationCompleted
            End If
            Me.InvokeAsync("InsertarCBDocumentosxRecuperar", New Object() {pCampos, pValores, pCodPrestamo, pUsuario, pPassword, pSucursal}, Me.InsertarCBDocumentosxRecuperarOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCBDocumentosxRecuperarOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCBDocumentosxRecuperarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCBDocumentosxRecuperarCompleted(Me, New InsertarCBDocumentosxRecuperarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarCBHistDocumentosxRecuperar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarCBHistDocumentosxRecuperar(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarCBHistDocumentosxRecuperar", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarCBHistDocumentosxRecuperar(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarCBHistDocumentosxRecuperar", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarCBHistDocumentosxRecuperar(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarCBHistDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarCBHistDocumentosxRecuperarAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarCBHistDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarCBHistDocumentosxRecuperarOperationCompleted Is Nothing) Then
                Me.InsertarCBHistDocumentosxRecuperarOperationCompleted = AddressOf Me.OnInsertarCBHistDocumentosxRecuperarOperationCompleted
            End If
            Me.InvokeAsync("InsertarCBHistDocumentosxRecuperar", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarCBHistDocumentosxRecuperarOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarCBHistDocumentosxRecuperarOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarCBHistDocumentosxRecuperarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarCBHistDocumentosxRecuperarCompleted(Me, New InsertarCBHistDocumentosxRecuperarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarDatGral", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDatGral(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDatGral", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDatGral(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDatGral", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDatGral(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDatGralAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDatGralAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDatGralAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDatGralOperationCompleted Is Nothing) Then
                Me.InsertarDatGralOperationCompleted = AddressOf Me.OnInsertarDatGralOperationCompleted
            End If
            Me.InvokeAsync("InsertarDatGral", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDatGralOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDatGralOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDatGralCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDatGralCompleted(Me, New InsertarDatGralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarDespacho", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDespacho(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDespacho", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDespacho(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDespacho", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDespacho(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDespachoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarDespachoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDespachoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDespachoOperationCompleted Is Nothing) Then
                Me.InsertarDespachoOperationCompleted = AddressOf Me.OnInsertarDespachoOperationCompleted
            End If
            Me.InvokeAsync("InsertarDespacho", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarDespachoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDespachoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDespachoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDespachoCompleted(Me, New InsertarDespachoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarDetGarantiasPr", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDetGarantiasPr(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDetGarantiasPr", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDetGarantiasPr(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDetGarantiasPr", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDetGarantiasPr(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDetGarantiasPrAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarDetGarantiasPrAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDetGarantiasPrAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDetGarantiasPrOperationCompleted Is Nothing) Then
                Me.InsertarDetGarantiasPrOperationCompleted = AddressOf Me.OnInsertarDetGarantiasPrOperationCompleted
            End If
            Me.InvokeAsync("InsertarDetGarantiasPr", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarDetGarantiasPrOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDetGarantiasPrOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDetGarantiasPrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDetGarantiasPrCompleted(Me, New InsertarDetGarantiasPrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarDICOM", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarDICOM(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarDICOM", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarDICOM(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarDICOM", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarDICOM(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarDICOMAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarDICOMAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarDICOMAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarDICOMOperationCompleted Is Nothing) Then
                Me.InsertarDICOMOperationCompleted = AddressOf Me.OnInsertarDICOMOperationCompleted
            End If
            Me.InvokeAsync("InsertarDICOM", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarDICOMOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarDICOMOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarDICOMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarDICOMCompleted(Me, New InsertarDICOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarEmpresaValuadora", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarEmpresaValuadora(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarEmpresaValuadora", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarEmpresaValuadora(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarEmpresaValuadora", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarEmpresaValuadora(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarEmpresaValuadoraAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarEmpresaValuadoraAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarEmpresaValuadoraAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarEmpresaValuadoraOperationCompleted Is Nothing) Then
                Me.InsertarEmpresaValuadoraOperationCompleted = AddressOf Me.OnInsertarEmpresaValuadoraOperationCompleted
            End If
            Me.InvokeAsync("InsertarEmpresaValuadora", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarEmpresaValuadoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarEmpresaValuadoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarEmpresaValuadoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarEmpresaValuadoraCompleted(Me, New InsertarEmpresaValuadoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertaRestricciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertaRestricciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertaRestricciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertaRestricciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertaRestricciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertaRestricciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertaRestriccionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertaRestriccionesAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertaRestriccionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertaRestriccionesOperationCompleted Is Nothing) Then
                Me.InsertaRestriccionesOperationCompleted = AddressOf Me.OnInsertaRestriccionesOperationCompleted
            End If
            Me.InvokeAsync("InsertaRestricciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertaRestriccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertaRestriccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertaRestriccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertaRestriccionesCompleted(Me, New InsertaRestriccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarGarantias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarGarantias(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarGarantias", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarGarantias(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarGarantias", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarGarantias(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarGarantiasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarGarantiasAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarGarantiasAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarGarantiasOperationCompleted Is Nothing) Then
                Me.InsertarGarantiasOperationCompleted = AddressOf Me.OnInsertarGarantiasOperationCompleted
            End If
            Me.InvokeAsync("InsertarGarantias", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarGarantiasOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarGarantiasOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarGarantiasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarGarantiasCompleted(Me, New InsertarGarantiasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarGarantiasPr", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarGarantiasPr(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarGarantiasPr", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarGarantiasPr(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarGarantiasPr", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarGarantiasPr(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarGarantiasPrAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarGarantiasPrAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarGarantiasPrAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarGarantiasPrOperationCompleted Is Nothing) Then
                Me.InsertarGarantiasPrOperationCompleted = AddressOf Me.OnInsertarGarantiasPrOperationCompleted
            End If
            Me.InvokeAsync("InsertarGarantiasPr", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarGarantiasPrOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarGarantiasPrOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarGarantiasPrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarGarantiasPrCompleted(Me, New InsertarGarantiasPrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarGastos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarGastos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarGastos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarGastos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarGastos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarGastosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarGastosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarGastosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarGastosOperationCompleted Is Nothing) Then
                Me.InsertarGastosOperationCompleted = AddressOf Me.OnInsertarGastosOperationCompleted
            End If
            Me.InvokeAsync("InsertarGastos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarGastosCompleted(Me, New InsertarGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarGestiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarGestiones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarGestiones", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarGestiones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarGestiones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarGestiones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarGestionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarGestionesAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarGestionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarGestionesOperationCompleted Is Nothing) Then
                Me.InsertarGestionesOperationCompleted = AddressOf Me.OnInsertarGestionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarGestiones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarGestionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarGestionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarGestionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarGestionesCompleted(Me, New InsertarGestionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarGestores(ByVal pCampos As String, ByVal pValores As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarGestores", New Object() {pCampos, pValores, pClave, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarGestores(ByVal pCampos As String, ByVal pValores As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarGestores", New Object() {pCampos, pValores, pClave, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarGestores(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarGestoresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarGestoresAsync(pCampos, pValores, pClave, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarGestoresAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pClave As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarGestoresOperationCompleted Is Nothing) Then
                Me.InsertarGestoresOperationCompleted = AddressOf Me.OnInsertarGestoresOperationCompleted
            End If
            Me.InvokeAsync("InsertarGestores", New Object() {pCampos, pValores, pClave, pUs, pPa, pSucursal}, Me.InsertarGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarGestoresCompleted(Me, New InsertarGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarGestoresxCredito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarGestoresxCredito(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarGestoresxCredito", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarGestoresxCredito(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarGestoresxCredito", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarGestoresxCredito(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarGestoresxCreditoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarGestoresxCreditoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarGestoresxCreditoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarGestoresxCreditoOperationCompleted Is Nothing) Then
                Me.InsertarGestoresxCreditoOperationCompleted = AddressOf Me.OnInsertarGestoresxCreditoOperationCompleted
            End If
            Me.InvokeAsync("InsertarGestoresxCredito", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarGestoresxCreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarGestoresxCreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarGestoresxCreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarGestoresxCreditoCompleted(Me, New InsertarGestoresxCreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarHistorialCategoria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarHistorialCategoria(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarHistorialCategoria", New Object() {pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarHistorialCategoria(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarHistorialCategoria", New Object() {pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarHistorialCategoria(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarHistorialCategoriaAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarHistorialCategoriaAsync(pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarHistorialCategoriaAsync(ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarHistorialCategoriaOperationCompleted Is Nothing) Then
                Me.InsertarHistorialCategoriaOperationCompleted = AddressOf Me.OnInsertarHistorialCategoriaOperationCompleted
            End If
            Me.InvokeAsync("InsertarHistorialCategoria", New Object() {pUs, pPa, pSucursal}, Me.InsertarHistorialCategoriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarHistorialCategoriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarHistorialCategoriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarHistorialCategoriaCompleted(Me, New InsertarHistorialCategoriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarIngresos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarIngresos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarIngresos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarIngresos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarIngresosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarIngresosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarIngresosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarIngresosOperationCompleted Is Nothing) Then
                Me.InsertarIngresosOperationCompleted = AddressOf Me.OnInsertarIngresosOperationCompleted
            End If
            Me.InvokeAsync("InsertarIngresos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarIngresosCompleted(Me, New InsertarIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarLineaCreditos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarLineaCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarLineaCreditos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarLineaCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarLineaCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarLineaCreditosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarLineaCreditosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarLineaCreditosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarLineaCreditosOperationCompleted Is Nothing) Then
                Me.InsertarLineaCreditosOperationCompleted = AddressOf Me.OnInsertarLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("InsertarLineaCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarLineaCreditosCompleted(Me, New InsertarLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarObligaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarObligaciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarObligaciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarObligaciones(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarObligaciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarObligaciones(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarObligacionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarObligacionesAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarObligacionesAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarObligacionesOperationCompleted Is Nothing) Then
                Me.InsertarObligacionesOperationCompleted = AddressOf Me.OnInsertarObligacionesOperationCompleted
            End If
            Me.InvokeAsync("InsertarObligaciones", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarObligacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarObligacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarObligacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarObligacionesCompleted(Me, New InsertarObligacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarObservacionesxAnalisis", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarObservacionesxAnalisis(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarObservacionesxAnalisis", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarObservacionesxAnalisis(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarObservacionesxAnalisis", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarObservacionesxAnalisis(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarObservacionesxAnalisisAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarObservacionesxAnalisisAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarObservacionesxAnalisisAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarObservacionesxAnalisisOperationCompleted Is Nothing) Then
                Me.InsertarObservacionesxAnalisisOperationCompleted = AddressOf Me.OnInsertarObservacionesxAnalisisOperationCompleted
            End If
            Me.InvokeAsync("InsertarObservacionesxAnalisis", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarObservacionesxAnalisisOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarObservacionesxAnalisisOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarObservacionesxAnalisisCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarObservacionesxAnalisisCompleted(Me, New InsertarObservacionesxAnalisisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarPagaduria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPagaduria(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPagaduria", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPagaduria(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPagaduria", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPagaduria(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPagaduriaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarPagaduriaAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPagaduriaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPagaduriaOperationCompleted Is Nothing) Then
                Me.InsertarPagaduriaOperationCompleted = AddressOf Me.OnInsertarPagaduriaOperationCompleted
            End If
            Me.InvokeAsync("InsertarPagaduria", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarPagaduriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPagaduriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPagaduriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPagaduriaCompleted(Me, New InsertarPagaduriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarPRCategoriaRiesgo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPRCategoriaRiesgo(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPRCategoriaRiesgo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPRCategoriaRiesgo(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPRCategoriaRiesgo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPRCategoriaRiesgo(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPRCategoriaRiesgoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.InsertarPRCategoriaRiesgoAsync(pCampos, pValores, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPRCategoriaRiesgoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPRCategoriaRiesgoOperationCompleted Is Nothing) Then
                Me.InsertarPRCategoriaRiesgoOperationCompleted = AddressOf Me.OnInsertarPRCategoriaRiesgoOperationCompleted
            End If
            Me.InvokeAsync("InsertarPRCategoriaRiesgo", New Object() {pCampos, pValores, pUsuario, pPassword, pSucursal}, Me.InsertarPRCategoriaRiesgoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPRCategoriaRiesgoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPRCategoriaRiesgoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPRCategoriaRiesgoCompleted(Me, New InsertarPRCategoriaRiesgoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarPrestamos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarPrestamos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarPrestamos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarPrestamos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarPrestamos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarPrestamos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarPrestamosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarPrestamosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarPrestamosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarPrestamosOperationCompleted Is Nothing) Then
                Me.InsertarPrestamosOperationCompleted = AddressOf Me.OnInsertarPrestamosOperationCompleted
            End If
            Me.InvokeAsync("InsertarPrestamos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarPrestamosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarPrestamosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarPrestamosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarPrestamosCompleted(Me, New InsertarPrestamosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarRangoLineaCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRangoLineaCreditos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarRangoLineaCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarRangoLineaCreditos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarRangoLineaCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarRangoLineaCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRangoLineaCreditosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarRangoLineaCreditosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRangoLineaCreditosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarRangoLineaCreditosOperationCompleted Is Nothing) Then
                Me.InsertarRangoLineaCreditosOperationCompleted = AddressOf Me.OnInsertarRangoLineaCreditosOperationCompleted
            End If
            Me.InvokeAsync("InsertarRangoLineaCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarRangoLineaCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRangoLineaCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRangoLineaCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRangoLineaCreditosCompleted(Me, New InsertarRangoLineaCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarRefBancaria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRefBancaria(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarRefBancaria", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarRefBancaria(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarRefBancaria", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarRefBancaria(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRefBancariaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarRefBancariaAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRefBancariaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarRefBancariaOperationCompleted Is Nothing) Then
                Me.InsertarRefBancariaOperationCompleted = AddressOf Me.OnInsertarRefBancariaOperationCompleted
            End If
            Me.InvokeAsync("InsertarRefBancaria", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarRefBancariaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRefBancariaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRefBancariaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRefBancariaCompleted(Me, New InsertarRefBancariaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarRefComercial", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRefComercial(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarRefComercial", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarRefComercial(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarRefComercial", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarRefComercial(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRefComercialAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarRefComercialAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRefComercialAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarRefComercialOperationCompleted Is Nothing) Then
                Me.InsertarRefComercialOperationCompleted = AddressOf Me.OnInsertarRefComercialOperationCompleted
            End If
            Me.InvokeAsync("InsertarRefComercial", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarRefComercialOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRefComercialOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRefComercialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRefComercialCompleted(Me, New InsertarRefComercialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarRefFamiliar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRefFamiliar(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarRefFamiliar", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarRefFamiliar(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarRefFamiliar", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarRefFamiliar(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRefFamiliarAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarRefFamiliarAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRefFamiliarAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarRefFamiliarOperationCompleted Is Nothing) Then
                Me.InsertarRefFamiliarOperationCompleted = AddressOf Me.OnInsertarRefFamiliarOperationCompleted
            End If
            Me.InvokeAsync("InsertarRefFamiliar", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarRefFamiliarOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRefFamiliarOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRefFamiliarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRefFamiliarCompleted(Me, New InsertarRefFamiliarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarRefPersonal", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRefPersonal(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarRefPersonal", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarRefPersonal(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarRefPersonal", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarRefPersonal(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRefPersonalAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarRefPersonalAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRefPersonalAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarRefPersonalOperationCompleted Is Nothing) Then
                Me.InsertarRefPersonalOperationCompleted = AddressOf Me.OnInsertarRefPersonalOperationCompleted
            End If
            Me.InvokeAsync("InsertarRefPersonal", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarRefPersonalOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRefPersonalOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRefPersonalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRefPersonalCompleted(Me, New InsertarRefPersonalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarSeccionRegistro", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarSeccionRegistro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarSeccionRegistro", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarSeccionRegistro(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarSeccionRegistro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarSeccionRegistro(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarSeccionRegistroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarSeccionRegistroAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarSeccionRegistroAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarSeccionRegistroOperationCompleted Is Nothing) Then
                Me.InsertarSeccionRegistroOperationCompleted = AddressOf Me.OnInsertarSeccionRegistroOperationCompleted
            End If
            Me.InvokeAsync("InsertarSeccionRegistro", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarSeccionRegistroOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarSeccionRegistroOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarSeccionRegistroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarSeccionRegistroCompleted(Me, New InsertarSeccionRegistroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarSolCred", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarSolCred(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarSolCred", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarSolCred(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarSolCred", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarSolCred(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarSolCredAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarSolCredAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarSolCredAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarSolCredOperationCompleted Is Nothing) Then
                Me.InsertarSolCredOperationCompleted = AddressOf Me.OnInsertarSolCredOperationCompleted
            End If
            Me.InvokeAsync("InsertarSolCred", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarSolCredOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarSolCredOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarSolCredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarSolCredCompleted(Me, New InsertarSolCredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarSolCredR", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarSolCredR(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarSolCredR", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarSolCredR(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarSolCredR", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarSolCredR(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarSolCredRAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarSolCredRAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarSolCredRAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarSolCredROperationCompleted Is Nothing) Then
                Me.InsertarSolCredROperationCompleted = AddressOf Me.OnInsertarSolCredROperationCompleted
            End If
            Me.InvokeAsync("InsertarSolCredR", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarSolCredROperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarSolCredROperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarSolCredRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarSolCredRCompleted(Me, New InsertarSolCredRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarSolP2Credito", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarSolP2Credito(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarSolP2Credito", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarSolP2Credito(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarSolP2Credito", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarSolP2Credito(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarSolP2CreditoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarSolP2CreditoAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarSolP2CreditoAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarSolP2CreditoOperationCompleted Is Nothing) Then
                Me.InsertarSolP2CreditoOperationCompleted = AddressOf Me.OnInsertarSolP2CreditoOperationCompleted
            End If
            Me.InvokeAsync("InsertarSolP2Credito", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarSolP2CreditoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarSolP2CreditoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarSolP2CreditoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarSolP2CreditoCompleted(Me, New InsertarSolP2CreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarTipGarant", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarTipGarant(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarTipGarant", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarTipGarant(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarTipGarant", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarTipGarant(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarTipGarantAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarTipGarantAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarTipGarantAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarTipGarantOperationCompleted Is Nothing) Then
                Me.InsertarTipGarantOperationCompleted = AddressOf Me.OnInsertarTipGarantOperationCompleted
            End If
            Me.InvokeAsync("InsertarTipGarant", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarTipGarantOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarTipGarantOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarTipGarantCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarTipGarantCompleted(Me, New InsertarTipGarantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarTipoCobranza", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarTipoCobranza(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarTipoCobranza", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarTipoCobranza(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarTipoCobranza", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarTipoCobranza(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoCobranzaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarTipoCobranzaAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoCobranzaAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarTipoCobranzaOperationCompleted Is Nothing) Then
                Me.InsertarTipoCobranzaOperationCompleted = AddressOf Me.OnInsertarTipoCobranzaOperationCompleted
            End If
            Me.InvokeAsync("InsertarTipoCobranza", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarTipoCobranzaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarTipoCobranzaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarTipoCobranzaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarTipoCobranzaCompleted(Me, New InsertarTipoCobranzaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarTipoCreditos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarTipoCreditos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarTipoCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarTipoCreditos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarTipoCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarTipoCreditos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoCreditosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarTipoCreditosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoCreditosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarTipoCreditosOperationCompleted Is Nothing) Then
                Me.InsertarTipoCreditosOperationCompleted = AddressOf Me.OnInsertarTipoCreditosOperationCompleted
            End If
            Me.InvokeAsync("InsertarTipoCreditos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarTipoCreditosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarTipoCreditosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarTipoCreditosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarTipoCreditosCompleted(Me, New InsertarTipoCreditosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarTipoGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarTipoGastos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarTipoGastos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarTipoGastos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarTipoGastos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarTipoGastos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoGastosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarTipoGastosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoGastosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarTipoGastosOperationCompleted Is Nothing) Then
                Me.InsertarTipoGastosOperationCompleted = AddressOf Me.OnInsertarTipoGastosOperationCompleted
            End If
            Me.InvokeAsync("InsertarTipoGastos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarTipoGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarTipoGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarTipoGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarTipoGastosCompleted(Me, New InsertarTipoGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarTipoGestion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarTipoGestion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarTipoGestion", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarTipoGestion(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarTipoGestion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarTipoGestion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoGestionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarTipoGestionAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoGestionAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarTipoGestionOperationCompleted Is Nothing) Then
                Me.InsertarTipoGestionOperationCompleted = AddressOf Me.OnInsertarTipoGestionOperationCompleted
            End If
            Me.InvokeAsync("InsertarTipoGestion", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarTipoGestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarTipoGestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarTipoGestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarTipoGestionCompleted(Me, New InsertarTipoGestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarTipoIngresos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarTipoIngresos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarTipoIngresos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarTipoIngresos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarTipoIngresos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarTipoIngresos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoIngresosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarTipoIngresosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarTipoIngresosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarTipoIngresosOperationCompleted Is Nothing) Then
                Me.InsertarTipoIngresosOperationCompleted = AddressOf Me.OnInsertarTipoIngresosOperationCompleted
            End If
            Me.InvokeAsync("InsertarTipoIngresos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarTipoIngresosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarTipoIngresosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarTipoIngresosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarTipoIngresosCompleted(Me, New InsertarTipoIngresosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/InsertarValuos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarValuos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertarValuos", New Object() {pCampos, pValores, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertarValuos(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertarValuos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertarValuos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarValuosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.InsertarValuosAsync(pCampos, pValores, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarValuosAsync(ByVal pCampos As String, ByVal pValores As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.InsertarValuosOperationCompleted Is Nothing) Then
                Me.InsertarValuosOperationCompleted = AddressOf Me.OnInsertarValuosOperationCompleted
            End If
            Me.InvokeAsync("InsertarValuos", New Object() {pCampos, pValores, pUs, pPa, pSucursal}, Me.InsertarValuosOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarValuosOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarValuosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarValuosCompleted(Me, New InsertarValuosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarCred", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCred(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCred", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCred(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCred", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCred(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCredAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCredAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCredAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCredOperationCompleted Is Nothing) Then
                Me.ConsultarCredOperationCompleted = AddressOf Me.OnConsultarCredOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCred", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCredOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCredOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCredCompleted(Me, New ConsultarCredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RptContratoInvestigacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RptContratoInvestigacion(ByVal dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RptContratoInvestigacion", New Object() {dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRptContratoInvestigacion(ByVal dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RptContratoInvestigacion", New Object() {dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRptContratoInvestigacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RptContratoInvestigacionAsync(ByVal dui As String)
            Me.RptContratoInvestigacionAsync(dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RptContratoInvestigacionAsync(ByVal dui As String, ByVal userState As Object)
            If (Me.RptContratoInvestigacionOperationCompleted Is Nothing) Then
                Me.RptContratoInvestigacionOperationCompleted = AddressOf Me.OnRptContratoInvestigacionOperationCompleted
            End If
            Me.InvokeAsync("RptContratoInvestigacion", New Object() {dui}, Me.RptContratoInvestigacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRptContratoInvestigacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RptContratoInvestigacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RptContratoInvestigacionCompleted(Me, New RptContratoInvestigacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/calcularInteresMigracion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function calcularInteresMigracion(ByVal codPrestamos As String) As String
            Dim results() As Object = Me.Invoke("calcularInteresMigracion", New Object() {codPrestamos})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BegincalcularInteresMigracion(ByVal codPrestamos As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("calcularInteresMigracion", New Object() {codPrestamos}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndcalcularInteresMigracion(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub calcularInteresMigracionAsync(ByVal codPrestamos As String)
            Me.calcularInteresMigracionAsync(codPrestamos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub calcularInteresMigracionAsync(ByVal codPrestamos As String, ByVal userState As Object)
            If (Me.calcularInteresMigracionOperationCompleted Is Nothing) Then
                Me.calcularInteresMigracionOperationCompleted = AddressOf Me.OncalcularInteresMigracionOperationCompleted
            End If
            Me.InvokeAsync("calcularInteresMigracion", New Object() {codPrestamos}, Me.calcularInteresMigracionOperationCompleted, userState)
        End Sub
        
        Private Sub OncalcularInteresMigracionOperationCompleted(ByVal arg As Object)
            If (Not (Me.calcularInteresMigracionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent calcularInteresMigracionCompleted(Me, New calcularInteresMigracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/validarMontoCancelacionPrestamo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarMontoCancelacionPrestamo(ByVal codPrestamo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("validarMontoCancelacionPrestamo", New Object() {codPrestamo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarMontoCancelacionPrestamo(ByVal codPrestamo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarMontoCancelacionPrestamo", New Object() {codPrestamo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarMontoCancelacionPrestamo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarMontoCancelacionPrestamoAsync(ByVal codPrestamo As String)
            Me.validarMontoCancelacionPrestamoAsync(codPrestamo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarMontoCancelacionPrestamoAsync(ByVal codPrestamo As String, ByVal userState As Object)
            If (Me.validarMontoCancelacionPrestamoOperationCompleted Is Nothing) Then
                Me.validarMontoCancelacionPrestamoOperationCompleted = AddressOf Me.OnvalidarMontoCancelacionPrestamoOperationCompleted
            End If
            Me.InvokeAsync("validarMontoCancelacionPrestamo", New Object() {codPrestamo}, Me.validarMontoCancelacionPrestamoOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarMontoCancelacionPrestamoOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarMontoCancelacionPrestamoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarMontoCancelacionPrestamoCompleted(Me, New validarMontoCancelacionPrestamoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RptContratoMutuo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RptContratoMutuo(ByVal codPrestamo As String, ByVal Usuario As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RptContratoMutuo", New Object() {codPrestamo, Usuario})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRptContratoMutuo(ByVal codPrestamo As String, ByVal Usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RptContratoMutuo", New Object() {codPrestamo, Usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRptContratoMutuo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RptContratoMutuoAsync(ByVal codPrestamo As String, ByVal Usuario As String)
            Me.RptContratoMutuoAsync(codPrestamo, Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RptContratoMutuoAsync(ByVal codPrestamo As String, ByVal Usuario As String, ByVal userState As Object)
            If (Me.RptContratoMutuoOperationCompleted Is Nothing) Then
                Me.RptContratoMutuoOperationCompleted = AddressOf Me.OnRptContratoMutuoOperationCompleted
            End If
            Me.InvokeAsync("RptContratoMutuo", New Object() {codPrestamo, Usuario}, Me.RptContratoMutuoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRptContratoMutuoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RptContratoMutuoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RptContratoMutuoCompleted(Me, New RptContratoMutuoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ObtenerCorrelativoPrestamo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCorrelativoPrestamo(ByVal dui As String, ByVal pUsuario As String, ByVal contrasenia As String, ByVal sucursal As String, ByVal codTipoCredito As String) As String
            Dim results() As Object = Me.Invoke("ObtenerCorrelativoPrestamo", New Object() {dui, pUsuario, contrasenia, sucursal, codTipoCredito})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerCorrelativoPrestamo(ByVal dui As String, ByVal pUsuario As String, ByVal contrasenia As String, ByVal sucursal As String, ByVal codTipoCredito As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerCorrelativoPrestamo", New Object() {dui, pUsuario, contrasenia, sucursal, codTipoCredito}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerCorrelativoPrestamo(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoPrestamoAsync(ByVal dui As String, ByVal pUsuario As String, ByVal contrasenia As String, ByVal sucursal As String, ByVal codTipoCredito As String)
            Me.ObtenerCorrelativoPrestamoAsync(dui, pUsuario, contrasenia, sucursal, codTipoCredito, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCorrelativoPrestamoAsync(ByVal dui As String, ByVal pUsuario As String, ByVal contrasenia As String, ByVal sucursal As String, ByVal codTipoCredito As String, ByVal userState As Object)
            If (Me.ObtenerCorrelativoPrestamoOperationCompleted Is Nothing) Then
                Me.ObtenerCorrelativoPrestamoOperationCompleted = AddressOf Me.OnObtenerCorrelativoPrestamoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCorrelativoPrestamo", New Object() {dui, pUsuario, contrasenia, sucursal, codTipoCredito}, Me.ObtenerCorrelativoPrestamoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCorrelativoPrestamoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCorrelativoPrestamoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCorrelativoPrestamoCompleted(Me, New ObtenerCorrelativoPrestamoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Rep_TablaAmortizacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rep_TablaAmortizacion(ByVal dsAmortiza As System.Data.DataSet, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal pNombre As String, ByVal CodPrestamo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rep_TablaAmortizacion", New Object() {dsAmortiza, pUs, pPa, pSucursal, pNombre, CodPrestamo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRep_TablaAmortizacion(ByVal dsAmortiza As System.Data.DataSet, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal pNombre As String, ByVal CodPrestamo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Rep_TablaAmortizacion", New Object() {dsAmortiza, pUs, pPa, pSucursal, pNombre, CodPrestamo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRep_TablaAmortizacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rep_TablaAmortizacionAsync(ByVal dsAmortiza As System.Data.DataSet, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal pNombre As String, ByVal CodPrestamo As String)
            Me.Rep_TablaAmortizacionAsync(dsAmortiza, pUs, pPa, pSucursal, pNombre, CodPrestamo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rep_TablaAmortizacionAsync(ByVal dsAmortiza As System.Data.DataSet, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal pNombre As String, ByVal CodPrestamo As String, ByVal userState As Object)
            If (Me.Rep_TablaAmortizacionOperationCompleted Is Nothing) Then
                Me.Rep_TablaAmortizacionOperationCompleted = AddressOf Me.OnRep_TablaAmortizacionOperationCompleted
            End If
            Me.InvokeAsync("Rep_TablaAmortizacion", New Object() {dsAmortiza, pUs, pPa, pSucursal, pNombre, CodPrestamo}, Me.Rep_TablaAmortizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRep_TablaAmortizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rep_TablaAmortizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rep_TablaAmortizacionCompleted(Me, New Rep_TablaAmortizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/modificarPrDetRestriccions", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarPrDetRestriccions(ByVal idRestriccion As Integer, ByVal dtsEliminar As System.Data.DataSet, ByVal dtsIngresar As System.Data.DataSet) As Integer
            Dim results() As Object = Me.Invoke("modificarPrDetRestriccions", New Object() {idRestriccion, dtsEliminar, dtsIngresar})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarPrDetRestriccions(ByVal idRestriccion As Integer, ByVal dtsEliminar As System.Data.DataSet, ByVal dtsIngresar As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarPrDetRestriccions", New Object() {idRestriccion, dtsEliminar, dtsIngresar}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarPrDetRestriccions(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarPrDetRestriccionsAsync(ByVal idRestriccion As Integer, ByVal dtsEliminar As System.Data.DataSet, ByVal dtsIngresar As System.Data.DataSet)
            Me.modificarPrDetRestriccionsAsync(idRestriccion, dtsEliminar, dtsIngresar, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarPrDetRestriccionsAsync(ByVal idRestriccion As Integer, ByVal dtsEliminar As System.Data.DataSet, ByVal dtsIngresar As System.Data.DataSet, ByVal userState As Object)
            If (Me.modificarPrDetRestriccionsOperationCompleted Is Nothing) Then
                Me.modificarPrDetRestriccionsOperationCompleted = AddressOf Me.OnmodificarPrDetRestriccionsOperationCompleted
            End If
            Me.InvokeAsync("modificarPrDetRestriccions", New Object() {idRestriccion, dtsEliminar, dtsIngresar}, Me.modificarPrDetRestriccionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarPrDetRestriccionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarPrDetRestriccionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarPrDetRestriccionsCompleted(Me, New modificarPrDetRestriccionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/insertarPrDetRestricciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarPrDetRestricciones(ByVal codCriterio As Integer, ByVal enable As Boolean, ByVal idRestriccion As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarPrDetRestricciones", New Object() {codCriterio, enable, idRestriccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarPrDetRestricciones(ByVal codCriterio As Integer, ByVal enable As Boolean, ByVal idRestriccion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarPrDetRestricciones", New Object() {codCriterio, enable, idRestriccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarPrDetRestricciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarPrDetRestriccionesAsync(ByVal codCriterio As Integer, ByVal enable As Boolean, ByVal idRestriccion As Integer)
            Me.insertarPrDetRestriccionesAsync(codCriterio, enable, idRestriccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarPrDetRestriccionesAsync(ByVal codCriterio As Integer, ByVal enable As Boolean, ByVal idRestriccion As Integer, ByVal userState As Object)
            If (Me.insertarPrDetRestriccionesOperationCompleted Is Nothing) Then
                Me.insertarPrDetRestriccionesOperationCompleted = AddressOf Me.OninsertarPrDetRestriccionesOperationCompleted
            End If
            Me.InvokeAsync("insertarPrDetRestricciones", New Object() {codCriterio, enable, idRestriccion}, Me.insertarPrDetRestriccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarPrDetRestriccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarPrDetRestriccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarPrDetRestriccionesCompleted(Me, New insertarPrDetRestriccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/eliminarPrRestricciones_Criterios_Pagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarPrRestricciones_Criterios_Pagadurias(ByVal idRestriccion As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarPrRestricciones_Criterios_Pagadurias", New Object() {idRestriccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarPrRestricciones_Criterios_Pagadurias(ByVal idRestriccion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarPrRestricciones_Criterios_Pagadurias", New Object() {idRestriccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarPrRestricciones_Criterios_Pagadurias(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarPrRestricciones_Criterios_PagaduriasAsync(ByVal idRestriccion As Integer)
            Me.eliminarPrRestricciones_Criterios_PagaduriasAsync(idRestriccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarPrRestricciones_Criterios_PagaduriasAsync(ByVal idRestriccion As Integer, ByVal userState As Object)
            If (Me.eliminarPrRestricciones_Criterios_PagaduriasOperationCompleted Is Nothing) Then
                Me.eliminarPrRestricciones_Criterios_PagaduriasOperationCompleted = AddressOf Me.OneliminarPrRestricciones_Criterios_PagaduriasOperationCompleted
            End If
            Me.InvokeAsync("eliminarPrRestricciones_Criterios_Pagadurias", New Object() {idRestriccion}, Me.eliminarPrRestricciones_Criterios_PagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarPrRestricciones_Criterios_PagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarPrRestricciones_Criterios_PagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarPrRestricciones_Criterios_PagaduriasCompleted(Me, New eliminarPrRestricciones_Criterios_PagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/eliminarPrDet_Restricciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarPrDet_Restricciones(ByVal idDetRestriccion As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarPrDet_Restricciones", New Object() {idDetRestriccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarPrDet_Restricciones(ByVal idDetRestriccion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarPrDet_Restricciones", New Object() {idDetRestriccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarPrDet_Restricciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarPrDet_RestriccionesAsync(ByVal idDetRestriccion As Integer)
            Me.eliminarPrDet_RestriccionesAsync(idDetRestriccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarPrDet_RestriccionesAsync(ByVal idDetRestriccion As Integer, ByVal userState As Object)
            If (Me.eliminarPrDet_RestriccionesOperationCompleted Is Nothing) Then
                Me.eliminarPrDet_RestriccionesOperationCompleted = AddressOf Me.OneliminarPrDet_RestriccionesOperationCompleted
            End If
            Me.InvokeAsync("eliminarPrDet_Restricciones", New Object() {idDetRestriccion}, Me.eliminarPrDet_RestriccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarPrDet_RestriccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarPrDet_RestriccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarPrDet_RestriccionesCompleted(Me, New eliminarPrDet_RestriccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/consultarPrDet_Restricciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPrDet_Restricciones(ByVal idRestriccion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarPrDet_Restricciones", New Object() {idRestriccion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPrDet_Restricciones(ByVal idRestriccion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPrDet_Restricciones", New Object() {idRestriccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPrDet_Restricciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPrDet_RestriccionesAsync(ByVal idRestriccion As Integer)
            Me.consultarPrDet_RestriccionesAsync(idRestriccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPrDet_RestriccionesAsync(ByVal idRestriccion As Integer, ByVal userState As Object)
            If (Me.consultarPrDet_RestriccionesOperationCompleted Is Nothing) Then
                Me.consultarPrDet_RestriccionesOperationCompleted = AddressOf Me.OnconsultarPrDet_RestriccionesOperationCompleted
            End If
            Me.InvokeAsync("consultarPrDet_Restricciones", New Object() {idRestriccion}, Me.consultarPrDet_RestriccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPrDet_RestriccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPrDet_RestriccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPrDet_RestriccionesCompleted(Me, New consultarPrDet_RestriccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/consultarPrRestriccionesCriterios", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPrRestriccionesCriterios(ByVal opcion As Integer, ByVal codCriterio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarPrRestriccionesCriterios", New Object() {opcion, codCriterio})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPrRestriccionesCriterios(ByVal opcion As Integer, ByVal codCriterio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPrRestriccionesCriterios", New Object() {opcion, codCriterio}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPrRestriccionesCriterios(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPrRestriccionesCriteriosAsync(ByVal opcion As Integer, ByVal codCriterio As Integer)
            Me.consultarPrRestriccionesCriteriosAsync(opcion, codCriterio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPrRestriccionesCriteriosAsync(ByVal opcion As Integer, ByVal codCriterio As Integer, ByVal userState As Object)
            If (Me.consultarPrRestriccionesCriteriosOperationCompleted Is Nothing) Then
                Me.consultarPrRestriccionesCriteriosOperationCompleted = AddressOf Me.OnconsultarPrRestriccionesCriteriosOperationCompleted
            End If
            Me.InvokeAsync("consultarPrRestriccionesCriterios", New Object() {opcion, codCriterio}, Me.consultarPrRestriccionesCriteriosOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPrRestriccionesCriteriosOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPrRestriccionesCriteriosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPrRestriccionesCriteriosCompleted(Me, New consultarPrRestriccionesCriteriosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/IngresarRestricciones_CriteriosEvaluacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IngresarRestricciones_CriteriosEvaluacion(ByVal codCriterio As Integer, ByVal dts As System.Data.DataSet) As Integer
            Dim results() As Object = Me.Invoke("IngresarRestricciones_CriteriosEvaluacion", New Object() {codCriterio, dts})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginIngresarRestricciones_CriteriosEvaluacion(ByVal codCriterio As Integer, ByVal dts As System.Data.DataSet, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IngresarRestricciones_CriteriosEvaluacion", New Object() {codCriterio, dts}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndIngresarRestricciones_CriteriosEvaluacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IngresarRestricciones_CriteriosEvaluacionAsync(ByVal codCriterio As Integer, ByVal dts As System.Data.DataSet)
            Me.IngresarRestricciones_CriteriosEvaluacionAsync(codCriterio, dts, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IngresarRestricciones_CriteriosEvaluacionAsync(ByVal codCriterio As Integer, ByVal dts As System.Data.DataSet, ByVal userState As Object)
            If (Me.IngresarRestricciones_CriteriosEvaluacionOperationCompleted Is Nothing) Then
                Me.IngresarRestricciones_CriteriosEvaluacionOperationCompleted = AddressOf Me.OnIngresarRestricciones_CriteriosEvaluacionOperationCompleted
            End If
            Me.InvokeAsync("IngresarRestricciones_CriteriosEvaluacion", New Object() {codCriterio, dts}, Me.IngresarRestricciones_CriteriosEvaluacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnIngresarRestricciones_CriteriosEvaluacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.IngresarRestricciones_CriteriosEvaluacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IngresarRestricciones_CriteriosEvaluacionCompleted(Me, New IngresarRestricciones_CriteriosEvaluacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/consultarPrTipoEvaluaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPrTipoEvaluaciones() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarPrTipoEvaluaciones", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPrTipoEvaluaciones(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPrTipoEvaluaciones", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPrTipoEvaluaciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPrTipoEvaluacionesAsync()
            Me.consultarPrTipoEvaluacionesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPrTipoEvaluacionesAsync(ByVal userState As Object)
            If (Me.consultarPrTipoEvaluacionesOperationCompleted Is Nothing) Then
                Me.consultarPrTipoEvaluacionesOperationCompleted = AddressOf Me.OnconsultarPrTipoEvaluacionesOperationCompleted
            End If
            Me.InvokeAsync("consultarPrTipoEvaluaciones", New Object(-1) {}, Me.consultarPrTipoEvaluacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPrTipoEvaluacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPrTipoEvaluacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPrTipoEvaluacionesCompleted(Me, New consultarPrTipoEvaluacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/eliminarPrTipoEvaluaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarPrTipoEvaluaciones(ByVal idTipoEval As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarPrTipoEvaluaciones", New Object() {idTipoEval})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarPrTipoEvaluaciones(ByVal idTipoEval As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarPrTipoEvaluaciones", New Object() {idTipoEval}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarPrTipoEvaluaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarPrTipoEvaluacionesAsync(ByVal idTipoEval As Integer)
            Me.eliminarPrTipoEvaluacionesAsync(idTipoEval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarPrTipoEvaluacionesAsync(ByVal idTipoEval As Integer, ByVal userState As Object)
            If (Me.eliminarPrTipoEvaluacionesOperationCompleted Is Nothing) Then
                Me.eliminarPrTipoEvaluacionesOperationCompleted = AddressOf Me.OneliminarPrTipoEvaluacionesOperationCompleted
            End If
            Me.InvokeAsync("eliminarPrTipoEvaluaciones", New Object() {idTipoEval}, Me.eliminarPrTipoEvaluacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarPrTipoEvaluacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarPrTipoEvaluacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarPrTipoEvaluacionesCompleted(Me, New eliminarPrTipoEvaluacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/modificarPrTipoEvaluaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarPrTipoEvaluaciones(ByVal descripcion As String, ByVal idTipoEval As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarPrTipoEvaluaciones", New Object() {descripcion, idTipoEval})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarPrTipoEvaluaciones(ByVal descripcion As String, ByVal idTipoEval As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarPrTipoEvaluaciones", New Object() {descripcion, idTipoEval}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarPrTipoEvaluaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarPrTipoEvaluacionesAsync(ByVal descripcion As String, ByVal idTipoEval As Integer)
            Me.modificarPrTipoEvaluacionesAsync(descripcion, idTipoEval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarPrTipoEvaluacionesAsync(ByVal descripcion As String, ByVal idTipoEval As Integer, ByVal userState As Object)
            If (Me.modificarPrTipoEvaluacionesOperationCompleted Is Nothing) Then
                Me.modificarPrTipoEvaluacionesOperationCompleted = AddressOf Me.OnmodificarPrTipoEvaluacionesOperationCompleted
            End If
            Me.InvokeAsync("modificarPrTipoEvaluaciones", New Object() {descripcion, idTipoEval}, Me.modificarPrTipoEvaluacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarPrTipoEvaluacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarPrTipoEvaluacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarPrTipoEvaluacionesCompleted(Me, New modificarPrTipoEvaluacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/insertarPrTipoEvaluaciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarPrTipoEvaluaciones(ByVal descripcion As String) As Integer
            Dim results() As Object = Me.Invoke("insertarPrTipoEvaluaciones", New Object() {descripcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarPrTipoEvaluaciones(ByVal descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarPrTipoEvaluaciones", New Object() {descripcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarPrTipoEvaluaciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarPrTipoEvaluacionesAsync(ByVal descripcion As String)
            Me.insertarPrTipoEvaluacionesAsync(descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarPrTipoEvaluacionesAsync(ByVal descripcion As String, ByVal userState As Object)
            If (Me.insertarPrTipoEvaluacionesOperationCompleted Is Nothing) Then
                Me.insertarPrTipoEvaluacionesOperationCompleted = AddressOf Me.OninsertarPrTipoEvaluacionesOperationCompleted
            End If
            Me.InvokeAsync("insertarPrTipoEvaluaciones", New Object() {descripcion}, Me.insertarPrTipoEvaluacionesOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarPrTipoEvaluacionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarPrTipoEvaluacionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarPrTipoEvaluacionesCompleted(Me, New insertarPrTipoEvaluacionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ingresarEvaluacionPagaduria", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ingresarEvaluacionPagaduria(ByVal codpagaduria As String, ByVal porcentaje As Double, ByVal categoria As String, ByVal fechaEvaluacion As Date, ByVal usuarioEvalua As String, ByVal dtsDet As System.Data.DataSet, ByVal idTipoEval As Integer) As Integer
            Dim results() As Object = Me.Invoke("ingresarEvaluacionPagaduria", New Object() {codpagaduria, porcentaje, categoria, fechaEvaluacion, usuarioEvalua, dtsDet, idTipoEval})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginingresarEvaluacionPagaduria(ByVal codpagaduria As String, ByVal porcentaje As Double, ByVal categoria As String, ByVal fechaEvaluacion As Date, ByVal usuarioEvalua As String, ByVal dtsDet As System.Data.DataSet, ByVal idTipoEval As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ingresarEvaluacionPagaduria", New Object() {codpagaduria, porcentaje, categoria, fechaEvaluacion, usuarioEvalua, dtsDet, idTipoEval}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndingresarEvaluacionPagaduria(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ingresarEvaluacionPagaduriaAsync(ByVal codpagaduria As String, ByVal porcentaje As Double, ByVal categoria As String, ByVal fechaEvaluacion As Date, ByVal usuarioEvalua As String, ByVal dtsDet As System.Data.DataSet, ByVal idTipoEval As Integer)
            Me.ingresarEvaluacionPagaduriaAsync(codpagaduria, porcentaje, categoria, fechaEvaluacion, usuarioEvalua, dtsDet, idTipoEval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ingresarEvaluacionPagaduriaAsync(ByVal codpagaduria As String, ByVal porcentaje As Double, ByVal categoria As String, ByVal fechaEvaluacion As Date, ByVal usuarioEvalua As String, ByVal dtsDet As System.Data.DataSet, ByVal idTipoEval As Integer, ByVal userState As Object)
            If (Me.ingresarEvaluacionPagaduriaOperationCompleted Is Nothing) Then
                Me.ingresarEvaluacionPagaduriaOperationCompleted = AddressOf Me.OningresarEvaluacionPagaduriaOperationCompleted
            End If
            Me.InvokeAsync("ingresarEvaluacionPagaduria", New Object() {codpagaduria, porcentaje, categoria, fechaEvaluacion, usuarioEvalua, dtsDet, idTipoEval}, Me.ingresarEvaluacionPagaduriaOperationCompleted, userState)
        End Sub
        
        Private Sub OningresarEvaluacionPagaduriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ingresarEvaluacionPagaduriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ingresarEvaluacionPagaduriaCompleted(Me, New ingresarEvaluacionPagaduriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/insertarPrGiroEmpresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarPrGiroEmpresa(ByVal descripcion As String) As Integer
            Dim results() As Object = Me.Invoke("insertarPrGiroEmpresa", New Object() {descripcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarPrGiroEmpresa(ByVal descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarPrGiroEmpresa", New Object() {descripcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarPrGiroEmpresa(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarPrGiroEmpresaAsync(ByVal descripcion As String)
            Me.insertarPrGiroEmpresaAsync(descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarPrGiroEmpresaAsync(ByVal descripcion As String, ByVal userState As Object)
            If (Me.insertarPrGiroEmpresaOperationCompleted Is Nothing) Then
                Me.insertarPrGiroEmpresaOperationCompleted = AddressOf Me.OninsertarPrGiroEmpresaOperationCompleted
            End If
            Me.InvokeAsync("insertarPrGiroEmpresa", New Object() {descripcion}, Me.insertarPrGiroEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarPrGiroEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarPrGiroEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarPrGiroEmpresaCompleted(Me, New insertarPrGiroEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/modificarPrGiroEmpresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarPrGiroEmpresa(ByVal descripcion As String, ByVal idGiroEmpresa As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarPrGiroEmpresa", New Object() {descripcion, idGiroEmpresa})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarPrGiroEmpresa(ByVal descripcion As String, ByVal idGiroEmpresa As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarPrGiroEmpresa", New Object() {descripcion, idGiroEmpresa}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarPrGiroEmpresa(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarPrGiroEmpresaAsync(ByVal descripcion As String, ByVal idGiroEmpresa As Integer)
            Me.modificarPrGiroEmpresaAsync(descripcion, idGiroEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarPrGiroEmpresaAsync(ByVal descripcion As String, ByVal idGiroEmpresa As Integer, ByVal userState As Object)
            If (Me.modificarPrGiroEmpresaOperationCompleted Is Nothing) Then
                Me.modificarPrGiroEmpresaOperationCompleted = AddressOf Me.OnmodificarPrGiroEmpresaOperationCompleted
            End If
            Me.InvokeAsync("modificarPrGiroEmpresa", New Object() {descripcion, idGiroEmpresa}, Me.modificarPrGiroEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarPrGiroEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarPrGiroEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarPrGiroEmpresaCompleted(Me, New modificarPrGiroEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/eliminarPrGiroEmpresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarPrGiroEmpresa(ByVal idGiroEmpresa As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarPrGiroEmpresa", New Object() {idGiroEmpresa})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarPrGiroEmpresa(ByVal idGiroEmpresa As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarPrGiroEmpresa", New Object() {idGiroEmpresa}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarPrGiroEmpresa(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarPrGiroEmpresaAsync(ByVal idGiroEmpresa As Integer)
            Me.eliminarPrGiroEmpresaAsync(idGiroEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarPrGiroEmpresaAsync(ByVal idGiroEmpresa As Integer, ByVal userState As Object)
            If (Me.eliminarPrGiroEmpresaOperationCompleted Is Nothing) Then
                Me.eliminarPrGiroEmpresaOperationCompleted = AddressOf Me.OneliminarPrGiroEmpresaOperationCompleted
            End If
            Me.InvokeAsync("eliminarPrGiroEmpresa", New Object() {idGiroEmpresa}, Me.eliminarPrGiroEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarPrGiroEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarPrGiroEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarPrGiroEmpresaCompleted(Me, New eliminarPrGiroEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/consultarPrGiroEmpresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPrGiroEmpresa(ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarPrGiroEmpresa", New Object() {opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPrGiroEmpresa(ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPrGiroEmpresa", New Object() {opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPrGiroEmpresa(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPrGiroEmpresaAsync(ByVal opcion As Integer)
            Me.consultarPrGiroEmpresaAsync(opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPrGiroEmpresaAsync(ByVal opcion As Integer, ByVal userState As Object)
            If (Me.consultarPrGiroEmpresaOperationCompleted Is Nothing) Then
                Me.consultarPrGiroEmpresaOperationCompleted = AddressOf Me.OnconsultarPrGiroEmpresaOperationCompleted
            End If
            Me.InvokeAsync("consultarPrGiroEmpresa", New Object() {opcion}, Me.consultarPrGiroEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPrGiroEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPrGiroEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPrGiroEmpresaCompleted(Me, New consultarPrGiroEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/consultarPrTipoEmpresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPrTipoEmpresa() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarPrTipoEmpresa", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPrTipoEmpresa(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPrTipoEmpresa", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPrTipoEmpresa(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPrTipoEmpresaAsync()
            Me.consultarPrTipoEmpresaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPrTipoEmpresaAsync(ByVal userState As Object)
            If (Me.consultarPrTipoEmpresaOperationCompleted Is Nothing) Then
                Me.consultarPrTipoEmpresaOperationCompleted = AddressOf Me.OnconsultarPrTipoEmpresaOperationCompleted
            End If
            Me.InvokeAsync("consultarPrTipoEmpresa", New Object(-1) {}, Me.consultarPrTipoEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPrTipoEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPrTipoEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPrTipoEmpresaCompleted(Me, New consultarPrTipoEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/eliminarPrTipoEmpresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarPrTipoEmpresa(ByVal idTipoEmp As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarPrTipoEmpresa", New Object() {idTipoEmp})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarPrTipoEmpresa(ByVal idTipoEmp As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarPrTipoEmpresa", New Object() {idTipoEmp}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarPrTipoEmpresa(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarPrTipoEmpresaAsync(ByVal idTipoEmp As Integer)
            Me.eliminarPrTipoEmpresaAsync(idTipoEmp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarPrTipoEmpresaAsync(ByVal idTipoEmp As Integer, ByVal userState As Object)
            If (Me.eliminarPrTipoEmpresaOperationCompleted Is Nothing) Then
                Me.eliminarPrTipoEmpresaOperationCompleted = AddressOf Me.OneliminarPrTipoEmpresaOperationCompleted
            End If
            Me.InvokeAsync("eliminarPrTipoEmpresa", New Object() {idTipoEmp}, Me.eliminarPrTipoEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarPrTipoEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarPrTipoEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarPrTipoEmpresaCompleted(Me, New eliminarPrTipoEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/modificarPrTipoEmpresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarPrTipoEmpresa(ByVal descripcion As String, ByVal idTipoEmp As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarPrTipoEmpresa", New Object() {descripcion, idTipoEmp})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarPrTipoEmpresa(ByVal descripcion As String, ByVal idTipoEmp As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarPrTipoEmpresa", New Object() {descripcion, idTipoEmp}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarPrTipoEmpresa(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarPrTipoEmpresaAsync(ByVal descripcion As String, ByVal idTipoEmp As Integer)
            Me.modificarPrTipoEmpresaAsync(descripcion, idTipoEmp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarPrTipoEmpresaAsync(ByVal descripcion As String, ByVal idTipoEmp As Integer, ByVal userState As Object)
            If (Me.modificarPrTipoEmpresaOperationCompleted Is Nothing) Then
                Me.modificarPrTipoEmpresaOperationCompleted = AddressOf Me.OnmodificarPrTipoEmpresaOperationCompleted
            End If
            Me.InvokeAsync("modificarPrTipoEmpresa", New Object() {descripcion, idTipoEmp}, Me.modificarPrTipoEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarPrTipoEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarPrTipoEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarPrTipoEmpresaCompleted(Me, New modificarPrTipoEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/insertarPrTipoEmpresa", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarPrTipoEmpresa(ByVal descripcion As String) As Integer
            Dim results() As Object = Me.Invoke("insertarPrTipoEmpresa", New Object() {descripcion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarPrTipoEmpresa(ByVal descripcion As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarPrTipoEmpresa", New Object() {descripcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarPrTipoEmpresa(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarPrTipoEmpresaAsync(ByVal descripcion As String)
            Me.insertarPrTipoEmpresaAsync(descripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarPrTipoEmpresaAsync(ByVal descripcion As String, ByVal userState As Object)
            If (Me.insertarPrTipoEmpresaOperationCompleted Is Nothing) Then
                Me.insertarPrTipoEmpresaOperationCompleted = AddressOf Me.OninsertarPrTipoEmpresaOperationCompleted
            End If
            Me.InvokeAsync("insertarPrTipoEmpresa", New Object() {descripcion}, Me.insertarPrTipoEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarPrTipoEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarPrTipoEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarPrTipoEmpresaCompleted(Me, New insertarPrTipoEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/eliminarPrCatClasificacionPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function eliminarPrCatClasificacionPagadurias(ByVal idcategoria As Integer) As Integer
            Dim results() As Object = Me.Invoke("eliminarPrCatClasificacionPagadurias", New Object() {idcategoria})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegineliminarPrCatClasificacionPagadurias(ByVal idcategoria As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("eliminarPrCatClasificacionPagadurias", New Object() {idcategoria}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndeliminarPrCatClasificacionPagadurias(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub eliminarPrCatClasificacionPagaduriasAsync(ByVal idcategoria As Integer)
            Me.eliminarPrCatClasificacionPagaduriasAsync(idcategoria, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub eliminarPrCatClasificacionPagaduriasAsync(ByVal idcategoria As Integer, ByVal userState As Object)
            If (Me.eliminarPrCatClasificacionPagaduriasOperationCompleted Is Nothing) Then
                Me.eliminarPrCatClasificacionPagaduriasOperationCompleted = AddressOf Me.OneliminarPrCatClasificacionPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("eliminarPrCatClasificacionPagadurias", New Object() {idcategoria}, Me.eliminarPrCatClasificacionPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OneliminarPrCatClasificacionPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.eliminarPrCatClasificacionPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent eliminarPrCatClasificacionPagaduriasCompleted(Me, New eliminarPrCatClasificacionPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/consultarPrCatClasificacionPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPrCatClasificacionPagadurias(ByVal opcion As Integer, ByVal porcentaje As Double, ByVal idTipoEval As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarPrCatClasificacionPagadurias", New Object() {opcion, porcentaje, idTipoEval})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPrCatClasificacionPagadurias(ByVal opcion As Integer, ByVal porcentaje As Double, ByVal idTipoEval As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPrCatClasificacionPagadurias", New Object() {opcion, porcentaje, idTipoEval}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPrCatClasificacionPagadurias(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPrCatClasificacionPagaduriasAsync(ByVal opcion As Integer, ByVal porcentaje As Double, ByVal idTipoEval As Integer)
            Me.consultarPrCatClasificacionPagaduriasAsync(opcion, porcentaje, idTipoEval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPrCatClasificacionPagaduriasAsync(ByVal opcion As Integer, ByVal porcentaje As Double, ByVal idTipoEval As Integer, ByVal userState As Object)
            If (Me.consultarPrCatClasificacionPagaduriasOperationCompleted Is Nothing) Then
                Me.consultarPrCatClasificacionPagaduriasOperationCompleted = AddressOf Me.OnconsultarPrCatClasificacionPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("consultarPrCatClasificacionPagadurias", New Object() {opcion, porcentaje, idTipoEval}, Me.consultarPrCatClasificacionPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPrCatClasificacionPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPrCatClasificacionPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPrCatClasificacionPagaduriasCompleted(Me, New consultarPrCatClasificacionPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/modificarPrCatClasificacionPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarPrCatClasificacionPagadurias(ByVal categoria As String, ByVal desde As Double, ByVal hasta As Double, ByVal idCategoria As Integer, ByVal idTipoEval As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarPrCatClasificacionPagadurias", New Object() {categoria, desde, hasta, idCategoria, idTipoEval})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarPrCatClasificacionPagadurias(ByVal categoria As String, ByVal desde As Double, ByVal hasta As Double, ByVal idCategoria As Integer, ByVal idTipoEval As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarPrCatClasificacionPagadurias", New Object() {categoria, desde, hasta, idCategoria, idTipoEval}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarPrCatClasificacionPagadurias(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarPrCatClasificacionPagaduriasAsync(ByVal categoria As String, ByVal desde As Double, ByVal hasta As Double, ByVal idCategoria As Integer, ByVal idTipoEval As Integer)
            Me.modificarPrCatClasificacionPagaduriasAsync(categoria, desde, hasta, idCategoria, idTipoEval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarPrCatClasificacionPagaduriasAsync(ByVal categoria As String, ByVal desde As Double, ByVal hasta As Double, ByVal idCategoria As Integer, ByVal idTipoEval As Integer, ByVal userState As Object)
            If (Me.modificarPrCatClasificacionPagaduriasOperationCompleted Is Nothing) Then
                Me.modificarPrCatClasificacionPagaduriasOperationCompleted = AddressOf Me.OnmodificarPrCatClasificacionPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("modificarPrCatClasificacionPagadurias", New Object() {categoria, desde, hasta, idCategoria, idTipoEval}, Me.modificarPrCatClasificacionPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarPrCatClasificacionPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarPrCatClasificacionPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarPrCatClasificacionPagaduriasCompleted(Me, New modificarPrCatClasificacionPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/insertarPrCatClasificacionPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarPrCatClasificacionPagadurias(ByVal categoria As String, ByVal desde As Double, ByVal hasta As Double, ByVal idTipoEval As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarPrCatClasificacionPagadurias", New Object() {categoria, desde, hasta, idTipoEval})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarPrCatClasificacionPagadurias(ByVal categoria As String, ByVal desde As Double, ByVal hasta As Double, ByVal idTipoEval As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarPrCatClasificacionPagadurias", New Object() {categoria, desde, hasta, idTipoEval}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarPrCatClasificacionPagadurias(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarPrCatClasificacionPagaduriasAsync(ByVal categoria As String, ByVal desde As Double, ByVal hasta As Double, ByVal idTipoEval As Integer)
            Me.insertarPrCatClasificacionPagaduriasAsync(categoria, desde, hasta, idTipoEval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarPrCatClasificacionPagaduriasAsync(ByVal categoria As String, ByVal desde As Double, ByVal hasta As Double, ByVal idTipoEval As Integer, ByVal userState As Object)
            If (Me.insertarPrCatClasificacionPagaduriasOperationCompleted Is Nothing) Then
                Me.insertarPrCatClasificacionPagaduriasOperationCompleted = AddressOf Me.OninsertarPrCatClasificacionPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("insertarPrCatClasificacionPagadurias", New Object() {categoria, desde, hasta, idTipoEval}, Me.insertarPrCatClasificacionPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarPrCatClasificacionPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarPrCatClasificacionPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarPrCatClasificacionPagaduriasCompleted(Me, New insertarPrCatClasificacionPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/consultarPrCriteriosEvaluacionPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPrCriteriosEvaluacionPagadurias(ByVal opcion As Integer, ByVal codCriterio As Integer, ByVal idTipoEvaluacion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarPrCriteriosEvaluacionPagadurias", New Object() {opcion, codCriterio, idTipoEvaluacion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPrCriteriosEvaluacionPagadurias(ByVal opcion As Integer, ByVal codCriterio As Integer, ByVal idTipoEvaluacion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPrCriteriosEvaluacionPagadurias", New Object() {opcion, codCriterio, idTipoEvaluacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPrCriteriosEvaluacionPagadurias(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPrCriteriosEvaluacionPagaduriasAsync(ByVal opcion As Integer, ByVal codCriterio As Integer, ByVal idTipoEvaluacion As Integer)
            Me.consultarPrCriteriosEvaluacionPagaduriasAsync(opcion, codCriterio, idTipoEvaluacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPrCriteriosEvaluacionPagaduriasAsync(ByVal opcion As Integer, ByVal codCriterio As Integer, ByVal idTipoEvaluacion As Integer, ByVal userState As Object)
            If (Me.consultarPrCriteriosEvaluacionPagaduriasOperationCompleted Is Nothing) Then
                Me.consultarPrCriteriosEvaluacionPagaduriasOperationCompleted = AddressOf Me.OnconsultarPrCriteriosEvaluacionPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("consultarPrCriteriosEvaluacionPagadurias", New Object() {opcion, codCriterio, idTipoEvaluacion}, Me.consultarPrCriteriosEvaluacionPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPrCriteriosEvaluacionPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPrCriteriosEvaluacionPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPrCriteriosEvaluacionPagaduriasCompleted(Me, New consultarPrCriteriosEvaluacionPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/modificarPrCriteriosEvaluacionPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function modificarPrCriteriosEvaluacionPagadurias(ByVal descripcion As String, ByVal porcentaje As Double, ByVal activo As Boolean, ByVal codCriterio As Integer, ByVal opcion As Integer, ByVal idTipoEval As Integer) As Integer
            Dim results() As Object = Me.Invoke("modificarPrCriteriosEvaluacionPagadurias", New Object() {descripcion, porcentaje, activo, codCriterio, opcion, idTipoEval})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginmodificarPrCriteriosEvaluacionPagadurias(ByVal descripcion As String, ByVal porcentaje As Double, ByVal activo As Boolean, ByVal codCriterio As Integer, ByVal opcion As Integer, ByVal idTipoEval As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("modificarPrCriteriosEvaluacionPagadurias", New Object() {descripcion, porcentaje, activo, codCriterio, opcion, idTipoEval}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndmodificarPrCriteriosEvaluacionPagadurias(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub modificarPrCriteriosEvaluacionPagaduriasAsync(ByVal descripcion As String, ByVal porcentaje As Double, ByVal activo As Boolean, ByVal codCriterio As Integer, ByVal opcion As Integer, ByVal idTipoEval As Integer)
            Me.modificarPrCriteriosEvaluacionPagaduriasAsync(descripcion, porcentaje, activo, codCriterio, opcion, idTipoEval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub modificarPrCriteriosEvaluacionPagaduriasAsync(ByVal descripcion As String, ByVal porcentaje As Double, ByVal activo As Boolean, ByVal codCriterio As Integer, ByVal opcion As Integer, ByVal idTipoEval As Integer, ByVal userState As Object)
            If (Me.modificarPrCriteriosEvaluacionPagaduriasOperationCompleted Is Nothing) Then
                Me.modificarPrCriteriosEvaluacionPagaduriasOperationCompleted = AddressOf Me.OnmodificarPrCriteriosEvaluacionPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("modificarPrCriteriosEvaluacionPagadurias", New Object() {descripcion, porcentaje, activo, codCriterio, opcion, idTipoEval}, Me.modificarPrCriteriosEvaluacionPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OnmodificarPrCriteriosEvaluacionPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.modificarPrCriteriosEvaluacionPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent modificarPrCriteriosEvaluacionPagaduriasCompleted(Me, New modificarPrCriteriosEvaluacionPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/insertarPrCriteriosEvaluacionPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarPrCriteriosEvaluacionPagadurias(ByVal descripcion As String, ByVal porcentaje As Double, ByVal activo As Boolean, ByVal idTipoEval As Integer) As Integer
            Dim results() As Object = Me.Invoke("insertarPrCriteriosEvaluacionPagadurias", New Object() {descripcion, porcentaje, activo, idTipoEval})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarPrCriteriosEvaluacionPagadurias(ByVal descripcion As String, ByVal porcentaje As Double, ByVal activo As Boolean, ByVal idTipoEval As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarPrCriteriosEvaluacionPagadurias", New Object() {descripcion, porcentaje, activo, idTipoEval}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarPrCriteriosEvaluacionPagadurias(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarPrCriteriosEvaluacionPagaduriasAsync(ByVal descripcion As String, ByVal porcentaje As Double, ByVal activo As Boolean, ByVal idTipoEval As Integer)
            Me.insertarPrCriteriosEvaluacionPagaduriasAsync(descripcion, porcentaje, activo, idTipoEval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarPrCriteriosEvaluacionPagaduriasAsync(ByVal descripcion As String, ByVal porcentaje As Double, ByVal activo As Boolean, ByVal idTipoEval As Integer, ByVal userState As Object)
            If (Me.insertarPrCriteriosEvaluacionPagaduriasOperationCompleted Is Nothing) Then
                Me.insertarPrCriteriosEvaluacionPagaduriasOperationCompleted = AddressOf Me.OninsertarPrCriteriosEvaluacionPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("insertarPrCriteriosEvaluacionPagadurias", New Object() {descripcion, porcentaje, activo, idTipoEval}, Me.insertarPrCriteriosEvaluacionPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarPrCriteriosEvaluacionPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarPrCriteriosEvaluacionPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarPrCriteriosEvaluacionPagaduriasCompleted(Me, New insertarPrCriteriosEvaluacionPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/insertarPrPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function insertarPrPagadurias(ByVal nombre As String, ByVal direccion As String, ByVal telefono As String, ByVal giroEmpresa As Integer, ByVal tipoEmpresa As Integer, ByVal experiencia As Boolean, ByVal firmaSello As Boolean, ByVal fechaFundacion As Date, ByVal capitalSocial As Double, ByVal registroEmpresa As String, ByVal nit As String, ByVal sitioWeb As String, ByVal fechaActu As Date, ByVal usuarioActu As String) As Integer
            Dim results() As Object = Me.Invoke("insertarPrPagadurias", New Object() {nombre, direccion, telefono, giroEmpresa, tipoEmpresa, experiencia, firmaSello, fechaFundacion, capitalSocial, registroEmpresa, nit, sitioWeb, fechaActu, usuarioActu})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegininsertarPrPagadurias( _
                    ByVal nombre As String,  _
                    ByVal direccion As String,  _
                    ByVal telefono As String,  _
                    ByVal giroEmpresa As Integer,  _
                    ByVal tipoEmpresa As Integer,  _
                    ByVal experiencia As Boolean,  _
                    ByVal firmaSello As Boolean,  _
                    ByVal fechaFundacion As Date,  _
                    ByVal capitalSocial As Double,  _
                    ByVal registroEmpresa As String,  _
                    ByVal nit As String,  _
                    ByVal sitioWeb As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal usuarioActu As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("insertarPrPagadurias", New Object() {nombre, direccion, telefono, giroEmpresa, tipoEmpresa, experiencia, firmaSello, fechaFundacion, capitalSocial, registroEmpresa, nit, sitioWeb, fechaActu, usuarioActu}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndinsertarPrPagadurias(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub insertarPrPagaduriasAsync(ByVal nombre As String, ByVal direccion As String, ByVal telefono As String, ByVal giroEmpresa As Integer, ByVal tipoEmpresa As Integer, ByVal experiencia As Boolean, ByVal firmaSello As Boolean, ByVal fechaFundacion As Date, ByVal capitalSocial As Double, ByVal registroEmpresa As String, ByVal nit As String, ByVal sitioWeb As String, ByVal fechaActu As Date, ByVal usuarioActu As String)
            Me.insertarPrPagaduriasAsync(nombre, direccion, telefono, giroEmpresa, tipoEmpresa, experiencia, firmaSello, fechaFundacion, capitalSocial, registroEmpresa, nit, sitioWeb, fechaActu, usuarioActu, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub insertarPrPagaduriasAsync(ByVal nombre As String, ByVal direccion As String, ByVal telefono As String, ByVal giroEmpresa As Integer, ByVal tipoEmpresa As Integer, ByVal experiencia As Boolean, ByVal firmaSello As Boolean, ByVal fechaFundacion As Date, ByVal capitalSocial As Double, ByVal registroEmpresa As String, ByVal nit As String, ByVal sitioWeb As String, ByVal fechaActu As Date, ByVal usuarioActu As String, ByVal userState As Object)
            If (Me.insertarPrPagaduriasOperationCompleted Is Nothing) Then
                Me.insertarPrPagaduriasOperationCompleted = AddressOf Me.OninsertarPrPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("insertarPrPagadurias", New Object() {nombre, direccion, telefono, giroEmpresa, tipoEmpresa, experiencia, firmaSello, fechaFundacion, capitalSocial, registroEmpresa, nit, sitioWeb, fechaActu, usuarioActu}, Me.insertarPrPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OninsertarPrPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.insertarPrPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent insertarPrPagaduriasCompleted(Me, New insertarPrPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ModificarPrPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPrPagadurias(ByVal codPagaduria As String, ByVal nombre As String, ByVal direccion As String, ByVal telefono As String, ByVal giroEmpresa As Integer, ByVal tipoEmpresa As Integer, ByVal experiencia As Boolean, ByVal firmaSello As Boolean, ByVal fechaFundacion As Date, ByVal capitalSocial As Double, ByVal registroEmpresa As String, ByVal nit As String, ByVal sitioWeb As String, ByVal fechaActu As Date, ByVal usuarioActu As String) As Integer
            Dim results() As Object = Me.Invoke("ModificarPrPagadurias", New Object() {codPagaduria, nombre, direccion, telefono, giroEmpresa, tipoEmpresa, experiencia, firmaSello, fechaFundacion, capitalSocial, registroEmpresa, nit, sitioWeb, fechaActu, usuarioActu})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPrPagadurias( _
                    ByVal codPagaduria As String,  _
                    ByVal nombre As String,  _
                    ByVal direccion As String,  _
                    ByVal telefono As String,  _
                    ByVal giroEmpresa As Integer,  _
                    ByVal tipoEmpresa As Integer,  _
                    ByVal experiencia As Boolean,  _
                    ByVal firmaSello As Boolean,  _
                    ByVal fechaFundacion As Date,  _
                    ByVal capitalSocial As Double,  _
                    ByVal registroEmpresa As String,  _
                    ByVal nit As String,  _
                    ByVal sitioWeb As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal usuarioActu As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPrPagadurias", New Object() {codPagaduria, nombre, direccion, telefono, giroEmpresa, tipoEmpresa, experiencia, firmaSello, fechaFundacion, capitalSocial, registroEmpresa, nit, sitioWeb, fechaActu, usuarioActu}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPrPagadurias(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModificarPrPagaduriasAsync(ByVal codPagaduria As String, ByVal nombre As String, ByVal direccion As String, ByVal telefono As String, ByVal giroEmpresa As Integer, ByVal tipoEmpresa As Integer, ByVal experiencia As Boolean, ByVal firmaSello As Boolean, ByVal fechaFundacion As Date, ByVal capitalSocial As Double, ByVal registroEmpresa As String, ByVal nit As String, ByVal sitioWeb As String, ByVal fechaActu As Date, ByVal usuarioActu As String)
            Me.ModificarPrPagaduriasAsync(codPagaduria, nombre, direccion, telefono, giroEmpresa, tipoEmpresa, experiencia, firmaSello, fechaFundacion, capitalSocial, registroEmpresa, nit, sitioWeb, fechaActu, usuarioActu, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModificarPrPagaduriasAsync( _
                    ByVal codPagaduria As String,  _
                    ByVal nombre As String,  _
                    ByVal direccion As String,  _
                    ByVal telefono As String,  _
                    ByVal giroEmpresa As Integer,  _
                    ByVal tipoEmpresa As Integer,  _
                    ByVal experiencia As Boolean,  _
                    ByVal firmaSello As Boolean,  _
                    ByVal fechaFundacion As Date,  _
                    ByVal capitalSocial As Double,  _
                    ByVal registroEmpresa As String,  _
                    ByVal nit As String,  _
                    ByVal sitioWeb As String,  _
                    ByVal fechaActu As Date,  _
                    ByVal usuarioActu As String,  _
                    ByVal userState As Object)
            If (Me.ModificarPrPagaduriasOperationCompleted Is Nothing) Then
                Me.ModificarPrPagaduriasOperationCompleted = AddressOf Me.OnModificarPrPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("ModificarPrPagadurias", New Object() {codPagaduria, nombre, direccion, telefono, giroEmpresa, tipoEmpresa, experiencia, firmaSello, fechaFundacion, capitalSocial, registroEmpresa, nit, sitioWeb, fechaActu, usuarioActu}, Me.ModificarPrPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificarPrPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarPrPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarPrPagaduriasCompleted(Me, New ModificarPrPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/consultarPrPagadurias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function consultarPrPagadurias(ByVal codPagaduria As String, ByVal nombre As String, ByVal opcion As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("consultarPrPagadurias", New Object() {codPagaduria, nombre, opcion})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginconsultarPrPagadurias(ByVal codPagaduria As String, ByVal nombre As String, ByVal opcion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("consultarPrPagadurias", New Object() {codPagaduria, nombre, opcion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndconsultarPrPagadurias(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub consultarPrPagaduriasAsync(ByVal codPagaduria As String, ByVal nombre As String, ByVal opcion As Integer)
            Me.consultarPrPagaduriasAsync(codPagaduria, nombre, opcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub consultarPrPagaduriasAsync(ByVal codPagaduria As String, ByVal nombre As String, ByVal opcion As Integer, ByVal userState As Object)
            If (Me.consultarPrPagaduriasOperationCompleted Is Nothing) Then
                Me.consultarPrPagaduriasOperationCompleted = AddressOf Me.OnconsultarPrPagaduriasOperationCompleted
            End If
            Me.InvokeAsync("consultarPrPagadurias", New Object() {codPagaduria, nombre, opcion}, Me.consultarPrPagaduriasOperationCompleted, userState)
        End Sub
        
        Private Sub OnconsultarPrPagaduriasOperationCompleted(ByVal arg As Object)
            If (Not (Me.consultarPrPagaduriasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent consultarPrPagaduriasCompleted(Me, New consultarPrPagaduriasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/validarNumeroSolicitudes", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function validarNumeroSolicitudes(ByVal dui As String, ByVal fecha As Date) As Boolean
            Dim results() As Object = Me.Invoke("validarNumeroSolicitudes", New Object() {dui, fecha})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginvalidarNumeroSolicitudes(ByVal dui As String, ByVal fecha As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("validarNumeroSolicitudes", New Object() {dui, fecha}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndvalidarNumeroSolicitudes(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub validarNumeroSolicitudesAsync(ByVal dui As String, ByVal fecha As Date)
            Me.validarNumeroSolicitudesAsync(dui, fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub validarNumeroSolicitudesAsync(ByVal dui As String, ByVal fecha As Date, ByVal userState As Object)
            If (Me.validarNumeroSolicitudesOperationCompleted Is Nothing) Then
                Me.validarNumeroSolicitudesOperationCompleted = AddressOf Me.OnvalidarNumeroSolicitudesOperationCompleted
            End If
            Me.InvokeAsync("validarNumeroSolicitudes", New Object() {dui, fecha}, Me.validarNumeroSolicitudesOperationCompleted, userState)
        End Sub
        
        Private Sub OnvalidarNumeroSolicitudesOperationCompleted(ByVal arg As Object)
            If (Not (Me.validarNumeroSolicitudesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent validarNumeroSolicitudesCompleted(Me, New validarNumeroSolicitudesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarDatosAsociado", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDatosAsociado(ByVal dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDatosAsociado", New Object() {dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDatosAsociado(ByVal dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDatosAsociado", New Object() {dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDatosAsociado(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosAsociadoAsync(ByVal dui As String)
            Me.ConsultarDatosAsociadoAsync(dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosAsociadoAsync(ByVal dui As String, ByVal userState As Object)
            If (Me.ConsultarDatosAsociadoOperationCompleted Is Nothing) Then
                Me.ConsultarDatosAsociadoOperationCompleted = AddressOf Me.OnConsultarDatosAsociadoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDatosAsociado", New Object() {dui}, Me.ConsultarDatosAsociadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDatosAsociadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDatosAsociadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDatosAsociadoCompleted(Me, New ConsultarDatosAsociadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Consultar_Asoc_Tram_Judicial", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_Asoc_Tram_Judicial(ByVal Dui As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_Asoc_Tram_Judicial", New Object() {Dui})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_Asoc_Tram_Judicial(ByVal Dui As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_Asoc_Tram_Judicial", New Object() {Dui}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_Asoc_Tram_Judicial(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_Asoc_Tram_JudicialAsync(ByVal Dui As String)
            Me.Consultar_Asoc_Tram_JudicialAsync(Dui, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_Asoc_Tram_JudicialAsync(ByVal Dui As String, ByVal userState As Object)
            If (Me.Consultar_Asoc_Tram_JudicialOperationCompleted Is Nothing) Then
                Me.Consultar_Asoc_Tram_JudicialOperationCompleted = AddressOf Me.OnConsultar_Asoc_Tram_JudicialOperationCompleted
            End If
            Me.InvokeAsync("Consultar_Asoc_Tram_Judicial", New Object() {Dui}, Me.Consultar_Asoc_Tram_JudicialOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_Asoc_Tram_JudicialOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_Asoc_Tram_JudicialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_Asoc_Tram_JudicialCompleted(Me, New Consultar_Asoc_Tram_JudicialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Partida_Desembolso_Prestamo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Partida_Desembolso_Prestamo( _
                    ByVal IdMovimiento As String,  _
                    ByVal IdCtaBanco As String,  _
                    ByVal IdTipoMov As String,  _
                    ByVal Fecha_Mov As Date,  _
                    ByVal Concepto As String,  _
                    ByVal Cantidad As Double,  _
                    ByVal Ciudad As String,  _
                    ByVal Paguese As String,  _
                    ByVal Monto_Desembolso As Double,  _
                    ByVal CodTipoCredito As String,  _
                    ByVal NumSolicitud As Integer,  _
                    ByVal Usuario As String,  _
                    ByVal Cod_CBeneficio As String,  _
                    ByVal Cod_Ccosto As String,  _
                    ByVal IdSucursal As String,  _
                    ByVal Opcion As Integer,  _
                    ByVal Nocuenta As String,  _
                    ByVal CodTipoAhorro As String,  _
                    ByVal SaldoAnterior As Double,  _
                    ByVal CtaContable As String,  _
                    ByVal NoLibreta As String,  _
                    ByVal SaldoDisponible As Double,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Estado As String) As Integer
            Dim results() As Object = Me.Invoke("Partida_Desembolso_Prestamo", New Object() {IdMovimiento, IdCtaBanco, IdTipoMov, Fecha_Mov, Concepto, Cantidad, Ciudad, Paguese, Monto_Desembolso, CodTipoCredito, NumSolicitud, Usuario, Cod_CBeneficio, Cod_Ccosto, IdSucursal, Opcion, Nocuenta, CodTipoAhorro, SaldoAnterior, CtaContable, NoLibreta, SaldoDisponible, TasaInteres, Estado})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginPartida_Desembolso_Prestamo( _
                    ByVal IdMovimiento As String,  _
                    ByVal IdCtaBanco As String,  _
                    ByVal IdTipoMov As String,  _
                    ByVal Fecha_Mov As Date,  _
                    ByVal Concepto As String,  _
                    ByVal Cantidad As Double,  _
                    ByVal Ciudad As String,  _
                    ByVal Paguese As String,  _
                    ByVal Monto_Desembolso As Double,  _
                    ByVal CodTipoCredito As String,  _
                    ByVal NumSolicitud As Integer,  _
                    ByVal Usuario As String,  _
                    ByVal Cod_CBeneficio As String,  _
                    ByVal Cod_Ccosto As String,  _
                    ByVal IdSucursal As String,  _
                    ByVal Opcion As Integer,  _
                    ByVal Nocuenta As String,  _
                    ByVal CodTipoAhorro As String,  _
                    ByVal SaldoAnterior As Double,  _
                    ByVal CtaContable As String,  _
                    ByVal NoLibreta As String,  _
                    ByVal SaldoDisponible As Double,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Estado As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Partida_Desembolso_Prestamo", New Object() {IdMovimiento, IdCtaBanco, IdTipoMov, Fecha_Mov, Concepto, Cantidad, Ciudad, Paguese, Monto_Desembolso, CodTipoCredito, NumSolicitud, Usuario, Cod_CBeneficio, Cod_Ccosto, IdSucursal, Opcion, Nocuenta, CodTipoAhorro, SaldoAnterior, CtaContable, NoLibreta, SaldoDisponible, TasaInteres, Estado}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndPartida_Desembolso_Prestamo(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Partida_Desembolso_PrestamoAsync( _
                    ByVal IdMovimiento As String,  _
                    ByVal IdCtaBanco As String,  _
                    ByVal IdTipoMov As String,  _
                    ByVal Fecha_Mov As Date,  _
                    ByVal Concepto As String,  _
                    ByVal Cantidad As Double,  _
                    ByVal Ciudad As String,  _
                    ByVal Paguese As String,  _
                    ByVal Monto_Desembolso As Double,  _
                    ByVal CodTipoCredito As String,  _
                    ByVal NumSolicitud As Integer,  _
                    ByVal Usuario As String,  _
                    ByVal Cod_CBeneficio As String,  _
                    ByVal Cod_Ccosto As String,  _
                    ByVal IdSucursal As String,  _
                    ByVal Opcion As Integer,  _
                    ByVal Nocuenta As String,  _
                    ByVal CodTipoAhorro As String,  _
                    ByVal SaldoAnterior As Double,  _
                    ByVal CtaContable As String,  _
                    ByVal NoLibreta As String,  _
                    ByVal SaldoDisponible As Double,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Estado As String)
            Me.Partida_Desembolso_PrestamoAsync(IdMovimiento, IdCtaBanco, IdTipoMov, Fecha_Mov, Concepto, Cantidad, Ciudad, Paguese, Monto_Desembolso, CodTipoCredito, NumSolicitud, Usuario, Cod_CBeneficio, Cod_Ccosto, IdSucursal, Opcion, Nocuenta, CodTipoAhorro, SaldoAnterior, CtaContable, NoLibreta, SaldoDisponible, TasaInteres, Estado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Partida_Desembolso_PrestamoAsync( _
                    ByVal IdMovimiento As String,  _
                    ByVal IdCtaBanco As String,  _
                    ByVal IdTipoMov As String,  _
                    ByVal Fecha_Mov As Date,  _
                    ByVal Concepto As String,  _
                    ByVal Cantidad As Double,  _
                    ByVal Ciudad As String,  _
                    ByVal Paguese As String,  _
                    ByVal Monto_Desembolso As Double,  _
                    ByVal CodTipoCredito As String,  _
                    ByVal NumSolicitud As Integer,  _
                    ByVal Usuario As String,  _
                    ByVal Cod_CBeneficio As String,  _
                    ByVal Cod_Ccosto As String,  _
                    ByVal IdSucursal As String,  _
                    ByVal Opcion As Integer,  _
                    ByVal Nocuenta As String,  _
                    ByVal CodTipoAhorro As String,  _
                    ByVal SaldoAnterior As Double,  _
                    ByVal CtaContable As String,  _
                    ByVal NoLibreta As String,  _
                    ByVal SaldoDisponible As Double,  _
                    ByVal TasaInteres As Double,  _
                    ByVal Estado As String,  _
                    ByVal userState As Object)
            If (Me.Partida_Desembolso_PrestamoOperationCompleted Is Nothing) Then
                Me.Partida_Desembolso_PrestamoOperationCompleted = AddressOf Me.OnPartida_Desembolso_PrestamoOperationCompleted
            End If
            Me.InvokeAsync("Partida_Desembolso_Prestamo", New Object() {IdMovimiento, IdCtaBanco, IdTipoMov, Fecha_Mov, Concepto, Cantidad, Ciudad, Paguese, Monto_Desembolso, CodTipoCredito, NumSolicitud, Usuario, Cod_CBeneficio, Cod_Ccosto, IdSucursal, Opcion, Nocuenta, CodTipoAhorro, SaldoAnterior, CtaContable, NoLibreta, SaldoDisponible, TasaInteres, Estado}, Me.Partida_Desembolso_PrestamoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPartida_Desembolso_PrestamoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Partida_Desembolso_PrestamoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Partida_Desembolso_PrestamoCompleted(Me, New Partida_Desembolso_PrestamoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Consultar_PrDeducciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PrDeducciones(ByVal Opcion As Integer, ByVal CodtipoCredito As String, ByVal CodDeduccion As Integer, ByVal Tipo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PrDeducciones", New Object() {Opcion, CodtipoCredito, CodDeduccion, Tipo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PrDeducciones(ByVal Opcion As Integer, ByVal CodtipoCredito As String, ByVal CodDeduccion As Integer, ByVal Tipo As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PrDeducciones", New Object() {Opcion, CodtipoCredito, CodDeduccion, Tipo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PrDeducciones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PrDeduccionesAsync(ByVal Opcion As Integer, ByVal CodtipoCredito As String, ByVal CodDeduccion As Integer, ByVal Tipo As String)
            Me.Consultar_PrDeduccionesAsync(Opcion, CodtipoCredito, CodDeduccion, Tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PrDeduccionesAsync(ByVal Opcion As Integer, ByVal CodtipoCredito As String, ByVal CodDeduccion As Integer, ByVal Tipo As String, ByVal userState As Object)
            If (Me.Consultar_PrDeduccionesOperationCompleted Is Nothing) Then
                Me.Consultar_PrDeduccionesOperationCompleted = AddressOf Me.OnConsultar_PrDeduccionesOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PrDeducciones", New Object() {Opcion, CodtipoCredito, CodDeduccion, Tipo}, Me.Consultar_PrDeduccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PrDeduccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PrDeduccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PrDeduccionesCompleted(Me, New Consultar_PrDeduccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Eliminar_PrDeducciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_PrDeducciones(ByVal CodDeduccion As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_PrDeducciones", New Object() {CodDeduccion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_PrDeducciones(ByVal CodDeduccion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_PrDeducciones", New Object() {CodDeduccion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_PrDeducciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PrDeduccionesAsync(ByVal CodDeduccion As Integer)
            Me.Eliminar_PrDeduccionesAsync(CodDeduccion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PrDeduccionesAsync(ByVal CodDeduccion As Integer, ByVal userState As Object)
            If (Me.Eliminar_PrDeduccionesOperationCompleted Is Nothing) Then
                Me.Eliminar_PrDeduccionesOperationCompleted = AddressOf Me.OnEliminar_PrDeduccionesOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_PrDeducciones", New Object() {CodDeduccion}, Me.Eliminar_PrDeduccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_PrDeduccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_PrDeduccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_PrDeduccionesCompleted(Me, New Eliminar_PrDeduccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Modificar_PrDeducciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Modificar_PrDeducciones(ByVal CodDeduccion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal CodtipoCredito As String, ByVal Tipo As String, ByVal Monto As Double, ByVal MontoMax As Double, ByVal Tarifa As Double, ByVal Iva As Double, ByVal AplicaPorcentaje As String, ByVal TipoDeduccion As String, ByVal CodRango As Integer, ByVal AplicaFactura As String, ByVal CodItem As String) As Integer
            Dim results() As Object = Me.Invoke("Modificar_PrDeducciones", New Object() {CodDeduccion, Id_CatGastos_Tramitacion, CodtipoCredito, Tipo, Monto, MontoMax, Tarifa, Iva, AplicaPorcentaje, TipoDeduccion, CodRango, AplicaFactura, CodItem})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificar_PrDeducciones(ByVal CodDeduccion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal CodtipoCredito As String, ByVal Tipo As String, ByVal Monto As Double, ByVal MontoMax As Double, ByVal Tarifa As Double, ByVal Iva As Double, ByVal AplicaPorcentaje As String, ByVal TipoDeduccion As String, ByVal CodRango As Integer, ByVal AplicaFactura As String, ByVal CodItem As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Modificar_PrDeducciones", New Object() {CodDeduccion, Id_CatGastos_Tramitacion, CodtipoCredito, Tipo, Monto, MontoMax, Tarifa, Iva, AplicaPorcentaje, TipoDeduccion, CodRango, AplicaFactura, CodItem}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificar_PrDeducciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Modificar_PrDeduccionesAsync(ByVal CodDeduccion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal CodtipoCredito As String, ByVal Tipo As String, ByVal Monto As Double, ByVal MontoMax As Double, ByVal Tarifa As Double, ByVal Iva As Double, ByVal AplicaPorcentaje As String, ByVal TipoDeduccion As String, ByVal CodRango As Integer, ByVal AplicaFactura As String, ByVal CodItem As String)
            Me.Modificar_PrDeduccionesAsync(CodDeduccion, Id_CatGastos_Tramitacion, CodtipoCredito, Tipo, Monto, MontoMax, Tarifa, Iva, AplicaPorcentaje, TipoDeduccion, CodRango, AplicaFactura, CodItem, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Modificar_PrDeduccionesAsync(ByVal CodDeduccion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal CodtipoCredito As String, ByVal Tipo As String, ByVal Monto As Double, ByVal MontoMax As Double, ByVal Tarifa As Double, ByVal Iva As Double, ByVal AplicaPorcentaje As String, ByVal TipoDeduccion As String, ByVal CodRango As Integer, ByVal AplicaFactura As String, ByVal CodItem As String, ByVal userState As Object)
            If (Me.Modificar_PrDeduccionesOperationCompleted Is Nothing) Then
                Me.Modificar_PrDeduccionesOperationCompleted = AddressOf Me.OnModificar_PrDeduccionesOperationCompleted
            End If
            Me.InvokeAsync("Modificar_PrDeducciones", New Object() {CodDeduccion, Id_CatGastos_Tramitacion, CodtipoCredito, Tipo, Monto, MontoMax, Tarifa, Iva, AplicaPorcentaje, TipoDeduccion, CodRango, AplicaFactura, CodItem}, Me.Modificar_PrDeduccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificar_PrDeduccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Modificar_PrDeduccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Modificar_PrDeduccionesCompleted(Me, New Modificar_PrDeduccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Ingresar_PrDeducciones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ingresar_PrDeducciones(ByVal CodDeduccion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal CodtipoCredito As String, ByVal Tipo As String, ByVal Monto As Double, ByVal MontoMax As Double, ByVal Tarifa As Double, ByVal Iva As Double, ByVal AplicaPorcentaje As String, ByVal TipoDeduccion As String, ByVal CodRango As Integer, ByVal AplicaFactura As String, ByVal CodItem As String) As Integer
            Dim results() As Object = Me.Invoke("Ingresar_PrDeducciones", New Object() {CodDeduccion, Id_CatGastos_Tramitacion, CodtipoCredito, Tipo, Monto, MontoMax, Tarifa, Iva, AplicaPorcentaje, TipoDeduccion, CodRango, AplicaFactura, CodItem})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginIngresar_PrDeducciones(ByVal CodDeduccion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal CodtipoCredito As String, ByVal Tipo As String, ByVal Monto As Double, ByVal MontoMax As Double, ByVal Tarifa As Double, ByVal Iva As Double, ByVal AplicaPorcentaje As String, ByVal TipoDeduccion As String, ByVal CodRango As Integer, ByVal AplicaFactura As String, ByVal CodItem As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Ingresar_PrDeducciones", New Object() {CodDeduccion, Id_CatGastos_Tramitacion, CodtipoCredito, Tipo, Monto, MontoMax, Tarifa, Iva, AplicaPorcentaje, TipoDeduccion, CodRango, AplicaFactura, CodItem}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndIngresar_PrDeducciones(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Ingresar_PrDeduccionesAsync(ByVal CodDeduccion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal CodtipoCredito As String, ByVal Tipo As String, ByVal Monto As Double, ByVal MontoMax As Double, ByVal Tarifa As Double, ByVal Iva As Double, ByVal AplicaPorcentaje As String, ByVal TipoDeduccion As String, ByVal CodRango As Integer, ByVal AplicaFactura As String, ByVal CodItem As String)
            Me.Ingresar_PrDeduccionesAsync(CodDeduccion, Id_CatGastos_Tramitacion, CodtipoCredito, Tipo, Monto, MontoMax, Tarifa, Iva, AplicaPorcentaje, TipoDeduccion, CodRango, AplicaFactura, CodItem, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Ingresar_PrDeduccionesAsync(ByVal CodDeduccion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal CodtipoCredito As String, ByVal Tipo As String, ByVal Monto As Double, ByVal MontoMax As Double, ByVal Tarifa As Double, ByVal Iva As Double, ByVal AplicaPorcentaje As String, ByVal TipoDeduccion As String, ByVal CodRango As Integer, ByVal AplicaFactura As String, ByVal CodItem As String, ByVal userState As Object)
            If (Me.Ingresar_PrDeduccionesOperationCompleted Is Nothing) Then
                Me.Ingresar_PrDeduccionesOperationCompleted = AddressOf Me.OnIngresar_PrDeduccionesOperationCompleted
            End If
            Me.InvokeAsync("Ingresar_PrDeducciones", New Object() {CodDeduccion, Id_CatGastos_Tramitacion, CodtipoCredito, Tipo, Monto, MontoMax, Tarifa, Iva, AplicaPorcentaje, TipoDeduccion, CodRango, AplicaFactura, CodItem}, Me.Ingresar_PrDeduccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnIngresar_PrDeduccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ingresar_PrDeduccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ingresar_PrDeduccionesCompleted(Me, New Ingresar_PrDeduccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Ingresar_PrCatGastosTramitacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ingresar_PrCatGastosTramitacion(ByVal Descripcion As String, ByVal Idcuenta As String, ByVal valMontoMin As Boolean, ByVal montoMin As Double, ByVal valMontoMax As Boolean, ByVal montoMax As Double) As Integer
            Dim results() As Object = Me.Invoke("Ingresar_PrCatGastosTramitacion", New Object() {Descripcion, Idcuenta, valMontoMin, montoMin, valMontoMax, montoMax})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginIngresar_PrCatGastosTramitacion(ByVal Descripcion As String, ByVal Idcuenta As String, ByVal valMontoMin As Boolean, ByVal montoMin As Double, ByVal valMontoMax As Boolean, ByVal montoMax As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Ingresar_PrCatGastosTramitacion", New Object() {Descripcion, Idcuenta, valMontoMin, montoMin, valMontoMax, montoMax}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndIngresar_PrCatGastosTramitacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Ingresar_PrCatGastosTramitacionAsync(ByVal Descripcion As String, ByVal Idcuenta As String, ByVal valMontoMin As Boolean, ByVal montoMin As Double, ByVal valMontoMax As Boolean, ByVal montoMax As Double)
            Me.Ingresar_PrCatGastosTramitacionAsync(Descripcion, Idcuenta, valMontoMin, montoMin, valMontoMax, montoMax, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Ingresar_PrCatGastosTramitacionAsync(ByVal Descripcion As String, ByVal Idcuenta As String, ByVal valMontoMin As Boolean, ByVal montoMin As Double, ByVal valMontoMax As Boolean, ByVal montoMax As Double, ByVal userState As Object)
            If (Me.Ingresar_PrCatGastosTramitacionOperationCompleted Is Nothing) Then
                Me.Ingresar_PrCatGastosTramitacionOperationCompleted = AddressOf Me.OnIngresar_PrCatGastosTramitacionOperationCompleted
            End If
            Me.InvokeAsync("Ingresar_PrCatGastosTramitacion", New Object() {Descripcion, Idcuenta, valMontoMin, montoMin, valMontoMax, montoMax}, Me.Ingresar_PrCatGastosTramitacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnIngresar_PrCatGastosTramitacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ingresar_PrCatGastosTramitacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ingresar_PrCatGastosTramitacionCompleted(Me, New Ingresar_PrCatGastosTramitacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Modificar_PrCatGastosTramitacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Modificar_PrCatGastosTramitacion(ByVal Descripcion As String, ByVal Idcuenta As String, ByVal id_CatGastos_Tramitacion As Integer, ByVal valMontoMin As Boolean, ByVal montoMin As Double, ByVal valMontoMax As Boolean, ByVal montoMax As Double) As Integer
            Dim results() As Object = Me.Invoke("Modificar_PrCatGastosTramitacion", New Object() {Descripcion, Idcuenta, id_CatGastos_Tramitacion, valMontoMin, montoMin, valMontoMax, montoMax})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginModificar_PrCatGastosTramitacion(ByVal Descripcion As String, ByVal Idcuenta As String, ByVal id_CatGastos_Tramitacion As Integer, ByVal valMontoMin As Boolean, ByVal montoMin As Double, ByVal valMontoMax As Boolean, ByVal montoMax As Double, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Modificar_PrCatGastosTramitacion", New Object() {Descripcion, Idcuenta, id_CatGastos_Tramitacion, valMontoMin, montoMin, valMontoMax, montoMax}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificar_PrCatGastosTramitacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Modificar_PrCatGastosTramitacionAsync(ByVal Descripcion As String, ByVal Idcuenta As String, ByVal id_CatGastos_Tramitacion As Integer, ByVal valMontoMin As Boolean, ByVal montoMin As Double, ByVal valMontoMax As Boolean, ByVal montoMax As Double)
            Me.Modificar_PrCatGastosTramitacionAsync(Descripcion, Idcuenta, id_CatGastos_Tramitacion, valMontoMin, montoMin, valMontoMax, montoMax, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Modificar_PrCatGastosTramitacionAsync(ByVal Descripcion As String, ByVal Idcuenta As String, ByVal id_CatGastos_Tramitacion As Integer, ByVal valMontoMin As Boolean, ByVal montoMin As Double, ByVal valMontoMax As Boolean, ByVal montoMax As Double, ByVal userState As Object)
            If (Me.Modificar_PrCatGastosTramitacionOperationCompleted Is Nothing) Then
                Me.Modificar_PrCatGastosTramitacionOperationCompleted = AddressOf Me.OnModificar_PrCatGastosTramitacionOperationCompleted
            End If
            Me.InvokeAsync("Modificar_PrCatGastosTramitacion", New Object() {Descripcion, Idcuenta, id_CatGastos_Tramitacion, valMontoMin, montoMin, valMontoMax, montoMax}, Me.Modificar_PrCatGastosTramitacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnModificar_PrCatGastosTramitacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Modificar_PrCatGastosTramitacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Modificar_PrCatGastosTramitacionCompleted(Me, New Modificar_PrCatGastosTramitacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Consultar_PrCatGastosTramitacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar_PrCatGastosTramitacion(ByVal Opcion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal Id_Cuenta As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar_PrCatGastosTramitacion", New Object() {Opcion, Id_CatGastos_Tramitacion, Id_Cuenta})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultar_PrCatGastosTramitacion(ByVal Opcion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal Id_Cuenta As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Consultar_PrCatGastosTramitacion", New Object() {Opcion, Id_CatGastos_Tramitacion, Id_Cuenta}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultar_PrCatGastosTramitacion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Consultar_PrCatGastosTramitacionAsync(ByVal Opcion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal Id_Cuenta As String)
            Me.Consultar_PrCatGastosTramitacionAsync(Opcion, Id_CatGastos_Tramitacion, Id_Cuenta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Consultar_PrCatGastosTramitacionAsync(ByVal Opcion As Integer, ByVal Id_CatGastos_Tramitacion As Integer, ByVal Id_Cuenta As String, ByVal userState As Object)
            If (Me.Consultar_PrCatGastosTramitacionOperationCompleted Is Nothing) Then
                Me.Consultar_PrCatGastosTramitacionOperationCompleted = AddressOf Me.OnConsultar_PrCatGastosTramitacionOperationCompleted
            End If
            Me.InvokeAsync("Consultar_PrCatGastosTramitacion", New Object() {Opcion, Id_CatGastos_Tramitacion, Id_Cuenta}, Me.Consultar_PrCatGastosTramitacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultar_PrCatGastosTramitacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consultar_PrCatGastosTramitacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consultar_PrCatGastosTramitacionCompleted(Me, New Consultar_PrCatGastosTramitacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/Eliminar_PrCatGastosTramitacion", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Eliminar_PrCatGastosTramitacion(ByVal Id_CatGastos_Tramitacion As Integer) As Integer
            Dim results() As Object = Me.Invoke("Eliminar_PrCatGastosTramitacion", New Object() {Id_CatGastos_Tramitacion})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminar_PrCatGastosTramitacion(ByVal Id_CatGastos_Tramitacion As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Eliminar_PrCatGastosTramitacion", New Object() {Id_CatGastos_Tramitacion}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminar_PrCatGastosTramitacion(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PrCatGastosTramitacionAsync(ByVal Id_CatGastos_Tramitacion As Integer)
            Me.Eliminar_PrCatGastosTramitacionAsync(Id_CatGastos_Tramitacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Eliminar_PrCatGastosTramitacionAsync(ByVal Id_CatGastos_Tramitacion As Integer, ByVal userState As Object)
            If (Me.Eliminar_PrCatGastosTramitacionOperationCompleted Is Nothing) Then
                Me.Eliminar_PrCatGastosTramitacionOperationCompleted = AddressOf Me.OnEliminar_PrCatGastosTramitacionOperationCompleted
            End If
            Me.InvokeAsync("Eliminar_PrCatGastosTramitacion", New Object() {Id_CatGastos_Tramitacion}, Me.Eliminar_PrCatGastosTramitacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminar_PrCatGastosTramitacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.Eliminar_PrCatGastosTramitacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Eliminar_PrCatGastosTramitacionCompleted(Me, New Eliminar_PrCatGastosTramitacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RPT_TASAACTIVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_TASAACTIVA(ByVal FECHA As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_TASAACTIVA", New Object() {FECHA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_TASAACTIVA(ByVal FECHA As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_TASAACTIVA", New Object() {FECHA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_TASAACTIVA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_TASAACTIVAAsync(ByVal FECHA As Date)
            Me.RPT_TASAACTIVAAsync(FECHA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_TASAACTIVAAsync(ByVal FECHA As Date, ByVal userState As Object)
            If (Me.RPT_TASAACTIVAOperationCompleted Is Nothing) Then
                Me.RPT_TASAACTIVAOperationCompleted = AddressOf Me.OnRPT_TASAACTIVAOperationCompleted
            End If
            Me.InvokeAsync("RPT_TASAACTIVA", New Object() {FECHA}, Me.RPT_TASAACTIVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_TASAACTIVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_TASAACTIVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_TASAACTIVACompleted(Me, New RPT_TASAACTIVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RPT_MORA_X_LINEA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_MORA_X_LINEA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_MORA_X_LINEA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_MORA_X_LINEA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_MORA_X_LINEA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_MORA_X_LINEA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_MORA_X_LINEAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date)
            Me.RPT_MORA_X_LINEAAsync(PUSUARIO, PWD, PSUCURSAL, FECHA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_MORA_X_LINEAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal userState As Object)
            If (Me.RPT_MORA_X_LINEAOperationCompleted Is Nothing) Then
                Me.RPT_MORA_X_LINEAOperationCompleted = AddressOf Me.OnRPT_MORA_X_LINEAOperationCompleted
            End If
            Me.InvokeAsync("RPT_MORA_X_LINEA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, Me.RPT_MORA_X_LINEAOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_MORA_X_LINEAOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_MORA_X_LINEACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_MORA_X_LINEACompleted(Me, New RPT_MORA_X_LINEACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RPT_DOC_X_COBRAR", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_DOC_X_COBRAR(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_DOC_X_COBRAR", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_DOC_X_COBRAR(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_DOC_X_COBRAR", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_DOC_X_COBRAR(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_DOC_X_COBRARAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date)
            Me.RPT_DOC_X_COBRARAsync(PUSUARIO, PWD, PSUCURSAL, FECHA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_DOC_X_COBRARAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal userState As Object)
            If (Me.RPT_DOC_X_COBRAROperationCompleted Is Nothing) Then
                Me.RPT_DOC_X_COBRAROperationCompleted = AddressOf Me.OnRPT_DOC_X_COBRAROperationCompleted
            End If
            Me.InvokeAsync("RPT_DOC_X_COBRAR", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, Me.RPT_DOC_X_COBRAROperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_DOC_X_COBRAROperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_DOC_X_COBRARCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_DOC_X_COBRARCompleted(Me, New RPT_DOC_X_COBRARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RPT_DOC_PROTESTO_RESERVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_DOC_PROTESTO_RESERVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_DOC_PROTESTO_RESERVA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_DOC_PROTESTO_RESERVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_DOC_PROTESTO_RESERVA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_DOC_PROTESTO_RESERVA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_DOC_PROTESTO_RESERVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date)
            Me.RPT_DOC_PROTESTO_RESERVAAsync(PUSUARIO, PWD, PSUCURSAL, FECHA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_DOC_PROTESTO_RESERVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA As Date, ByVal userState As Object)
            If (Me.RPT_DOC_PROTESTO_RESERVAOperationCompleted Is Nothing) Then
                Me.RPT_DOC_PROTESTO_RESERVAOperationCompleted = AddressOf Me.OnRPT_DOC_PROTESTO_RESERVAOperationCompleted
            End If
            Me.InvokeAsync("RPT_DOC_PROTESTO_RESERVA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA}, Me.RPT_DOC_PROTESTO_RESERVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_DOC_PROTESTO_RESERVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_DOC_PROTESTO_RESERVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_DOC_PROTESTO_RESERVACompleted(Me, New RPT_DOC_PROTESTO_RESERVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RPT_GARANTIAS_INSCRITAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_GARANTIAS_INSCRITAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal OPCION As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_GARANTIAS_INSCRITAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, OPCION})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_GARANTIAS_INSCRITAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal OPCION As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_GARANTIAS_INSCRITAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, OPCION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_GARANTIAS_INSCRITAS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_GARANTIAS_INSCRITASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal OPCION As Integer)
            Me.RPT_GARANTIAS_INSCRITASAsync(PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, OPCION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_GARANTIAS_INSCRITASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal OPCION As Integer, ByVal userState As Object)
            If (Me.RPT_GARANTIAS_INSCRITASOperationCompleted Is Nothing) Then
                Me.RPT_GARANTIAS_INSCRITASOperationCompleted = AddressOf Me.OnRPT_GARANTIAS_INSCRITASOperationCompleted
            End If
            Me.InvokeAsync("RPT_GARANTIAS_INSCRITAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, OPCION}, Me.RPT_GARANTIAS_INSCRITASOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_GARANTIAS_INSCRITASOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_GARANTIAS_INSCRITASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_GARANTIAS_INSCRITASCompleted(Me, New RPT_GARANTIAS_INSCRITASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RPT_GARANTIAS_PRENDARIAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_GARANTIAS_PRENDARIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_GARANTIAS_PRENDARIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_GARANTIAS_PRENDARIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_GARANTIAS_PRENDARIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_GARANTIAS_PRENDARIAS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_GARANTIAS_PRENDARIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date)
            Me.RPT_GARANTIAS_PRENDARIASAsync(PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_GARANTIAS_PRENDARIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal userState As Object)
            If (Me.RPT_GARANTIAS_PRENDARIASOperationCompleted Is Nothing) Then
                Me.RPT_GARANTIAS_PRENDARIASOperationCompleted = AddressOf Me.OnRPT_GARANTIAS_PRENDARIASOperationCompleted
            End If
            Me.InvokeAsync("RPT_GARANTIAS_PRENDARIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN}, Me.RPT_GARANTIAS_PRENDARIASOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_GARANTIAS_PRENDARIASOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_GARANTIAS_PRENDARIASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_GARANTIAS_PRENDARIASCompleted(Me, New RPT_GARANTIAS_PRENDARIASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CREDITOS_X_TIPOHIPOTECA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CREDITOS_X_TIPOHIPOTECA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CREDITOS_X_TIPOHIPOTECA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCREDITOS_X_TIPOHIPOTECA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CREDITOS_X_TIPOHIPOTECA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCREDITOS_X_TIPOHIPOTECA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CREDITOS_X_TIPOHIPOTECAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date)
            Me.CREDITOS_X_TIPOHIPOTECAAsync(PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CREDITOS_X_TIPOHIPOTECAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal userState As Object)
            If (Me.CREDITOS_X_TIPOHIPOTECAOperationCompleted Is Nothing) Then
                Me.CREDITOS_X_TIPOHIPOTECAOperationCompleted = AddressOf Me.OnCREDITOS_X_TIPOHIPOTECAOperationCompleted
            End If
            Me.InvokeAsync("CREDITOS_X_TIPOHIPOTECA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN}, Me.CREDITOS_X_TIPOHIPOTECAOperationCompleted, userState)
        End Sub
        
        Private Sub OnCREDITOS_X_TIPOHIPOTECAOperationCompleted(ByVal arg As Object)
            If (Not (Me.CREDITOS_X_TIPOHIPOTECACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CREDITOS_X_TIPOHIPOTECACompleted(Me, New CREDITOS_X_TIPOHIPOTECACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CREDITOS_SIN_GARANTIAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CREDITOS_SIN_GARANTIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CREDITOS_SIN_GARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCREDITOS_SIN_GARANTIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CREDITOS_SIN_GARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCREDITOS_SIN_GARANTIAS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CREDITOS_SIN_GARANTIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date)
            Me.CREDITOS_SIN_GARANTIASAsync(PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CREDITOS_SIN_GARANTIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal userState As Object)
            If (Me.CREDITOS_SIN_GARANTIASOperationCompleted Is Nothing) Then
                Me.CREDITOS_SIN_GARANTIASOperationCompleted = AddressOf Me.OnCREDITOS_SIN_GARANTIASOperationCompleted
            End If
            Me.InvokeAsync("CREDITOS_SIN_GARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN}, Me.CREDITOS_SIN_GARANTIASOperationCompleted, userState)
        End Sub
        
        Private Sub OnCREDITOS_SIN_GARANTIASOperationCompleted(ByVal arg As Object)
            If (Not (Me.CREDITOS_SIN_GARANTIASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CREDITOS_SIN_GARANTIASCompleted(Me, New CREDITOS_SIN_GARANTIASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/RPT_GARANTIAS_X_DEPTO", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RPT_GARANTIAS_X_DEPTO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal OPCION As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RPT_GARANTIAS_X_DEPTO", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, OPCION})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRPT_GARANTIAS_X_DEPTO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal OPCION As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RPT_GARANTIAS_X_DEPTO", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, OPCION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRPT_GARANTIAS_X_DEPTO(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RPT_GARANTIAS_X_DEPTOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal OPCION As Integer)
            Me.RPT_GARANTIAS_X_DEPTOAsync(PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, OPCION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RPT_GARANTIAS_X_DEPTOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_INICIO As Date, ByVal FECHA_FIN As Date, ByVal OPCION As Integer, ByVal userState As Object)
            If (Me.RPT_GARANTIAS_X_DEPTOOperationCompleted Is Nothing) Then
                Me.RPT_GARANTIAS_X_DEPTOOperationCompleted = AddressOf Me.OnRPT_GARANTIAS_X_DEPTOOperationCompleted
            End If
            Me.InvokeAsync("RPT_GARANTIAS_X_DEPTO", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_INICIO, FECHA_FIN, OPCION}, Me.RPT_GARANTIAS_X_DEPTOOperationCompleted, userState)
        End Sub
        
        Private Sub OnRPT_GARANTIAS_X_DEPTOOperationCompleted(ByVal arg As Object)
            If (Not (Me.RPT_GARANTIAS_X_DEPTOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RPT_GARANTIAS_X_DEPTOCompleted(Me, New RPT_GARANTIAS_X_DEPTOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTAR_ESTADOPRESTAMO", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_ESTADOPRESTAMO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer) As String
            Dim results() As Object = Me.Invoke("CONSULTAR_ESTADOPRESTAMO", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_ESTADOPRESTAMO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_ESTADOPRESTAMO", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_ESTADOPRESTAMO(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_ESTADOPRESTAMOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer)
            Me.CONSULTAR_ESTADOPRESTAMOAsync(PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_ESTADOPRESTAMOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal userState As Object)
            If (Me.CONSULTAR_ESTADOPRESTAMOOperationCompleted Is Nothing) Then
                Me.CONSULTAR_ESTADOPRESTAMOOperationCompleted = AddressOf Me.OnCONSULTAR_ESTADOPRESTAMOOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_ESTADOPRESTAMO", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD}, Me.CONSULTAR_ESTADOPRESTAMOOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_ESTADOPRESTAMOOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_ESTADOPRESTAMOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_ESTADOPRESTAMOCompleted(Me, New CONSULTAR_ESTADOPRESTAMOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/INSERTARGRNOTARIOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTARGRNOTARIOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal DIREC_OFICINA As String, ByVal TELEFONO As String, ByVal CELULAR As String, ByVal EMAIL As String, ByVal TIPO As Boolean, ByVal DESPACHO As String) As Integer
            Dim results() As Object = Me.Invoke("INSERTARGRNOTARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOMBRES, APELLIDO1, APELLIDO2, DIREC_OFICINA, TELEFONO, CELULAR, EMAIL, TIPO, DESPACHO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTARGRNOTARIOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal DIREC_OFICINA As String, ByVal TELEFONO As String, ByVal CELULAR As String, ByVal EMAIL As String, ByVal TIPO As Boolean, ByVal DESPACHO As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTARGRNOTARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOMBRES, APELLIDO1, APELLIDO2, DIREC_OFICINA, TELEFONO, CELULAR, EMAIL, TIPO, DESPACHO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTARGRNOTARIOS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTARGRNOTARIOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal DIREC_OFICINA As String, ByVal TELEFONO As String, ByVal CELULAR As String, ByVal EMAIL As String, ByVal TIPO As Boolean, ByVal DESPACHO As String)
            Me.INSERTARGRNOTARIOSAsync(PUSUARIO, PWD, PSUCURSAL, NOMBRES, APELLIDO1, APELLIDO2, DIREC_OFICINA, TELEFONO, CELULAR, EMAIL, TIPO, DESPACHO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTARGRNOTARIOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal DIREC_OFICINA As String, ByVal TELEFONO As String, ByVal CELULAR As String, ByVal EMAIL As String, ByVal TIPO As Boolean, ByVal DESPACHO As String, ByVal userState As Object)
            If (Me.INSERTARGRNOTARIOSOperationCompleted Is Nothing) Then
                Me.INSERTARGRNOTARIOSOperationCompleted = AddressOf Me.OnINSERTARGRNOTARIOSOperationCompleted
            End If
            Me.InvokeAsync("INSERTARGRNOTARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOMBRES, APELLIDO1, APELLIDO2, DIREC_OFICINA, TELEFONO, CELULAR, EMAIL, TIPO, DESPACHO}, Me.INSERTARGRNOTARIOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTARGRNOTARIOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTARGRNOTARIOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTARGRNOTARIOSCompleted(Me, New INSERTARGRNOTARIOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/MODIFICARGRNOTARIOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICARGRNOTARIOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal DIREC_OFICINA As String, ByVal TELEFONO As String, ByVal CELULAR As String, ByVal EMAIL As String, ByVal TIPO As Boolean, ByVal DESPACHO As String, ByVal IDNOTARIO As Integer) As Integer
            Dim results() As Object = Me.Invoke("MODIFICARGRNOTARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOMBRES, APELLIDO1, APELLIDO2, DIREC_OFICINA, TELEFONO, CELULAR, EMAIL, TIPO, DESPACHO, IDNOTARIO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICARGRNOTARIOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal DIREC_OFICINA As String, ByVal TELEFONO As String, ByVal CELULAR As String, ByVal EMAIL As String, ByVal TIPO As Boolean, ByVal DESPACHO As String, ByVal IDNOTARIO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICARGRNOTARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOMBRES, APELLIDO1, APELLIDO2, DIREC_OFICINA, TELEFONO, CELULAR, EMAIL, TIPO, DESPACHO, IDNOTARIO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICARGRNOTARIOS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICARGRNOTARIOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal DIREC_OFICINA As String, ByVal TELEFONO As String, ByVal CELULAR As String, ByVal EMAIL As String, ByVal TIPO As Boolean, ByVal DESPACHO As String, ByVal IDNOTARIO As Integer)
            Me.MODIFICARGRNOTARIOSAsync(PUSUARIO, PWD, PSUCURSAL, NOMBRES, APELLIDO1, APELLIDO2, DIREC_OFICINA, TELEFONO, CELULAR, EMAIL, TIPO, DESPACHO, IDNOTARIO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICARGRNOTARIOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal DIREC_OFICINA As String, ByVal TELEFONO As String, ByVal CELULAR As String, ByVal EMAIL As String, ByVal TIPO As Boolean, ByVal DESPACHO As String, ByVal IDNOTARIO As Integer, ByVal userState As Object)
            If (Me.MODIFICARGRNOTARIOSOperationCompleted Is Nothing) Then
                Me.MODIFICARGRNOTARIOSOperationCompleted = AddressOf Me.OnMODIFICARGRNOTARIOSOperationCompleted
            End If
            Me.InvokeAsync("MODIFICARGRNOTARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOMBRES, APELLIDO1, APELLIDO2, DIREC_OFICINA, TELEFONO, CELULAR, EMAIL, TIPO, DESPACHO, IDNOTARIO}, Me.MODIFICARGRNOTARIOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICARGRNOTARIOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICARGRNOTARIOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICARGRNOTARIOSCompleted(Me, New MODIFICARGRNOTARIOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ELIMINARGRNOTARIO", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ELIMINARGRNOTARIO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDNOTARIO As Integer) As Integer
            Dim results() As Object = Me.Invoke("ELIMINARGRNOTARIO", New Object() {PUSUARIO, PWD, PSUCURSAL, IDNOTARIO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginELIMINARGRNOTARIO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDNOTARIO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ELIMINARGRNOTARIO", New Object() {PUSUARIO, PWD, PSUCURSAL, IDNOTARIO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndELIMINARGRNOTARIO(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ELIMINARGRNOTARIOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDNOTARIO As Integer)
            Me.ELIMINARGRNOTARIOAsync(PUSUARIO, PWD, PSUCURSAL, IDNOTARIO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ELIMINARGRNOTARIOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDNOTARIO As Integer, ByVal userState As Object)
            If (Me.ELIMINARGRNOTARIOOperationCompleted Is Nothing) Then
                Me.ELIMINARGRNOTARIOOperationCompleted = AddressOf Me.OnELIMINARGRNOTARIOOperationCompleted
            End If
            Me.InvokeAsync("ELIMINARGRNOTARIO", New Object() {PUSUARIO, PWD, PSUCURSAL, IDNOTARIO}, Me.ELIMINARGRNOTARIOOperationCompleted, userState)
        End Sub
        
        Private Sub OnELIMINARGRNOTARIOOperationCompleted(ByVal arg As Object)
            If (Not (Me.ELIMINARGRNOTARIOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ELIMINARGRNOTARIOCompleted(Me, New ELIMINARGRNOTARIOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARGRNOTARIO", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARGRNOTARIO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal IDNOTARIO As Integer, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARGRNOTARIO", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, IDNOTARIO, NOMBRES, APELLIDO1, APELLIDO2})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARGRNOTARIO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal IDNOTARIO As Integer, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARGRNOTARIO", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, IDNOTARIO, NOMBRES, APELLIDO1, APELLIDO2}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARGRNOTARIO(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARGRNOTARIOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal IDNOTARIO As Integer, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String)
            Me.CONSULTARGRNOTARIOAsync(PUSUARIO, PWD, PSUCURSAL, OPCION, IDNOTARIO, NOMBRES, APELLIDO1, APELLIDO2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARGRNOTARIOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal IDNOTARIO As Integer, ByVal NOMBRES As String, ByVal APELLIDO1 As String, ByVal APELLIDO2 As String, ByVal userState As Object)
            If (Me.CONSULTARGRNOTARIOOperationCompleted Is Nothing) Then
                Me.CONSULTARGRNOTARIOOperationCompleted = AddressOf Me.OnCONSULTARGRNOTARIOOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARGRNOTARIO", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, IDNOTARIO, NOMBRES, APELLIDO1, APELLIDO2}, Me.CONSULTARGRNOTARIOOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARGRNOTARIOOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARGRNOTARIOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARGRNOTARIOCompleted(Me, New CONSULTARGRNOTARIOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/VALIDAR_INSCRIPCION_PRESTAMOSGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VALIDAR_INSCRIPCION_PRESTAMOSGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal NOCOMPROBANTE As String) As Integer
            Dim results() As Object = Me.Invoke("VALIDAR_INSCRIPCION_PRESTAMOSGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, NOCOMPROBANTE})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVALIDAR_INSCRIPCION_PRESTAMOSGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal NOCOMPROBANTE As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VALIDAR_INSCRIPCION_PRESTAMOSGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, NOCOMPROBANTE}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVALIDAR_INSCRIPCION_PRESTAMOSGARANTIA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VALIDAR_INSCRIPCION_PRESTAMOSGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal NOCOMPROBANTE As String)
            Me.VALIDAR_INSCRIPCION_PRESTAMOSGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, NOCOMPROBANTE, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VALIDAR_INSCRIPCION_PRESTAMOSGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal NOCOMPROBANTE As String, ByVal userState As Object)
            If (Me.VALIDAR_INSCRIPCION_PRESTAMOSGARANTIAOperationCompleted Is Nothing) Then
                Me.VALIDAR_INSCRIPCION_PRESTAMOSGARANTIAOperationCompleted = AddressOf Me.OnVALIDAR_INSCRIPCION_PRESTAMOSGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("VALIDAR_INSCRIPCION_PRESTAMOSGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, NOCOMPROBANTE}, Me.VALIDAR_INSCRIPCION_PRESTAMOSGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnVALIDAR_INSCRIPCION_PRESTAMOSGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.VALIDAR_INSCRIPCION_PRESTAMOSGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VALIDAR_INSCRIPCION_PRESTAMOSGARANTIACompleted(Me, New VALIDAR_INSCRIPCION_PRESTAMOSGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARSOLICITUDESCREDITO", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARSOLICITUDESCREDITO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal DUI As String, ByVal NUMSOLICITUD As Integer, ByVal NOMBRE As String, ByVal OPC_NOMBRE As Integer, ByVal NOSOCIO As String, ByVal CODPRESTAMO As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARSOLICITUDESCREDITO", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, DUI, NUMSOLICITUD, NOMBRE, OPC_NOMBRE, NOSOCIO, CODPRESTAMO})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARSOLICITUDESCREDITO(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal DUI As String, ByVal NUMSOLICITUD As Integer, ByVal NOMBRE As String, ByVal OPC_NOMBRE As Integer, ByVal NOSOCIO As String, ByVal CODPRESTAMO As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARSOLICITUDESCREDITO", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, DUI, NUMSOLICITUD, NOMBRE, OPC_NOMBRE, NOSOCIO, CODPRESTAMO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARSOLICITUDESCREDITO(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARSOLICITUDESCREDITOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal DUI As String, ByVal NUMSOLICITUD As Integer, ByVal NOMBRE As String, ByVal OPC_NOMBRE As Integer, ByVal NOSOCIO As String, ByVal CODPRESTAMO As String)
            Me.CONSULTARSOLICITUDESCREDITOAsync(PUSUARIO, PWD, PSUCURSAL, OPCION, DUI, NUMSOLICITUD, NOMBRE, OPC_NOMBRE, NOSOCIO, CODPRESTAMO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARSOLICITUDESCREDITOAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal DUI As String, ByVal NUMSOLICITUD As Integer, ByVal NOMBRE As String, ByVal OPC_NOMBRE As Integer, ByVal NOSOCIO As String, ByVal CODPRESTAMO As String, ByVal userState As Object)
            If (Me.CONSULTARSOLICITUDESCREDITOOperationCompleted Is Nothing) Then
                Me.CONSULTARSOLICITUDESCREDITOOperationCompleted = AddressOf Me.OnCONSULTARSOLICITUDESCREDITOOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARSOLICITUDESCREDITO", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, DUI, NUMSOLICITUD, NOMBRE, OPC_NOMBRE, NOSOCIO, CODPRESTAMO}, Me.CONSULTARSOLICITUDESCREDITOOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARSOLICITUDESCREDITOOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARSOLICITUDESCREDITOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARSOLICITUDESCREDITOCompleted(Me, New CONSULTARSOLICITUDESCREDITOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARPRESTAMOSHIPOTECARIOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARPRESTAMOSHIPOTECARIOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal DUI As String, ByVal OPCION As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARPRESTAMOSHIPOTECARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, DUI, OPCION})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARPRESTAMOSHIPOTECARIOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal DUI As String, ByVal OPCION As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARPRESTAMOSHIPOTECARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, DUI, OPCION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARPRESTAMOSHIPOTECARIOS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARPRESTAMOSHIPOTECARIOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal DUI As String, ByVal OPCION As Integer)
            Me.CONSULTARPRESTAMOSHIPOTECARIOSAsync(PUSUARIO, PWD, PSUCURSAL, DUI, OPCION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARPRESTAMOSHIPOTECARIOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal DUI As String, ByVal OPCION As Integer, ByVal userState As Object)
            If (Me.CONSULTARPRESTAMOSHIPOTECARIOSOperationCompleted Is Nothing) Then
                Me.CONSULTARPRESTAMOSHIPOTECARIOSOperationCompleted = AddressOf Me.OnCONSULTARPRESTAMOSHIPOTECARIOSOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARPRESTAMOSHIPOTECARIOS", New Object() {PUSUARIO, PWD, PSUCURSAL, DUI, OPCION}, Me.CONSULTARPRESTAMOSHIPOTECARIOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARPRESTAMOSHIPOTECARIOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARPRESTAMOSHIPOTECARIOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARPRESTAMOSHIPOTECARIOSCompleted(Me, New CONSULTARPRESTAMOSHIPOTECARIOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal CODPRES As String, ByVal REINTEGRO As Boolean, ByVal FECHA_ACTU As Date) As Integer
            Dim results() As Object = Me.Invoke("MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODPRES, REINTEGRO, FECHA_ACTU})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal CODPRES As String, ByVal REINTEGRO As Boolean, ByVal FECHA_ACTU As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODPRES, REINTEGRO, FECHA_ACTU}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal CODPRES As String, ByVal REINTEGRO As Boolean, ByVal FECHA_ACTU As Date)
            Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODPRES, REINTEGRO, FECHA_ACTU, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal CODPRES As String, ByVal REINTEGRO As Boolean, ByVal FECHA_ACTU As Date, ByVal userState As Object)
            If (Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAOperationCompleted Is Nothing) Then
                Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAOperationCompleted = AddressOf Me.OnMODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAOperationCompleted
            End If
            Me.InvokeAsync("MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODPRES, REINTEGRO, FECHA_ACTU}, Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGAOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGACompleted(Me, New MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTAR_GRTIPODOCUMENTOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_GRTIPODOCUMENTOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_GRTIPODOCUMENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_GRTIPODOCUMENTOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_GRTIPODOCUMENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_GRTIPODOCUMENTOS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_GRTIPODOCUMENTOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String)
            Me.CONSULTAR_GRTIPODOCUMENTOSAsync(PUSUARIO, PWD, PSUCURSAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_GRTIPODOCUMENTOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal userState As Object)
            If (Me.CONSULTAR_GRTIPODOCUMENTOSOperationCompleted Is Nothing) Then
                Me.CONSULTAR_GRTIPODOCUMENTOSOperationCompleted = AddressOf Me.OnCONSULTAR_GRTIPODOCUMENTOSOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_GRTIPODOCUMENTOS", New Object() {PUSUARIO, PWD, PSUCURSAL}, Me.CONSULTAR_GRTIPODOCUMENTOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_GRTIPODOCUMENTOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_GRTIPODOCUMENTOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_GRTIPODOCUMENTOSCompleted(Me, New CONSULTAR_GRTIPODOCUMENTOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_MODIFICACION As Date, ByVal PLAZO As Integer, ByVal MONTO As Double, ByVal TASA_INTERES As Integer, ByVal FECHA_PRESENTACION As Date, ByVal FECHA_INSCRIPCION As Date, ByVal NOINSCRIPCION As String, ByVal OBSERVACIONES As String, ByVal NOCOMPROBANTE As String, ByVal FECHA_ACTU As Date) As Integer
            Dim results() As Object = Me.Invoke("MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_MODIFICACION, PLAZO, MONTO, TASA_INTERES, FECHA_PRESENTACION, FECHA_INSCRIPCION, NOINSCRIPCION, OBSERVACIONES, NOCOMPROBANTE, FECHA_ACTU})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_MODIFICACION As Date, ByVal PLAZO As Integer, ByVal MONTO As Double, ByVal TASA_INTERES As Integer, ByVal FECHA_PRESENTACION As Date, ByVal FECHA_INSCRIPCION As Date, ByVal NOINSCRIPCION As String, ByVal OBSERVACIONES As String, ByVal NOCOMPROBANTE As String, ByVal FECHA_ACTU As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_MODIFICACION, PLAZO, MONTO, TASA_INTERES, FECHA_PRESENTACION, FECHA_INSCRIPCION, NOINSCRIPCION, OBSERVACIONES, NOCOMPROBANTE, FECHA_ACTU}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_MODIFICACION As Date, ByVal PLAZO As Integer, ByVal MONTO As Double, ByVal TASA_INTERES As Integer, ByVal FECHA_PRESENTACION As Date, ByVal FECHA_INSCRIPCION As Date, ByVal NOINSCRIPCION As String, ByVal OBSERVACIONES As String, ByVal NOCOMPROBANTE As String, ByVal FECHA_ACTU As Date)
            Me.MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, FECHA_MODIFICACION, PLAZO, MONTO, TASA_INTERES, FECHA_PRESENTACION, FECHA_INSCRIPCION, NOINSCRIPCION, OBSERVACIONES, NOCOMPROBANTE, FECHA_ACTU, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal FECHA_MODIFICACION As Date, ByVal PLAZO As Integer, ByVal MONTO As Double, ByVal TASA_INTERES As Integer, ByVal FECHA_PRESENTACION As Date, ByVal FECHA_INSCRIPCION As Date, ByVal NOINSCRIPCION As String, ByVal OBSERVACIONES As String, ByVal NOCOMPROBANTE As String, ByVal FECHA_ACTU As Date, ByVal userState As Object)
            If (Me.MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnMODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, FECHA_MODIFICACION, PLAZO, MONTO, TASA_INTERES, FECHA_PRESENTACION, FECHA_INSCRIPCION, NOINSCRIPCION, OBSERVACIONES, NOCOMPROBANTE, FECHA_ACTU}, Me.MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIACompleted(Me, New MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ELIMINAR_GRMOVIMIENTOSDOCGARANTIAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ELIMINAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer) As Integer
            Dim results() As Object = Me.Invoke("ELIMINAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginELIMINAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ELIMINAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndELIMINAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ELIMINAR_GRMOVIMIENTOSDOCGARANTIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer)
            Me.ELIMINAR_GRMOVIMIENTOSDOCGARANTIASAsync(PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ELIMINAR_GRMOVIMIENTOSDOCGARANTIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.ELIMINAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted Is Nothing) Then
                Me.ELIMINAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted = AddressOf Me.OnELIMINAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted
            End If
            Me.InvokeAsync("ELIMINAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO}, Me.ELIMINAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted, userState)
        End Sub
        
        Private Sub OnELIMINAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted(ByVal arg As Object)
            If (Not (Me.ELIMINAR_GRMOVIMIENTOSDOCGARANTIASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ELIMINAR_GRMOVIMIENTOSDOCGARANTIASCompleted(Me, New ELIMINAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/MODIFICAR_GRMOVIMIENTOSDOCGARANTIAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal CODEMPELADO_RECIBE As String, ByVal CODDEPARTAMENTO_RECIBE As String, ByVal FECHA_ENTREGA As Date, ByVal CODEMPLEADO_ENTREGA As String, ByVal CODDEPARTAMENTO_ENTREGA As String, ByVal OBSERVACIONES As String, ByVal FECHA_ACTU As Date, ByVal CORRELATIVO As Integer) As Integer
            Dim results() As Object = Me.Invoke("MODIFICAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODEMPELADO_RECIBE, CODDEPARTAMENTO_RECIBE, FECHA_ENTREGA, CODEMPLEADO_ENTREGA, CODDEPARTAMENTO_ENTREGA, OBSERVACIONES, FECHA_ACTU, CORRELATIVO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal CODEMPELADO_RECIBE As String, ByVal CODDEPARTAMENTO_RECIBE As String, ByVal FECHA_ENTREGA As Date, ByVal CODEMPLEADO_ENTREGA As String, ByVal CODDEPARTAMENTO_ENTREGA As String, ByVal OBSERVACIONES As String, ByVal FECHA_ACTU As Date, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODEMPELADO_RECIBE, CODDEPARTAMENTO_RECIBE, FECHA_ENTREGA, CODEMPLEADO_ENTREGA, CODDEPARTAMENTO_ENTREGA, OBSERVACIONES, FECHA_ACTU, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_GRMOVIMIENTOSDOCGARANTIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal CODEMPELADO_RECIBE As String, ByVal CODDEPARTAMENTO_RECIBE As String, ByVal FECHA_ENTREGA As Date, ByVal CODEMPLEADO_ENTREGA As String, ByVal CODDEPARTAMENTO_ENTREGA As String, ByVal OBSERVACIONES As String, ByVal FECHA_ACTU As Date, ByVal CORRELATIVO As Integer)
            Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODEMPELADO_RECIBE, CODDEPARTAMENTO_RECIBE, FECHA_ENTREGA, CODEMPLEADO_ENTREGA, CODDEPARTAMENTO_ENTREGA, OBSERVACIONES, FECHA_ACTU, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_GRMOVIMIENTOSDOCGARANTIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal CODEMPELADO_RECIBE As String, ByVal CODDEPARTAMENTO_RECIBE As String, ByVal FECHA_ENTREGA As Date, ByVal CODEMPLEADO_ENTREGA As String, ByVal CODDEPARTAMENTO_ENTREGA As String, ByVal OBSERVACIONES As String, ByVal FECHA_ACTU As Date, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted Is Nothing) Then
                Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted = AddressOf Me.OnMODIFICAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted
            End If
            Me.InvokeAsync("MODIFICAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODEMPELADO_RECIBE, CODDEPARTAMENTO_RECIBE, FECHA_ENTREGA, CODEMPLEADO_ENTREGA, CODDEPARTAMENTO_ENTREGA, OBSERVACIONES, FECHA_ACTU, CORRELATIVO}, Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICAR_GRMOVIMIENTOSDOCGARANTIASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICAR_GRMOVIMIENTOSDOCGARANTIASCompleted(Me, New MODIFICAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTAR_GRMOVIMIENTOSDOCGARANTIAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal FECHAI As Date, ByVal FECHAF As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, FECHAI, FECHAF})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal FECHAI As Date, ByVal FECHAF As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, FECHAI, FECHAF}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_GRMOVIMIENTOSDOCGARANTIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal FECHAI As Date, ByVal FECHAF As Date)
            Me.CONSULTAR_GRMOVIMIENTOSDOCGARANTIASAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, FECHAI, FECHAF, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_GRMOVIMIENTOSDOCGARANTIASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal FECHAI As Date, ByVal FECHAF As Date, ByVal userState As Object)
            If (Me.CONSULTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted Is Nothing) Then
                Me.CONSULTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted = AddressOf Me.OnCONSULTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, FECHAI, FECHAF}, Me.CONSULTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_GRMOVIMIENTOSDOCGARANTIASCompleted(Me, New CONSULTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/INSERTAR_GRMOVIMIENTOSDOCGARANTIAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTAR_GRMOVIMIENTOSDOCGARANTIAS( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal CODEMPLEADO_RECIBE As Integer,  _
                    ByVal CODDEPARTAMENTO_RECIBE As Integer,  _
                    ByVal FECHA_ENTREGA As Date,  _
                    ByVal CODEMPLEADO_ENTREGA As Integer,  _
                    ByVal CODDEPARTAMENTO_ENTREGA As Integer,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal ACCION As Integer,  _
                    ByVal REINTEGRO As Boolean,  _
                    ByVal ID_TIPODOC As Integer,  _
                    ByVal OPCION As Integer,  _
                    ByVal CODPRES2 As String) As Integer
            Dim results() As Object = Me.Invoke("INSERTAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODEMPLEADO_RECIBE, CODDEPARTAMENTO_RECIBE, FECHA_ENTREGA, CODEMPLEADO_ENTREGA, CODDEPARTAMENTO_ENTREGA, OBSERVACIONES, FECHA_ACTU, ACCION, REINTEGRO, ID_TIPODOC, OPCION, CODPRES2})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTAR_GRMOVIMIENTOSDOCGARANTIAS( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal CODEMPLEADO_RECIBE As Integer,  _
                    ByVal CODDEPARTAMENTO_RECIBE As Integer,  _
                    ByVal FECHA_ENTREGA As Date,  _
                    ByVal CODEMPLEADO_ENTREGA As Integer,  _
                    ByVal CODDEPARTAMENTO_ENTREGA As Integer,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal ACCION As Integer,  _
                    ByVal REINTEGRO As Boolean,  _
                    ByVal ID_TIPODOC As Integer,  _
                    ByVal OPCION As Integer,  _
                    ByVal CODPRES2 As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODEMPLEADO_RECIBE, CODDEPARTAMENTO_RECIBE, FECHA_ENTREGA, CODEMPLEADO_ENTREGA, CODDEPARTAMENTO_ENTREGA, OBSERVACIONES, FECHA_ACTU, ACCION, REINTEGRO, ID_TIPODOC, OPCION, CODPRES2}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTAR_GRMOVIMIENTOSDOCGARANTIAS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTAR_GRMOVIMIENTOSDOCGARANTIASAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal CODEMPLEADO_RECIBE As Integer,  _
                    ByVal CODDEPARTAMENTO_RECIBE As Integer,  _
                    ByVal FECHA_ENTREGA As Date,  _
                    ByVal CODEMPLEADO_ENTREGA As Integer,  _
                    ByVal CODDEPARTAMENTO_ENTREGA As Integer,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal ACCION As Integer,  _
                    ByVal REINTEGRO As Boolean,  _
                    ByVal ID_TIPODOC As Integer,  _
                    ByVal OPCION As Integer,  _
                    ByVal CODPRES2 As String)
            Me.INSERTAR_GRMOVIMIENTOSDOCGARANTIASAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODEMPLEADO_RECIBE, CODDEPARTAMENTO_RECIBE, FECHA_ENTREGA, CODEMPLEADO_ENTREGA, CODDEPARTAMENTO_ENTREGA, OBSERVACIONES, FECHA_ACTU, ACCION, REINTEGRO, ID_TIPODOC, OPCION, CODPRES2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTAR_GRMOVIMIENTOSDOCGARANTIASAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal CODEMPLEADO_RECIBE As Integer,  _
                    ByVal CODDEPARTAMENTO_RECIBE As Integer,  _
                    ByVal FECHA_ENTREGA As Date,  _
                    ByVal CODEMPLEADO_ENTREGA As Integer,  _
                    ByVal CODDEPARTAMENTO_ENTREGA As Integer,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal ACCION As Integer,  _
                    ByVal REINTEGRO As Boolean,  _
                    ByVal ID_TIPODOC As Integer,  _
                    ByVal OPCION As Integer,  _
                    ByVal CODPRES2 As String,  _
                    ByVal userState As Object)
            If (Me.INSERTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted Is Nothing) Then
                Me.INSERTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted = AddressOf Me.OnINSERTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted
            End If
            Me.InvokeAsync("INSERTAR_GRMOVIMIENTOSDOCGARANTIAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, CODEMPLEADO_RECIBE, CODDEPARTAMENTO_RECIBE, FECHA_ENTREGA, CODEMPLEADO_ENTREGA, CODDEPARTAMENTO_ENTREGA, OBSERVACIONES, FECHA_ACTU, ACCION, REINTEGRO, ID_TIPODOC, OPCION, CODPRES2}, Me.INSERTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTAR_GRMOVIMIENTOSDOCGARANTIASOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTAR_GRMOVIMIENTOSDOCGARANTIASCompleted(Me, New INSERTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ELIMINAR_GRHISTOINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ELIMINAR_GRHISTOINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer) As Integer
            Dim results() As Object = Me.Invoke("ELIMINAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginELIMINAR_GRHISTOINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ELIMINAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndELIMINAR_GRHISTOINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ELIMINAR_GRHISTOINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer)
            Me.ELIMINAR_GRHISTOINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ELIMINAR_GRHISTOINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.ELIMINAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.ELIMINAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnELIMINAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("ELIMINAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO}, Me.ELIMINAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnELIMINAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.ELIMINAR_GRHISTOINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ELIMINAR_GRHISTOINSCRIPCIONGARANTIACompleted(Me, New ELIMINAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/MODIFICAR_GRHISTOINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICAR_GRHISTOINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal FECHA_MODIFICACION As Date, ByVal MONTO As Double, ByVal FEC_PRESENTACION_HIPOTECA As Date, ByVal FEC_INSCRIPCION_HIPOTECA As Date, ByVal NO_INSCRIPCION_HIPOTECA As String, ByVal OBSERVACIONES As String, ByVal TASA_INTERES As Double, ByVal PLAZO As Integer, ByVal FECHA_ACTU As Date) As Integer
            Dim results() As Object = Me.Invoke("MODIFICAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, FECHA_MODIFICACION, MONTO, FEC_PRESENTACION_HIPOTECA, FEC_INSCRIPCION_HIPOTECA, NO_INSCRIPCION_HIPOTECA, OBSERVACIONES, TASA_INTERES, PLAZO, FECHA_ACTU})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICAR_GRHISTOINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal FECHA_MODIFICACION As Date, ByVal MONTO As Double, ByVal FEC_PRESENTACION_HIPOTECA As Date, ByVal FEC_INSCRIPCION_HIPOTECA As Date, ByVal NO_INSCRIPCION_HIPOTECA As String, ByVal OBSERVACIONES As String, ByVal TASA_INTERES As Double, ByVal PLAZO As Integer, ByVal FECHA_ACTU As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, FECHA_MODIFICACION, MONTO, FEC_PRESENTACION_HIPOTECA, FEC_INSCRIPCION_HIPOTECA, NO_INSCRIPCION_HIPOTECA, OBSERVACIONES, TASA_INTERES, PLAZO, FECHA_ACTU}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICAR_GRHISTOINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_GRHISTOINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal FECHA_MODIFICACION As Date, ByVal MONTO As Double, ByVal FEC_PRESENTACION_HIPOTECA As Date, ByVal FEC_INSCRIPCION_HIPOTECA As Date, ByVal NO_INSCRIPCION_HIPOTECA As String, ByVal OBSERVACIONES As String, ByVal TASA_INTERES As Double, ByVal PLAZO As Integer, ByVal FECHA_ACTU As Date)
            Me.MODIFICAR_GRHISTOINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, FECHA_MODIFICACION, MONTO, FEC_PRESENTACION_HIPOTECA, FEC_INSCRIPCION_HIPOTECA, NO_INSCRIPCION_HIPOTECA, OBSERVACIONES, TASA_INTERES, PLAZO, FECHA_ACTU, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICAR_GRHISTOINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal FECHA_MODIFICACION As Date, ByVal MONTO As Double, ByVal FEC_PRESENTACION_HIPOTECA As Date, ByVal FEC_INSCRIPCION_HIPOTECA As Date, ByVal NO_INSCRIPCION_HIPOTECA As String, ByVal OBSERVACIONES As String, ByVal TASA_INTERES As Double, ByVal PLAZO As Integer, ByVal FECHA_ACTU As Date, ByVal userState As Object)
            If (Me.MODIFICAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.MODIFICAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnMODIFICAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("MODIFICAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, FECHA_MODIFICACION, MONTO, FEC_PRESENTACION_HIPOTECA, FEC_INSCRIPCION_HIPOTECA, NO_INSCRIPCION_HIPOTECA, OBSERVACIONES, TASA_INTERES, PLAZO, FECHA_ACTU}, Me.MODIFICAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICAR_GRHISTOINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICAR_GRHISTOINSCRIPCIONGARANTIACompleted(Me, New MODIFICAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTAR_GRHISTOINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_GRHISTOINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_GRHISTOINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_GRHISTOINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_GRHISTOINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String)
            Me.CONSULTAR_GRHISTOINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_GRHISTOINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal userState As Object)
            If (Me.CONSULTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.CONSULTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnCONSULTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE}, Me.CONSULTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_GRHISTOINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_GRHISTOINSCRIPCIONGARANTIACompleted(Me, New CONSULTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/INSERTAR_GRHISTOINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTAR_GRHISTOINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal FECHA_MODIFICACION As Date, ByVal MONTO As Double, ByVal FEC_PRESENTACION_HIPOTECA As Date, ByVal FEC_INSCRIPCION_HIPOTECA As Date, ByVal NO_INSCRIPCION_HIPOTECA As String, ByVal OBSERVACIONES As String, ByVal TASA_INTERES As Double, ByVal PLAZO As Integer, ByVal FECHA_ACTU As Date) As Integer
            Dim results() As Object = Me.Invoke("INSERTAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA_MODIFICACION, MONTO, FEC_PRESENTACION_HIPOTECA, FEC_INSCRIPCION_HIPOTECA, NO_INSCRIPCION_HIPOTECA, OBSERVACIONES, TASA_INTERES, PLAZO, FECHA_ACTU})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTAR_GRHISTOINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal FECHA_MODIFICACION As Date, ByVal MONTO As Double, ByVal FEC_PRESENTACION_HIPOTECA As Date, ByVal FEC_INSCRIPCION_HIPOTECA As Date, ByVal NO_INSCRIPCION_HIPOTECA As String, ByVal OBSERVACIONES As String, ByVal TASA_INTERES As Double, ByVal PLAZO As Integer, ByVal FECHA_ACTU As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA_MODIFICACION, MONTO, FEC_PRESENTACION_HIPOTECA, FEC_INSCRIPCION_HIPOTECA, NO_INSCRIPCION_HIPOTECA, OBSERVACIONES, TASA_INTERES, PLAZO, FECHA_ACTU}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTAR_GRHISTOINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTAR_GRHISTOINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal FECHA_MODIFICACION As Date, ByVal MONTO As Double, ByVal FEC_PRESENTACION_HIPOTECA As Date, ByVal FEC_INSCRIPCION_HIPOTECA As Date, ByVal NO_INSCRIPCION_HIPOTECA As String, ByVal OBSERVACIONES As String, ByVal TASA_INTERES As Double, ByVal PLAZO As Integer, ByVal FECHA_ACTU As Date)
            Me.INSERTAR_GRHISTOINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA_MODIFICACION, MONTO, FEC_PRESENTACION_HIPOTECA, FEC_INSCRIPCION_HIPOTECA, NO_INSCRIPCION_HIPOTECA, OBSERVACIONES, TASA_INTERES, PLAZO, FECHA_ACTU, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTAR_GRHISTOINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal FECHA_MODIFICACION As Date, ByVal MONTO As Double, ByVal FEC_PRESENTACION_HIPOTECA As Date, ByVal FEC_INSCRIPCION_HIPOTECA As Date, ByVal NO_INSCRIPCION_HIPOTECA As String, ByVal OBSERVACIONES As String, ByVal TASA_INTERES As Double, ByVal PLAZO As Integer, ByVal FECHA_ACTU As Date, ByVal userState As Object)
            If (Me.INSERTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.INSERTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnINSERTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("INSERTAR_GRHISTOINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA_MODIFICACION, MONTO, FEC_PRESENTACION_HIPOTECA, FEC_INSCRIPCION_HIPOTECA, NO_INSCRIPCION_HIPOTECA, OBSERVACIONES, TASA_INTERES, PLAZO, FECHA_ACTU}, Me.INSERTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTAR_GRHISTOINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTAR_GRHISTOINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTAR_GRHISTOINSCRIPCIONGARANTIACompleted(Me, New INSERTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTAR_GRTIPOHIPOTECAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_GRTIPOHIPOTECAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_GRTIPOHIPOTECAS", New Object() {PUSUARIO, PWD, PSUCURSAL})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_GRTIPOHIPOTECAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_GRTIPOHIPOTECAS", New Object() {PUSUARIO, PWD, PSUCURSAL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_GRTIPOHIPOTECAS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_GRTIPOHIPOTECASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String)
            Me.CONSULTAR_GRTIPOHIPOTECASAsync(PUSUARIO, PWD, PSUCURSAL, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_GRTIPOHIPOTECASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal userState As Object)
            If (Me.CONSULTAR_GRTIPOHIPOTECASOperationCompleted Is Nothing) Then
                Me.CONSULTAR_GRTIPOHIPOTECASOperationCompleted = AddressOf Me.OnCONSULTAR_GRTIPOHIPOTECASOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_GRTIPOHIPOTECAS", New Object() {PUSUARIO, PWD, PSUCURSAL}, Me.CONSULTAR_GRTIPOHIPOTECASOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_GRTIPOHIPOTECASOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_GRTIPOHIPOTECASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_GRTIPOHIPOTECASCompleted(Me, New CONSULTAR_GRTIPOHIPOTECASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTAR_DATOSGENERALESASOCIADOS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_DATOSGENERALESASOCIADOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTAR_DATOSGENERALESASOCIADOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_DATOSGENERALESASOCIADOS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_DATOSGENERALESASOCIADOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_DATOSGENERALESASOCIADOS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_DATOSGENERALESASOCIADOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer)
            Me.CONSULTAR_DATOSGENERALESASOCIADOSAsync(PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_DATOSGENERALESASOCIADOSAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal userState As Object)
            If (Me.CONSULTAR_DATOSGENERALESASOCIADOSOperationCompleted Is Nothing) Then
                Me.CONSULTAR_DATOSGENERALESASOCIADOSOperationCompleted = AddressOf Me.OnCONSULTAR_DATOSGENERALESASOCIADOSOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_DATOSGENERALESASOCIADOS", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD}, Me.CONSULTAR_DATOSGENERALESASOCIADOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_DATOSGENERALESASOCIADOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_DATOSGENERALESASOCIADOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_DATOSGENERALESASOCIADOSCompleted(Me, New CONSULTAR_DATOSGENERALESASOCIADOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/VERIFICAR_ANOTACIONPREVENTIVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function VERIFICAR_ANOTACIONPREVENTIVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NUMSOLICITUD As Integer) As Integer
            Dim results() As Object = Me.Invoke("VERIFICAR_ANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NUMSOLICITUD})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginVERIFICAR_ANOTACIONPREVENTIVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NUMSOLICITUD As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("VERIFICAR_ANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NUMSOLICITUD}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndVERIFICAR_ANOTACIONPREVENTIVA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VERIFICAR_ANOTACIONPREVENTIVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NUMSOLICITUD As Integer)
            Me.VERIFICAR_ANOTACIONPREVENTIVAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NUMSOLICITUD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VERIFICAR_ANOTACIONPREVENTIVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NUMSOLICITUD As Integer, ByVal userState As Object)
            If (Me.VERIFICAR_ANOTACIONPREVENTIVAOperationCompleted Is Nothing) Then
                Me.VERIFICAR_ANOTACIONPREVENTIVAOperationCompleted = AddressOf Me.OnVERIFICAR_ANOTACIONPREVENTIVAOperationCompleted
            End If
            Me.InvokeAsync("VERIFICAR_ANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NUMSOLICITUD}, Me.VERIFICAR_ANOTACIONPREVENTIVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnVERIFICAR_ANOTACIONPREVENTIVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.VERIFICAR_ANOTACIONPREVENTIVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VERIFICAR_ANOTACIONPREVENTIVACompleted(Me, New VERIFICAR_ANOTACIONPREVENTIVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADAS", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer) As Integer
            Dim results() As Object = Me.Invoke("CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADAS(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADAS(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer)
            Me.CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASAsync(PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal userState As Object)
            If (Me.CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASOperationCompleted Is Nothing) Then
                Me.CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASOperationCompleted = AddressOf Me.OnCONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADAS", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD}, Me.CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASCompleted(Me, New CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTAR_MAX_PORCENTAJEVALUO", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTAR_MAX_PORCENTAJEVALUO() As Double
            Dim results() As Object = Me.Invoke("CONSULTAR_MAX_PORCENTAJEVALUO", New Object(-1) {})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTAR_MAX_PORCENTAJEVALUO(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTAR_MAX_PORCENTAJEVALUO", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTAR_MAX_PORCENTAJEVALUO(ByVal asyncResult As System.IAsyncResult) As Double
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_MAX_PORCENTAJEVALUOAsync()
            Me.CONSULTAR_MAX_PORCENTAJEVALUOAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTAR_MAX_PORCENTAJEVALUOAsync(ByVal userState As Object)
            If (Me.CONSULTAR_MAX_PORCENTAJEVALUOOperationCompleted Is Nothing) Then
                Me.CONSULTAR_MAX_PORCENTAJEVALUOOperationCompleted = AddressOf Me.OnCONSULTAR_MAX_PORCENTAJEVALUOOperationCompleted
            End If
            Me.InvokeAsync("CONSULTAR_MAX_PORCENTAJEVALUO", New Object(-1) {}, Me.CONSULTAR_MAX_PORCENTAJEVALUOOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTAR_MAX_PORCENTAJEVALUOOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTAR_MAX_PORCENTAJEVALUOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTAR_MAX_PORCENTAJEVALUOCompleted(Me, New CONSULTAR_MAX_PORCENTAJEVALUOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARDET_CERTIFICACIONEXTRACTADA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARDET_CERTIFICACIONEXTRACTADA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARDET_CERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, OPCION, NOCOMPROBANTE})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARDET_CERTIFICACIONEXTRACTADA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARDET_CERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, OPCION, NOCOMPROBANTE}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARDET_CERTIFICACIONEXTRACTADA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARDET_CERTIFICACIONEXTRACTADAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String)
            Me.CONSULTARDET_CERTIFICACIONEXTRACTADAAsync(PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, OPCION, NOCOMPROBANTE, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARDET_CERTIFICACIONEXTRACTADAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal userState As Object)
            If (Me.CONSULTARDET_CERTIFICACIONEXTRACTADAOperationCompleted Is Nothing) Then
                Me.CONSULTARDET_CERTIFICACIONEXTRACTADAOperationCompleted = AddressOf Me.OnCONSULTARDET_CERTIFICACIONEXTRACTADAOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARDET_CERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, OPCION, NOCOMPROBANTE}, Me.CONSULTARDET_CERTIFICACIONEXTRACTADAOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARDET_CERTIFICACIONEXTRACTADAOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARDET_CERTIFICACIONEXTRACTADACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARDET_CERTIFICACIONEXTRACTADACompleted(Me, New CONSULTARDET_CERTIFICACIONEXTRACTADACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/INSERTAR_GRCERTIFICACION_ANOTACION", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTAR_GRCERTIFICACION_ANOTACION(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NOANOTACION As String, ByVal NUMSOLICITUD As Integer) As Boolean
            Dim results() As Object = Me.Invoke("INSERTAR_GRCERTIFICACION_ANOTACION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NOANOTACION, NUMSOLICITUD})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTAR_GRCERTIFICACION_ANOTACION(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NOANOTACION As String, ByVal NUMSOLICITUD As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTAR_GRCERTIFICACION_ANOTACION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NOANOTACION, NUMSOLICITUD}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTAR_GRCERTIFICACION_ANOTACION(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTAR_GRCERTIFICACION_ANOTACIONAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NOANOTACION As String, ByVal NUMSOLICITUD As Integer)
            Me.INSERTAR_GRCERTIFICACION_ANOTACIONAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NOANOTACION, NUMSOLICITUD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTAR_GRCERTIFICACION_ANOTACIONAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NOANOTACION As String, ByVal NUMSOLICITUD As Integer, ByVal userState As Object)
            If (Me.INSERTAR_GRCERTIFICACION_ANOTACIONOperationCompleted Is Nothing) Then
                Me.INSERTAR_GRCERTIFICACION_ANOTACIONOperationCompleted = AddressOf Me.OnINSERTAR_GRCERTIFICACION_ANOTACIONOperationCompleted
            End If
            Me.InvokeAsync("INSERTAR_GRCERTIFICACION_ANOTACION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NOANOTACION, NUMSOLICITUD}, Me.INSERTAR_GRCERTIFICACION_ANOTACIONOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTAR_GRCERTIFICACION_ANOTACIONOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTAR_GRCERTIFICACION_ANOTACIONCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTAR_GRCERTIFICACION_ANOTACIONCompleted(Me, New INSERTAR_GRCERTIFICACION_ANOTACIONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/INSERTARCERTIFICACIONEXTRACTADA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTARCERTIFICACIONEXTRACTADA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal UBICACION As String,  _
                    ByVal AREA As String,  _
                    ByVal CODDEPARTAMENTO As String,  _
                    ByVal CODMUNICIPIO As String,  _
                    ByVal CODSECCION As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As Char,  _
                    ByVal FECHA_ACTU As Date) As Integer
            Dim results() As Object = Me.Invoke("INSERTARCERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, UBICACION, AREA, CODDEPARTAMENTO, CODMUNICIPIO, CODSECCION, NUMSOLICITUD, TIPO, FECHA_ACTU})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTARCERTIFICACIONEXTRACTADA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal UBICACION As String,  _
                    ByVal AREA As String,  _
                    ByVal CODDEPARTAMENTO As String,  _
                    ByVal CODMUNICIPIO As String,  _
                    ByVal CODSECCION As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As Char,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTARCERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, UBICACION, AREA, CODDEPARTAMENTO, CODMUNICIPIO, CODSECCION, NUMSOLICITUD, TIPO, FECHA_ACTU}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTARCERTIFICACIONEXTRACTADA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTARCERTIFICACIONEXTRACTADAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal UBICACION As String,  _
                    ByVal AREA As String,  _
                    ByVal CODDEPARTAMENTO As String,  _
                    ByVal CODMUNICIPIO As String,  _
                    ByVal CODSECCION As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As Char,  _
                    ByVal FECHA_ACTU As Date)
            Me.INSERTARCERTIFICACIONEXTRACTADAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, UBICACION, AREA, CODDEPARTAMENTO, CODMUNICIPIO, CODSECCION, NUMSOLICITUD, TIPO, FECHA_ACTU, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTARCERTIFICACIONEXTRACTADAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal UBICACION As String,  _
                    ByVal AREA As String,  _
                    ByVal CODDEPARTAMENTO As String,  _
                    ByVal CODMUNICIPIO As String,  _
                    ByVal CODSECCION As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As Char,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal userState As Object)
            If (Me.INSERTARCERTIFICACIONEXTRACTADAOperationCompleted Is Nothing) Then
                Me.INSERTARCERTIFICACIONEXTRACTADAOperationCompleted = AddressOf Me.OnINSERTARCERTIFICACIONEXTRACTADAOperationCompleted
            End If
            Me.InvokeAsync("INSERTARCERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, UBICACION, AREA, CODDEPARTAMENTO, CODMUNICIPIO, CODSECCION, NUMSOLICITUD, TIPO, FECHA_ACTU}, Me.INSERTARCERTIFICACIONEXTRACTADAOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTARCERTIFICACIONEXTRACTADAOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTARCERTIFICACIONEXTRACTADACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTARCERTIFICACIONEXTRACTADACompleted(Me, New INSERTARCERTIFICACIONEXTRACTADACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/MODIFICARCERTIFICACIONEXTRACTADA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICARCERTIFICACIONEXTRACTADA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal UBICACION As String,  _
                    ByVal AREA As String,  _
                    ByVal CODDEPARTAMENTO As String,  _
                    ByVal CODMUNICIPIO As String,  _
                    ByVal CODSECCION As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As Char,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal OPCION As Integer) As Integer
            Dim results() As Object = Me.Invoke("MODIFICARCERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, UBICACION, AREA, CODDEPARTAMENTO, CODMUNICIPIO, CODSECCION, NUMSOLICITUD, TIPO, FECHA_ACTU, OPCION})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICARCERTIFICACIONEXTRACTADA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal UBICACION As String,  _
                    ByVal AREA As String,  _
                    ByVal CODDEPARTAMENTO As String,  _
                    ByVal CODMUNICIPIO As String,  _
                    ByVal CODSECCION As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As Char,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal OPCION As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICARCERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, UBICACION, AREA, CODDEPARTAMENTO, CODMUNICIPIO, CODSECCION, NUMSOLICITUD, TIPO, FECHA_ACTU, OPCION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICARCERTIFICACIONEXTRACTADA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICARCERTIFICACIONEXTRACTADAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal UBICACION As String,  _
                    ByVal AREA As String,  _
                    ByVal CODDEPARTAMENTO As String,  _
                    ByVal CODMUNICIPIO As String,  _
                    ByVal CODSECCION As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As Char,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal OPCION As Integer)
            Me.MODIFICARCERTIFICACIONEXTRACTADAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, UBICACION, AREA, CODDEPARTAMENTO, CODMUNICIPIO, CODSECCION, NUMSOLICITUD, TIPO, FECHA_ACTU, OPCION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICARCERTIFICACIONEXTRACTADAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As Date,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal UBICACION As String,  _
                    ByVal AREA As String,  _
                    ByVal CODDEPARTAMENTO As String,  _
                    ByVal CODMUNICIPIO As String,  _
                    ByVal CODSECCION As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As Char,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal OPCION As Integer,  _
                    ByVal userState As Object)
            If (Me.MODIFICARCERTIFICACIONEXTRACTADAOperationCompleted Is Nothing) Then
                Me.MODIFICARCERTIFICACIONEXTRACTADAOperationCompleted = AddressOf Me.OnMODIFICARCERTIFICACIONEXTRACTADAOperationCompleted
            End If
            Me.InvokeAsync("MODIFICARCERTIFICACIONEXTRACTADA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, UBICACION, AREA, CODDEPARTAMENTO, CODMUNICIPIO, CODSECCION, NUMSOLICITUD, TIPO, FECHA_ACTU, OPCION}, Me.MODIFICARCERTIFICACIONEXTRACTADAOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICARCERTIFICACIONEXTRACTADAOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICARCERTIFICACIONEXTRACTADACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICARCERTIFICACIONEXTRACTADACompleted(Me, New MODIFICARCERTIFICACIONEXTRACTADACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARGRPRESTAMOSINSCRIPCION", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARGRPRESTAMOSINSCRIPCION(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARGRPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARGRPRESTAMOSINSCRIPCION(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARGRPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARGRPRESTAMOSINSCRIPCION(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARGRPRESTAMOSINSCRIPCIONAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer)
            Me.CONSULTARGRPRESTAMOSINSCRIPCIONAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARGRPRESTAMOSINSCRIPCIONAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal userState As Object)
            If (Me.CONSULTARGRPRESTAMOSINSCRIPCIONOperationCompleted Is Nothing) Then
                Me.CONSULTARGRPRESTAMOSINSCRIPCIONOperationCompleted = AddressOf Me.OnCONSULTARGRPRESTAMOSINSCRIPCIONOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARGRPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION}, Me.CONSULTARGRPRESTAMOSINSCRIPCIONOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARGRPRESTAMOSINSCRIPCIONOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARGRPRESTAMOSINSCRIPCIONCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARGRPRESTAMOSINSCRIPCIONCompleted(Me, New CONSULTARGRPRESTAMOSINSCRIPCIONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ELIMINARINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ELIMINARINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String) As Integer
            Dim results() As Object = Me.Invoke("ELIMINARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginELIMINARINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ELIMINARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndELIMINARINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ELIMINARINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String)
            Me.ELIMINARINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ELIMINARINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal userState As Object)
            If (Me.ELIMINARINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.ELIMINARINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnELIMINARINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("ELIMINARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE}, Me.ELIMINARINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnELIMINARINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.ELIMINARINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ELIMINARINSCRIPCIONGARANTIACompleted(Me, New ELIMINARINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ELIMINARPRESTAMOSINSCRIPCION", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ELIMINARPRESTAMOSINSCRIPCION(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer) As Integer
            Dim results() As Object = Me.Invoke("ELIMINARPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginELIMINARPRESTAMOSINSCRIPCION(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ELIMINARPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndELIMINARPRESTAMOSINSCRIPCION(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ELIMINARPRESTAMOSINSCRIPCIONAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer)
            Me.ELIMINARPRESTAMOSINSCRIPCIONAsync(PUSUARIO, PWD, PSUCURSAL, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ELIMINARPRESTAMOSINSCRIPCIONAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.ELIMINARPRESTAMOSINSCRIPCIONOperationCompleted Is Nothing) Then
                Me.ELIMINARPRESTAMOSINSCRIPCIONOperationCompleted = AddressOf Me.OnELIMINARPRESTAMOSINSCRIPCIONOperationCompleted
            End If
            Me.InvokeAsync("ELIMINARPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, CORRELATIVO}, Me.ELIMINARPRESTAMOSINSCRIPCIONOperationCompleted, userState)
        End Sub
        
        Private Sub OnELIMINARPRESTAMOSINSCRIPCIONOperationCompleted(ByVal arg As Object)
            If (Not (Me.ELIMINARPRESTAMOSINSCRIPCIONCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ELIMINARPRESTAMOSINSCRIPCIONCompleted(Me, New ELIMINARPRESTAMOSINSCRIPCIONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/INSERTARPRESTAMOSINSCRIPCION", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTARPRESTAMOSINSCRIPCION(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NUMSOLICITUD As Integer) As Integer
            Dim results() As Object = Me.Invoke("INSERTARPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NUMSOLICITUD})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTARPRESTAMOSINSCRIPCION(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NUMSOLICITUD As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTARPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NUMSOLICITUD}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTARPRESTAMOSINSCRIPCION(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTARPRESTAMOSINSCRIPCIONAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NUMSOLICITUD As Integer)
            Me.INSERTARPRESTAMOSINSCRIPCIONAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NUMSOLICITUD, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTARPRESTAMOSINSCRIPCIONAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal NUMSOLICITUD As Integer, ByVal userState As Object)
            If (Me.INSERTARPRESTAMOSINSCRIPCIONOperationCompleted Is Nothing) Then
                Me.INSERTARPRESTAMOSINSCRIPCIONOperationCompleted = AddressOf Me.OnINSERTARPRESTAMOSINSCRIPCIONOperationCompleted
            End If
            Me.InvokeAsync("INSERTARPRESTAMOSINSCRIPCION", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, NUMSOLICITUD}, Me.INSERTARPRESTAMOSINSCRIPCIONOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTARPRESTAMOSINSCRIPCIONOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTARPRESTAMOSINSCRIPCIONCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTARPRESTAMOSINSCRIPCIONCompleted(Me, New INSERTARPRESTAMOSINSCRIPCIONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARPRESENTACIONES", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARPRESENTACIONES(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARPRESENTACIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARPRESENTACIONES(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARPRESENTACIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARPRESENTACIONES(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARPRESENTACIONESAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer)
            Me.CONSULTARPRESENTACIONESAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARPRESENTACIONESAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.CONSULTARPRESENTACIONESOperationCompleted Is Nothing) Then
                Me.CONSULTARPRESENTACIONESOperationCompleted = AddressOf Me.OnCONSULTARPRESENTACIONESOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARPRESENTACIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO}, Me.CONSULTARPRESENTACIONESOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARPRESENTACIONESOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARPRESENTACIONESCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARPRESENTACIONESCompleted(Me, New CONSULTARPRESENTACIONESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARRESTRICCIONES", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARRESTRICCIONES(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARRESTRICCIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARRESTRICCIONES(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARRESTRICCIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARRESTRICCIONES(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARRESTRICCIONESAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer)
            Me.CONSULTARRESTRICCIONESAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARRESTRICCIONESAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.CONSULTARRESTRICCIONESOperationCompleted Is Nothing) Then
                Me.CONSULTARRESTRICCIONESOperationCompleted = AddressOf Me.OnCONSULTARRESTRICCIONESOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARRESTRICCIONES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO}, Me.CONSULTARRESTRICCIONESOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARRESTRICCIONESOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARRESTRICCIONESCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARRESTRICCIONESCompleted(Me, New CONSULTARRESTRICCIONESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARACREEDORES", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARACREEDORES(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARACREEDORES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARACREEDORES(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARACREEDORES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARACREEDORES(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARACREEDORESAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer)
            Me.CONSULTARACREEDORESAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARACREEDORESAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NOCOMPROBANTE As String, ByVal OPCION As Integer, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.CONSULTARACREEDORESOperationCompleted Is Nothing) Then
                Me.CONSULTARACREEDORESOperationCompleted = AddressOf Me.OnCONSULTARACREEDORESOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARACREEDORES", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, OPCION, CORRELATIVO}, Me.CONSULTARACREEDORESOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARACREEDORESOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARACREEDORESCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARACREEDORESCompleted(Me, New CONSULTARACREEDORESCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/MODIFICARINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICARINSCRIPCIONGARANTIA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal NOFOLIO As String,  _
                    ByVal TIPOTRANSACCION As Integer,  _
                    ByVal NOESCRITURA As String,  _
                    ByVal NUMLIBRO As String,  _
                    ByVal FECCNR As Date,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECCONSULTA As Date,  _
                    ByVal SITUACION As Integer,  _
                    ByVal OBS As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As String,  _
                    ByVal FECHA_ENTREGATEST As Date,  _
                    ByVal TIPOHIPOTECA As Integer,  _
                    ByVal PLAZO As Integer,  _
                    ByVal TASA_INTERES As Double,  _
                    ByVal FEC_OTORG_HIPOTECAA As Date,  _
                    ByVal MONTO_HIPOTECAA As Double,  _
                    ByVal PLAZO_HIPOTECAA As Integer,  _
                    ByVal IDANOTACION As Integer,  _
                    ByVal NOCOMPROBANTECERTIFICACION As String,  _
                    ByVal TIPONOTARIO As Integer,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal IDNOTARIO As Integer) As Integer
            Dim results() As Object = Me.Invoke("MODIFICARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, NOFOLIO, TIPOTRANSACCION, NOESCRITURA, NUMLIBRO, FECCNR, NOPRESENTACION, FECCONSULTA, SITUACION, OBS, NUMSOLICITUD, TIPO, FECHA_ENTREGATEST, TIPOHIPOTECA, PLAZO, TASA_INTERES, FEC_OTORG_HIPOTECAA, MONTO_HIPOTECAA, PLAZO_HIPOTECAA, IDANOTACION, NOCOMPROBANTECERTIFICACION, TIPONOTARIO, USUARIO, FECHA_ACTU, IDNOTARIO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICARINSCRIPCIONGARANTIA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal NOFOLIO As String,  _
                    ByVal TIPOTRANSACCION As Integer,  _
                    ByVal NOESCRITURA As String,  _
                    ByVal NUMLIBRO As String,  _
                    ByVal FECCNR As Date,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECCONSULTA As Date,  _
                    ByVal SITUACION As Integer,  _
                    ByVal OBS As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As String,  _
                    ByVal FECHA_ENTREGATEST As Date,  _
                    ByVal TIPOHIPOTECA As Integer,  _
                    ByVal PLAZO As Integer,  _
                    ByVal TASA_INTERES As Double,  _
                    ByVal FEC_OTORG_HIPOTECAA As Date,  _
                    ByVal MONTO_HIPOTECAA As Double,  _
                    ByVal PLAZO_HIPOTECAA As Integer,  _
                    ByVal IDANOTACION As Integer,  _
                    ByVal NOCOMPROBANTECERTIFICACION As String,  _
                    ByVal TIPONOTARIO As Integer,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal IDNOTARIO As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, NOFOLIO, TIPOTRANSACCION, NOESCRITURA, NUMLIBRO, FECCNR, NOPRESENTACION, FECCONSULTA, SITUACION, OBS, NUMSOLICITUD, TIPO, FECHA_ENTREGATEST, TIPOHIPOTECA, PLAZO, TASA_INTERES, FEC_OTORG_HIPOTECAA, MONTO_HIPOTECAA, PLAZO_HIPOTECAA, IDANOTACION, NOCOMPROBANTECERTIFICACION, TIPONOTARIO, USUARIO, FECHA_ACTU, IDNOTARIO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICARINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICARINSCRIPCIONGARANTIAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal NOFOLIO As String,  _
                    ByVal TIPOTRANSACCION As Integer,  _
                    ByVal NOESCRITURA As String,  _
                    ByVal NUMLIBRO As String,  _
                    ByVal FECCNR As Date,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECCONSULTA As Date,  _
                    ByVal SITUACION As Integer,  _
                    ByVal OBS As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As String,  _
                    ByVal FECHA_ENTREGATEST As Date,  _
                    ByVal TIPOHIPOTECA As Integer,  _
                    ByVal PLAZO As Integer,  _
                    ByVal TASA_INTERES As Double,  _
                    ByVal FEC_OTORG_HIPOTECAA As Date,  _
                    ByVal MONTO_HIPOTECAA As Double,  _
                    ByVal PLAZO_HIPOTECAA As Integer,  _
                    ByVal IDANOTACION As Integer,  _
                    ByVal NOCOMPROBANTECERTIFICACION As String,  _
                    ByVal TIPONOTARIO As Integer,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal IDNOTARIO As Integer)
            Me.MODIFICARINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, NOFOLIO, TIPOTRANSACCION, NOESCRITURA, NUMLIBRO, FECCNR, NOPRESENTACION, FECCONSULTA, SITUACION, OBS, NUMSOLICITUD, TIPO, FECHA_ENTREGATEST, TIPOHIPOTECA, PLAZO, TASA_INTERES, FEC_OTORG_HIPOTECAA, MONTO_HIPOTECAA, PLAZO_HIPOTECAA, IDANOTACION, NOCOMPROBANTECERTIFICACION, TIPONOTARIO, USUARIO, FECHA_ACTU, IDNOTARIO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICARINSCRIPCIONGARANTIAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal NOFOLIO As String,  _
                    ByVal TIPOTRANSACCION As Integer,  _
                    ByVal NOESCRITURA As String,  _
                    ByVal NUMLIBRO As String,  _
                    ByVal FECCNR As Date,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECCONSULTA As Date,  _
                    ByVal SITUACION As Integer,  _
                    ByVal OBS As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As String,  _
                    ByVal FECHA_ENTREGATEST As Date,  _
                    ByVal TIPOHIPOTECA As Integer,  _
                    ByVal PLAZO As Integer,  _
                    ByVal TASA_INTERES As Double,  _
                    ByVal FEC_OTORG_HIPOTECAA As Date,  _
                    ByVal MONTO_HIPOTECAA As Double,  _
                    ByVal PLAZO_HIPOTECAA As Integer,  _
                    ByVal IDANOTACION As Integer,  _
                    ByVal NOCOMPROBANTECERTIFICACION As String,  _
                    ByVal TIPONOTARIO As Integer,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal IDNOTARIO As Integer,  _
                    ByVal userState As Object)
            If (Me.MODIFICARINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.MODIFICARINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnMODIFICARINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("MODIFICARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, NOFOLIO, TIPOTRANSACCION, NOESCRITURA, NUMLIBRO, FECCNR, NOPRESENTACION, FECCONSULTA, SITUACION, OBS, NUMSOLICITUD, TIPO, FECHA_ENTREGATEST, TIPOHIPOTECA, PLAZO, TASA_INTERES, FEC_OTORG_HIPOTECAA, MONTO_HIPOTECAA, PLAZO_HIPOTECAA, IDANOTACION, NOCOMPROBANTECERTIFICACION, TIPONOTARIO, USUARIO, FECHA_ACTU, IDNOTARIO}, Me.MODIFICARINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICARINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICARINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICARINSCRIPCIONGARANTIACompleted(Me, New MODIFICARINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/INSERTARINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTARINSCRIPCIONGARANTIA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal NOFOLIO As String,  _
                    ByVal TIPOTRANSACCION As Integer,  _
                    ByVal NOESCRITURA As String,  _
                    ByVal NUMLIBRO As String,  _
                    ByVal FECCNR As Date,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECCONSULTA As Date,  _
                    ByVal SITUACION As Integer,  _
                    ByVal OBS As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As String,  _
                    ByVal FECHA_ENTREGATEST As Date,  _
                    ByVal TIPOHIPOTECA As Integer,  _
                    ByVal PLAZO As Integer,  _
                    ByVal TASA_INTERES As Double,  _
                    ByVal FEC_OTORG_HIPOTECAA As Date,  _
                    ByVal MONTO_HIPOTECAA As Double,  _
                    ByVal PLAZO_HIPOTECAA As Integer,  _
                    ByVal IDANOTACION As Integer,  _
                    ByVal NOCOMPROBANTECERTIFICACION As String,  _
                    ByVal TIPONOTARIO As Integer,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal IDNOTARIO As Integer) As Integer
            Dim results() As Object = Me.Invoke("INSERTARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, NOFOLIO, TIPOTRANSACCION, NOESCRITURA, NUMLIBRO, FECCNR, NOPRESENTACION, FECCONSULTA, SITUACION, OBS, NUMSOLICITUD, TIPO, FECHA_ENTREGATEST, TIPOHIPOTECA, PLAZO, TASA_INTERES, FEC_OTORG_HIPOTECAA, MONTO_HIPOTECAA, PLAZO_HIPOTECAA, IDANOTACION, NOCOMPROBANTECERTIFICACION, TIPONOTARIO, USUARIO, FECHA_ACTU, IDNOTARIO})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTARINSCRIPCIONGARANTIA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal NOFOLIO As String,  _
                    ByVal TIPOTRANSACCION As Integer,  _
                    ByVal NOESCRITURA As String,  _
                    ByVal NUMLIBRO As String,  _
                    ByVal FECCNR As Date,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECCONSULTA As Date,  _
                    ByVal SITUACION As Integer,  _
                    ByVal OBS As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As String,  _
                    ByVal FECHA_ENTREGATEST As Date,  _
                    ByVal TIPOHIPOTECA As Integer,  _
                    ByVal PLAZO As Integer,  _
                    ByVal TASA_INTERES As Double,  _
                    ByVal FEC_OTORG_HIPOTECAA As Date,  _
                    ByVal MONTO_HIPOTECAA As Double,  _
                    ByVal PLAZO_HIPOTECAA As Integer,  _
                    ByVal IDANOTACION As Integer,  _
                    ByVal NOCOMPROBANTECERTIFICACION As String,  _
                    ByVal TIPONOTARIO As Integer,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal IDNOTARIO As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, NOFOLIO, TIPOTRANSACCION, NOESCRITURA, NUMLIBRO, FECCNR, NOPRESENTACION, FECCONSULTA, SITUACION, OBS, NUMSOLICITUD, TIPO, FECHA_ENTREGATEST, TIPOHIPOTECA, PLAZO, TASA_INTERES, FEC_OTORG_HIPOTECAA, MONTO_HIPOTECAA, PLAZO_HIPOTECAA, IDANOTACION, NOCOMPROBANTECERTIFICACION, TIPONOTARIO, USUARIO, FECHA_ACTU, IDNOTARIO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTARINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTARINSCRIPCIONGARANTIAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal NOFOLIO As String,  _
                    ByVal TIPOTRANSACCION As Integer,  _
                    ByVal NOESCRITURA As String,  _
                    ByVal NUMLIBRO As String,  _
                    ByVal FECCNR As Date,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECCONSULTA As Date,  _
                    ByVal SITUACION As Integer,  _
                    ByVal OBS As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As String,  _
                    ByVal FECHA_ENTREGATEST As Date,  _
                    ByVal TIPOHIPOTECA As Integer,  _
                    ByVal PLAZO As Integer,  _
                    ByVal TASA_INTERES As Double,  _
                    ByVal FEC_OTORG_HIPOTECAA As Date,  _
                    ByVal MONTO_HIPOTECAA As Double,  _
                    ByVal PLAZO_HIPOTECAA As Integer,  _
                    ByVal IDANOTACION As Integer,  _
                    ByVal NOCOMPROBANTECERTIFICACION As String,  _
                    ByVal TIPONOTARIO As Integer,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal IDNOTARIO As Integer)
            Me.INSERTARINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, NOFOLIO, TIPOTRANSACCION, NOESCRITURA, NUMLIBRO, FECCNR, NOPRESENTACION, FECCONSULTA, SITUACION, OBS, NUMSOLICITUD, TIPO, FECHA_ENTREGATEST, TIPOHIPOTECA, PLAZO, TASA_INTERES, FEC_OTORG_HIPOTECAA, MONTO_HIPOTECAA, PLAZO_HIPOTECAA, IDANOTACION, NOCOMPROBANTECERTIFICACION, TIPONOTARIO, USUARIO, FECHA_ACTU, IDNOTARIO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTARINSCRIPCIONGARANTIAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal FECHA As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal NOLIBRO As String,  _
                    ByVal NOMATRICULA As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal NOFOLIO As String,  _
                    ByVal TIPOTRANSACCION As Integer,  _
                    ByVal NOESCRITURA As String,  _
                    ByVal NUMLIBRO As String,  _
                    ByVal FECCNR As Date,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECCONSULTA As Date,  _
                    ByVal SITUACION As Integer,  _
                    ByVal OBS As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal TIPO As String,  _
                    ByVal FECHA_ENTREGATEST As Date,  _
                    ByVal TIPOHIPOTECA As Integer,  _
                    ByVal PLAZO As Integer,  _
                    ByVal TASA_INTERES As Double,  _
                    ByVal FEC_OTORG_HIPOTECAA As Date,  _
                    ByVal MONTO_HIPOTECAA As Double,  _
                    ByVal PLAZO_HIPOTECAA As Integer,  _
                    ByVal IDANOTACION As Integer,  _
                    ByVal NOCOMPROBANTECERTIFICACION As String,  _
                    ByVal TIPONOTARIO As Integer,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal IDNOTARIO As Integer,  _
                    ByVal userState As Object)
            If (Me.INSERTARINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.INSERTARINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnINSERTARINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("INSERTARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NOCOMPROBANTE, FECHA, NOINSCRIPCION, NOLIBRO, NOMATRICULA, NOASIENTO, NOFOLIO, TIPOTRANSACCION, NOESCRITURA, NUMLIBRO, FECCNR, NOPRESENTACION, FECCONSULTA, SITUACION, OBS, NUMSOLICITUD, TIPO, FECHA_ENTREGATEST, TIPOHIPOTECA, PLAZO, TASA_INTERES, FEC_OTORG_HIPOTECAA, MONTO_HIPOTECAA, PLAZO_HIPOTECAA, IDANOTACION, NOCOMPROBANTECERTIFICACION, TIPONOTARIO, USUARIO, FECHA_ACTU, IDNOTARIO}, Me.INSERTARINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTARINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTARINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTARINSCRIPCIONGARANTIACompleted(Me, New INSERTARINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARINSCRIPCIONGARANTIA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal DUI As String, ByVal NOMATRICULA As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, OPCION, NOCOMPROBANTE, DUI, NOMATRICULA})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARINSCRIPCIONGARANTIA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal DUI As String, ByVal NOMATRICULA As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, OPCION, NOCOMPROBANTE, DUI, NOMATRICULA}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARINSCRIPCIONGARANTIA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal DUI As String, ByVal NOMATRICULA As String)
            Me.CONSULTARINSCRIPCIONGARANTIAAsync(PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, OPCION, NOCOMPROBANTE, DUI, NOMATRICULA, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARINSCRIPCIONGARANTIAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal DUI As String, ByVal NOMATRICULA As String, ByVal userState As Object)
            If (Me.CONSULTARINSCRIPCIONGARANTIAOperationCompleted Is Nothing) Then
                Me.CONSULTARINSCRIPCIONGARANTIAOperationCompleted = AddressOf Me.OnCONSULTARINSCRIPCIONGARANTIAOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARINSCRIPCIONGARANTIA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, OPCION, NOCOMPROBANTE, DUI, NOMATRICULA}, Me.CONSULTARINSCRIPCIONGARANTIAOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARINSCRIPCIONGARANTIAOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARINSCRIPCIONGARANTIACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARINSCRIPCIONGARANTIACompleted(Me, New CONSULTARINSCRIPCIONGARANTIACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ELIMINARANOTACIONPREVENTIVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ELIMINARANOTACIONPREVENTIVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDANOTACION As Integer) As Integer
            Dim results() As Object = Me.Invoke("ELIMINARANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, IDANOTACION})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginELIMINARANOTACIONPREVENTIVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDANOTACION As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ELIMINARANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, IDANOTACION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndELIMINARANOTACIONPREVENTIVA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ELIMINARANOTACIONPREVENTIVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDANOTACION As Integer)
            Me.ELIMINARANOTACIONPREVENTIVAAsync(PUSUARIO, PWD, PSUCURSAL, IDANOTACION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ELIMINARANOTACIONPREVENTIVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDANOTACION As Integer, ByVal userState As Object)
            If (Me.ELIMINARANOTACIONPREVENTIVAOperationCompleted Is Nothing) Then
                Me.ELIMINARANOTACIONPREVENTIVAOperationCompleted = AddressOf Me.OnELIMINARANOTACIONPREVENTIVAOperationCompleted
            End If
            Me.InvokeAsync("ELIMINARANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, IDANOTACION}, Me.ELIMINARANOTACIONPREVENTIVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnELIMINARANOTACIONPREVENTIVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.ELIMINARANOTACIONPREVENTIVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ELIMINARANOTACIONPREVENTIVACompleted(Me, New ELIMINARANOTACIONPREVENTIVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/MODIFICARANOTACIONPREVENTIVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MODIFICARANOTACIONPREVENTIVA(ByVal PSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDANOTACAION As Integer, ByVal NOANOTACION As String, ByVal NOPRESENTACION As String, ByVal FECHAPRESENTACION As Date, ByVal OBSERVACION As String, ByVal USUARIO As String, ByVal FECHA_ACTU As Date, ByVal FECHAINICIOANOTACION As Date, ByVal FECHAFINANOTACION As Date) As Integer
            Dim results() As Object = Me.Invoke("MODIFICARANOTACIONPREVENTIVA", New Object() {PSUARIO, PWD, PSUCURSAL, IDANOTACAION, NOANOTACION, NOPRESENTACION, FECHAPRESENTACION, OBSERVACION, USUARIO, FECHA_ACTU, FECHAINICIOANOTACION, FECHAFINANOTACION})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginMODIFICARANOTACIONPREVENTIVA(ByVal PSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDANOTACAION As Integer, ByVal NOANOTACION As String, ByVal NOPRESENTACION As String, ByVal FECHAPRESENTACION As Date, ByVal OBSERVACION As String, ByVal USUARIO As String, ByVal FECHA_ACTU As Date, ByVal FECHAINICIOANOTACION As Date, ByVal FECHAFINANOTACION As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MODIFICARANOTACIONPREVENTIVA", New Object() {PSUARIO, PWD, PSUCURSAL, IDANOTACAION, NOANOTACION, NOPRESENTACION, FECHAPRESENTACION, OBSERVACION, USUARIO, FECHA_ACTU, FECHAINICIOANOTACION, FECHAFINANOTACION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMODIFICARANOTACIONPREVENTIVA(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MODIFICARANOTACIONPREVENTIVAAsync(ByVal PSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDANOTACAION As Integer, ByVal NOANOTACION As String, ByVal NOPRESENTACION As String, ByVal FECHAPRESENTACION As Date, ByVal OBSERVACION As String, ByVal USUARIO As String, ByVal FECHA_ACTU As Date, ByVal FECHAINICIOANOTACION As Date, ByVal FECHAFINANOTACION As Date)
            Me.MODIFICARANOTACIONPREVENTIVAAsync(PSUARIO, PWD, PSUCURSAL, IDANOTACAION, NOANOTACION, NOPRESENTACION, FECHAPRESENTACION, OBSERVACION, USUARIO, FECHA_ACTU, FECHAINICIOANOTACION, FECHAFINANOTACION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MODIFICARANOTACIONPREVENTIVAAsync(ByVal PSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal IDANOTACAION As Integer, ByVal NOANOTACION As String, ByVal NOPRESENTACION As String, ByVal FECHAPRESENTACION As Date, ByVal OBSERVACION As String, ByVal USUARIO As String, ByVal FECHA_ACTU As Date, ByVal FECHAINICIOANOTACION As Date, ByVal FECHAFINANOTACION As Date, ByVal userState As Object)
            If (Me.MODIFICARANOTACIONPREVENTIVAOperationCompleted Is Nothing) Then
                Me.MODIFICARANOTACIONPREVENTIVAOperationCompleted = AddressOf Me.OnMODIFICARANOTACIONPREVENTIVAOperationCompleted
            End If
            Me.InvokeAsync("MODIFICARANOTACIONPREVENTIVA", New Object() {PSUARIO, PWD, PSUCURSAL, IDANOTACAION, NOANOTACION, NOPRESENTACION, FECHAPRESENTACION, OBSERVACION, USUARIO, FECHA_ACTU, FECHAINICIOANOTACION, FECHAFINANOTACION}, Me.MODIFICARANOTACIONPREVENTIVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnMODIFICARANOTACIONPREVENTIVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.MODIFICARANOTACIONPREVENTIVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MODIFICARANOTACIONPREVENTIVACompleted(Me, New MODIFICARANOTACIONPREVENTIVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARANOTACIONPREVENTIVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARANOTACIONPREVENTIVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal IDANOTACION As Integer, ByVal OPCION As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, IDANOTACION, OPCION})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARANOTACIONPREVENTIVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal IDANOTACION As Integer, ByVal OPCION As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, IDANOTACION, OPCION}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARANOTACIONPREVENTIVA(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARANOTACIONPREVENTIVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal IDANOTACION As Integer, ByVal OPCION As Integer)
            Me.CONSULTARANOTACIONPREVENTIVAAsync(PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, IDANOTACION, OPCION, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARANOTACIONPREVENTIVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal IDANOTACION As Integer, ByVal OPCION As Integer, ByVal userState As Object)
            If (Me.CONSULTARANOTACIONPREVENTIVAOperationCompleted Is Nothing) Then
                Me.CONSULTARANOTACIONPREVENTIVAOperationCompleted = AddressOf Me.OnCONSULTARANOTACIONPREVENTIVAOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARANOTACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, IDANOTACION, OPCION}, Me.CONSULTARANOTACIONPREVENTIVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARANOTACIONPREVENTIVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARANOTACIONPREVENTIVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARANOTACIONPREVENTIVACompleted(Me, New CONSULTARANOTACIONPREVENTIVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/INSERTARANOACIONPREVENTIVA", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function INSERTARANOACIONPREVENTIVA(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal NOANOTACION As String, ByVal NOPRESENTACION As String, ByVal FECHAPRESENTACION As Date, ByVal OBSERVACION As String, ByVal NOINSCRIPCION As String, ByVal USUARIO As String, ByVal FECHA_ACTU As Date, ByVal FECHAINICIOANOTACION As Date, ByVal FECHAFINANOTACION As Date, ByVal NOCOMPROBANTE As String, ByVal NOASIENTO As String) As Boolean
            Dim results() As Object = Me.Invoke("INSERTARANOACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, NOANOTACION, NOPRESENTACION, FECHAPRESENTACION, OBSERVACION, NOINSCRIPCION, USUARIO, FECHA_ACTU, FECHAINICIOANOTACION, FECHAFINANOTACION, NOCOMPROBANTE, NOASIENTO})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginINSERTARANOACIONPREVENTIVA( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal NOANOTACION As String,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECHAPRESENTACION As Date,  _
                    ByVal OBSERVACION As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal FECHAINICIOANOTACION As Date,  _
                    ByVal FECHAFINANOTACION As Date,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("INSERTARANOACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, NOANOTACION, NOPRESENTACION, FECHAPRESENTACION, OBSERVACION, NOINSCRIPCION, USUARIO, FECHA_ACTU, FECHAINICIOANOTACION, FECHAFINANOTACION, NOCOMPROBANTE, NOASIENTO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndINSERTARANOACIONPREVENTIVA(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub INSERTARANOACIONPREVENTIVAAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal NUMSOLICITUD As Integer, ByVal NOANOTACION As String, ByVal NOPRESENTACION As String, ByVal FECHAPRESENTACION As Date, ByVal OBSERVACION As String, ByVal NOINSCRIPCION As String, ByVal USUARIO As String, ByVal FECHA_ACTU As Date, ByVal FECHAINICIOANOTACION As Date, ByVal FECHAFINANOTACION As Date, ByVal NOCOMPROBANTE As String, ByVal NOASIENTO As String)
            Me.INSERTARANOACIONPREVENTIVAAsync(PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, NOANOTACION, NOPRESENTACION, FECHAPRESENTACION, OBSERVACION, NOINSCRIPCION, USUARIO, FECHA_ACTU, FECHAINICIOANOTACION, FECHAFINANOTACION, NOCOMPROBANTE, NOASIENTO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub INSERTARANOACIONPREVENTIVAAsync( _
                    ByVal PUSUARIO As String,  _
                    ByVal PWD As String,  _
                    ByVal PSUCURSAL As String,  _
                    ByVal NUMSOLICITUD As Integer,  _
                    ByVal NOANOTACION As String,  _
                    ByVal NOPRESENTACION As String,  _
                    ByVal FECHAPRESENTACION As Date,  _
                    ByVal OBSERVACION As String,  _
                    ByVal NOINSCRIPCION As String,  _
                    ByVal USUARIO As String,  _
                    ByVal FECHA_ACTU As Date,  _
                    ByVal FECHAINICIOANOTACION As Date,  _
                    ByVal FECHAFINANOTACION As Date,  _
                    ByVal NOCOMPROBANTE As String,  _
                    ByVal NOASIENTO As String,  _
                    ByVal userState As Object)
            If (Me.INSERTARANOACIONPREVENTIVAOperationCompleted Is Nothing) Then
                Me.INSERTARANOACIONPREVENTIVAOperationCompleted = AddressOf Me.OnINSERTARANOACIONPREVENTIVAOperationCompleted
            End If
            Me.InvokeAsync("INSERTARANOACIONPREVENTIVA", New Object() {PUSUARIO, PWD, PSUCURSAL, NUMSOLICITUD, NOANOTACION, NOPRESENTACION, FECHAPRESENTACION, OBSERVACION, NOINSCRIPCION, USUARIO, FECHA_ACTU, FECHAINICIOANOTACION, FECHAFINANOTACION, NOCOMPROBANTE, NOASIENTO}, Me.INSERTARANOACIONPREVENTIVAOperationCompleted, userState)
        End Sub
        
        Private Sub OnINSERTARANOACIONPREVENTIVAOperationCompleted(ByVal arg As Object)
            If (Not (Me.INSERTARANOACIONPREVENTIVACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent INSERTARANOACIONPREVENTIVACompleted(Me, New INSERTARANOACIONPREVENTIVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CONSULTARDUENOSINMUEBLE", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CONSULTARDUENOSINMUEBLE(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal CORRELATIVO As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CONSULTARDUENOSINMUEBLE", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, NOCOMPROBANTE, CORRELATIVO})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCONSULTARDUENOSINMUEBLE(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal CORRELATIVO As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CONSULTARDUENOSINMUEBLE", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, NOCOMPROBANTE, CORRELATIVO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCONSULTARDUENOSINMUEBLE(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CONSULTARDUENOSINMUEBLEAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal CORRELATIVO As Integer)
            Me.CONSULTARDUENOSINMUEBLEAsync(PUSUARIO, PWD, PSUCURSAL, OPCION, NOCOMPROBANTE, CORRELATIVO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CONSULTARDUENOSINMUEBLEAsync(ByVal PUSUARIO As String, ByVal PWD As String, ByVal PSUCURSAL As String, ByVal OPCION As Integer, ByVal NOCOMPROBANTE As String, ByVal CORRELATIVO As Integer, ByVal userState As Object)
            If (Me.CONSULTARDUENOSINMUEBLEOperationCompleted Is Nothing) Then
                Me.CONSULTARDUENOSINMUEBLEOperationCompleted = AddressOf Me.OnCONSULTARDUENOSINMUEBLEOperationCompleted
            End If
            Me.InvokeAsync("CONSULTARDUENOSINMUEBLE", New Object() {PUSUARIO, PWD, PSUCURSAL, OPCION, NOCOMPROBANTE, CORRELATIVO}, Me.CONSULTARDUENOSINMUEBLEOperationCompleted, userState)
        End Sub
        
        Private Sub OnCONSULTARDUENOSINMUEBLEOperationCompleted(ByVal arg As Object)
            If (Not (Me.CONSULTARDUENOSINMUEBLECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CONSULTARDUENOSINMUEBLECompleted(Me, New CONSULTARDUENOSINMUEBLECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/EliminarCertificacionExtractada", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarCertificacionExtractada(ByVal pNoComprobante As String, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarCertificacionExtractada", New Object() {pNoComprobante, pTipo, pUs, pPa, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarCertificacionExtractada(ByVal pNoComprobante As String, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarCertificacionExtractada", New Object() {pNoComprobante, pTipo, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarCertificacionExtractada(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarCertificacionExtractadaAsync(ByVal pNoComprobante As String, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.EliminarCertificacionExtractadaAsync(pNoComprobante, pTipo, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarCertificacionExtractadaAsync(ByVal pNoComprobante As String, ByVal pTipo As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.EliminarCertificacionExtractadaOperationCompleted Is Nothing) Then
                Me.EliminarCertificacionExtractadaOperationCompleted = AddressOf Me.OnEliminarCertificacionExtractadaOperationCompleted
            End If
            Me.InvokeAsync("EliminarCertificacionExtractada", New Object() {pNoComprobante, pTipo, pUs, pPa, pSucursal}, Me.EliminarCertificacionExtractadaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarCertificacionExtractadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarCertificacionExtractadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarCertificacionExtractadaCompleted(Me, New EliminarCertificacionExtractadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ActualizarBitacoraPagos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActualizarBitacoraPagos(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As Boolean
            Dim results() As Object = Me.Invoke("ActualizarBitacoraPagos", New Object() {pFecha, pUsuario, pPassword, pSucursal})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginActualizarBitacoraPagos(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizarBitacoraPagos", New Object() {pFecha, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActualizarBitacoraPagos(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActualizarBitacoraPagosAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ActualizarBitacoraPagosAsync(pFecha, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarBitacoraPagosAsync(ByVal pFecha As Date, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ActualizarBitacoraPagosOperationCompleted Is Nothing) Then
                Me.ActualizarBitacoraPagosOperationCompleted = AddressOf Me.OnActualizarBitacoraPagosOperationCompleted
            End If
            Me.InvokeAsync("ActualizarBitacoraPagos", New Object() {pFecha, pUsuario, pPassword, pSucursal}, Me.ActualizarBitacoraPagosOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarBitacoraPagosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarBitacoraPagosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarBitacoraPagosCompleted(Me, New ActualizarBitacoraPagosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/AutorizarDatos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutorizarDatos(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String) As Integer
            Dim results() As Object = Me.Invoke("AutorizarDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginAutorizarDatos(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AutorizarDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAutorizarDatos(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutorizarDatosAsync(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String)
            Me.AutorizarDatosAsync(pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutorizarDatosAsync(ByVal pCampoOblg1 As String, ByVal pCampoOblg2 As String, ByVal pCampoOblg3 As String, ByVal pCampoOblg4 As String, ByVal pCampoOblg5 As String, ByVal userState As Object)
            If (Me.AutorizarDatosOperationCompleted Is Nothing) Then
                Me.AutorizarDatosOperationCompleted = AddressOf Me.OnAutorizarDatosOperationCompleted
            End If
            Me.InvokeAsync("AutorizarDatos", New Object() {pCampoOblg1, pCampoOblg2, pCampoOblg3, pCampoOblg4, pCampoOblg5}, Me.AutorizarDatosOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutorizarDatosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutorizarDatosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutorizarDatosCompleted(Me, New AutorizarDatosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/CalculoCobroGestiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CalculoCobroGestiones(ByVal pCodGestor As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CalculoCobroGestiones", New Object() {pCodGestor, pCodPrestamo, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginCalculoCobroGestiones(ByVal pCodGestor As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CalculoCobroGestiones", New Object() {pCodGestor, pCodPrestamo, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCalculoCobroGestiones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CalculoCobroGestionesAsync(ByVal pCodGestor As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.CalculoCobroGestionesAsync(pCodGestor, pCodPrestamo, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CalculoCobroGestionesAsync(ByVal pCodGestor As String, ByVal pCodPrestamo As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.CalculoCobroGestionesOperationCompleted Is Nothing) Then
                Me.CalculoCobroGestionesOperationCompleted = AddressOf Me.OnCalculoCobroGestionesOperationCompleted
            End If
            Me.InvokeAsync("CalculoCobroGestiones", New Object() {pCodGestor, pCodPrestamo, pUsuario, pPassword, pSucursal}, Me.CalculoCobroGestionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalculoCobroGestionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CalculoCobroGestionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CalculoCobroGestionesCompleted(Me, New CalculoCobroGestionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConstultarTAmortiza", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConstultarTAmortiza(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConstultarTAmortiza", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConstultarTAmortiza(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConstultarTAmortiza", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConstultarTAmortiza(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConstultarTAmortizaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConstultarTAmortizaAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConstultarTAmortizaAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConstultarTAmortizaOperationCompleted Is Nothing) Then
                Me.ConstultarTAmortizaOperationCompleted = AddressOf Me.OnConstultarTAmortizaOperationCompleted
            End If
            Me.InvokeAsync("ConstultarTAmortiza", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConstultarTAmortizaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConstultarTAmortizaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConstultarTAmortizaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConstultarTAmortizaCompleted(Me, New ConstultarTAmortizaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarBCEmbargos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBCEmbargos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBCEmbargos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBCEmbargos(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBCEmbargos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBCEmbargos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBCEmbargosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarBCEmbargosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBCEmbargosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarBCEmbargosOperationCompleted Is Nothing) Then
                Me.ConsultarBCEmbargosOperationCompleted = AddressOf Me.OnConsultarBCEmbargosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBCEmbargos", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarBCEmbargosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBCEmbargosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBCEmbargosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBCEmbargosCompleted(Me, New ConsultarBCEmbargosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarBienInmueble", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBienInmueble(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBienInmueble", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBienInmueble(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBienInmueble", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBienInmueble(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBienInmuebleAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarBienInmuebleAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBienInmuebleAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarBienInmuebleOperationCompleted Is Nothing) Then
                Me.ConsultarBienInmuebleOperationCompleted = AddressOf Me.OnConsultarBienInmuebleOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBienInmueble", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarBienInmuebleOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBienInmuebleOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBienInmuebleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBienInmuebleCompleted(Me, New ConsultarBienInmuebleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarBitacoraGestores", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarBitacoraGestores(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarBitacoraGestores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarBitacoraGestores(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarBitacoraGestores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarBitacoraGestores(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarBitacoraGestoresAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarBitacoraGestoresAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarBitacoraGestoresAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarBitacoraGestoresOperationCompleted Is Nothing) Then
                Me.ConsultarBitacoraGestoresOperationCompleted = AddressOf Me.OnConsultarBitacoraGestoresOperationCompleted
            End If
            Me.InvokeAsync("ConsultarBitacoraGestores", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarBitacoraGestoresOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarBitacoraGestoresOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarBitacoraGestoresCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarBitacoraGestoresCompleted(Me, New ConsultarBitacoraGestoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarCBBienesEmbargados", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCBBienesEmbargados(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCBBienesEmbargados", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCBBienesEmbargados(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCBBienesEmbargados", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCBBienesEmbargados(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCBBienesEmbargadosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCBBienesEmbargadosAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCBBienesEmbargadosAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCBBienesEmbargadosOperationCompleted Is Nothing) Then
                Me.ConsultarCBBienesEmbargadosOperationCompleted = AddressOf Me.OnConsultarCBBienesEmbargadosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCBBienesEmbargados", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCBBienesEmbargadosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCBBienesEmbargadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCBBienesEmbargadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCBBienesEmbargadosCompleted(Me, New ConsultarCBBienesEmbargadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarCBDocumentosxRecuperar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCBDocumentosxRecuperar(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCBDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCBDocumentosxRecuperar(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCBDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCBDocumentosxRecuperar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCBDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCBDocumentosxRecuperarAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCBDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCBDocumentosxRecuperarOperationCompleted Is Nothing) Then
                Me.ConsultarCBDocumentosxRecuperarOperationCompleted = AddressOf Me.OnConsultarCBDocumentosxRecuperarOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCBDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCBDocumentosxRecuperarOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCBDocumentosxRecuperarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCBDocumentosxRecuperarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCBDocumentosxRecuperarCompleted(Me, New ConsultarCBDocumentosxRecuperarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarCBHistDocumentosxRecuperar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCBHistDocumentosxRecuperar(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCBHistDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCBHistDocumentosxRecuperar(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCBHistDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCBHistDocumentosxRecuperar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCBHistDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarCBHistDocumentosxRecuperarAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCBHistDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCBHistDocumentosxRecuperarOperationCompleted Is Nothing) Then
                Me.ConsultarCBHistDocumentosxRecuperarOperationCompleted = AddressOf Me.OnConsultarCBHistDocumentosxRecuperarOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCBHistDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarCBHistDocumentosxRecuperarOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCBHistDocumentosxRecuperarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCBHistDocumentosxRecuperarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCBHistDocumentosxRecuperarCompleted(Me, New ConsultarCBHistDocumentosxRecuperarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarCertificacionExtractada", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarCertificacionExtractada(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarCertificacionExtractada", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarCertificacionExtractada(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarCertificacionExtractada", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarCertificacionExtractada(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarCertificacionExtractadaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarCertificacionExtractadaAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarCertificacionExtractadaAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarCertificacionExtractadaOperationCompleted Is Nothing) Then
                Me.ConsultarCertificacionExtractadaOperationCompleted = AddressOf Me.OnConsultarCertificacionExtractadaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarCertificacionExtractada", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarCertificacionExtractadaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarCertificacionExtractadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCertificacionExtractadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCertificacionExtractadaCompleted(Me, New ConsultarCertificacionExtractadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarDatGral", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDatGral(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDatGral", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDatGral(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDatGral", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDatGral(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatGralAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDatGralAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatGralAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDatGralOperationCompleted Is Nothing) Then
                Me.ConsultarDatGralOperationCompleted = AddressOf Me.OnConsultarDatGralOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDatGral", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDatGralOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDatGralOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDatGralCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDatGralCompleted(Me, New ConsultarDatGralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarDatosDocumentosxRecuperar", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDatosDocumentosxRecuperar(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDatosDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDatosDocumentosxRecuperar(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDatosDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDatosDocumentosxRecuperar(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarDatosDocumentosxRecuperarAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDatosDocumentosxRecuperarAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDatosDocumentosxRecuperarOperationCompleted Is Nothing) Then
                Me.ConsultarDatosDocumentosxRecuperarOperationCompleted = AddressOf Me.OnConsultarDatosDocumentosxRecuperarOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDatosDocumentosxRecuperar", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarDatosDocumentosxRecuperarOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDatosDocumentosxRecuperarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDatosDocumentosxRecuperarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDatosDocumentosxRecuperarCompleted(Me, New ConsultarDatosDocumentosxRecuperarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarDespacho", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDespacho(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDespacho", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDespacho(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDespacho", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDespacho(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDespachoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarDespachoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDespachoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDespachoOperationCompleted Is Nothing) Then
                Me.ConsultarDespachoOperationCompleted = AddressOf Me.OnConsultarDespachoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDespacho", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarDespachoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDespachoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDespachoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDespachoCompleted(Me, New ConsultarDespachoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarDetGarantiasPr", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDetGarantiasPr(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDetGarantiasPr", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDetGarantiasPr(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDetGarantiasPr", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDetGarantiasPr(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetGarantiasPrAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarDetGarantiasPrAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDetGarantiasPrAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDetGarantiasPrOperationCompleted Is Nothing) Then
                Me.ConsultarDetGarantiasPrOperationCompleted = AddressOf Me.OnConsultarDetGarantiasPrOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDetGarantiasPr", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarDetGarantiasPrOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDetGarantiasPrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDetGarantiasPrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDetGarantiasPrCompleted(Me, New ConsultarDetGarantiasPrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarDICOM", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDICOM(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarDICOM", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarDICOM(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarDICOM", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarDICOM(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDICOMAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarDICOMAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDICOMAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarDICOMOperationCompleted Is Nothing) Then
                Me.ConsultarDICOMOperationCompleted = AddressOf Me.OnConsultarDICOMOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDICOM", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarDICOMOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDICOMOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDICOMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDICOMCompleted(Me, New ConsultarDICOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarEmpresaValuadora", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEmpresaValuadora(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarEmpresaValuadora", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarEmpresaValuadora(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarEmpresaValuadora", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarEmpresaValuadora(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEmpresaValuadoraAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarEmpresaValuadoraAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEmpresaValuadoraAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarEmpresaValuadoraOperationCompleted Is Nothing) Then
                Me.ConsultarEmpresaValuadoraOperationCompleted = AddressOf Me.OnConsultarEmpresaValuadoraOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEmpresaValuadora", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarEmpresaValuadoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEmpresaValuadoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEmpresaValuadoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEmpresaValuadoraCompleted(Me, New ConsultarEmpresaValuadoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGarantias", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGarantias(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGarantias", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGarantias(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGarantias", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGarantias(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarGarantiasAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGarantiasOperationCompleted Is Nothing) Then
                Me.ConsultarGarantiasOperationCompleted = AddressOf Me.OnConsultarGarantiasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGarantias", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarGarantiasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGarantiasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGarantiasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGarantiasCompleted(Me, New ConsultarGarantiasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGarantiasInternas", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGarantiasInternas(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGarantiasInternas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGarantiasInternas(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGarantiasInternas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGarantiasInternas(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasInternasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarGarantiasInternasAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasInternasAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGarantiasInternasOperationCompleted Is Nothing) Then
                Me.ConsultarGarantiasInternasOperationCompleted = AddressOf Me.OnConsultarGarantiasInternasOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGarantiasInternas", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarGarantiasInternasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGarantiasInternasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGarantiasInternasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGarantiasInternasCompleted(Me, New ConsultarGarantiasInternasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGarantiasPr", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGarantiasPr(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGarantiasPr", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGarantiasPr(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGarantiasPr", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGarantiasPr(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasPrAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarGarantiasPrAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasPrAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGarantiasPrOperationCompleted Is Nothing) Then
                Me.ConsultarGarantiasPrOperationCompleted = AddressOf Me.OnConsultarGarantiasPrOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGarantiasPr", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarGarantiasPrOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGarantiasPrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGarantiasPrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGarantiasPrCompleted(Me, New ConsultarGarantiasPrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGarantiasPrNombre", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGarantiasPrNombre(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGarantiasPrNombre", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGarantiasPrNombre(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGarantiasPrNombre", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGarantiasPrNombre(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasPrNombreAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String)
            Me.ConsultarGarantiasPrNombreAsync(pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasPrNombreAsync(ByVal pCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUsuario As String, ByVal pPassword As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGarantiasPrNombreOperationCompleted Is Nothing) Then
                Me.ConsultarGarantiasPrNombreOperationCompleted = AddressOf Me.OnConsultarGarantiasPrNombreOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGarantiasPrNombre", New Object() {pCampos, pFiltro, pOrden, pUsuario, pPassword, pSucursal}, Me.ConsultarGarantiasPrNombreOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGarantiasPrNombreOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGarantiasPrNombreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGarantiasPrNombreCompleted(Me, New ConsultarGarantiasPrNombreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGarantiasxTipo", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGarantiasxTipo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGarantiasxTipo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGarantiasxTipo(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGarantiasxTipo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGarantiasxTipo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasxTipoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarGarantiasxTipoAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGarantiasxTipoAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGarantiasxTipoOperationCompleted Is Nothing) Then
                Me.ConsultarGarantiasxTipoOperationCompleted = AddressOf Me.OnConsultarGarantiasxTipoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGarantiasxTipo", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarGarantiasxTipoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGarantiasxTipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGarantiasxTipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGarantiasxTipoCompleted(Me, New ConsultarGarantiasxTipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGastos", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGastos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGastos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGastos(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGastos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGastos(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGastosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarGastosAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGastosAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGastosOperationCompleted Is Nothing) Then
                Me.ConsultarGastosOperationCompleted = AddressOf Me.OnConsultarGastosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGastos", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarGastosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGastosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGastosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGastosCompleted(Me, New ConsultarGastosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsSif/wsLibCred/ConsultarGestiones", RequestNamespace:="http://tempuri.org/wsSif/wsLibCred", ResponseNamespace:="http://tempuri.org/wsSif/wsLibCred", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarGestiones(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarGestiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginConsultarGestiones(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultarGestiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndConsultarGestiones(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarGestionesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String)
            Me.ConsultarGestionesAsync(pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarGestionesAsync(ByVal pListaCampos As String, ByVal pFiltro As String, ByVal pOrden As String, ByVal pUs As String, ByVal pPa As String, ByVal pSucursal As String, ByVal userState As Object)
            If (Me.ConsultarGestionesOperationCompleted Is Nothing) Then
                Me.ConsultarGestionesOperationCompleted = AddressOf Me.OnConsultarGestionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultarGestiones", New Object() {pListaCampos, pFiltro, pOrden, pUs, pPa, pSucursal}, Me.ConsultarGestionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarGestionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarGestionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarGestionesCompleted(Me, New ConsultarGestionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibCred")>  _
    Public Enum TipoAgrupacionCreditos
        
        '''<remarks/>
        TipoCredito
        
        '''<remarks/>
        TipoGarantia
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/wsSif/wsLibCred")>  _
    Public Enum TipoReporteReserva
        
        '''<remarks/>
        DocumentosxCobrar
        
        '''<remarks/>
        GerencialesConMora
        
        '''<remarks/>
        GerencialesSinMora
        
        '''<remarks/>
        Protesto
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarVehiculosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarVehiculosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarVehiculosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ListadoCarteraPrestamoCompletedEventHandler(ByVal sender As Object, ByVal e As ListadoCarteraPrestamoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListadoCarteraPrestamoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificaClaveGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As ModificaClaveGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificaClaveGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarAcreedoresCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarAcreedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarAcreedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarBCEmbargosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarBCEmbargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarBCEmbargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarBienInmuebleCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarBienInmuebleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarBienInmuebleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarBitacoraGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarBitacoraGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarBitacoraGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarCBBienesEmbargadosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCBBienesEmbargadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCBBienesEmbargadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarCBDocumentosxRecuperarCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCBDocumentosxRecuperarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCBDocumentosxRecuperarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarCBHistDocumentosxRecuperarCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarCBHistDocumentosxRecuperarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarCBHistDocumentosxRecuperarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarDatGralCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDatGralCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDatGralCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarDespachoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDespachoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDespachoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarDetGarantiasPrCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDetGarantiasPrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDetGarantiasPrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarDICOMCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDICOMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDICOMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarDuenosInmuebleCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarDuenosInmuebleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarDuenosInmuebleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarEmpresaValuadoraCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarEmpresaValuadoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarEmpresaValuadoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarGarantiasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarGarantiasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarGarantiasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarGarantiasPrCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarGarantiasPrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarGarantiasPrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarGastosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarGestionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarGestionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarGestionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarGestoresxCreditoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarGestoresxCreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarGestoresxCreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarObligacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarObligacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarObligacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarObservacionesxAnalisisCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarObservacionesxAnalisisCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarObservacionesxAnalisisCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarPagaduriaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPagaduriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPagaduriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarPRCategoriaRiesgoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPRCategoriaRiesgoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPRCategoriaRiesgoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarPresentacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPresentacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPresentacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarPrestamosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPrestamosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPrestamosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarRangoLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRangoLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRangoLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarRefBancariaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRefBancariaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRefBancariaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarRefComercialCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRefComercialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRefComercialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarRefFamiliarCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRefFamiliarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRefFamiliarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarRefPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRefPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRefPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarRestriccionesCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarRestriccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarRestriccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarSeccionRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarSeccionRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarSeccionRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarSolCredCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarSolCredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarSolCredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarSolCredRCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarSolCredRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarSolCredRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarSolP2CreditoCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarSolP2CreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarSolP2CreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarTipGarantCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarTipGarantCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarTipGarantCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarTipoCobranzaCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarTipoCobranzaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarTipoCobranzaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarTipoCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarTipoCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarTipoCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarTipoGastosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarTipoGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarTipoGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarTipoGestionCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarTipoGestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarTipoGestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarValuosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarValuosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarValuosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarVehiculosCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarVehiculosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarVehiculosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoBienInmuebleCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoBienInmuebleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoBienInmuebleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoBitacoraGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoBitacoraGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoBitacoraGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoDatGralCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoDatGralCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoDatGralCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoDespachoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoDespachoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoDespachoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoEmpresaValuadoraCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoEmpresaValuadoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoEmpresaValuadoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoGarantiasCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoGarantiasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoGarantiasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoGastosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoGestionesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoGestionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoGestionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoGestoresxCreditoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoGestoresxCreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoGestoresxCreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoObligacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoObligacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoObligacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoObservacionesxAnalisisCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoObservacionesxAnalisisCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoObservacionesxAnalisisCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoPagaduriaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoPagaduriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoPagaduriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoPrestamosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoPrestamosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoPrestamosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoRangoLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoRangoLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoRangoLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoRefBancariaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoRefBancariaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoRefBancariaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoRefComercialCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoRefComercialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoRefComercialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoRefFamiliarCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoRefFamiliarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoRefFamiliarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoRefPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoRefPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoRefPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoSeccionRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoSeccionRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoSeccionRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoSolCredCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoSolCredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoSolCredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoSolCredRCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoSolCredRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoSolCredRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoSolP2CreditoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoSolP2CreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoSolP2CreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoTipGarantCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoTipGarantCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoTipGarantCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoTipoCobranzaCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoTipoCobranzaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoTipoCobranzaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoTipoCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoTipoCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoTipoCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoTipoGastosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoTipoGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoTipoGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoTipoGestionCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoTipoGestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoTipoGestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoValuosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoValuosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoValuosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoVehiculosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoVehiculosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoVehiculosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ReporteHistorialCategoriaCompletedEventHandler(ByVal sender As Object, ByVal e As ReporteHistorialCategoriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReporteHistorialCategoriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub TablaAmortizacionCompletedEventHandler(ByVal sender As Object, ByVal e As TablaAmortizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TablaAmortizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub VerificaGestorCompletedEventHandler(ByVal sender As Object, ByVal e As VerificaGestorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerificaGestorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGestoresxCreditoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGestoresxCreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGestoresxCreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGestoresxCredito_AsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGestoresxCredito_AsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGestoresxCredito_AsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarHistorialCategoriaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarHistorialCategoriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarHistorialCategoriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarObligacionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarObligacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarObligacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarObservacionesxAnalisisCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarObservacionesxAnalisisCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarObservacionesxAnalisisCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarPagaduriaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPagaduriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPagaduriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarPRCategoriaRiesgoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPRCategoriaRiesgoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPRCategoriaRiesgoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarPrestamosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPrestamosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPrestamosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarPrestamosxInscripcionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPrestamosxInscripcionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPrestamosxInscripcionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarPRPrestamosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPRPrestamosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPRPrestamosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarRangoLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRangoLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRangoLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarRecuperacionGestionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRecuperacionGestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRecuperacionGestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarRefBancariaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRefBancariaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRefBancariaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarRefComercialCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRefComercialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRefComercialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarRefFamiliarCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRefFamiliarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRefFamiliarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarRefPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarRefPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarRefPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarResultadosDICOMCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarResultadosDICOMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarResultadosDICOMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarSeccionRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarSeccionRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarSeccionRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarSolCredCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarSolCredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarSolCredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarSolCredRCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarSolCredRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarSolCredRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarSolicitudCreditoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarSolicitudCreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarSolicitudCreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarSolP2CreditoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarSolP2CreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarSolP2CreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarTipGarantCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipGarantCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipGarantCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarTipoCobranzaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipoCobranzaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipoCobranzaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarTipoCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipoCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipoCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarTipoGastosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipoGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipoGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarTipoGestionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipoGestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipoGestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarValuosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarValuosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarValuosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarVehiculosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarVehiculosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarVehiculosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CreditosSinPagoMesXGestionCreditoCompletedEventHandler(ByVal sender As Object, ByVal e As CreditosSinPagoMesXGestionCreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreditosSinPagoMesXGestionCreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Determinacion_Reservas_ConsolidadoCompletedEventHandler(ByVal sender As Object, ByVal e As Determinacion_Reservas_ConsolidadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Determinacion_Reservas_ConsolidadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Documentos_CobrarCompletedEventHandler(ByVal sender As Object, ByVal e As Documentos_CobrarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Documentos_CobrarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Documentos_Protesto_ReservaCompletedEventHandler(ByVal sender As Object, ByVal e As Documentos_Protesto_ReservaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Documentos_Protesto_ReservaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarAcreedoresCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarAcreedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarAcreedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBCEmbargosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBCEmbargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBCEmbargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBienInmuebleCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBienInmuebleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBienInmuebleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarBitacoraGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarBitacoraGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarBitacoraGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarCBBienesEmbargadosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCBBienesEmbargadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCBBienesEmbargadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarCBDocumentosxRecuperarCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCBDocumentosxRecuperarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCBDocumentosxRecuperarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarDatGralCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDatGralCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDatGralCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarDespachoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDespachoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDespachoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarDetGarantiasPrCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDetGarantiasPrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDetGarantiasPrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarDICOMCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDICOMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDICOMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarDuenosInmuebleCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDuenosInmuebleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDuenosInmuebleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarEmpresaValuadoraCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarEmpresaValuadoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarEmpresaValuadoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarGarantiasCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarGarantiasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarGarantiasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarGarantiasPrCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarGarantiasPrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarGarantiasPrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarGastosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarGestionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarGestionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarGestionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarGestoresxCreditoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarGestoresxCreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarGestoresxCreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarObligacionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarObligacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarObligacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarObservacionesxAnalisisCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarObservacionesxAnalisisCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarObservacionesxAnalisisCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarPagaduriaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPagaduriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPagaduriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarPRCategoriaRiesgoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPRCategoriaRiesgoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPRCategoriaRiesgoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarPresentacionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPresentacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPresentacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarPrestamosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarPrestamosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarPrestamosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarRangoLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarRangoLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarRangoLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarRefBancariaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarRefBancariaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarRefBancariaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarRefComercialCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarRefComercialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarRefComercialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarRefFamiliarCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarRefFamiliarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarRefFamiliarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarRefPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarRefPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarRefPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarRestriccionesCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarRestriccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarRestriccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarSeccionRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarSeccionRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarSeccionRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarSolCredCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarSolCredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarSolCredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarSolCredRCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarSolCredRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarSolCredRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarSolP2CreditoCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarSolP2CreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarSolP2CreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarTipGarantCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarTipGarantCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarTipGarantCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarTipoCobranzaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarTipoCobranzaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarTipoCobranzaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarTipoCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarTipoCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarTipoCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarTipoGastosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarTipoGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarTipoGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarTipoGestionCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarTipoGestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarTipoGestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarValuosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarValuosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarValuosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarVehiculosCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarVehiculosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarVehiculosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ExportacionDatos_SolicitudCompletedEventHandler(ByVal sender As Object, ByVal e As ExportacionDatos_SolicitudCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExportacionDatos_SolicitudCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Gestiones_Diarias_CobranzaCompletedEventHandler(ByVal sender As Object, ByVal e As Gestiones_Diarias_CobranzaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Gestiones_Diarias_CobranzaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaAcreedoresCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaAcreedoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaAcreedoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaDuenosInmuebleCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaDuenosInmuebleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaDuenosInmuebleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaPresentacionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaPresentacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaPresentacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBCEmbargosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBCEmbargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBCEmbargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBienInmuebleCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBienInmuebleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBienInmuebleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarBitacoraGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarBitacoraGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarBitacoraGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarCBBienesEMbargadosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCBBienesEMbargadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCBBienesEMbargadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarCBDocumentosxRecuperarCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCBDocumentosxRecuperarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCBDocumentosxRecuperarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarCBHistDocumentosxRecuperarCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarCBHistDocumentosxRecuperarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarCBHistDocumentosxRecuperarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarDatGralCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDatGralCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDatGralCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarDespachoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDespachoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDespachoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarDetGarantiasPrCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDetGarantiasPrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDetGarantiasPrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarDICOMCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarDICOMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarDICOMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarEmpresaValuadoraCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarEmpresaValuadoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarEmpresaValuadoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertaRestriccionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertaRestriccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertaRestriccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarGarantiasCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarGarantiasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarGarantiasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarGarantiasPrCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarGarantiasPrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarGarantiasPrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarGastosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarGestionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarGestionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarGestionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarGestoresxCreditoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarGestoresxCreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarGestoresxCreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarHistorialCategoriaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarHistorialCategoriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarHistorialCategoriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarObligacionesCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarObligacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarObligacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarObservacionesxAnalisisCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarObservacionesxAnalisisCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarObservacionesxAnalisisCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarPagaduriaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPagaduriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPagaduriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarPRCategoriaRiesgoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPRCategoriaRiesgoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPRCategoriaRiesgoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarPrestamosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarPrestamosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarPrestamosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarRangoLineaCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRangoLineaCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRangoLineaCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarRefBancariaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRefBancariaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRefBancariaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarRefComercialCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRefComercialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRefComercialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarRefFamiliarCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRefFamiliarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRefFamiliarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarRefPersonalCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRefPersonalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRefPersonalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarSeccionRegistroCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarSeccionRegistroCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarSeccionRegistroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarSolCredCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarSolCredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarSolCredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarSolCredRCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarSolCredRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarSolCredRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarSolP2CreditoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarSolP2CreditoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarSolP2CreditoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarTipGarantCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarTipGarantCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarTipGarantCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarTipoCobranzaCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarTipoCobranzaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarTipoCobranzaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarTipoCreditosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarTipoCreditosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarTipoCreditosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarTipoGastosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarTipoGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarTipoGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarTipoGestionCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarTipoGestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarTipoGestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarTipoIngresosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarTipoIngresosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarTipoIngresosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub InsertarValuosCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarValuosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarValuosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarCredCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RptContratoInvestigacionCompletedEventHandler(ByVal sender As Object, ByVal e As RptContratoInvestigacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RptContratoInvestigacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub calcularInteresMigracionCompletedEventHandler(ByVal sender As Object, ByVal e As calcularInteresMigracionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class calcularInteresMigracionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub validarMontoCancelacionPrestamoCompletedEventHandler(ByVal sender As Object, ByVal e As validarMontoCancelacionPrestamoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarMontoCancelacionPrestamoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RptContratoMutuoCompletedEventHandler(ByVal sender As Object, ByVal e As RptContratoMutuoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RptContratoMutuoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ObtenerCorrelativoPrestamoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCorrelativoPrestamoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCorrelativoPrestamoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Rep_TablaAmortizacionCompletedEventHandler(ByVal sender As Object, ByVal e As Rep_TablaAmortizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rep_TablaAmortizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarPrDetRestriccionsCompletedEventHandler(ByVal sender As Object, ByVal e As modificarPrDetRestriccionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarPrDetRestriccionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarPrDetRestriccionesCompletedEventHandler(ByVal sender As Object, ByVal e As insertarPrDetRestriccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarPrDetRestriccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarPrRestricciones_Criterios_PagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarPrRestricciones_Criterios_PagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarPrRestricciones_Criterios_PagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarPrDet_RestriccionesCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarPrDet_RestriccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarPrDet_RestriccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarPrDet_RestriccionesCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPrDet_RestriccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPrDet_RestriccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarPrRestriccionesCriteriosCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPrRestriccionesCriteriosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPrRestriccionesCriteriosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub IngresarRestricciones_CriteriosEvaluacionCompletedEventHandler(ByVal sender As Object, ByVal e As IngresarRestricciones_CriteriosEvaluacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IngresarRestricciones_CriteriosEvaluacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarPrTipoEvaluacionesCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPrTipoEvaluacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPrTipoEvaluacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarPrTipoEvaluacionesCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarPrTipoEvaluacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarPrTipoEvaluacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarPrTipoEvaluacionesCompletedEventHandler(ByVal sender As Object, ByVal e As modificarPrTipoEvaluacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarPrTipoEvaluacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarPrTipoEvaluacionesCompletedEventHandler(ByVal sender As Object, ByVal e As insertarPrTipoEvaluacionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarPrTipoEvaluacionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ingresarEvaluacionPagaduriaCompletedEventHandler(ByVal sender As Object, ByVal e As ingresarEvaluacionPagaduriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ingresarEvaluacionPagaduriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarPrGiroEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As insertarPrGiroEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarPrGiroEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarPrGiroEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As modificarPrGiroEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarPrGiroEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarPrGiroEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarPrGiroEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarPrGiroEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarPrGiroEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPrGiroEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPrGiroEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarPrTipoEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPrTipoEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPrTipoEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarPrTipoEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarPrTipoEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarPrTipoEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarPrTipoEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As modificarPrTipoEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarPrTipoEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarPrTipoEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As insertarPrTipoEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarPrTipoEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub eliminarPrCatClasificacionPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As eliminarPrCatClasificacionPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class eliminarPrCatClasificacionPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarPrCatClasificacionPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPrCatClasificacionPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPrCatClasificacionPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarPrCatClasificacionPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As modificarPrCatClasificacionPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarPrCatClasificacionPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarPrCatClasificacionPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As insertarPrCatClasificacionPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarPrCatClasificacionPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarPrCriteriosEvaluacionPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPrCriteriosEvaluacionPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPrCriteriosEvaluacionPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub modificarPrCriteriosEvaluacionPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As modificarPrCriteriosEvaluacionPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class modificarPrCriteriosEvaluacionPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarPrCriteriosEvaluacionPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As insertarPrCriteriosEvaluacionPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarPrCriteriosEvaluacionPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub insertarPrPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As insertarPrPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class insertarPrPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ModificarPrPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As ModificarPrPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModificarPrPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub consultarPrPagaduriasCompletedEventHandler(ByVal sender As Object, ByVal e As consultarPrPagaduriasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class consultarPrPagaduriasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub validarNumeroSolicitudesCompletedEventHandler(ByVal sender As Object, ByVal e As validarNumeroSolicitudesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class validarNumeroSolicitudesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarDatosAsociadoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDatosAsociadoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDatosAsociadoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Consultar_Asoc_Tram_JudicialCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_Asoc_Tram_JudicialCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_Asoc_Tram_JudicialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Partida_Desembolso_PrestamoCompletedEventHandler(ByVal sender As Object, ByVal e As Partida_Desembolso_PrestamoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Partida_Desembolso_PrestamoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Consultar_PrDeduccionesCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PrDeduccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PrDeduccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Eliminar_PrDeduccionesCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_PrDeduccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_PrDeduccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Modificar_PrDeduccionesCompletedEventHandler(ByVal sender As Object, ByVal e As Modificar_PrDeduccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Modificar_PrDeduccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Ingresar_PrDeduccionesCompletedEventHandler(ByVal sender As Object, ByVal e As Ingresar_PrDeduccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Ingresar_PrDeduccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Ingresar_PrCatGastosTramitacionCompletedEventHandler(ByVal sender As Object, ByVal e As Ingresar_PrCatGastosTramitacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Ingresar_PrCatGastosTramitacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Modificar_PrCatGastosTramitacionCompletedEventHandler(ByVal sender As Object, ByVal e As Modificar_PrCatGastosTramitacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Modificar_PrCatGastosTramitacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Consultar_PrCatGastosTramitacionCompletedEventHandler(ByVal sender As Object, ByVal e As Consultar_PrCatGastosTramitacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Consultar_PrCatGastosTramitacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub Eliminar_PrCatGastosTramitacionCompletedEventHandler(ByVal sender As Object, ByVal e As Eliminar_PrCatGastosTramitacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Eliminar_PrCatGastosTramitacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RPT_TASAACTIVACompletedEventHandler(ByVal sender As Object, ByVal e As RPT_TASAACTIVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_TASAACTIVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RPT_MORA_X_LINEACompletedEventHandler(ByVal sender As Object, ByVal e As RPT_MORA_X_LINEACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_MORA_X_LINEACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RPT_DOC_X_COBRARCompletedEventHandler(ByVal sender As Object, ByVal e As RPT_DOC_X_COBRARCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_DOC_X_COBRARCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RPT_DOC_PROTESTO_RESERVACompletedEventHandler(ByVal sender As Object, ByVal e As RPT_DOC_PROTESTO_RESERVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_DOC_PROTESTO_RESERVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RPT_GARANTIAS_INSCRITASCompletedEventHandler(ByVal sender As Object, ByVal e As RPT_GARANTIAS_INSCRITASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_GARANTIAS_INSCRITASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RPT_GARANTIAS_PRENDARIASCompletedEventHandler(ByVal sender As Object, ByVal e As RPT_GARANTIAS_PRENDARIASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_GARANTIAS_PRENDARIASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CREDITOS_X_TIPOHIPOTECACompletedEventHandler(ByVal sender As Object, ByVal e As CREDITOS_X_TIPOHIPOTECACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CREDITOS_X_TIPOHIPOTECACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CREDITOS_SIN_GARANTIASCompletedEventHandler(ByVal sender As Object, ByVal e As CREDITOS_SIN_GARANTIASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CREDITOS_SIN_GARANTIASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub RPT_GARANTIAS_X_DEPTOCompletedEventHandler(ByVal sender As Object, ByVal e As RPT_GARANTIAS_X_DEPTOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RPT_GARANTIAS_X_DEPTOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTAR_ESTADOPRESTAMOCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_ESTADOPRESTAMOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_ESTADOPRESTAMOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub INSERTARGRNOTARIOSCompletedEventHandler(ByVal sender As Object, ByVal e As INSERTARGRNOTARIOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTARGRNOTARIOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MODIFICARGRNOTARIOSCompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICARGRNOTARIOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICARGRNOTARIOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ELIMINARGRNOTARIOCompletedEventHandler(ByVal sender As Object, ByVal e As ELIMINARGRNOTARIOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ELIMINARGRNOTARIOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARGRNOTARIOCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARGRNOTARIOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARGRNOTARIOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub VALIDAR_INSCRIPCION_PRESTAMOSGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As VALIDAR_INSCRIPCION_PRESTAMOSGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VALIDAR_INSCRIPCION_PRESTAMOSGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARSOLICITUDESCREDITOCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARSOLICITUDESCREDITOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARSOLICITUDESCREDITOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARPRESTAMOSHIPOTECARIOSCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARPRESTAMOSHIPOTECARIOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARPRESTAMOSHIPOTECARIOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGACompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICAR_GRMOVIMIENTOSDOCGARANTIASENTREGACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTAR_GRTIPODOCUMENTOSCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_GRTIPODOCUMENTOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_GRTIPODOCUMENTOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICAR_DATOSCNR_GRINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ELIMINAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventHandler(ByVal sender As Object, ByVal e As ELIMINAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ELIMINAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MODIFICAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub INSERTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventHandler(ByVal sender As Object, ByVal e As INSERTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTAR_GRMOVIMIENTOSDOCGARANTIASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ELIMINAR_GRHISTOINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As ELIMINAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ELIMINAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MODIFICAR_GRHISTOINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub INSERTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As INSERTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTAR_GRHISTOINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTAR_GRTIPOHIPOTECASCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_GRTIPOHIPOTECASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_GRTIPOHIPOTECASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTAR_DATOSGENERALESASOCIADOSCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_DATOSGENERALESASOCIADOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_DATOSGENERALESASOCIADOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub VERIFICAR_ANOTACIONPREVENTIVACompletedEventHandler(ByVal sender As Object, ByVal e As VERIFICAR_ANOTACIONPREVENTIVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VERIFICAR_ANOTACIONPREVENTIVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_TOTAL_CERTIFICACIONESEXTRACTADASCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTAR_MAX_PORCENTAJEVALUOCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTAR_MAX_PORCENTAJEVALUOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTAR_MAX_PORCENTAJEVALUOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARDET_CERTIFICACIONEXTRACTADACompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARDET_CERTIFICACIONEXTRACTADACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARDET_CERTIFICACIONEXTRACTADACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub INSERTAR_GRCERTIFICACION_ANOTACIONCompletedEventHandler(ByVal sender As Object, ByVal e As INSERTAR_GRCERTIFICACION_ANOTACIONCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTAR_GRCERTIFICACION_ANOTACIONCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub INSERTARCERTIFICACIONEXTRACTADACompletedEventHandler(ByVal sender As Object, ByVal e As INSERTARCERTIFICACIONEXTRACTADACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTARCERTIFICACIONEXTRACTADACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MODIFICARCERTIFICACIONEXTRACTADACompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICARCERTIFICACIONEXTRACTADACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICARCERTIFICACIONEXTRACTADACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARGRPRESTAMOSINSCRIPCIONCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARGRPRESTAMOSINSCRIPCIONCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARGRPRESTAMOSINSCRIPCIONCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ELIMINARINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As ELIMINARINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ELIMINARINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ELIMINARPRESTAMOSINSCRIPCIONCompletedEventHandler(ByVal sender As Object, ByVal e As ELIMINARPRESTAMOSINSCRIPCIONCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ELIMINARPRESTAMOSINSCRIPCIONCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub INSERTARPRESTAMOSINSCRIPCIONCompletedEventHandler(ByVal sender As Object, ByVal e As INSERTARPRESTAMOSINSCRIPCIONCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTARPRESTAMOSINSCRIPCIONCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARPRESENTACIONESCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARPRESENTACIONESCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARPRESENTACIONESCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARRESTRICCIONESCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARRESTRICCIONESCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARRESTRICCIONESCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARACREEDORESCompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARACREEDORESCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARACREEDORESCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MODIFICARINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICARINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICARINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub INSERTARINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As INSERTARINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTARINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARINSCRIPCIONGARANTIACompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARINSCRIPCIONGARANTIACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARINSCRIPCIONGARANTIACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ELIMINARANOTACIONPREVENTIVACompletedEventHandler(ByVal sender As Object, ByVal e As ELIMINARANOTACIONPREVENTIVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ELIMINARANOTACIONPREVENTIVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub MODIFICARANOTACIONPREVENTIVACompletedEventHandler(ByVal sender As Object, ByVal e As MODIFICARANOTACIONPREVENTIVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MODIFICARANOTACIONPREVENTIVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARANOTACIONPREVENTIVACompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARANOTACIONPREVENTIVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARANOTACIONPREVENTIVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub INSERTARANOACIONPREVENTIVACompletedEventHandler(ByVal sender As Object, ByVal e As INSERTARANOACIONPREVENTIVACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class INSERTARANOACIONPREVENTIVACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CONSULTARDUENOSINMUEBLECompletedEventHandler(ByVal sender As Object, ByVal e As CONSULTARDUENOSINMUEBLECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CONSULTARDUENOSINMUEBLECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub EliminarCertificacionExtractadaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarCertificacionExtractadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarCertificacionExtractadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ActualizarBitacoraPagosCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarBitacoraPagosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarBitacoraPagosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub AutorizarDatosCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizarDatosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutorizarDatosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub CalculoCobroGestionesCompletedEventHandler(ByVal sender As Object, ByVal e As CalculoCobroGestionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CalculoCobroGestionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConstultarTAmortizaCompletedEventHandler(ByVal sender As Object, ByVal e As ConstultarTAmortizaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConstultarTAmortizaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBCEmbargosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBCEmbargosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBCEmbargosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBienInmuebleCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBienInmuebleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBienInmuebleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarBitacoraGestoresCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarBitacoraGestoresCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarBitacoraGestoresCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarCBBienesEmbargadosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCBBienesEmbargadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCBBienesEmbargadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarCBDocumentosxRecuperarCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCBDocumentosxRecuperarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCBDocumentosxRecuperarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarCBHistDocumentosxRecuperarCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCBHistDocumentosxRecuperarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCBHistDocumentosxRecuperarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarCertificacionExtractadaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCertificacionExtractadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCertificacionExtractadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarDatGralCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDatGralCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDatGralCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarDatosDocumentosxRecuperarCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDatosDocumentosxRecuperarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDatosDocumentosxRecuperarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarDespachoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDespachoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDespachoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarDetGarantiasPrCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDetGarantiasPrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDetGarantiasPrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarDICOMCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDICOMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDICOMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarEmpresaValuadoraCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEmpresaValuadoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEmpresaValuadoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGarantiasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGarantiasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGarantiasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGarantiasInternasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGarantiasInternasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGarantiasInternasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGarantiasPrCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGarantiasPrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGarantiasPrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGarantiasPrNombreCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGarantiasPrNombreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGarantiasPrNombreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGarantiasxTipoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGarantiasxTipoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGarantiasxTipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGastosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGastosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGastosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub ConsultarGestionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarGestionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarGestionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
