'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.4963
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DtsAhorros"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DtsAhorros
    Inherits Global.System.Data.DataSet
    
    Private tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable(ds.Tables("AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS() As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable
        Get
            Return Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DtsAhorros = CType(MyBase.Clone,DtsAhorros)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable(ds.Tables("AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS = CType(MyBase.Tables("AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS"),AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS) Is Nothing) Then
                Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DtsAhorros"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DtsAhorros.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS = New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable
        MyBase.Tables.Add(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DtsAhorros = New DtsAhorros
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEventHandler(ByVal sender As Object, ByVal e As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnDUI As Global.System.Data.DataColumn
        
        Private columnNOSOCIO As Global.System.Data.DataColumn
        
        Private columnASOCIADO As Global.System.Data.DataColumn
        
        Private columnCTAORIGEN As Global.System.Data.DataColumn
        
        Private columnCTADESTINO As Global.System.Data.DataColumn
        
        Private columnMONTO As Global.System.Data.DataColumn
        
        Private columnSALDOANTERIOR As Global.System.Data.DataColumn
        
        Private columnMONTO1 As Global.System.Data.DataColumn
        
        Private columnSALDO As Global.System.Data.DataColumn
        
        Private columnABONOCAPITAL As Global.System.Data.DataColumn
        
        Private columnABONOINTERES As Global.System.Data.DataColumn
        
        Private columnABONOCAPITALMORA As Global.System.Data.DataColumn
        
        Private columnABONOINTERESMORA As Global.System.Data.DataColumn
        
        Private columnABONOSEGURODEUDA As Global.System.Data.DataColumn
        
        Private columnABONOSEGURODANIOSYLA As Global.System.Data.DataColumn
        
        Private columnABONOSEGUROVIDA As Global.System.Data.DataColumn
        
        Private columnABONOSEGURODESEMPLEO As Global.System.Data.DataColumn
        
        Private columnABONOAPORTACION As Global.System.Data.DataColumn
        
        Private columnABONOAHORRO As Global.System.Data.DataColumn
        
        Private columnABONOCOMISIONMANEJO As Global.System.Data.DataColumn
        
        Private columnABONOOTROS As Global.System.Data.DataColumn
        
        Private columnSALDOANTERIORPRESTAMO As Global.System.Data.DataColumn
        
        Private columnSALDOPRESTAMO As Global.System.Data.DataColumn
        
        Private columnMONTOUNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DUIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDUI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOSOCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOSOCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ASOCIADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASOCIADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CTAORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTAORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CTADESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTADESTINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDOANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDOANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MONTO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOCAPITALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOCAPITAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOINTERESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOINTERES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOCAPITALMORAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOCAPITALMORA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOINTERESMORAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOINTERESMORA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOSEGURODEUDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOSEGURODEUDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOSEGURODANIOSYLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOSEGURODANIOSYLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOSEGUROVIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOSEGUROVIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOSEGURODESEMPLEOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOSEGURODESEMPLEO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOAPORTACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOAPORTACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOAHORROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOAHORRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOCOMISIONMANEJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOCOMISIONMANEJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ABONOOTROSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABONOOTROS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDOANTERIORPRESTAMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDOANTERIORPRESTAMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDOPRESTAMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDOPRESTAMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MONTOUNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTOUNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow
            Get
                Return CType(Me.Rows(index),AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow)
            End Get
        End Property
        
        Public Event AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChanging As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEventHandler
        
        Public Event AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChanged As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEventHandler
        
        Public Event AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowDeleting As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEventHandler
        
        Public Event AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowDeleted As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddAH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow(ByVal row As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddAH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow( _
                    ByVal DUI As String,  _
                    ByVal NOSOCIO As String,  _
                    ByVal ASOCIADO As String,  _
                    ByVal CTAORIGEN As String,  _
                    ByVal CTADESTINO As String,  _
                    ByVal MONTO As Double,  _
                    ByVal SALDOANTERIOR As Double,  _
                    ByVal MONTO1 As Double,  _
                    ByVal SALDO As Double,  _
                    ByVal ABONOCAPITAL As Double,  _
                    ByVal ABONOINTERES As Double,  _
                    ByVal ABONOCAPITALMORA As Double,  _
                    ByVal ABONOINTERESMORA As Double,  _
                    ByVal ABONOSEGURODEUDA As Double,  _
                    ByVal ABONOSEGURODANIOSYLA As Double,  _
                    ByVal ABONOSEGUROVIDA As Double,  _
                    ByVal ABONOSEGURODESEMPLEO As Double,  _
                    ByVal ABONOAPORTACION As Double,  _
                    ByVal ABONOAHORRO As Double,  _
                    ByVal ABONOCOMISIONMANEJO As Double,  _
                    ByVal ABONOOTROS As Double,  _
                    ByVal SALDOANTERIORPRESTAMO As Double,  _
                    ByVal SALDOPRESTAMO As Double,  _
                    ByVal MONTOUNO As Double) As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow
            Dim rowAH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow = CType(Me.NewRow,AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow)
            Dim columnValuesArray() As Object = New Object() {DUI, NOSOCIO, ASOCIADO, CTAORIGEN, CTADESTINO, MONTO, SALDOANTERIOR, MONTO1, SALDO, ABONOCAPITAL, ABONOINTERES, ABONOCAPITALMORA, ABONOINTERESMORA, ABONOSEGURODEUDA, ABONOSEGURODANIOSYLA, ABONOSEGUROVIDA, ABONOSEGURODESEMPLEO, ABONOAPORTACION, ABONOAHORRO, ABONOCOMISIONMANEJO, ABONOOTROS, SALDOANTERIORPRESTAMO, SALDOPRESTAMO, MONTOUNO}
            rowAH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow)
            Return rowAH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable = CType(MyBase.Clone,AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDUI = MyBase.Columns("DUI")
            Me.columnNOSOCIO = MyBase.Columns("NOSOCIO")
            Me.columnASOCIADO = MyBase.Columns("ASOCIADO")
            Me.columnCTAORIGEN = MyBase.Columns("CTAORIGEN")
            Me.columnCTADESTINO = MyBase.Columns("CTADESTINO")
            Me.columnMONTO = MyBase.Columns("MONTO")
            Me.columnSALDOANTERIOR = MyBase.Columns("SALDOANTERIOR")
            Me.columnMONTO1 = MyBase.Columns("MONTO1")
            Me.columnSALDO = MyBase.Columns("SALDO")
            Me.columnABONOCAPITAL = MyBase.Columns("ABONOCAPITAL")
            Me.columnABONOINTERES = MyBase.Columns("ABONOINTERES")
            Me.columnABONOCAPITALMORA = MyBase.Columns("ABONOCAPITALMORA")
            Me.columnABONOINTERESMORA = MyBase.Columns("ABONOINTERESMORA")
            Me.columnABONOSEGURODEUDA = MyBase.Columns("ABONOSEGURODEUDA")
            Me.columnABONOSEGURODANIOSYLA = MyBase.Columns("ABONOSEGURODANIOSYLA")
            Me.columnABONOSEGUROVIDA = MyBase.Columns("ABONOSEGUROVIDA")
            Me.columnABONOSEGURODESEMPLEO = MyBase.Columns("ABONOSEGURODESEMPLEO")
            Me.columnABONOAPORTACION = MyBase.Columns("ABONOAPORTACION")
            Me.columnABONOAHORRO = MyBase.Columns("ABONOAHORRO")
            Me.columnABONOCOMISIONMANEJO = MyBase.Columns("ABONOCOMISIONMANEJO")
            Me.columnABONOOTROS = MyBase.Columns("ABONOOTROS")
            Me.columnSALDOANTERIORPRESTAMO = MyBase.Columns("SALDOANTERIORPRESTAMO")
            Me.columnSALDOPRESTAMO = MyBase.Columns("SALDOPRESTAMO")
            Me.columnMONTOUNO = MyBase.Columns("MONTOUNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDUI = New Global.System.Data.DataColumn("DUI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDUI)
            Me.columnNOSOCIO = New Global.System.Data.DataColumn("NOSOCIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOSOCIO)
            Me.columnASOCIADO = New Global.System.Data.DataColumn("ASOCIADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASOCIADO)
            Me.columnCTAORIGEN = New Global.System.Data.DataColumn("CTAORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTAORIGEN)
            Me.columnCTADESTINO = New Global.System.Data.DataColumn("CTADESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTADESTINO)
            Me.columnMONTO = New Global.System.Data.DataColumn("MONTO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTO)
            Me.columnSALDOANTERIOR = New Global.System.Data.DataColumn("SALDOANTERIOR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDOANTERIOR)
            Me.columnMONTO1 = New Global.System.Data.DataColumn("MONTO1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTO1)
            Me.columnSALDO = New Global.System.Data.DataColumn("SALDO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO)
            Me.columnABONOCAPITAL = New Global.System.Data.DataColumn("ABONOCAPITAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOCAPITAL)
            Me.columnABONOINTERES = New Global.System.Data.DataColumn("ABONOINTERES", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOINTERES)
            Me.columnABONOCAPITALMORA = New Global.System.Data.DataColumn("ABONOCAPITALMORA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOCAPITALMORA)
            Me.columnABONOINTERESMORA = New Global.System.Data.DataColumn("ABONOINTERESMORA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOINTERESMORA)
            Me.columnABONOSEGURODEUDA = New Global.System.Data.DataColumn("ABONOSEGURODEUDA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOSEGURODEUDA)
            Me.columnABONOSEGURODANIOSYLA = New Global.System.Data.DataColumn("ABONOSEGURODANIOSYLA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOSEGURODANIOSYLA)
            Me.columnABONOSEGUROVIDA = New Global.System.Data.DataColumn("ABONOSEGUROVIDA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOSEGUROVIDA)
            Me.columnABONOSEGURODESEMPLEO = New Global.System.Data.DataColumn("ABONOSEGURODESEMPLEO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOSEGURODESEMPLEO)
            Me.columnABONOAPORTACION = New Global.System.Data.DataColumn("ABONOAPORTACION", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOAPORTACION)
            Me.columnABONOAHORRO = New Global.System.Data.DataColumn("ABONOAHORRO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOAHORRO)
            Me.columnABONOCOMISIONMANEJO = New Global.System.Data.DataColumn("ABONOCOMISIONMANEJO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOCOMISIONMANEJO)
            Me.columnABONOOTROS = New Global.System.Data.DataColumn("ABONOOTROS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABONOOTROS)
            Me.columnSALDOANTERIORPRESTAMO = New Global.System.Data.DataColumn("SALDOANTERIORPRESTAMO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDOANTERIORPRESTAMO)
            Me.columnSALDOPRESTAMO = New Global.System.Data.DataColumn("SALDOPRESTAMO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDOPRESTAMO)
            Me.columnMONTOUNO = New Global.System.Data.DataColumn("MONTOUNO", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTOUNO)
            Me.columnDUI.MaxLength = 20
            Me.columnNOSOCIO.MaxLength = 8
            Me.columnASOCIADO.ReadOnly = true
            Me.columnASOCIADO.MaxLength = 102
            Me.columnCTAORIGEN.AllowDBNull = false
            Me.columnCTAORIGEN.MaxLength = 20
            Me.columnCTADESTINO.AllowDBNull = false
            Me.columnCTADESTINO.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewAH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow() As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow
            Return CType(Me.NewRow,AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangedEvent) Is Nothing) Then
                RaiseEvent AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChanged(Me, New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEvent(CType(e.Row,AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangingEvent) Is Nothing) Then
                RaiseEvent AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChanging(Me, New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEvent(CType(e.Row,AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowDeletedEvent) Is Nothing) Then
                RaiseEvent AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowDeleted(Me, New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEvent(CType(e.Row,AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowDeletingEvent) Is Nothing) Then
                RaiseEvent AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowDeleting(Me, New AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEvent(CType(e.Row,AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveAH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow(ByVal row As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DtsAhorros = New DtsAhorros
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow
        Inherits Global.System.Data.DataRow
        
        Private tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS = CType(Me.Table,AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DUI() As String
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.DUIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DUI' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.DUIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOSOCIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.NOSOCIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOSOCIO' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFERENCI"& _ 
                            "AS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.NOSOCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ASOCIADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ASOCIADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ASOCIADO' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFERENC"& _ 
                            "IAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ASOCIADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CTAORIGEN() As String
            Get
                Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.CTAORIGENColumn),String)
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.CTAORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CTADESTINO() As String
            Get
                Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.CTADESTINOColumn),String)
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.CTADESTINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MONTO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTOColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MONTO' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDOANTERIOR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOANTERIORColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDOANTERIOR' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSF"& _ 
                            "ERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MONTO1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTO1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MONTO1' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFERENCIA"& _ 
                            "S' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOCAPITAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCAPITALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOCAPITAL' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFE"& _ 
                            "RENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCAPITALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOINTERES() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOINTERESColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOINTERES' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFE"& _ 
                            "RENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOINTERESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOCAPITALMORA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCAPITALMORAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOCAPITALMORA' de la tabla 'AH_PRAL_DATA_RPTDETALLETRA"& _ 
                            "NSFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCAPITALMORAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOINTERESMORA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOINTERESMORAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOINTERESMORA' de la tabla 'AH_PRAL_DATA_RPTDETALLETRA"& _ 
                            "NSFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOINTERESMORAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOSEGURODEUDA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODEUDAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOSEGURODEUDA' de la tabla 'AH_PRAL_DATA_RPTDETALLETRA"& _ 
                            "NSFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODEUDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOSEGURODANIOSYLA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODANIOSYLAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOSEGURODANIOSYLA' de la tabla 'AH_PRAL_DATA_RPTDETALL"& _ 
                            "ETRANSFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODANIOSYLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOSEGUROVIDA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGUROVIDAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOSEGUROVIDA' de la tabla 'AH_PRAL_DATA_RPTDETALLETRAN"& _ 
                            "SFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGUROVIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOSEGURODESEMPLEO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODESEMPLEOColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOSEGURODESEMPLEO' de la tabla 'AH_PRAL_DATA_RPTDETALL"& _ 
                            "ETRANSFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODESEMPLEOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOAPORTACION() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOAPORTACIONColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOAPORTACION' de la tabla 'AH_PRAL_DATA_RPTDETALLETRAN"& _ 
                            "SFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOAPORTACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOAHORRO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOAHORROColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOAHORRO' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFER"& _ 
                            "ENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOAHORROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOCOMISIONMANEJO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCOMISIONMANEJOColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOCOMISIONMANEJO' de la tabla 'AH_PRAL_DATA_RPTDETALLE"& _ 
                            "TRANSFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCOMISIONMANEJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ABONOOTROS() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOOTROSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ABONOOTROS' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFERE"& _ 
                            "NCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOOTROSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDOANTERIORPRESTAMO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOANTERIORPRESTAMOColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDOANTERIORPRESTAMO' de la tabla 'AH_PRAL_DATA_RPTDETAL"& _ 
                            "LETRANSFERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOANTERIORPRESTAMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDOPRESTAMO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOPRESTAMOColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDOPRESTAMO' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSF"& _ 
                            "ERENCIAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOPRESTAMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MONTOUNO() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTOUNOColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MONTOUNO' de la tabla 'AH_PRAL_DATA_RPTDETALLETRANSFERENC"& _ 
                            "IAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTOUNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDUINull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.DUIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDUINull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.DUIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOSOCIONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.NOSOCIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOSOCIONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.NOSOCIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsASOCIADONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ASOCIADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetASOCIADONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ASOCIADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMONTONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMONTONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDOANTERIORNull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDOANTERIORNull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMONTO1Null() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMONTO1Null()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOCAPITALNull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCAPITALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOCAPITALNull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCAPITALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOINTERESNull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOINTERESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOINTERESNull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOINTERESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOCAPITALMORANull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCAPITALMORAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOCAPITALMORANull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCAPITALMORAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOINTERESMORANull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOINTERESMORAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOINTERESMORANull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOINTERESMORAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOSEGURODEUDANull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODEUDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOSEGURODEUDANull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODEUDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOSEGURODANIOSYLANull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODANIOSYLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOSEGURODANIOSYLANull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODANIOSYLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOSEGUROVIDANull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGUROVIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOSEGUROVIDANull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGUROVIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOSEGURODESEMPLEONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODESEMPLEOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOSEGURODESEMPLEONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOSEGURODESEMPLEOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOAPORTACIONNull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOAPORTACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOAPORTACIONNull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOAPORTACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOAHORRONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOAHORROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOAHORRONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOAHORROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOCOMISIONMANEJONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCOMISIONMANEJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOCOMISIONMANEJONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOCOMISIONMANEJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsABONOOTROSNull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOOTROSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetABONOOTROSNull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.ABONOOTROSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDOANTERIORPRESTAMONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOANTERIORPRESTAMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDOANTERIORPRESTAMONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOANTERIORPRESTAMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDOPRESTAMONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOPRESTAMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDOPRESTAMONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.SALDOPRESTAMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMONTOUNONull() As Boolean
            Return Me.IsNull(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTOUNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMONTOUNONull()
            Me(Me.tableAH_PRAL_DATA_RPTDETALLETRANSFERENCIAS.MONTOUNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As AH_PRAL_DATA_RPTDETALLETRANSFERENCIASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DtsAhorrosTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AH_PRAL_DATA_RPTDETALLETRANSFERENCIASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS"
            tableMapping.ColumnMappings.Add("DUI", "DUI")
            tableMapping.ColumnMappings.Add("NOSOCIO", "NOSOCIO")
            tableMapping.ColumnMappings.Add("ASOCIADO", "ASOCIADO")
            tableMapping.ColumnMappings.Add("CTAORIGEN", "CTAORIGEN")
            tableMapping.ColumnMappings.Add("CTADESTINO", "CTADESTINO")
            tableMapping.ColumnMappings.Add("MONTO", "MONTO")
            tableMapping.ColumnMappings.Add("SALDOANTERIOR", "SALDOANTERIOR")
            tableMapping.ColumnMappings.Add("MONTO1", "MONTO1")
            tableMapping.ColumnMappings.Add("SALDO", "SALDO")
            tableMapping.ColumnMappings.Add("ABONOCAPITAL", "ABONOCAPITAL")
            tableMapping.ColumnMappings.Add("ABONOINTERES", "ABONOINTERES")
            tableMapping.ColumnMappings.Add("ABONOCAPITALMORA", "ABONOCAPITALMORA")
            tableMapping.ColumnMappings.Add("ABONOINTERESMORA", "ABONOINTERESMORA")
            tableMapping.ColumnMappings.Add("ABONOSEGURODEUDA", "ABONOSEGURODEUDA")
            tableMapping.ColumnMappings.Add("ABONOSEGURODANIOSYLA", "ABONOSEGURODANIOSYLA")
            tableMapping.ColumnMappings.Add("ABONOSEGUROVIDA", "ABONOSEGUROVIDA")
            tableMapping.ColumnMappings.Add("ABONOSEGURODESEMPLEO", "ABONOSEGURODESEMPLEO")
            tableMapping.ColumnMappings.Add("ABONOAPORTACION", "ABONOAPORTACION")
            tableMapping.ColumnMappings.Add("ABONOAHORRO", "ABONOAHORRO")
            tableMapping.ColumnMappings.Add("ABONOCOMISIONMANEJO", "ABONOCOMISIONMANEJO")
            tableMapping.ColumnMappings.Add("ABONOOTROS", "ABONOOTROS")
            tableMapping.ColumnMappings.Add("SALDOANTERIORPRESTAMO", "SALDOANTERIORPRESTAMO")
            tableMapping.ColumnMappings.Add("SALDOPRESTAMO", "SALDOPRESTAMO")
            tableMapping.ColumnMappings.Add("MONTOUNO", "MONTOUNO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.SysFinCoop.My.MySettings.Default.PRODUCCION
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.AH_PRAL_DATA_RPTDETALLETRANSFERENCIAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DtsAhorros.AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable, ByVal FECHA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHA As Global.System.Nullable(Of Date)) As DtsAhorros.AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DtsAhorros.AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable = New DtsAhorros.AH_PRAL_DATA_RPTDETALLETRANSFERENCIASDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
