'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2300
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dsCBCobroxGestion
    Inherits DataSet
    
    Private tableCBGestiones As CBGestionesDataTable
    
    Private tableCBGestores As CBGestoresDataTable
    
    Private tableCBTipoGestion As CBTipoGestionDataTable
    
    Private tablePRPrestamos As PRPrestamosDataTable
    
    Private relationCBTipoGestionCBGestiones As DataRelation
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CBGestiones")) Is Nothing) Then
                Me.Tables.Add(New CBGestionesDataTable(ds.Tables("CBGestiones")))
            End If
            If (Not (ds.Tables("CBGestores")) Is Nothing) Then
                Me.Tables.Add(New CBGestoresDataTable(ds.Tables("CBGestores")))
            End If
            If (Not (ds.Tables("CBTipoGestion")) Is Nothing) Then
                Me.Tables.Add(New CBTipoGestionDataTable(ds.Tables("CBTipoGestion")))
            End If
            If (Not (ds.Tables("PRPrestamos")) Is Nothing) Then
                Me.Tables.Add(New PRPrestamosDataTable(ds.Tables("PRPrestamos")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CBGestiones As CBGestionesDataTable
        Get
            Return Me.tableCBGestiones
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CBGestores As CBGestoresDataTable
        Get
            Return Me.tableCBGestores
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CBTipoGestion As CBTipoGestionDataTable
        Get
            Return Me.tableCBTipoGestion
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRPrestamos As PRPrestamosDataTable
        Get
            Return Me.tablePRPrestamos
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dsCBCobroxGestion = CType(MyBase.Clone,dsCBCobroxGestion)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("CBGestiones")) Is Nothing) Then
            Me.Tables.Add(New CBGestionesDataTable(ds.Tables("CBGestiones")))
        End If
        If (Not (ds.Tables("CBGestores")) Is Nothing) Then
            Me.Tables.Add(New CBGestoresDataTable(ds.Tables("CBGestores")))
        End If
        If (Not (ds.Tables("CBTipoGestion")) Is Nothing) Then
            Me.Tables.Add(New CBTipoGestionDataTable(ds.Tables("CBTipoGestion")))
        End If
        If (Not (ds.Tables("PRPrestamos")) Is Nothing) Then
            Me.Tables.Add(New PRPrestamosDataTable(ds.Tables("PRPrestamos")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableCBGestiones = CType(Me.Tables("CBGestiones"),CBGestionesDataTable)
        If (Not (Me.tableCBGestiones) Is Nothing) Then
            Me.tableCBGestiones.InitVars
        End If
        Me.tableCBGestores = CType(Me.Tables("CBGestores"),CBGestoresDataTable)
        If (Not (Me.tableCBGestores) Is Nothing) Then
            Me.tableCBGestores.InitVars
        End If
        Me.tableCBTipoGestion = CType(Me.Tables("CBTipoGestion"),CBTipoGestionDataTable)
        If (Not (Me.tableCBTipoGestion) Is Nothing) Then
            Me.tableCBTipoGestion.InitVars
        End If
        Me.tablePRPrestamos = CType(Me.Tables("PRPrestamos"),PRPrestamosDataTable)
        If (Not (Me.tablePRPrestamos) Is Nothing) Then
            Me.tablePRPrestamos.InitVars
        End If
        Me.relationCBTipoGestionCBGestiones = Me.Relations("CBTipoGestionCBGestiones")
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dsCBCobroxGestion"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsCBCobroxGestion.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableCBGestiones = New CBGestionesDataTable
        Me.Tables.Add(Me.tableCBGestiones)
        Me.tableCBGestores = New CBGestoresDataTable
        Me.Tables.Add(Me.tableCBGestores)
        Me.tableCBTipoGestion = New CBTipoGestionDataTable
        Me.Tables.Add(Me.tableCBTipoGestion)
        Me.tablePRPrestamos = New PRPrestamosDataTable
        Me.Tables.Add(Me.tablePRPrestamos)
        Dim fkc As ForeignKeyConstraint
        fkc = New ForeignKeyConstraint("CBTipoGestionCBGestiones", New DataColumn() {Me.tableCBTipoGestion.CodTipoGestionColumn}, New DataColumn() {Me.tableCBGestiones.CodTipoGestionColumn})
        Me.tableCBGestiones.Constraints.Add(fkc)
        fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None
        fkc.DeleteRule = System.Data.Rule.Cascade
        fkc.UpdateRule = System.Data.Rule.Cascade
        Me.relationCBTipoGestionCBGestiones = New DataRelation("CBTipoGestionCBGestiones", New DataColumn() {Me.tableCBTipoGestion.CodTipoGestionColumn}, New DataColumn() {Me.tableCBGestiones.CodTipoGestionColumn}, false)
        Me.Relations.Add(Me.relationCBTipoGestionCBGestiones)
    End Sub
    
    Private Function ShouldSerializeCBGestiones() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeCBGestores() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeCBTipoGestion() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializePRPrestamos() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub CBGestionesRowChangeEventHandler(ByVal sender As Object, ByVal e As CBGestionesRowChangeEvent)
    
    Public Delegate Sub CBGestoresRowChangeEventHandler(ByVal sender As Object, ByVal e As CBGestoresRowChangeEvent)
    
    Public Delegate Sub CBTipoGestionRowChangeEventHandler(ByVal sender As Object, ByVal e As CBTipoGestionRowChangeEvent)
    
    Public Delegate Sub PRPrestamosRowChangeEventHandler(ByVal sender As Object, ByVal e As PRPrestamosRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBGestionesDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnCorrelativo As DataColumn
        
        Private columnCodGestor As DataColumn
        
        Private columnCodPrestamo As DataColumn
        
        Private columnCodTipoGestion As DataColumn
        
        Private columnFechaInicio As DataColumn
        
        Private columnFechaFin As DataColumn
        
        Private columnMonto As DataColumn
        
        Friend Sub New()
            MyBase.New("CBGestiones")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property CorrelativoColumn As DataColumn
            Get
                Return Me.columnCorrelativo
            End Get
        End Property
        
        Friend ReadOnly Property CodGestorColumn As DataColumn
            Get
                Return Me.columnCodGestor
            End Get
        End Property
        
        Friend ReadOnly Property CodPrestamoColumn As DataColumn
            Get
                Return Me.columnCodPrestamo
            End Get
        End Property
        
        Friend ReadOnly Property CodTipoGestionColumn As DataColumn
            Get
                Return Me.columnCodTipoGestion
            End Get
        End Property
        
        Friend ReadOnly Property FechaInicioColumn As DataColumn
            Get
                Return Me.columnFechaInicio
            End Get
        End Property
        
        Friend ReadOnly Property FechaFinColumn As DataColumn
            Get
                Return Me.columnFechaFin
            End Get
        End Property
        
        Friend ReadOnly Property MontoColumn As DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As CBGestionesRow
            Get
                Return CType(Me.Rows(index),CBGestionesRow)
            End Get
        End Property
        
        Public Event CBGestionesRowChanged As CBGestionesRowChangeEventHandler
        
        Public Event CBGestionesRowChanging As CBGestionesRowChangeEventHandler
        
        Public Event CBGestionesRowDeleted As CBGestionesRowChangeEventHandler
        
        Public Event CBGestionesRowDeleting As CBGestionesRowChangeEventHandler
        
        Public Overloads Sub AddCBGestionesRow(ByVal row As CBGestionesRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddCBGestionesRow(ByVal CodGestor As String, ByVal CodPrestamo As String, ByVal parentCBTipoGestionRowByCBTipoGestionCBGestiones As CBTipoGestionRow, ByVal FechaInicio As Date, ByVal FechaFin As String, ByVal Monto As String) As CBGestionesRow
            Dim rowCBGestionesRow As CBGestionesRow = CType(Me.NewRow,CBGestionesRow)
            rowCBGestionesRow.ItemArray = New Object() {Nothing, CodGestor, CodPrestamo, parentCBTipoGestionRowByCBTipoGestionCBGestiones(0), FechaInicio, FechaFin, Monto}
            Me.Rows.Add(rowCBGestionesRow)
            Return rowCBGestionesRow
        End Function
        
        Public Function FindByCorrelativo(ByVal Correlativo As Integer) As CBGestionesRow
            Return CType(Me.Rows.Find(New Object() {Correlativo}),CBGestionesRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As CBGestionesDataTable = CType(MyBase.Clone,CBGestionesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New CBGestionesDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnCorrelativo = Me.Columns("Correlativo")
            Me.columnCodGestor = Me.Columns("CodGestor")
            Me.columnCodPrestamo = Me.Columns("CodPrestamo")
            Me.columnCodTipoGestion = Me.Columns("CodTipoGestion")
            Me.columnFechaInicio = Me.Columns("FechaInicio")
            Me.columnFechaFin = Me.Columns("FechaFin")
            Me.columnMonto = Me.Columns("Monto")
        End Sub
        
        Private Sub InitClass()
            Me.columnCorrelativo = New DataColumn("Correlativo", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCorrelativo)
            Me.columnCodGestor = New DataColumn("CodGestor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodGestor)
            Me.columnCodPrestamo = New DataColumn("CodPrestamo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodPrestamo)
            Me.columnCodTipoGestion = New DataColumn("CodTipoGestion", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodTipoGestion)
            Me.columnFechaInicio = New DataColumn("FechaInicio", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaInicio)
            Me.columnFechaFin = New DataColumn("FechaFin", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaFin)
            Me.columnMonto = New DataColumn("Monto", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto)
            Me.Constraints.Add(New UniqueConstraint("dsCBCobroxGestionKey1", New DataColumn() {Me.columnCorrelativo}, true))
            Me.columnCorrelativo.AutoIncrement = true
            Me.columnCorrelativo.AllowDBNull = false
            Me.columnCorrelativo.ReadOnly = true
            Me.columnCorrelativo.Unique = true
            Me.columnCodGestor.AllowDBNull = false
            Me.columnCodPrestamo.AllowDBNull = false
            Me.columnCodTipoGestion.AllowDBNull = false
        End Sub
        
        Public Function NewCBGestionesRow() As CBGestionesRow
            Return CType(Me.NewRow,CBGestionesRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New CBGestionesRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(CBGestionesRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CBGestionesRowChangedEvent) Is Nothing) Then
                RaiseEvent CBGestionesRowChanged(Me, New CBGestionesRowChangeEvent(CType(e.Row,CBGestionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CBGestionesRowChangingEvent) Is Nothing) Then
                RaiseEvent CBGestionesRowChanging(Me, New CBGestionesRowChangeEvent(CType(e.Row,CBGestionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CBGestionesRowDeletedEvent) Is Nothing) Then
                RaiseEvent CBGestionesRowDeleted(Me, New CBGestionesRowChangeEvent(CType(e.Row,CBGestionesRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CBGestionesRowDeletingEvent) Is Nothing) Then
                RaiseEvent CBGestionesRowDeleting(Me, New CBGestionesRowChangeEvent(CType(e.Row,CBGestionesRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveCBGestionesRow(ByVal row As CBGestionesRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBGestionesRow
        Inherits DataRow
        
        Private tableCBGestiones As CBGestionesDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableCBGestiones = CType(Me.Table,CBGestionesDataTable)
        End Sub
        
        Public Property Correlativo As Integer
            Get
                Return CType(Me(Me.tableCBGestiones.CorrelativoColumn),Integer)
            End Get
            Set
                Me(Me.tableCBGestiones.CorrelativoColumn) = value
            End Set
        End Property
        
        Public Property CodGestor As String
            Get
                Return CType(Me(Me.tableCBGestiones.CodGestorColumn),String)
            End Get
            Set
                Me(Me.tableCBGestiones.CodGestorColumn) = value
            End Set
        End Property
        
        Public Property CodPrestamo As String
            Get
                Return CType(Me(Me.tableCBGestiones.CodPrestamoColumn),String)
            End Get
            Set
                Me(Me.tableCBGestiones.CodPrestamoColumn) = value
            End Set
        End Property
        
        Public Property CodTipoGestion As Integer
            Get
                Return CType(Me(Me.tableCBGestiones.CodTipoGestionColumn),Integer)
            End Get
            Set
                Me(Me.tableCBGestiones.CodTipoGestionColumn) = value
            End Set
        End Property
        
        Public Property FechaInicio As Date
            Get
                Try 
                    Return CType(Me(Me.tableCBGestiones.FechaInicioColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBGestiones.FechaInicioColumn) = value
            End Set
        End Property
        
        Public Property FechaFin As String
            Get
                Try 
                    Return CType(Me(Me.tableCBGestiones.FechaFinColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBGestiones.FechaFinColumn) = value
            End Set
        End Property
        
        Public Property Monto As String
            Get
                Try 
                    Return CType(Me(Me.tableCBGestiones.MontoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBGestiones.MontoColumn) = value
            End Set
        End Property
        
        Public Property CBTipoGestionRow As CBTipoGestionRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("CBTipoGestionCBGestiones")),CBTipoGestionRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("CBTipoGestionCBGestiones"))
            End Set
        End Property
        
        Public Function IsFechaInicioNull() As Boolean
            Return Me.IsNull(Me.tableCBGestiones.FechaInicioColumn)
        End Function
        
        Public Sub SetFechaInicioNull()
            Me(Me.tableCBGestiones.FechaInicioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaFinNull() As Boolean
            Return Me.IsNull(Me.tableCBGestiones.FechaFinColumn)
        End Function
        
        Public Sub SetFechaFinNull()
            Me(Me.tableCBGestiones.FechaFinColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tableCBGestiones.MontoColumn)
        End Function
        
        Public Sub SetMontoNull()
            Me(Me.tableCBGestiones.MontoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBGestionesRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As CBGestionesRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As CBGestionesRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As CBGestionesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBGestoresDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnCodGestor As DataColumn
        
        Private columnNIT As DataColumn
        
        Private columnNombre As DataColumn
        
        Private columnTipo As DataColumn
        
        Private columnPorcentajeComision As DataColumn
        
        Private columnIdCuenta As DataColumn
        
        Friend Sub New()
            MyBase.New("CBGestores")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property CodGestorColumn As DataColumn
            Get
                Return Me.columnCodGestor
            End Get
        End Property
        
        Friend ReadOnly Property NITColumn As DataColumn
            Get
                Return Me.columnNIT
            End Get
        End Property
        
        Friend ReadOnly Property NombreColumn As DataColumn
            Get
                Return Me.columnNombre
            End Get
        End Property
        
        Friend ReadOnly Property TipoColumn As DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        Friend ReadOnly Property PorcentajeComisionColumn As DataColumn
            Get
                Return Me.columnPorcentajeComision
            End Get
        End Property
        
        Friend ReadOnly Property IdCuentaColumn As DataColumn
            Get
                Return Me.columnIdCuenta
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As CBGestoresRow
            Get
                Return CType(Me.Rows(index),CBGestoresRow)
            End Get
        End Property
        
        Public Event CBGestoresRowChanged As CBGestoresRowChangeEventHandler
        
        Public Event CBGestoresRowChanging As CBGestoresRowChangeEventHandler
        
        Public Event CBGestoresRowDeleted As CBGestoresRowChangeEventHandler
        
        Public Event CBGestoresRowDeleting As CBGestoresRowChangeEventHandler
        
        Public Overloads Sub AddCBGestoresRow(ByVal row As CBGestoresRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddCBGestoresRow(ByVal CodGestor As String, ByVal NIT As String, ByVal Nombre As String, ByVal Tipo As String, ByVal PorcentajeComision As Double, ByVal IdCuenta As String) As CBGestoresRow
            Dim rowCBGestoresRow As CBGestoresRow = CType(Me.NewRow,CBGestoresRow)
            rowCBGestoresRow.ItemArray = New Object() {CodGestor, NIT, Nombre, Tipo, PorcentajeComision, IdCuenta}
            Me.Rows.Add(rowCBGestoresRow)
            Return rowCBGestoresRow
        End Function
        
        Public Function FindByCodGestor(ByVal CodGestor As String) As CBGestoresRow
            Return CType(Me.Rows.Find(New Object() {CodGestor}),CBGestoresRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As CBGestoresDataTable = CType(MyBase.Clone,CBGestoresDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New CBGestoresDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnCodGestor = Me.Columns("CodGestor")
            Me.columnNIT = Me.Columns("NIT")
            Me.columnNombre = Me.Columns("Nombre")
            Me.columnTipo = Me.Columns("Tipo")
            Me.columnPorcentajeComision = Me.Columns("PorcentajeComision")
            Me.columnIdCuenta = Me.Columns("IdCuenta")
        End Sub
        
        Private Sub InitClass()
            Me.columnCodGestor = New DataColumn("CodGestor", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodGestor)
            Me.columnNIT = New DataColumn("NIT", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNIT)
            Me.columnNombre = New DataColumn("Nombre", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNombre)
            Me.columnTipo = New DataColumn("Tipo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTipo)
            Me.columnPorcentajeComision = New DataColumn("PorcentajeComision", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPorcentajeComision)
            Me.columnIdCuenta = New DataColumn("IdCuenta", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIdCuenta)
            Me.Constraints.Add(New UniqueConstraint("dsCBCobroxGestionKey2", New DataColumn() {Me.columnCodGestor}, true))
            Me.columnCodGestor.AllowDBNull = false
            Me.columnCodGestor.Unique = true
            Me.columnTipo.AllowDBNull = false
        End Sub
        
        Public Function NewCBGestoresRow() As CBGestoresRow
            Return CType(Me.NewRow,CBGestoresRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New CBGestoresRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(CBGestoresRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CBGestoresRowChangedEvent) Is Nothing) Then
                RaiseEvent CBGestoresRowChanged(Me, New CBGestoresRowChangeEvent(CType(e.Row,CBGestoresRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CBGestoresRowChangingEvent) Is Nothing) Then
                RaiseEvent CBGestoresRowChanging(Me, New CBGestoresRowChangeEvent(CType(e.Row,CBGestoresRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CBGestoresRowDeletedEvent) Is Nothing) Then
                RaiseEvent CBGestoresRowDeleted(Me, New CBGestoresRowChangeEvent(CType(e.Row,CBGestoresRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CBGestoresRowDeletingEvent) Is Nothing) Then
                RaiseEvent CBGestoresRowDeleting(Me, New CBGestoresRowChangeEvent(CType(e.Row,CBGestoresRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveCBGestoresRow(ByVal row As CBGestoresRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBGestoresRow
        Inherits DataRow
        
        Private tableCBGestores As CBGestoresDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableCBGestores = CType(Me.Table,CBGestoresDataTable)
        End Sub
        
        Public Property CodGestor As String
            Get
                Return CType(Me(Me.tableCBGestores.CodGestorColumn),String)
            End Get
            Set
                Me(Me.tableCBGestores.CodGestorColumn) = value
            End Set
        End Property
        
        Public Property NIT As String
            Get
                Try 
                    Return CType(Me(Me.tableCBGestores.NITColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBGestores.NITColumn) = value
            End Set
        End Property
        
        Public Property Nombre As String
            Get
                Try 
                    Return CType(Me(Me.tableCBGestores.NombreColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBGestores.NombreColumn) = value
            End Set
        End Property
        
        Public Property Tipo As String
            Get
                Return CType(Me(Me.tableCBGestores.TipoColumn),String)
            End Get
            Set
                Me(Me.tableCBGestores.TipoColumn) = value
            End Set
        End Property
        
        Public Property PorcentajeComision As Double
            Get
                Try 
                    Return CType(Me(Me.tableCBGestores.PorcentajeComisionColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBGestores.PorcentajeComisionColumn) = value
            End Set
        End Property
        
        Public Property IdCuenta As String
            Get
                Try 
                    Return CType(Me(Me.tableCBGestores.IdCuentaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBGestores.IdCuentaColumn) = value
            End Set
        End Property
        
        Public Function IsNITNull() As Boolean
            Return Me.IsNull(Me.tableCBGestores.NITColumn)
        End Function
        
        Public Sub SetNITNull()
            Me(Me.tableCBGestores.NITColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNombreNull() As Boolean
            Return Me.IsNull(Me.tableCBGestores.NombreColumn)
        End Function
        
        Public Sub SetNombreNull()
            Me(Me.tableCBGestores.NombreColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPorcentajeComisionNull() As Boolean
            Return Me.IsNull(Me.tableCBGestores.PorcentajeComisionColumn)
        End Function
        
        Public Sub SetPorcentajeComisionNull()
            Me(Me.tableCBGestores.PorcentajeComisionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIdCuentaNull() As Boolean
            Return Me.IsNull(Me.tableCBGestores.IdCuentaColumn)
        End Function
        
        Public Sub SetIdCuentaNull()
            Me(Me.tableCBGestores.IdCuentaColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBGestoresRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As CBGestoresRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As CBGestoresRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As CBGestoresRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBTipoGestionDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnCodTipoGestion As DataColumn
        
        Private columnDescripcion As DataColumn
        
        Private columnPorcentajeCobro As DataColumn
        
        Private columnIdCuenta As DataColumn
        
        Friend Sub New()
            MyBase.New("CBTipoGestion")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property CodTipoGestionColumn As DataColumn
            Get
                Return Me.columnCodTipoGestion
            End Get
        End Property
        
        Friend ReadOnly Property DescripcionColumn As DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        Friend ReadOnly Property PorcentajeCobroColumn As DataColumn
            Get
                Return Me.columnPorcentajeCobro
            End Get
        End Property
        
        Friend ReadOnly Property IdCuentaColumn As DataColumn
            Get
                Return Me.columnIdCuenta
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As CBTipoGestionRow
            Get
                Return CType(Me.Rows(index),CBTipoGestionRow)
            End Get
        End Property
        
        Public Event CBTipoGestionRowChanged As CBTipoGestionRowChangeEventHandler
        
        Public Event CBTipoGestionRowChanging As CBTipoGestionRowChangeEventHandler
        
        Public Event CBTipoGestionRowDeleted As CBTipoGestionRowChangeEventHandler
        
        Public Event CBTipoGestionRowDeleting As CBTipoGestionRowChangeEventHandler
        
        Public Overloads Sub AddCBTipoGestionRow(ByVal row As CBTipoGestionRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddCBTipoGestionRow(ByVal Descripcion As String, ByVal PorcentajeCobro As Double, ByVal IdCuenta As String) As CBTipoGestionRow
            Dim rowCBTipoGestionRow As CBTipoGestionRow = CType(Me.NewRow,CBTipoGestionRow)
            rowCBTipoGestionRow.ItemArray = New Object() {Nothing, Descripcion, PorcentajeCobro, IdCuenta}
            Me.Rows.Add(rowCBTipoGestionRow)
            Return rowCBTipoGestionRow
        End Function
        
        Public Function FindByCodTipoGestion(ByVal CodTipoGestion As Integer) As CBTipoGestionRow
            Return CType(Me.Rows.Find(New Object() {CodTipoGestion}),CBTipoGestionRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As CBTipoGestionDataTable = CType(MyBase.Clone,CBTipoGestionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New CBTipoGestionDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnCodTipoGestion = Me.Columns("CodTipoGestion")
            Me.columnDescripcion = Me.Columns("Descripcion")
            Me.columnPorcentajeCobro = Me.Columns("PorcentajeCobro")
            Me.columnIdCuenta = Me.Columns("IdCuenta")
        End Sub
        
        Private Sub InitClass()
            Me.columnCodTipoGestion = New DataColumn("CodTipoGestion", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodTipoGestion)
            Me.columnDescripcion = New DataColumn("Descripcion", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescripcion)
            Me.columnPorcentajeCobro = New DataColumn("PorcentajeCobro", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPorcentajeCobro)
            Me.columnIdCuenta = New DataColumn("IdCuenta", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIdCuenta)
            Me.Constraints.Add(New UniqueConstraint("dsCBCobroxGestionKey3", New DataColumn() {Me.columnCodTipoGestion}, true))
            Me.columnCodTipoGestion.AutoIncrement = true
            Me.columnCodTipoGestion.AllowDBNull = false
            Me.columnCodTipoGestion.ReadOnly = true
            Me.columnCodTipoGestion.Unique = true
        End Sub
        
        Public Function NewCBTipoGestionRow() As CBTipoGestionRow
            Return CType(Me.NewRow,CBTipoGestionRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New CBTipoGestionRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(CBTipoGestionRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CBTipoGestionRowChangedEvent) Is Nothing) Then
                RaiseEvent CBTipoGestionRowChanged(Me, New CBTipoGestionRowChangeEvent(CType(e.Row,CBTipoGestionRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CBTipoGestionRowChangingEvent) Is Nothing) Then
                RaiseEvent CBTipoGestionRowChanging(Me, New CBTipoGestionRowChangeEvent(CType(e.Row,CBTipoGestionRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CBTipoGestionRowDeletedEvent) Is Nothing) Then
                RaiseEvent CBTipoGestionRowDeleted(Me, New CBTipoGestionRowChangeEvent(CType(e.Row,CBTipoGestionRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CBTipoGestionRowDeletingEvent) Is Nothing) Then
                RaiseEvent CBTipoGestionRowDeleting(Me, New CBTipoGestionRowChangeEvent(CType(e.Row,CBTipoGestionRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveCBTipoGestionRow(ByVal row As CBTipoGestionRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBTipoGestionRow
        Inherits DataRow
        
        Private tableCBTipoGestion As CBTipoGestionDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableCBTipoGestion = CType(Me.Table,CBTipoGestionDataTable)
        End Sub
        
        Public Property CodTipoGestion As Integer
            Get
                Return CType(Me(Me.tableCBTipoGestion.CodTipoGestionColumn),Integer)
            End Get
            Set
                Me(Me.tableCBTipoGestion.CodTipoGestionColumn) = value
            End Set
        End Property
        
        Public Property Descripcion As String
            Get
                Try 
                    Return CType(Me(Me.tableCBTipoGestion.DescripcionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBTipoGestion.DescripcionColumn) = value
            End Set
        End Property
        
        Public Property PorcentajeCobro As Double
            Get
                Try 
                    Return CType(Me(Me.tableCBTipoGestion.PorcentajeCobroColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBTipoGestion.PorcentajeCobroColumn) = value
            End Set
        End Property
        
        Public Property IdCuenta As String
            Get
                Try 
                    Return CType(Me(Me.tableCBTipoGestion.IdCuentaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCBTipoGestion.IdCuentaColumn) = value
            End Set
        End Property
        
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableCBTipoGestion.DescripcionColumn)
        End Function
        
        Public Sub SetDescripcionNull()
            Me(Me.tableCBTipoGestion.DescripcionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPorcentajeCobroNull() As Boolean
            Return Me.IsNull(Me.tableCBTipoGestion.PorcentajeCobroColumn)
        End Function
        
        Public Sub SetPorcentajeCobroNull()
            Me(Me.tableCBTipoGestion.PorcentajeCobroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIdCuentaNull() As Boolean
            Return Me.IsNull(Me.tableCBTipoGestion.IdCuentaColumn)
        End Function
        
        Public Sub SetIdCuentaNull()
            Me(Me.tableCBTipoGestion.IdCuentaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function GetCBGestionesRows() As CBGestionesRow()
            Return CType(Me.GetChildRows(Me.Table.ChildRelations("CBTipoGestionCBGestiones")),CBGestionesRow())
        End Function
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CBTipoGestionRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As CBTipoGestionRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As CBTipoGestionRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As CBTipoGestionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRPrestamosDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnCodPrestamo As DataColumn
        
        Private columnCodAnteriorPrestamo As DataColumn
        
        Private columnNumSolicitud As DataColumn
        
        Private columnCodTipoCredito As DataColumn
        
        Private columnNoSocio As DataColumn
        
        Private columnDUI As DataColumn
        
        Private columnIdMovimiento As DataColumn
        
        Private columnNum_Partida As DataColumn
        
        Private columnCuota As DataColumn
        
        Private columnMonto As DataColumn
        
        Private columnMonto_Garantia As DataColumn
        
        Private columnTasa_Interes As DataColumn
        
        Private columnTasa_Interes_Mora As DataColumn
        
        Private columnPlazoMeses As DataColumn
        
        Private columnNoActa As DataColumn
        
        Private columnFechaActa As DataColumn
        
        Private columnArchivoActa As DataColumn
        
        Private columnFechaOtorgamiento As DataColumn
        
        Private columnFechaPrimeraCuota As DataColumn
        
        Private columnFechaVencimiento As DataColumn
        
        Private columnCodTablaAmortiza As DataColumn
        
        Private columnGeneraReserva As DataColumn
        
        Private columnCodEmpleadoCobro As DataColumn
        
        Private columnCategoria As DataColumn
        
        Private columnCodTipoPago As DataColumn
        
        Private columnDiaCobro As DataColumn
        
        Private columnCodPagaduria As DataColumn
        
        Private columnCodRuta As DataColumn
        
        Private columnCodEstadoPrestamo As DataColumn
        
        Private columnFechaUltimoPago As DataColumn
        
        Private columnFechaInicioProvision As DataColumn
        
        Private columnSaldo_Capital As DataColumn
        
        Private columnIntereses_pagados As DataColumn
        
        Private columnSaldoDia_Interes As DataColumn
        
        Private columnSaldoDia_CapitalMora As DataColumn
        
        Private columnSaldoDia_InteresMora As DataColumn
        
        Private columnSaldoDia_SeguroDeuda As DataColumn
        
        Private columnSaldoDia_SeguroDaniosyLA As DataColumn
        
        Private columnSaldoDia_SeguroVida As DataColumn
        
        Private columnSaldoDia_SeguroDesempleo As DataColumn
        
        Private columnSaldoDia_Aportacion As DataColumn
        
        Private columnSaldoDia_Ahorro As DataColumn
        
        Private columnSaldoDia_ComisionManejo As DataColumn
        
        Private columnSaldoDia_Otros As DataColumn
        
        Private columnMontoSaldoAnterior As DataColumn
        
        Private columnMontoIntereses As DataColumn
        
        Private columnMontoImpuestos As DataColumn
        
        Private columnMontoValuo As DataColumn
        
        Private columnDiasMora As DataColumn
        
        Private columnEstado As DataColumn
        
        Friend Sub New()
            MyBase.New("PRPrestamos")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property CodPrestamoColumn As DataColumn
            Get
                Return Me.columnCodPrestamo
            End Get
        End Property
        
        Friend ReadOnly Property CodAnteriorPrestamoColumn As DataColumn
            Get
                Return Me.columnCodAnteriorPrestamo
            End Get
        End Property
        
        Friend ReadOnly Property NumSolicitudColumn As DataColumn
            Get
                Return Me.columnNumSolicitud
            End Get
        End Property
        
        Friend ReadOnly Property CodTipoCreditoColumn As DataColumn
            Get
                Return Me.columnCodTipoCredito
            End Get
        End Property
        
        Friend ReadOnly Property NoSocioColumn As DataColumn
            Get
                Return Me.columnNoSocio
            End Get
        End Property
        
        Friend ReadOnly Property DUIColumn As DataColumn
            Get
                Return Me.columnDUI
            End Get
        End Property
        
        Friend ReadOnly Property IdMovimientoColumn As DataColumn
            Get
                Return Me.columnIdMovimiento
            End Get
        End Property
        
        Friend ReadOnly Property Num_PartidaColumn As DataColumn
            Get
                Return Me.columnNum_Partida
            End Get
        End Property
        
        Friend ReadOnly Property CuotaColumn As DataColumn
            Get
                Return Me.columnCuota
            End Get
        End Property
        
        Friend ReadOnly Property MontoColumn As DataColumn
            Get
                Return Me.columnMonto
            End Get
        End Property
        
        Friend ReadOnly Property Monto_GarantiaColumn As DataColumn
            Get
                Return Me.columnMonto_Garantia
            End Get
        End Property
        
        Friend ReadOnly Property Tasa_InteresColumn As DataColumn
            Get
                Return Me.columnTasa_Interes
            End Get
        End Property
        
        Friend ReadOnly Property Tasa_Interes_MoraColumn As DataColumn
            Get
                Return Me.columnTasa_Interes_Mora
            End Get
        End Property
        
        Friend ReadOnly Property PlazoMesesColumn As DataColumn
            Get
                Return Me.columnPlazoMeses
            End Get
        End Property
        
        Friend ReadOnly Property NoActaColumn As DataColumn
            Get
                Return Me.columnNoActa
            End Get
        End Property
        
        Friend ReadOnly Property FechaActaColumn As DataColumn
            Get
                Return Me.columnFechaActa
            End Get
        End Property
        
        Friend ReadOnly Property ArchivoActaColumn As DataColumn
            Get
                Return Me.columnArchivoActa
            End Get
        End Property
        
        Friend ReadOnly Property FechaOtorgamientoColumn As DataColumn
            Get
                Return Me.columnFechaOtorgamiento
            End Get
        End Property
        
        Friend ReadOnly Property FechaPrimeraCuotaColumn As DataColumn
            Get
                Return Me.columnFechaPrimeraCuota
            End Get
        End Property
        
        Friend ReadOnly Property FechaVencimientoColumn As DataColumn
            Get
                Return Me.columnFechaVencimiento
            End Get
        End Property
        
        Friend ReadOnly Property CodTablaAmortizaColumn As DataColumn
            Get
                Return Me.columnCodTablaAmortiza
            End Get
        End Property
        
        Friend ReadOnly Property GeneraReservaColumn As DataColumn
            Get
                Return Me.columnGeneraReserva
            End Get
        End Property
        
        Friend ReadOnly Property CodEmpleadoCobroColumn As DataColumn
            Get
                Return Me.columnCodEmpleadoCobro
            End Get
        End Property
        
        Friend ReadOnly Property CategoriaColumn As DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        Friend ReadOnly Property CodTipoPagoColumn As DataColumn
            Get
                Return Me.columnCodTipoPago
            End Get
        End Property
        
        Friend ReadOnly Property DiaCobroColumn As DataColumn
            Get
                Return Me.columnDiaCobro
            End Get
        End Property
        
        Friend ReadOnly Property CodPagaduriaColumn As DataColumn
            Get
                Return Me.columnCodPagaduria
            End Get
        End Property
        
        Friend ReadOnly Property CodRutaColumn As DataColumn
            Get
                Return Me.columnCodRuta
            End Get
        End Property
        
        Friend ReadOnly Property CodEstadoPrestamoColumn As DataColumn
            Get
                Return Me.columnCodEstadoPrestamo
            End Get
        End Property
        
        Friend ReadOnly Property FechaUltimoPagoColumn As DataColumn
            Get
                Return Me.columnFechaUltimoPago
            End Get
        End Property
        
        Friend ReadOnly Property FechaInicioProvisionColumn As DataColumn
            Get
                Return Me.columnFechaInicioProvision
            End Get
        End Property
        
        Friend ReadOnly Property Saldo_CapitalColumn As DataColumn
            Get
                Return Me.columnSaldo_Capital
            End Get
        End Property
        
        Friend ReadOnly Property Intereses_pagadosColumn As DataColumn
            Get
                Return Me.columnIntereses_pagados
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_InteresColumn As DataColumn
            Get
                Return Me.columnSaldoDia_Interes
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_CapitalMoraColumn As DataColumn
            Get
                Return Me.columnSaldoDia_CapitalMora
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_InteresMoraColumn As DataColumn
            Get
                Return Me.columnSaldoDia_InteresMora
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_SeguroDeudaColumn As DataColumn
            Get
                Return Me.columnSaldoDia_SeguroDeuda
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_SeguroDaniosyLAColumn As DataColumn
            Get
                Return Me.columnSaldoDia_SeguroDaniosyLA
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_SeguroVidaColumn As DataColumn
            Get
                Return Me.columnSaldoDia_SeguroVida
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_SeguroDesempleoColumn As DataColumn
            Get
                Return Me.columnSaldoDia_SeguroDesempleo
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_AportacionColumn As DataColumn
            Get
                Return Me.columnSaldoDia_Aportacion
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_AhorroColumn As DataColumn
            Get
                Return Me.columnSaldoDia_Ahorro
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_ComisionManejoColumn As DataColumn
            Get
                Return Me.columnSaldoDia_ComisionManejo
            End Get
        End Property
        
        Friend ReadOnly Property SaldoDia_OtrosColumn As DataColumn
            Get
                Return Me.columnSaldoDia_Otros
            End Get
        End Property
        
        Friend ReadOnly Property MontoSaldoAnteriorColumn As DataColumn
            Get
                Return Me.columnMontoSaldoAnterior
            End Get
        End Property
        
        Friend ReadOnly Property MontoInteresesColumn As DataColumn
            Get
                Return Me.columnMontoIntereses
            End Get
        End Property
        
        Friend ReadOnly Property MontoImpuestosColumn As DataColumn
            Get
                Return Me.columnMontoImpuestos
            End Get
        End Property
        
        Friend ReadOnly Property MontoValuoColumn As DataColumn
            Get
                Return Me.columnMontoValuo
            End Get
        End Property
        
        Friend ReadOnly Property DiasMoraColumn As DataColumn
            Get
                Return Me.columnDiasMora
            End Get
        End Property
        
        Friend ReadOnly Property EstadoColumn As DataColumn
            Get
                Return Me.columnEstado
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRPrestamosRow
            Get
                Return CType(Me.Rows(index),PRPrestamosRow)
            End Get
        End Property
        
        Public Event PRPrestamosRowChanged As PRPrestamosRowChangeEventHandler
        
        Public Event PRPrestamosRowChanging As PRPrestamosRowChangeEventHandler
        
        Public Event PRPrestamosRowDeleted As PRPrestamosRowChangeEventHandler
        
        Public Event PRPrestamosRowDeleting As PRPrestamosRowChangeEventHandler
        
        Public Overloads Sub AddPRPrestamosRow(ByVal row As PRPrestamosRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddPRPrestamosRow( _
                    ByVal CodPrestamo As String,  _
                    ByVal CodAnteriorPrestamo As String,  _
                    ByVal NumSolicitud As Integer,  _
                    ByVal CodTipoCredito As String,  _
                    ByVal NoSocio As String,  _
                    ByVal DUI As String,  _
                    ByVal IdMovimiento As String,  _
                    ByVal Num_Partida As String,  _
                    ByVal Cuota As Double,  _
                    ByVal Monto As Double,  _
                    ByVal Monto_Garantia As Double,  _
                    ByVal Tasa_Interes As Double,  _
                    ByVal Tasa_Interes_Mora As Double,  _
                    ByVal PlazoMeses As Integer,  _
                    ByVal NoActa As String,  _
                    ByVal FechaActa As Date,  _
                    ByVal ArchivoActa As String,  _
                    ByVal FechaOtorgamiento As Date,  _
                    ByVal FechaPrimeraCuota As Date,  _
                    ByVal FechaVencimiento As Date,  _
                    ByVal CodTablaAmortiza As String,  _
                    ByVal GeneraReserva As String,  _
                    ByVal CodEmpleadoCobro As String,  _
                    ByVal Categoria As String,  _
                    ByVal CodTipoPago As String,  _
                    ByVal DiaCobro As Integer,  _
                    ByVal CodPagaduria As String,  _
                    ByVal CodRuta As String,  _
                    ByVal CodEstadoPrestamo As String,  _
                    ByVal FechaUltimoPago As Date,  _
                    ByVal FechaInicioProvision As Date,  _
                    ByVal Saldo_Capital As Double,  _
                    ByVal Intereses_pagados As Double,  _
                    ByVal SaldoDia_Interes As Double,  _
                    ByVal SaldoDia_CapitalMora As Double,  _
                    ByVal SaldoDia_InteresMora As Double,  _
                    ByVal SaldoDia_SeguroDeuda As Double,  _
                    ByVal SaldoDia_SeguroDaniosyLA As Double,  _
                    ByVal SaldoDia_SeguroVida As Double,  _
                    ByVal SaldoDia_SeguroDesempleo As Double,  _
                    ByVal SaldoDia_Aportacion As Double,  _
                    ByVal SaldoDia_Ahorro As Double,  _
                    ByVal SaldoDia_ComisionManejo As Double,  _
                    ByVal SaldoDia_Otros As Double,  _
                    ByVal MontoSaldoAnterior As Double,  _
                    ByVal MontoIntereses As Double,  _
                    ByVal MontoImpuestos As Double,  _
                    ByVal MontoValuo As Double,  _
                    ByVal DiasMora As Integer,  _
                    ByVal Estado As String) As PRPrestamosRow
            Dim rowPRPrestamosRow As PRPrestamosRow = CType(Me.NewRow,PRPrestamosRow)
            rowPRPrestamosRow.ItemArray = New Object() {CodPrestamo, CodAnteriorPrestamo, NumSolicitud, CodTipoCredito, NoSocio, DUI, IdMovimiento, Num_Partida, Cuota, Monto, Monto_Garantia, Tasa_Interes, Tasa_Interes_Mora, PlazoMeses, NoActa, FechaActa, ArchivoActa, FechaOtorgamiento, FechaPrimeraCuota, FechaVencimiento, CodTablaAmortiza, GeneraReserva, CodEmpleadoCobro, Categoria, CodTipoPago, DiaCobro, CodPagaduria, CodRuta, CodEstadoPrestamo, FechaUltimoPago, FechaInicioProvision, Saldo_Capital, Intereses_pagados, SaldoDia_Interes, SaldoDia_CapitalMora, SaldoDia_InteresMora, SaldoDia_SeguroDeuda, SaldoDia_SeguroDaniosyLA, SaldoDia_SeguroVida, SaldoDia_SeguroDesempleo, SaldoDia_Aportacion, SaldoDia_Ahorro, SaldoDia_ComisionManejo, SaldoDia_Otros, MontoSaldoAnterior, MontoIntereses, MontoImpuestos, MontoValuo, DiasMora, Estado}
            Me.Rows.Add(rowPRPrestamosRow)
            Return rowPRPrestamosRow
        End Function
        
        Public Function FindByCodPrestamo(ByVal CodPrestamo As String) As PRPrestamosRow
            Return CType(Me.Rows.Find(New Object() {CodPrestamo}),PRPrestamosRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As PRPrestamosDataTable = CType(MyBase.Clone,PRPrestamosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New PRPrestamosDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnCodPrestamo = Me.Columns("CodPrestamo")
            Me.columnCodAnteriorPrestamo = Me.Columns("CodAnteriorPrestamo")
            Me.columnNumSolicitud = Me.Columns("NumSolicitud")
            Me.columnCodTipoCredito = Me.Columns("CodTipoCredito")
            Me.columnNoSocio = Me.Columns("NoSocio")
            Me.columnDUI = Me.Columns("DUI")
            Me.columnIdMovimiento = Me.Columns("IdMovimiento")
            Me.columnNum_Partida = Me.Columns("Num_Partida")
            Me.columnCuota = Me.Columns("Cuota")
            Me.columnMonto = Me.Columns("Monto")
            Me.columnMonto_Garantia = Me.Columns("Monto_Garantia")
            Me.columnTasa_Interes = Me.Columns("Tasa_Interes")
            Me.columnTasa_Interes_Mora = Me.Columns("Tasa_Interes_Mora")
            Me.columnPlazoMeses = Me.Columns("PlazoMeses")
            Me.columnNoActa = Me.Columns("NoActa")
            Me.columnFechaActa = Me.Columns("FechaActa")
            Me.columnArchivoActa = Me.Columns("ArchivoActa")
            Me.columnFechaOtorgamiento = Me.Columns("FechaOtorgamiento")
            Me.columnFechaPrimeraCuota = Me.Columns("FechaPrimeraCuota")
            Me.columnFechaVencimiento = Me.Columns("FechaVencimiento")
            Me.columnCodTablaAmortiza = Me.Columns("CodTablaAmortiza")
            Me.columnGeneraReserva = Me.Columns("GeneraReserva")
            Me.columnCodEmpleadoCobro = Me.Columns("CodEmpleadoCobro")
            Me.columnCategoria = Me.Columns("Categoria")
            Me.columnCodTipoPago = Me.Columns("CodTipoPago")
            Me.columnDiaCobro = Me.Columns("DiaCobro")
            Me.columnCodPagaduria = Me.Columns("CodPagaduria")
            Me.columnCodRuta = Me.Columns("CodRuta")
            Me.columnCodEstadoPrestamo = Me.Columns("CodEstadoPrestamo")
            Me.columnFechaUltimoPago = Me.Columns("FechaUltimoPago")
            Me.columnFechaInicioProvision = Me.Columns("FechaInicioProvision")
            Me.columnSaldo_Capital = Me.Columns("Saldo_Capital")
            Me.columnIntereses_pagados = Me.Columns("Intereses_pagados")
            Me.columnSaldoDia_Interes = Me.Columns("SaldoDia_Interes")
            Me.columnSaldoDia_CapitalMora = Me.Columns("SaldoDia_CapitalMora")
            Me.columnSaldoDia_InteresMora = Me.Columns("SaldoDia_InteresMora")
            Me.columnSaldoDia_SeguroDeuda = Me.Columns("SaldoDia_SeguroDeuda")
            Me.columnSaldoDia_SeguroDaniosyLA = Me.Columns("SaldoDia_SeguroDaniosyLA")
            Me.columnSaldoDia_SeguroVida = Me.Columns("SaldoDia_SeguroVida")
            Me.columnSaldoDia_SeguroDesempleo = Me.Columns("SaldoDia_SeguroDesempleo")
            Me.columnSaldoDia_Aportacion = Me.Columns("SaldoDia_Aportacion")
            Me.columnSaldoDia_Ahorro = Me.Columns("SaldoDia_Ahorro")
            Me.columnSaldoDia_ComisionManejo = Me.Columns("SaldoDia_ComisionManejo")
            Me.columnSaldoDia_Otros = Me.Columns("SaldoDia_Otros")
            Me.columnMontoSaldoAnterior = Me.Columns("MontoSaldoAnterior")
            Me.columnMontoIntereses = Me.Columns("MontoIntereses")
            Me.columnMontoImpuestos = Me.Columns("MontoImpuestos")
            Me.columnMontoValuo = Me.Columns("MontoValuo")
            Me.columnDiasMora = Me.Columns("DiasMora")
            Me.columnEstado = Me.Columns("Estado")
        End Sub
        
        Private Sub InitClass()
            Me.columnCodPrestamo = New DataColumn("CodPrestamo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodPrestamo)
            Me.columnCodAnteriorPrestamo = New DataColumn("CodAnteriorPrestamo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodAnteriorPrestamo)
            Me.columnNumSolicitud = New DataColumn("NumSolicitud", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNumSolicitud)
            Me.columnCodTipoCredito = New DataColumn("CodTipoCredito", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodTipoCredito)
            Me.columnNoSocio = New DataColumn("NoSocio", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNoSocio)
            Me.columnDUI = New DataColumn("DUI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDUI)
            Me.columnIdMovimiento = New DataColumn("IdMovimiento", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIdMovimiento)
            Me.columnNum_Partida = New DataColumn("Num_Partida", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNum_Partida)
            Me.columnCuota = New DataColumn("Cuota", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCuota)
            Me.columnMonto = New DataColumn("Monto", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto)
            Me.columnMonto_Garantia = New DataColumn("Monto_Garantia", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMonto_Garantia)
            Me.columnTasa_Interes = New DataColumn("Tasa_Interes", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTasa_Interes)
            Me.columnTasa_Interes_Mora = New DataColumn("Tasa_Interes_Mora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTasa_Interes_Mora)
            Me.columnPlazoMeses = New DataColumn("PlazoMeses", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPlazoMeses)
            Me.columnNoActa = New DataColumn("NoActa", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNoActa)
            Me.columnFechaActa = New DataColumn("FechaActa", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaActa)
            Me.columnArchivoActa = New DataColumn("ArchivoActa", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnArchivoActa)
            Me.columnFechaOtorgamiento = New DataColumn("FechaOtorgamiento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaOtorgamiento)
            Me.columnFechaPrimeraCuota = New DataColumn("FechaPrimeraCuota", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaPrimeraCuota)
            Me.columnFechaVencimiento = New DataColumn("FechaVencimiento", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaVencimiento)
            Me.columnCodTablaAmortiza = New DataColumn("CodTablaAmortiza", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodTablaAmortiza)
            Me.columnGeneraReserva = New DataColumn("GeneraReserva", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGeneraReserva)
            Me.columnCodEmpleadoCobro = New DataColumn("CodEmpleadoCobro", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodEmpleadoCobro)
            Me.columnCategoria = New DataColumn("Categoria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCategoria)
            Me.columnCodTipoPago = New DataColumn("CodTipoPago", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodTipoPago)
            Me.columnDiaCobro = New DataColumn("DiaCobro", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDiaCobro)
            Me.columnCodPagaduria = New DataColumn("CodPagaduria", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodPagaduria)
            Me.columnCodRuta = New DataColumn("CodRuta", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodRuta)
            Me.columnCodEstadoPrestamo = New DataColumn("CodEstadoPrestamo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCodEstadoPrestamo)
            Me.columnFechaUltimoPago = New DataColumn("FechaUltimoPago", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaUltimoPago)
            Me.columnFechaInicioProvision = New DataColumn("FechaInicioProvision", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFechaInicioProvision)
            Me.columnSaldo_Capital = New DataColumn("Saldo_Capital", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldo_Capital)
            Me.columnIntereses_pagados = New DataColumn("Intereses_pagados", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnIntereses_pagados)
            Me.columnSaldoDia_Interes = New DataColumn("SaldoDia_Interes", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_Interes)
            Me.columnSaldoDia_CapitalMora = New DataColumn("SaldoDia_CapitalMora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_CapitalMora)
            Me.columnSaldoDia_InteresMora = New DataColumn("SaldoDia_InteresMora", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_InteresMora)
            Me.columnSaldoDia_SeguroDeuda = New DataColumn("SaldoDia_SeguroDeuda", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_SeguroDeuda)
            Me.columnSaldoDia_SeguroDaniosyLA = New DataColumn("SaldoDia_SeguroDaniosyLA", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_SeguroDaniosyLA)
            Me.columnSaldoDia_SeguroVida = New DataColumn("SaldoDia_SeguroVida", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_SeguroVida)
            Me.columnSaldoDia_SeguroDesempleo = New DataColumn("SaldoDia_SeguroDesempleo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_SeguroDesempleo)
            Me.columnSaldoDia_Aportacion = New DataColumn("SaldoDia_Aportacion", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_Aportacion)
            Me.columnSaldoDia_Ahorro = New DataColumn("SaldoDia_Ahorro", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_Ahorro)
            Me.columnSaldoDia_ComisionManejo = New DataColumn("SaldoDia_ComisionManejo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_ComisionManejo)
            Me.columnSaldoDia_Otros = New DataColumn("SaldoDia_Otros", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSaldoDia_Otros)
            Me.columnMontoSaldoAnterior = New DataColumn("MontoSaldoAnterior", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMontoSaldoAnterior)
            Me.columnMontoIntereses = New DataColumn("MontoIntereses", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMontoIntereses)
            Me.columnMontoImpuestos = New DataColumn("MontoImpuestos", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMontoImpuestos)
            Me.columnMontoValuo = New DataColumn("MontoValuo", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMontoValuo)
            Me.columnDiasMora = New DataColumn("DiasMora", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDiasMora)
            Me.columnEstado = New DataColumn("Estado", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEstado)
            Me.Constraints.Add(New UniqueConstraint("dsCBCobroxGestionKey4", New DataColumn() {Me.columnCodPrestamo}, true))
            Me.columnCodPrestamo.AllowDBNull = false
            Me.columnCodPrestamo.Unique = true
        End Sub
        
        Public Function NewPRPrestamosRow() As PRPrestamosRow
            Return CType(Me.NewRow,PRPrestamosRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New PRPrestamosRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(PRPrestamosRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRPrestamosRowChangedEvent) Is Nothing) Then
                RaiseEvent PRPrestamosRowChanged(Me, New PRPrestamosRowChangeEvent(CType(e.Row,PRPrestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRPrestamosRowChangingEvent) Is Nothing) Then
                RaiseEvent PRPrestamosRowChanging(Me, New PRPrestamosRowChangeEvent(CType(e.Row,PRPrestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRPrestamosRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRPrestamosRowDeleted(Me, New PRPrestamosRowChangeEvent(CType(e.Row,PRPrestamosRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRPrestamosRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRPrestamosRowDeleting(Me, New PRPrestamosRowChangeEvent(CType(e.Row,PRPrestamosRow), e.Action))
            End If
        End Sub
        
        Public Sub RemovePRPrestamosRow(ByVal row As PRPrestamosRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRPrestamosRow
        Inherits DataRow
        
        Private tablePRPrestamos As PRPrestamosDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRPrestamos = CType(Me.Table,PRPrestamosDataTable)
        End Sub
        
        Public Property CodPrestamo As String
            Get
                Return CType(Me(Me.tablePRPrestamos.CodPrestamoColumn),String)
            End Get
            Set
                Me(Me.tablePRPrestamos.CodPrestamoColumn) = value
            End Set
        End Property
        
        Public Property CodAnteriorPrestamo As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodAnteriorPrestamoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodAnteriorPrestamoColumn) = value
            End Set
        End Property
        
        Public Property NumSolicitud As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.NumSolicitudColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.NumSolicitudColumn) = value
            End Set
        End Property
        
        Public Property CodTipoCredito As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodTipoCreditoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodTipoCreditoColumn) = value
            End Set
        End Property
        
        Public Property NoSocio As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.NoSocioColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.NoSocioColumn) = value
            End Set
        End Property
        
        Public Property DUI As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.DUIColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.DUIColumn) = value
            End Set
        End Property
        
        Public Property IdMovimiento As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.IdMovimientoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.IdMovimientoColumn) = value
            End Set
        End Property
        
        Public Property Num_Partida As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Num_PartidaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Num_PartidaColumn) = value
            End Set
        End Property
        
        Public Property Cuota As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CuotaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CuotaColumn) = value
            End Set
        End Property
        
        Public Property Monto As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.MontoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.MontoColumn) = value
            End Set
        End Property
        
        Public Property Monto_Garantia As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Monto_GarantiaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Monto_GarantiaColumn) = value
            End Set
        End Property
        
        Public Property Tasa_Interes As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Tasa_InteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Tasa_InteresColumn) = value
            End Set
        End Property
        
        Public Property Tasa_Interes_Mora As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Tasa_Interes_MoraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Tasa_Interes_MoraColumn) = value
            End Set
        End Property
        
        Public Property PlazoMeses As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.PlazoMesesColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.PlazoMesesColumn) = value
            End Set
        End Property
        
        Public Property NoActa As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.NoActaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.NoActaColumn) = value
            End Set
        End Property
        
        Public Property FechaActa As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaActaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaActaColumn) = value
            End Set
        End Property
        
        Public Property ArchivoActa As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.ArchivoActaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.ArchivoActaColumn) = value
            End Set
        End Property
        
        Public Property FechaOtorgamiento As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaOtorgamientoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaOtorgamientoColumn) = value
            End Set
        End Property
        
        Public Property FechaPrimeraCuota As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaPrimeraCuotaColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaPrimeraCuotaColumn) = value
            End Set
        End Property
        
        Public Property FechaVencimiento As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaVencimientoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaVencimientoColumn) = value
            End Set
        End Property
        
        Public Property CodTablaAmortiza As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodTablaAmortizaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodTablaAmortizaColumn) = value
            End Set
        End Property
        
        Public Property GeneraReserva As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.GeneraReservaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.GeneraReservaColumn) = value
            End Set
        End Property
        
        Public Property CodEmpleadoCobro As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodEmpleadoCobroColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodEmpleadoCobroColumn) = value
            End Set
        End Property
        
        Public Property Categoria As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CategoriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CategoriaColumn) = value
            End Set
        End Property
        
        Public Property CodTipoPago As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodTipoPagoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodTipoPagoColumn) = value
            End Set
        End Property
        
        Public Property DiaCobro As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.DiaCobroColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.DiaCobroColumn) = value
            End Set
        End Property
        
        Public Property CodPagaduria As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodPagaduriaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodPagaduriaColumn) = value
            End Set
        End Property
        
        Public Property CodRuta As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodRutaColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodRutaColumn) = value
            End Set
        End Property
        
        Public Property CodEstadoPrestamo As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.CodEstadoPrestamoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.CodEstadoPrestamoColumn) = value
            End Set
        End Property
        
        Public Property FechaUltimoPago As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaUltimoPagoColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaUltimoPagoColumn) = value
            End Set
        End Property
        
        Public Property FechaInicioProvision As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.FechaInicioProvisionColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.FechaInicioProvisionColumn) = value
            End Set
        End Property
        
        Public Property Saldo_Capital As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Saldo_CapitalColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Saldo_CapitalColumn) = value
            End Set
        End Property
        
        Public Property Intereses_pagados As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.Intereses_pagadosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.Intereses_pagadosColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_Interes As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_InteresColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_InteresColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_CapitalMora As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_CapitalMoraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_CapitalMoraColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_InteresMora As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_InteresMoraColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_InteresMoraColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_SeguroDeuda As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_SeguroDeudaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_SeguroDeudaColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_SeguroDaniosyLA As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_SeguroDaniosyLAColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_SeguroDaniosyLAColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_SeguroVida As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_SeguroVidaColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_SeguroVidaColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_SeguroDesempleo As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_SeguroDesempleoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_SeguroDesempleoColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_Aportacion As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_AportacionColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_AportacionColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_Ahorro As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_AhorroColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_AhorroColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_ComisionManejo As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_ComisionManejoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_ComisionManejoColumn) = value
            End Set
        End Property
        
        Public Property SaldoDia_Otros As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.SaldoDia_OtrosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.SaldoDia_OtrosColumn) = value
            End Set
        End Property
        
        Public Property MontoSaldoAnterior As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.MontoSaldoAnteriorColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.MontoSaldoAnteriorColumn) = value
            End Set
        End Property
        
        Public Property MontoIntereses As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.MontoInteresesColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.MontoInteresesColumn) = value
            End Set
        End Property
        
        Public Property MontoImpuestos As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.MontoImpuestosColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.MontoImpuestosColumn) = value
            End Set
        End Property
        
        Public Property MontoValuo As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.MontoValuoColumn),Double)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.MontoValuoColumn) = value
            End Set
        End Property
        
        Public Property DiasMora As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.DiasMoraColumn),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.DiasMoraColumn) = value
            End Set
        End Property
        
        Public Property Estado As String
            Get
                Try 
                    Return CType(Me(Me.tablePRPrestamos.EstadoColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("No se puede obtener el valor porque es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRPrestamos.EstadoColumn) = value
            End Set
        End Property
        
        Public Function IsCodAnteriorPrestamoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodAnteriorPrestamoColumn)
        End Function
        
        Public Sub SetCodAnteriorPrestamoNull()
            Me(Me.tablePRPrestamos.CodAnteriorPrestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNumSolicitudNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.NumSolicitudColumn)
        End Function
        
        Public Sub SetNumSolicitudNull()
            Me(Me.tablePRPrestamos.NumSolicitudColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodTipoCreditoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodTipoCreditoColumn)
        End Function
        
        Public Sub SetCodTipoCreditoNull()
            Me(Me.tablePRPrestamos.CodTipoCreditoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNoSocioNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.NoSocioColumn)
        End Function
        
        Public Sub SetNoSocioNull()
            Me(Me.tablePRPrestamos.NoSocioColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDUINull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.DUIColumn)
        End Function
        
        Public Sub SetDUINull()
            Me(Me.tablePRPrestamos.DUIColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIdMovimientoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.IdMovimientoColumn)
        End Function
        
        Public Sub SetIdMovimientoNull()
            Me(Me.tablePRPrestamos.IdMovimientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNum_PartidaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Num_PartidaColumn)
        End Function
        
        Public Sub SetNum_PartidaNull()
            Me(Me.tablePRPrestamos.Num_PartidaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCuotaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CuotaColumn)
        End Function
        
        Public Sub SetCuotaNull()
            Me(Me.tablePRPrestamos.CuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.MontoColumn)
        End Function
        
        Public Sub SetMontoNull()
            Me(Me.tablePRPrestamos.MontoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMonto_GarantiaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Monto_GarantiaColumn)
        End Function
        
        Public Sub SetMonto_GarantiaNull()
            Me(Me.tablePRPrestamos.Monto_GarantiaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTasa_InteresNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Tasa_InteresColumn)
        End Function
        
        Public Sub SetTasa_InteresNull()
            Me(Me.tablePRPrestamos.Tasa_InteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsTasa_Interes_MoraNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Tasa_Interes_MoraColumn)
        End Function
        
        Public Sub SetTasa_Interes_MoraNull()
            Me(Me.tablePRPrestamos.Tasa_Interes_MoraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPlazoMesesNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.PlazoMesesColumn)
        End Function
        
        Public Sub SetPlazoMesesNull()
            Me(Me.tablePRPrestamos.PlazoMesesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNoActaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.NoActaColumn)
        End Function
        
        Public Sub SetNoActaNull()
            Me(Me.tablePRPrestamos.NoActaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaActaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaActaColumn)
        End Function
        
        Public Sub SetFechaActaNull()
            Me(Me.tablePRPrestamos.FechaActaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsArchivoActaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.ArchivoActaColumn)
        End Function
        
        Public Sub SetArchivoActaNull()
            Me(Me.tablePRPrestamos.ArchivoActaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaOtorgamientoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaOtorgamientoColumn)
        End Function
        
        Public Sub SetFechaOtorgamientoNull()
            Me(Me.tablePRPrestamos.FechaOtorgamientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaPrimeraCuotaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaPrimeraCuotaColumn)
        End Function
        
        Public Sub SetFechaPrimeraCuotaNull()
            Me(Me.tablePRPrestamos.FechaPrimeraCuotaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaVencimientoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaVencimientoColumn)
        End Function
        
        Public Sub SetFechaVencimientoNull()
            Me(Me.tablePRPrestamos.FechaVencimientoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodTablaAmortizaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodTablaAmortizaColumn)
        End Function
        
        Public Sub SetCodTablaAmortizaNull()
            Me(Me.tablePRPrestamos.CodTablaAmortizaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsGeneraReservaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.GeneraReservaColumn)
        End Function
        
        Public Sub SetGeneraReservaNull()
            Me(Me.tablePRPrestamos.GeneraReservaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodEmpleadoCobroNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodEmpleadoCobroColumn)
        End Function
        
        Public Sub SetCodEmpleadoCobroNull()
            Me(Me.tablePRPrestamos.CodEmpleadoCobroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCategoriaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CategoriaColumn)
        End Function
        
        Public Sub SetCategoriaNull()
            Me(Me.tablePRPrestamos.CategoriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodTipoPagoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodTipoPagoColumn)
        End Function
        
        Public Sub SetCodTipoPagoNull()
            Me(Me.tablePRPrestamos.CodTipoPagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDiaCobroNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.DiaCobroColumn)
        End Function
        
        Public Sub SetDiaCobroNull()
            Me(Me.tablePRPrestamos.DiaCobroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodPagaduriaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodPagaduriaColumn)
        End Function
        
        Public Sub SetCodPagaduriaNull()
            Me(Me.tablePRPrestamos.CodPagaduriaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodRutaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodRutaColumn)
        End Function
        
        Public Sub SetCodRutaNull()
            Me(Me.tablePRPrestamos.CodRutaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCodEstadoPrestamoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.CodEstadoPrestamoColumn)
        End Function
        
        Public Sub SetCodEstadoPrestamoNull()
            Me(Me.tablePRPrestamos.CodEstadoPrestamoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaUltimoPagoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaUltimoPagoColumn)
        End Function
        
        Public Sub SetFechaUltimoPagoNull()
            Me(Me.tablePRPrestamos.FechaUltimoPagoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFechaInicioProvisionNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.FechaInicioProvisionColumn)
        End Function
        
        Public Sub SetFechaInicioProvisionNull()
            Me(Me.tablePRPrestamos.FechaInicioProvisionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldo_CapitalNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Saldo_CapitalColumn)
        End Function
        
        Public Sub SetSaldo_CapitalNull()
            Me(Me.tablePRPrestamos.Saldo_CapitalColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsIntereses_pagadosNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.Intereses_pagadosColumn)
        End Function
        
        Public Sub SetIntereses_pagadosNull()
            Me(Me.tablePRPrestamos.Intereses_pagadosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_InteresNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_InteresColumn)
        End Function
        
        Public Sub SetSaldoDia_InteresNull()
            Me(Me.tablePRPrestamos.SaldoDia_InteresColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_CapitalMoraNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_CapitalMoraColumn)
        End Function
        
        Public Sub SetSaldoDia_CapitalMoraNull()
            Me(Me.tablePRPrestamos.SaldoDia_CapitalMoraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_InteresMoraNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_InteresMoraColumn)
        End Function
        
        Public Sub SetSaldoDia_InteresMoraNull()
            Me(Me.tablePRPrestamos.SaldoDia_InteresMoraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_SeguroDeudaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_SeguroDeudaColumn)
        End Function
        
        Public Sub SetSaldoDia_SeguroDeudaNull()
            Me(Me.tablePRPrestamos.SaldoDia_SeguroDeudaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_SeguroDaniosyLANull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_SeguroDaniosyLAColumn)
        End Function
        
        Public Sub SetSaldoDia_SeguroDaniosyLANull()
            Me(Me.tablePRPrestamos.SaldoDia_SeguroDaniosyLAColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_SeguroVidaNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_SeguroVidaColumn)
        End Function
        
        Public Sub SetSaldoDia_SeguroVidaNull()
            Me(Me.tablePRPrestamos.SaldoDia_SeguroVidaColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_SeguroDesempleoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_SeguroDesempleoColumn)
        End Function
        
        Public Sub SetSaldoDia_SeguroDesempleoNull()
            Me(Me.tablePRPrestamos.SaldoDia_SeguroDesempleoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_AportacionNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_AportacionColumn)
        End Function
        
        Public Sub SetSaldoDia_AportacionNull()
            Me(Me.tablePRPrestamos.SaldoDia_AportacionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_AhorroNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_AhorroColumn)
        End Function
        
        Public Sub SetSaldoDia_AhorroNull()
            Me(Me.tablePRPrestamos.SaldoDia_AhorroColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_ComisionManejoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_ComisionManejoColumn)
        End Function
        
        Public Sub SetSaldoDia_ComisionManejoNull()
            Me(Me.tablePRPrestamos.SaldoDia_ComisionManejoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSaldoDia_OtrosNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.SaldoDia_OtrosColumn)
        End Function
        
        Public Sub SetSaldoDia_OtrosNull()
            Me(Me.tablePRPrestamos.SaldoDia_OtrosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoSaldoAnteriorNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.MontoSaldoAnteriorColumn)
        End Function
        
        Public Sub SetMontoSaldoAnteriorNull()
            Me(Me.tablePRPrestamos.MontoSaldoAnteriorColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoInteresesNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.MontoInteresesColumn)
        End Function
        
        Public Sub SetMontoInteresesNull()
            Me(Me.tablePRPrestamos.MontoInteresesColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoImpuestosNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.MontoImpuestosColumn)
        End Function
        
        Public Sub SetMontoImpuestosNull()
            Me(Me.tablePRPrestamos.MontoImpuestosColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsMontoValuoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.MontoValuoColumn)
        End Function
        
        Public Sub SetMontoValuoNull()
            Me(Me.tablePRPrestamos.MontoValuoColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDiasMoraNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.DiasMoraColumn)
        End Function
        
        Public Sub SetDiasMoraNull()
            Me(Me.tablePRPrestamos.DiasMoraColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsEstadoNull() As Boolean
            Return Me.IsNull(Me.tablePRPrestamos.EstadoColumn)
        End Function
        
        Public Sub SetEstadoNull()
            Me(Me.tablePRPrestamos.EstadoColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class PRPrestamosRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As PRPrestamosRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As PRPrestamosRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As PRPrestamosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
